/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Data accumulated and condensed into day stats for each exchange. Entity gets saved only if there is a change during the day
 */
public class OASUniswapV3TickDayDataDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Identifier, format: (pool address)-(tick index)-(timestamp).
     * @return id
     */
    public String id { get; set; }

    /**
     * Timestamp rounded to current day by dividing by 86400.
     * @return r_date
     */
    public Integer r_date { get; set; }

    /**
     * Pointer to pool.
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Pointer to tick.
     * @return tick
     */
    public String tick { get; set; }

    /**
     * Total liquidity pool has as tick lower or upper at end of period.
     * @return liquidityGross
     */
    public String liquidityGross { get; set; }

    /**
     * How much liquidity changes when tick crossed at end of period.
     * @return liquidityNet
     */
    public String liquidityNet { get; set; }

    /**
     * Hourly volume of token0 with this tick in range.
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * Hourly volume of token1 with this tick in range.
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * Hourly volume in derived USD with this tick in range.
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Fees in USD.
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Variable needed for fee computation.
     * @return feeGrowthOutside0x128
     */
    public String feeGrowthOutside0x128 { get; set; }

    /**
     * Variable needed for fee computation.
     * @return feeGrowthOutside1x128
     */
    public String feeGrowthOutside1x128 { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUniswapV3TickDayDataDTO getExample() {
        OASUniswapV3TickDayDataDTO uniswapV3TickDayDataDTO = new OASUniswapV3TickDayDataDTO();
          uniswapV3TickDayDataDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TickDayDataDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TickDayDataDTO.blockNumber = 123456789L;
          uniswapV3TickDayDataDTO.id = '';
          uniswapV3TickDayDataDTO.r_date = 0;
          uniswapV3TickDayDataDTO.pool = '';
          uniswapV3TickDayDataDTO.tick = '';
          uniswapV3TickDayDataDTO.liquidityGross = '';
          uniswapV3TickDayDataDTO.liquidityNet = '';
          uniswapV3TickDayDataDTO.volumeToken0 = '';
          uniswapV3TickDayDataDTO.volumeToken1 = '';
          uniswapV3TickDayDataDTO.volumeUsd = '';
          uniswapV3TickDayDataDTO.feesUsd = '';
          uniswapV3TickDayDataDTO.feeGrowthOutside0x128 = '';
          uniswapV3TickDayDataDTO.feeGrowthOutside1x128 = '';
          uniswapV3TickDayDataDTO.vid = 123456789L;
        return uniswapV3TickDayDataDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUniswapV3TickDayDataDTO) {           
            OASUniswapV3TickDayDataDTO uniswapV3TickDayDataDTO = (OASUniswapV3TickDayDataDTO) obj;
            return this.entryTime == uniswapV3TickDayDataDTO.entryTime
                && this.recvTime == uniswapV3TickDayDataDTO.recvTime
                && this.blockNumber == uniswapV3TickDayDataDTO.blockNumber
                && this.id == uniswapV3TickDayDataDTO.id
                && this.r_date == uniswapV3TickDayDataDTO.r_date
                && this.pool == uniswapV3TickDayDataDTO.pool
                && this.tick == uniswapV3TickDayDataDTO.tick
                && this.liquidityGross == uniswapV3TickDayDataDTO.liquidityGross
                && this.liquidityNet == uniswapV3TickDayDataDTO.liquidityNet
                && this.volumeToken0 == uniswapV3TickDayDataDTO.volumeToken0
                && this.volumeToken1 == uniswapV3TickDayDataDTO.volumeToken1
                && this.volumeUsd == uniswapV3TickDayDataDTO.volumeUsd
                && this.feesUsd == uniswapV3TickDayDataDTO.feesUsd
                && this.feeGrowthOutside0x128 == uniswapV3TickDayDataDTO.feeGrowthOutside0x128
                && this.feeGrowthOutside1x128 == uniswapV3TickDayDataDTO.feeGrowthOutside1x128
                && this.vid == uniswapV3TickDayDataDTO.vid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (tick == null ? 0 : System.hashCode(tick));
        hashCode = (17 * hashCode) + (liquidityGross == null ? 0 : System.hashCode(liquidityGross));
        hashCode = (17 * hashCode) + (liquidityNet == null ? 0 : System.hashCode(liquidityNet));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (feeGrowthOutside0x128 == null ? 0 : System.hashCode(feeGrowthOutside0x128));
        hashCode = (17 * hashCode) + (feeGrowthOutside1x128 == null ? 0 : System.hashCode(feeGrowthOutside1x128));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        return hashCode;
    }
}

