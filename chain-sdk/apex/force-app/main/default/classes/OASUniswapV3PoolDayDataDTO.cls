/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Data accumulated and condensed into day stats for each pool.
 */
public class OASUniswapV3PoolDayDataDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Identifier, format: (pool address)-(day id).
     * @return id
     */
    public String id { get; set; }

    /**
     * Timestamp rounded to current day by dividing by 86400
     * @return r_date
     */
    public Integer r_date { get; set; }

    /**
     * Pointer to pool.
     * @return pool
     */
    public String pool { get; set; }

    /**
     * In range liquidity at end of period.
     * @return liquidity
     */
    public String liquidity { get; set; }

    /**
     * Current price tracker at end of period.
     * @return sqrtPrice
     */
    public String sqrtPrice { get; set; }

    /**
     * Price of token0 - derived from sqrtPrice.
     * @return token0Price
     */
    public String token0Price { get; set; }

    /**
     * Price of token1 - derived from sqrtPrice.
     * @return token1Price
     */
    public String token1Price { get; set; }

    /**
     * Current tick at end of period.
     * @return tick
     */
    public String tick { get; set; }

    /**
     * Tracker for global fee growth.
     * @return feeGrowthGlobal0x128
     */
    public String feeGrowthGlobal0x128 { get; set; }

    /**
     * Tracker for global fee growth.
     * @return feeGrowthGlobal1x128
     */
    public String feeGrowthGlobal1x128 { get; set; }

    /**
     * Total value locked derived in USD at end of period.
     * @return tvlUsd
     */
    public String tvlUsd { get; set; }

    /**
     * Volume in token0.
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * Volume in token1.
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * Volume in USD.
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Fees in USD.
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Number of transactions during period.
     * @return txCount
     */
    public String txCount { get; set; }

    /**
     * Opening price of token0.
     * @return open
     */
    public String open { get; set; }

    /**
     * High price of token0.
     * @return high
     */
    public String high { get; set; }

    /**
     * Low price of token0.
     * @return low
     */
    public String low { get; set; }

    /**
     * Close price of token0.
     * @return close
     */
    public String close { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'sqrt_price' => 'sqrtPrice',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'tvl_usd' => 'tvlUsd',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUniswapV3PoolDayDataDTO getExample() {
        OASUniswapV3PoolDayDataDTO uniswapV3PoolDayDataDTO = new OASUniswapV3PoolDayDataDTO();
          uniswapV3PoolDayDataDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3PoolDayDataDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3PoolDayDataDTO.blockNumber = 123456789L;
          uniswapV3PoolDayDataDTO.id = '';
          uniswapV3PoolDayDataDTO.r_date = 0;
          uniswapV3PoolDayDataDTO.pool = '';
          uniswapV3PoolDayDataDTO.liquidity = '';
          uniswapV3PoolDayDataDTO.sqrtPrice = '';
          uniswapV3PoolDayDataDTO.token0Price = '';
          uniswapV3PoolDayDataDTO.token1Price = '';
          uniswapV3PoolDayDataDTO.tick = '';
          uniswapV3PoolDayDataDTO.feeGrowthGlobal0x128 = '';
          uniswapV3PoolDayDataDTO.feeGrowthGlobal1x128 = '';
          uniswapV3PoolDayDataDTO.tvlUsd = '';
          uniswapV3PoolDayDataDTO.volumeToken0 = '';
          uniswapV3PoolDayDataDTO.volumeToken1 = '';
          uniswapV3PoolDayDataDTO.volumeUsd = '';
          uniswapV3PoolDayDataDTO.feesUsd = '';
          uniswapV3PoolDayDataDTO.txCount = '';
          uniswapV3PoolDayDataDTO.open = '';
          uniswapV3PoolDayDataDTO.high = '';
          uniswapV3PoolDayDataDTO.low = '';
          uniswapV3PoolDayDataDTO.close = '';
          uniswapV3PoolDayDataDTO.vid = 123456789L;
        return uniswapV3PoolDayDataDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUniswapV3PoolDayDataDTO) {           
            OASUniswapV3PoolDayDataDTO uniswapV3PoolDayDataDTO = (OASUniswapV3PoolDayDataDTO) obj;
            return this.entryTime == uniswapV3PoolDayDataDTO.entryTime
                && this.recvTime == uniswapV3PoolDayDataDTO.recvTime
                && this.blockNumber == uniswapV3PoolDayDataDTO.blockNumber
                && this.id == uniswapV3PoolDayDataDTO.id
                && this.r_date == uniswapV3PoolDayDataDTO.r_date
                && this.pool == uniswapV3PoolDayDataDTO.pool
                && this.liquidity == uniswapV3PoolDayDataDTO.liquidity
                && this.sqrtPrice == uniswapV3PoolDayDataDTO.sqrtPrice
                && this.token0Price == uniswapV3PoolDayDataDTO.token0Price
                && this.token1Price == uniswapV3PoolDayDataDTO.token1Price
                && this.tick == uniswapV3PoolDayDataDTO.tick
                && this.feeGrowthGlobal0x128 == uniswapV3PoolDayDataDTO.feeGrowthGlobal0x128
                && this.feeGrowthGlobal1x128 == uniswapV3PoolDayDataDTO.feeGrowthGlobal1x128
                && this.tvlUsd == uniswapV3PoolDayDataDTO.tvlUsd
                && this.volumeToken0 == uniswapV3PoolDayDataDTO.volumeToken0
                && this.volumeToken1 == uniswapV3PoolDayDataDTO.volumeToken1
                && this.volumeUsd == uniswapV3PoolDayDataDTO.volumeUsd
                && this.feesUsd == uniswapV3PoolDayDataDTO.feesUsd
                && this.txCount == uniswapV3PoolDayDataDTO.txCount
                && this.open == uniswapV3PoolDayDataDTO.open
                && this.high == uniswapV3PoolDayDataDTO.high
                && this.low == uniswapV3PoolDayDataDTO.low
                && this.close == uniswapV3PoolDayDataDTO.close
                && this.vid == uniswapV3PoolDayDataDTO.vid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (liquidity == null ? 0 : System.hashCode(liquidity));
        hashCode = (17 * hashCode) + (sqrtPrice == null ? 0 : System.hashCode(sqrtPrice));
        hashCode = (17 * hashCode) + (token0Price == null ? 0 : System.hashCode(token0Price));
        hashCode = (17 * hashCode) + (token1Price == null ? 0 : System.hashCode(token1Price));
        hashCode = (17 * hashCode) + (tick == null ? 0 : System.hashCode(tick));
        hashCode = (17 * hashCode) + (feeGrowthGlobal0x128 == null ? 0 : System.hashCode(feeGrowthGlobal0x128));
        hashCode = (17 * hashCode) + (feeGrowthGlobal1x128 == null ? 0 : System.hashCode(feeGrowthGlobal1x128));
        hashCode = (17 * hashCode) + (tvlUsd == null ? 0 : System.hashCode(tvlUsd));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (txCount == null ? 0 : System.hashCode(txCount));
        hashCode = (17 * hashCode) + (open == null ? 0 : System.hashCode(open));
        hashCode = (17 * hashCode) + (high == null ? 0 : System.hashCode(high));
        hashCode = (17 * hashCode) + (low == null ? 0 : System.hashCode(low));
        hashCode = (17 * hashCode) + (close == null ? 0 : System.hashCode(close));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        return hashCode;
    }
}

