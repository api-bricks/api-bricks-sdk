/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASTokenV3DayDataDTO
 */
public class OASTokenV3DayDataDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return r_date
     */
    public Integer r_date { get; set; }

    /**
     * 
     * @return token
     */
    public String token { get; set; }

    /**
     * 
     * @return volume
     */
    public String volume { get; set; }

    /**
     * 
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * 
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * 
     * @return totalValueLocked
     */
    public String totalValueLocked { get; set; }

    /**
     * 
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * 
     * @return priceUsd
     */
    public String priceUsd { get; set; }

    /**
     * 
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * 
     * @return open
     */
    public String open { get; set; }

    /**
     * 
     * @return high
     */
    public String high { get; set; }

    /**
     * 
     * @return low
     */
    public String low { get; set; }

    /**
     * 
     * @return close
     */
    public String close { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'date' => 'r_date',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASTokenV3DayDataDTO getExample() {
        OASTokenV3DayDataDTO tokenV3DayDataDTO = new OASTokenV3DayDataDTO();
          tokenV3DayDataDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenV3DayDataDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenV3DayDataDTO.blockNumber = 123456789L;
          tokenV3DayDataDTO.vid = 123456789L;
          tokenV3DayDataDTO.id = '';
          tokenV3DayDataDTO.r_date = 0;
          tokenV3DayDataDTO.token = '';
          tokenV3DayDataDTO.volume = '';
          tokenV3DayDataDTO.volumeUsd = '';
          tokenV3DayDataDTO.untrackedVolumeUsd = '';
          tokenV3DayDataDTO.totalValueLocked = '';
          tokenV3DayDataDTO.totalValueLockedUsd = '';
          tokenV3DayDataDTO.priceUsd = '';
          tokenV3DayDataDTO.feesUsd = '';
          tokenV3DayDataDTO.open = '';
          tokenV3DayDataDTO.high = '';
          tokenV3DayDataDTO.low = '';
          tokenV3DayDataDTO.close = '';
        return tokenV3DayDataDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTokenV3DayDataDTO) {           
            OASTokenV3DayDataDTO tokenV3DayDataDTO = (OASTokenV3DayDataDTO) obj;
            return this.entryTime == tokenV3DayDataDTO.entryTime
                && this.recvTime == tokenV3DayDataDTO.recvTime
                && this.blockNumber == tokenV3DayDataDTO.blockNumber
                && this.vid == tokenV3DayDataDTO.vid
                && this.id == tokenV3DayDataDTO.id
                && this.r_date == tokenV3DayDataDTO.r_date
                && this.token == tokenV3DayDataDTO.token
                && this.volume == tokenV3DayDataDTO.volume
                && this.volumeUsd == tokenV3DayDataDTO.volumeUsd
                && this.untrackedVolumeUsd == tokenV3DayDataDTO.untrackedVolumeUsd
                && this.totalValueLocked == tokenV3DayDataDTO.totalValueLocked
                && this.totalValueLockedUsd == tokenV3DayDataDTO.totalValueLockedUsd
                && this.priceUsd == tokenV3DayDataDTO.priceUsd
                && this.feesUsd == tokenV3DayDataDTO.feesUsd
                && this.open == tokenV3DayDataDTO.open
                && this.high == tokenV3DayDataDTO.high
                && this.low == tokenV3DayDataDTO.low
                && this.close == tokenV3DayDataDTO.close;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (r_date == null ? 0 : System.hashCode(r_date));
        hashCode = (17 * hashCode) + (token == null ? 0 : System.hashCode(token));
        hashCode = (17 * hashCode) + (volume == null ? 0 : System.hashCode(volume));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (totalValueLocked == null ? 0 : System.hashCode(totalValueLocked));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (priceUsd == null ? 0 : System.hashCode(priceUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (open == null ? 0 : System.hashCode(open));
        hashCode = (17 * hashCode) + (high == null ? 0 : System.hashCode(high));
        hashCode = (17 * hashCode) + (low == null ? 0 : System.hashCode(low));
        hashCode = (17 * hashCode) + (close == null ? 0 : System.hashCode(close));
        return hashCode;
    }
}

