/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASTickV3DTO
 */
public class OASTickV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Get blockNumber
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Get vid
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get poolAddress
     * @return poolAddress
     */
    public String poolAddress { get; set; }

    /**
     * Get tickIdx
     * @return tickIdx
     */
    public OASBigInteger tickIdx { get; set; }

    /**
     * Get pool
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Get liquidityGross
     * @return liquidityGross
     */
    public OASBigInteger liquidityGross { get; set; }

    /**
     * Get liquidityNet
     * @return liquidityNet
     */
    public OASBigInteger liquidityNet { get; set; }

    /**
     * Get price0
     * @return price0
     */
    public String price0 { get; set; }

    /**
     * Get price1
     * @return price1
     */
    public String price1 { get; set; }

    /**
     * Get volumeToken0
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * Get volumeToken1
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * Get volumeUsd
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Get untrackedVolumeUsd
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * Get feesUsd
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Get collectedFeesToken0
     * @return collectedFeesToken0
     */
    public String collectedFeesToken0 { get; set; }

    /**
     * Get collectedFeesToken1
     * @return collectedFeesToken1
     */
    public String collectedFeesToken1 { get; set; }

    /**
     * Get collectedFeesUsd
     * @return collectedFeesUsd
     */
    public String collectedFeesUsd { get; set; }

    /**
     * Get createdAtTimestamp
     * @return createdAtTimestamp
     */
    public Datetime createdAtTimestamp { get; set; }

    /**
     * Get liquidityProviderCount
     * @return liquidityProviderCount
     */
    public OASBigInteger liquidityProviderCount { get; set; }

    /**
     * Get feeGrowthOutside0x128
     * @return feeGrowthOutside0x128
     */
    public OASBigInteger feeGrowthOutside0x128 { get; set; }

    /**
     * Get feeGrowthOutside1x128
     * @return feeGrowthOutside1x128
     */
    public OASBigInteger feeGrowthOutside1x128 { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASTickV3DTO getExample() {
        OASTickV3DTO tickV3DTO = new OASTickV3DTO();
          tickV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tickV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tickV3DTO.blockNumber = 123456789L;
          tickV3DTO.vid = 123456789L;
          tickV3DTO.id = '';
          tickV3DTO.poolAddress = '';
          tickV3DTO.tickIdx = OASBigInteger.getExample();
          tickV3DTO.pool = '';
          tickV3DTO.liquidityGross = OASBigInteger.getExample();
          tickV3DTO.liquidityNet = OASBigInteger.getExample();
          tickV3DTO.price0 = '';
          tickV3DTO.price1 = '';
          tickV3DTO.volumeToken0 = '';
          tickV3DTO.volumeToken1 = '';
          tickV3DTO.volumeUsd = '';
          tickV3DTO.untrackedVolumeUsd = '';
          tickV3DTO.feesUsd = '';
          tickV3DTO.collectedFeesToken0 = '';
          tickV3DTO.collectedFeesToken1 = '';
          tickV3DTO.collectedFeesUsd = '';
          tickV3DTO.createdAtTimestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tickV3DTO.liquidityProviderCount = OASBigInteger.getExample();
          tickV3DTO.feeGrowthOutside0x128 = OASBigInteger.getExample();
          tickV3DTO.feeGrowthOutside1x128 = OASBigInteger.getExample();
        return tickV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTickV3DTO) {           
            OASTickV3DTO tickV3DTO = (OASTickV3DTO) obj;
            return this.entryTime == tickV3DTO.entryTime
                && this.recvTime == tickV3DTO.recvTime
                && this.blockNumber == tickV3DTO.blockNumber
                && this.vid == tickV3DTO.vid
                && this.id == tickV3DTO.id
                && this.poolAddress == tickV3DTO.poolAddress
                && this.tickIdx == tickV3DTO.tickIdx
                && this.pool == tickV3DTO.pool
                && this.liquidityGross == tickV3DTO.liquidityGross
                && this.liquidityNet == tickV3DTO.liquidityNet
                && this.price0 == tickV3DTO.price0
                && this.price1 == tickV3DTO.price1
                && this.volumeToken0 == tickV3DTO.volumeToken0
                && this.volumeToken1 == tickV3DTO.volumeToken1
                && this.volumeUsd == tickV3DTO.volumeUsd
                && this.untrackedVolumeUsd == tickV3DTO.untrackedVolumeUsd
                && this.feesUsd == tickV3DTO.feesUsd
                && this.collectedFeesToken0 == tickV3DTO.collectedFeesToken0
                && this.collectedFeesToken1 == tickV3DTO.collectedFeesToken1
                && this.collectedFeesUsd == tickV3DTO.collectedFeesUsd
                && this.createdAtTimestamp == tickV3DTO.createdAtTimestamp
                && this.liquidityProviderCount == tickV3DTO.liquidityProviderCount
                && this.feeGrowthOutside0x128 == tickV3DTO.feeGrowthOutside0x128
                && this.feeGrowthOutside1x128 == tickV3DTO.feeGrowthOutside1x128;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (poolAddress == null ? 0 : System.hashCode(poolAddress));
        hashCode = (17 * hashCode) + (tickIdx == null ? 0 : System.hashCode(tickIdx));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (liquidityGross == null ? 0 : System.hashCode(liquidityGross));
        hashCode = (17 * hashCode) + (liquidityNet == null ? 0 : System.hashCode(liquidityNet));
        hashCode = (17 * hashCode) + (price0 == null ? 0 : System.hashCode(price0));
        hashCode = (17 * hashCode) + (price1 == null ? 0 : System.hashCode(price1));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (collectedFeesToken0 == null ? 0 : System.hashCode(collectedFeesToken0));
        hashCode = (17 * hashCode) + (collectedFeesToken1 == null ? 0 : System.hashCode(collectedFeesToken1));
        hashCode = (17 * hashCode) + (collectedFeesUsd == null ? 0 : System.hashCode(collectedFeesUsd));
        hashCode = (17 * hashCode) + (createdAtTimestamp == null ? 0 : System.hashCode(createdAtTimestamp));
        hashCode = (17 * hashCode) + (liquidityProviderCount == null ? 0 : System.hashCode(liquidityProviderCount));
        hashCode = (17 * hashCode) + (feeGrowthOutside0x128 == null ? 0 : System.hashCode(feeGrowthOutside0x128));
        hashCode = (17 * hashCode) + (feeGrowthOutside1x128 == null ? 0 : System.hashCode(feeGrowthOutside1x128));
        return hashCode;
    }
}

