/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASPoolV3DTO
 */
public class OASPoolV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Get blockNumber
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Get vid
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get createdAtTimestamp
     * @return createdAtTimestamp
     */
    public Datetime createdAtTimestamp { get; set; }

    /**
     * Get token0
     * @return token0
     */
    public String token0 { get; set; }

    /**
     * Get token1
     * @return token1
     */
    public String token1 { get; set; }

    /**
     * Get feeTier
     * @return feeTier
     */
    public OASBigInteger feeTier { get; set; }

    /**
     * Get liquidity
     * @return liquidity
     */
    public OASBigInteger liquidity { get; set; }

    /**
     * Get sqrtPrice
     * @return sqrtPrice
     */
    public OASBigInteger sqrtPrice { get; set; }

    /**
     * Get feeGrowthGlobal0x128
     * @return feeGrowthGlobal0x128
     */
    public OASBigInteger feeGrowthGlobal0x128 { get; set; }

    /**
     * Get feeGrowthGlobal1x128
     * @return feeGrowthGlobal1x128
     */
    public OASBigInteger feeGrowthGlobal1x128 { get; set; }

    /**
     * Get token0Price
     * @return token0Price
     */
    public String token0Price { get; set; }

    /**
     * Get token1Price
     * @return token1Price
     */
    public String token1Price { get; set; }

    /**
     * Get tick
     * @return tick
     */
    public OASBigInteger tick { get; set; }

    /**
     * Get observationIndex
     * @return observationIndex
     */
    public OASBigInteger observationIndex { get; set; }

    /**
     * Get volumeToken0
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * Get volumeToken1
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * Get volumeUsd
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Get untrackedVolumeUsd
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * Get feesUsd
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Get txCount
     * @return txCount
     */
    public OASBigInteger txCount { get; set; }

    /**
     * Get collectedFeesToken0
     * @return collectedFeesToken0
     */
    public String collectedFeesToken0 { get; set; }

    /**
     * Get collectedFeesToken1
     * @return collectedFeesToken1
     */
    public String collectedFeesToken1 { get; set; }

    /**
     * Get collectedFeesUsd
     * @return collectedFeesUsd
     */
    public String collectedFeesUsd { get; set; }

    /**
     * Get totalValueLockedToken0
     * @return totalValueLockedToken0
     */
    public String totalValueLockedToken0 { get; set; }

    /**
     * Get totalValueLockedToken1
     * @return totalValueLockedToken1
     */
    public String totalValueLockedToken1 { get; set; }

    /**
     * Get totalValueLockedEth
     * @return totalValueLockedEth
     */
    public String totalValueLockedEth { get; set; }

    /**
     * Get totalValueLockedUsd
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * Get totalValueLockedUsdUntracked
     * @return totalValueLockedUsdUntracked
     */
    public String totalValueLockedUsdUntracked { get; set; }

    /**
     * Get liquidityProviderCount
     * @return liquidityProviderCount
     */
    public String liquidityProviderCount { get; set; }

    /**
     * Get evaluatedAsk
     * @return evaluatedAsk
     */
    public Double evaluatedAsk { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_at_timestamp' => 'createdAtTimestamp',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'fee_tier' => 'feeTier',
        'sqrt_price' => 'sqrtPrice',
        'fee_growth_global_0x128' => 'feeGrowthGlobal0x128',
        'fee_growth_global_1x128' => 'feeGrowthGlobal1x128',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'observation_index' => 'observationIndex',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'total_value_locked_token_0' => 'totalValueLockedToken0',
        'total_value_locked_token_1' => 'totalValueLockedToken1',
        'total_value_locked_eth' => 'totalValueLockedEth',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPoolV3DTO getExample() {
        OASPoolV3DTO poolV3DTO = new OASPoolV3DTO();
          poolV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          poolV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          poolV3DTO.blockNumber = 123456789L;
          poolV3DTO.vid = 123456789L;
          poolV3DTO.id = '';
          poolV3DTO.createdAtTimestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          poolV3DTO.token0 = '';
          poolV3DTO.token1 = '';
          poolV3DTO.feeTier = OASBigInteger.getExample();
          poolV3DTO.liquidity = OASBigInteger.getExample();
          poolV3DTO.sqrtPrice = OASBigInteger.getExample();
          poolV3DTO.feeGrowthGlobal0x128 = OASBigInteger.getExample();
          poolV3DTO.feeGrowthGlobal1x128 = OASBigInteger.getExample();
          poolV3DTO.token0Price = '';
          poolV3DTO.token1Price = '';
          poolV3DTO.tick = OASBigInteger.getExample();
          poolV3DTO.observationIndex = OASBigInteger.getExample();
          poolV3DTO.volumeToken0 = '';
          poolV3DTO.volumeToken1 = '';
          poolV3DTO.volumeUsd = '';
          poolV3DTO.untrackedVolumeUsd = '';
          poolV3DTO.feesUsd = '';
          poolV3DTO.txCount = OASBigInteger.getExample();
          poolV3DTO.collectedFeesToken0 = '';
          poolV3DTO.collectedFeesToken1 = '';
          poolV3DTO.collectedFeesUsd = '';
          poolV3DTO.totalValueLockedToken0 = '';
          poolV3DTO.totalValueLockedToken1 = '';
          poolV3DTO.totalValueLockedEth = '';
          poolV3DTO.totalValueLockedUsd = '';
          poolV3DTO.totalValueLockedUsdUntracked = '';
          poolV3DTO.liquidityProviderCount = '';
          poolV3DTO.evaluatedAsk = 1.3579;
        return poolV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPoolV3DTO) {           
            OASPoolV3DTO poolV3DTO = (OASPoolV3DTO) obj;
            return this.entryTime == poolV3DTO.entryTime
                && this.recvTime == poolV3DTO.recvTime
                && this.blockNumber == poolV3DTO.blockNumber
                && this.vid == poolV3DTO.vid
                && this.id == poolV3DTO.id
                && this.createdAtTimestamp == poolV3DTO.createdAtTimestamp
                && this.token0 == poolV3DTO.token0
                && this.token1 == poolV3DTO.token1
                && this.feeTier == poolV3DTO.feeTier
                && this.liquidity == poolV3DTO.liquidity
                && this.sqrtPrice == poolV3DTO.sqrtPrice
                && this.feeGrowthGlobal0x128 == poolV3DTO.feeGrowthGlobal0x128
                && this.feeGrowthGlobal1x128 == poolV3DTO.feeGrowthGlobal1x128
                && this.token0Price == poolV3DTO.token0Price
                && this.token1Price == poolV3DTO.token1Price
                && this.tick == poolV3DTO.tick
                && this.observationIndex == poolV3DTO.observationIndex
                && this.volumeToken0 == poolV3DTO.volumeToken0
                && this.volumeToken1 == poolV3DTO.volumeToken1
                && this.volumeUsd == poolV3DTO.volumeUsd
                && this.untrackedVolumeUsd == poolV3DTO.untrackedVolumeUsd
                && this.feesUsd == poolV3DTO.feesUsd
                && this.txCount == poolV3DTO.txCount
                && this.collectedFeesToken0 == poolV3DTO.collectedFeesToken0
                && this.collectedFeesToken1 == poolV3DTO.collectedFeesToken1
                && this.collectedFeesUsd == poolV3DTO.collectedFeesUsd
                && this.totalValueLockedToken0 == poolV3DTO.totalValueLockedToken0
                && this.totalValueLockedToken1 == poolV3DTO.totalValueLockedToken1
                && this.totalValueLockedEth == poolV3DTO.totalValueLockedEth
                && this.totalValueLockedUsd == poolV3DTO.totalValueLockedUsd
                && this.totalValueLockedUsdUntracked == poolV3DTO.totalValueLockedUsdUntracked
                && this.liquidityProviderCount == poolV3DTO.liquidityProviderCount
                && this.evaluatedAsk == poolV3DTO.evaluatedAsk;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (createdAtTimestamp == null ? 0 : System.hashCode(createdAtTimestamp));
        hashCode = (17 * hashCode) + (token0 == null ? 0 : System.hashCode(token0));
        hashCode = (17 * hashCode) + (token1 == null ? 0 : System.hashCode(token1));
        hashCode = (17 * hashCode) + (feeTier == null ? 0 : System.hashCode(feeTier));
        hashCode = (17 * hashCode) + (liquidity == null ? 0 : System.hashCode(liquidity));
        hashCode = (17 * hashCode) + (sqrtPrice == null ? 0 : System.hashCode(sqrtPrice));
        hashCode = (17 * hashCode) + (feeGrowthGlobal0x128 == null ? 0 : System.hashCode(feeGrowthGlobal0x128));
        hashCode = (17 * hashCode) + (feeGrowthGlobal1x128 == null ? 0 : System.hashCode(feeGrowthGlobal1x128));
        hashCode = (17 * hashCode) + (token0Price == null ? 0 : System.hashCode(token0Price));
        hashCode = (17 * hashCode) + (token1Price == null ? 0 : System.hashCode(token1Price));
        hashCode = (17 * hashCode) + (tick == null ? 0 : System.hashCode(tick));
        hashCode = (17 * hashCode) + (observationIndex == null ? 0 : System.hashCode(observationIndex));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (txCount == null ? 0 : System.hashCode(txCount));
        hashCode = (17 * hashCode) + (collectedFeesToken0 == null ? 0 : System.hashCode(collectedFeesToken0));
        hashCode = (17 * hashCode) + (collectedFeesToken1 == null ? 0 : System.hashCode(collectedFeesToken1));
        hashCode = (17 * hashCode) + (collectedFeesUsd == null ? 0 : System.hashCode(collectedFeesUsd));
        hashCode = (17 * hashCode) + (totalValueLockedToken0 == null ? 0 : System.hashCode(totalValueLockedToken0));
        hashCode = (17 * hashCode) + (totalValueLockedToken1 == null ? 0 : System.hashCode(totalValueLockedToken1));
        hashCode = (17 * hashCode) + (totalValueLockedEth == null ? 0 : System.hashCode(totalValueLockedEth));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (totalValueLockedUsdUntracked == null ? 0 : System.hashCode(totalValueLockedUsdUntracked));
        hashCode = (17 * hashCode) + (liquidityProviderCount == null ? 0 : System.hashCode(liquidityProviderCount));
        hashCode = (17 * hashCode) + (evaluatedAsk == null ? 0 : System.hashCode(evaluatedAsk));
        return hashCode;
    }
}

