/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Stores aggregated information for a specific token across all pairs that token is included in.
 */
public class OASUniswapV3TokenV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * Token address.
     * @return id
     */
    public String id { get; set; }

    /**
     * Token symbol.
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * Token name.
     * @return name
     */
    public String name { get; set; }

    /**
     * Token decimals.
     * @return decimals
     */
    public Integer decimals { get; set; }

    /**
     * Get totalSupply
     * @return totalSupply
     */
    public OASNumericsBigInteger totalSupply { get; set; }

    /**
     * Volume in token units.
     * @return volume
     */
    public String volume { get; set; }

    /**
     * Volume in derived USD.
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Volume in USD even on pools with less reliable USD values.
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * Fees in USD.
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Get txCount
     * @return txCount
     */
    public OASNumericsBigInteger txCount { get; set; }

    /**
     * Get poolCount
     * @return poolCount
     */
    public OASNumericsBigInteger poolCount { get; set; }

    /**
     * Liquidity across all pools in token units.
     * @return totalValueLocked
     */
    public String totalValueLocked { get; set; }

    /**
     * Liquidity across all pools in derived USD.
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * TVL derived in USD untracked.
     * @return totalValueLockedUsdUntracked
     */
    public String totalValueLockedUsdUntracked { get; set; }

    /**
     * Derived price in ETH.
     * @return derivedEth
     */
    public String derivedEth { get; set; }

    /**
     * Pools token is in that are white listed for USD pricing.
     * @return whitelistPools
     */
    public List<String> whitelistPools { get; set; }

    /**
     * Get tokenSymbol
     * @return tokenSymbol
     */
    public String tokenSymbol { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASUniswapV3TokenV3DTO() {
        whitelistPools = new List<String>();
    }

    public static OASUniswapV3TokenV3DTO getExample() {
        OASUniswapV3TokenV3DTO uniswapV3TokenV3DTO = new OASUniswapV3TokenV3DTO();
          uniswapV3TokenV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TokenV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TokenV3DTO.blockNumber = 123456789L;
          uniswapV3TokenV3DTO.vid = 123456789L;
          uniswapV3TokenV3DTO.id = '';
          uniswapV3TokenV3DTO.symbol = '';
          uniswapV3TokenV3DTO.name = '';
          uniswapV3TokenV3DTO.decimals = 0;
          uniswapV3TokenV3DTO.totalSupply = OASNumericsBigInteger.getExample();
          uniswapV3TokenV3DTO.volume = '';
          uniswapV3TokenV3DTO.volumeUsd = '';
          uniswapV3TokenV3DTO.untrackedVolumeUsd = '';
          uniswapV3TokenV3DTO.feesUsd = '';
          uniswapV3TokenV3DTO.txCount = OASNumericsBigInteger.getExample();
          uniswapV3TokenV3DTO.poolCount = OASNumericsBigInteger.getExample();
          uniswapV3TokenV3DTO.totalValueLocked = '';
          uniswapV3TokenV3DTO.totalValueLockedUsd = '';
          uniswapV3TokenV3DTO.totalValueLockedUsdUntracked = '';
          uniswapV3TokenV3DTO.derivedEth = '';
          uniswapV3TokenV3DTO.whitelistPools = new List<String>{''};
          uniswapV3TokenV3DTO.tokenSymbol = '';
        return uniswapV3TokenV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUniswapV3TokenV3DTO) {           
            OASUniswapV3TokenV3DTO uniswapV3TokenV3DTO = (OASUniswapV3TokenV3DTO) obj;
            return this.entryTime == uniswapV3TokenV3DTO.entryTime
                && this.recvTime == uniswapV3TokenV3DTO.recvTime
                && this.blockNumber == uniswapV3TokenV3DTO.blockNumber
                && this.vid == uniswapV3TokenV3DTO.vid
                && this.id == uniswapV3TokenV3DTO.id
                && this.symbol == uniswapV3TokenV3DTO.symbol
                && this.name == uniswapV3TokenV3DTO.name
                && this.decimals == uniswapV3TokenV3DTO.decimals
                && this.totalSupply == uniswapV3TokenV3DTO.totalSupply
                && this.volume == uniswapV3TokenV3DTO.volume
                && this.volumeUsd == uniswapV3TokenV3DTO.volumeUsd
                && this.untrackedVolumeUsd == uniswapV3TokenV3DTO.untrackedVolumeUsd
                && this.feesUsd == uniswapV3TokenV3DTO.feesUsd
                && this.txCount == uniswapV3TokenV3DTO.txCount
                && this.poolCount == uniswapV3TokenV3DTO.poolCount
                && this.totalValueLocked == uniswapV3TokenV3DTO.totalValueLocked
                && this.totalValueLockedUsd == uniswapV3TokenV3DTO.totalValueLockedUsd
                && this.totalValueLockedUsdUntracked == uniswapV3TokenV3DTO.totalValueLockedUsdUntracked
                && this.derivedEth == uniswapV3TokenV3DTO.derivedEth
                && this.whitelistPools == uniswapV3TokenV3DTO.whitelistPools
                && this.tokenSymbol == uniswapV3TokenV3DTO.tokenSymbol;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (decimals == null ? 0 : System.hashCode(decimals));
        hashCode = (17 * hashCode) + (totalSupply == null ? 0 : System.hashCode(totalSupply));
        hashCode = (17 * hashCode) + (volume == null ? 0 : System.hashCode(volume));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (txCount == null ? 0 : System.hashCode(txCount));
        hashCode = (17 * hashCode) + (poolCount == null ? 0 : System.hashCode(poolCount));
        hashCode = (17 * hashCode) + (totalValueLocked == null ? 0 : System.hashCode(totalValueLocked));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (totalValueLockedUsdUntracked == null ? 0 : System.hashCode(totalValueLockedUsdUntracked));
        hashCode = (17 * hashCode) + (derivedEth == null ? 0 : System.hashCode(derivedEth));
        hashCode = (17 * hashCode) + (whitelistPools == null ? 0 : System.hashCode(whitelistPools));
        hashCode = (17 * hashCode) + (tokenSymbol == null ? 0 : System.hashCode(tokenSymbol));
        return hashCode;
    }
}

