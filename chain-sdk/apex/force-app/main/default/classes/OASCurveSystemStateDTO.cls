/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCurveSystemStateDTO
 */
public class OASCurveSystemStateDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Singleton ID, equals to \'current\'.
     * @return id
     */
    public String id { get; set; }

    /**
     * Current pool registry address.
     * @return registryContract
     */
    public String registryContract { get; set; }

    /**
     * Number of contracts in the AddressProvider registry.
     * @return contractCount
     */
    public String contractCount { get; set; }

    /**
     * Number of gauges registered.
     * @return gaugeCount
     */
    public String gaugeCount { get; set; }

    /**
     * Number of gauge types registered.
     * @return gaugeTypeCount
     */
    public String gaugeTypeCount { get; set; }

    /**
     * Number of active pools.
     * @return poolCount
     */
    public String poolCount { get; set; }

    /**
     * Number of tokens registered.
     * @return tokenCount
     */
    public String tokenCount { get; set; }

    /**
     * Total number of pools (including removed ones).
     * @return totalPoolCount
     */
    public String totalPoolCount { get; set; }

    /**
     * 
     * @return updated
     */
    public String updated { get; set; }

    /**
     * 
     * @return updatedAtBlock
     */
    public String updatedAtBlock { get; set; }

    /**
     * 
     * @return updatedAtTransaction
     */
    public String updatedAtTransaction { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'registry_contract' => 'registryContract',
        'contract_count' => 'contractCount',
        'gauge_count' => 'gaugeCount',
        'gauge_type_count' => 'gaugeTypeCount',
        'pool_count' => 'poolCount',
        'token_count' => 'tokenCount',
        'total_pool_count' => 'totalPoolCount',
        'updated_at_block' => 'updatedAtBlock',
        'updated_at_transaction' => 'updatedAtTransaction'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCurveSystemStateDTO getExample() {
        OASCurveSystemStateDTO curveSystemStateDTO = new OASCurveSystemStateDTO();
          curveSystemStateDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          curveSystemStateDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          curveSystemStateDTO.blockNumber = 123456789L;
          curveSystemStateDTO.id = '';
          curveSystemStateDTO.registryContract = '';
          curveSystemStateDTO.contractCount = '';
          curveSystemStateDTO.gaugeCount = '';
          curveSystemStateDTO.gaugeTypeCount = '';
          curveSystemStateDTO.poolCount = '';
          curveSystemStateDTO.tokenCount = '';
          curveSystemStateDTO.totalPoolCount = '';
          curveSystemStateDTO.updated = '';
          curveSystemStateDTO.updatedAtBlock = '';
          curveSystemStateDTO.updatedAtTransaction = '';
          curveSystemStateDTO.vid = 123456789L;
        return curveSystemStateDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCurveSystemStateDTO) {           
            OASCurveSystemStateDTO curveSystemStateDTO = (OASCurveSystemStateDTO) obj;
            return this.entryTime == curveSystemStateDTO.entryTime
                && this.recvTime == curveSystemStateDTO.recvTime
                && this.blockNumber == curveSystemStateDTO.blockNumber
                && this.id == curveSystemStateDTO.id
                && this.registryContract == curveSystemStateDTO.registryContract
                && this.contractCount == curveSystemStateDTO.contractCount
                && this.gaugeCount == curveSystemStateDTO.gaugeCount
                && this.gaugeTypeCount == curveSystemStateDTO.gaugeTypeCount
                && this.poolCount == curveSystemStateDTO.poolCount
                && this.tokenCount == curveSystemStateDTO.tokenCount
                && this.totalPoolCount == curveSystemStateDTO.totalPoolCount
                && this.updated == curveSystemStateDTO.updated
                && this.updatedAtBlock == curveSystemStateDTO.updatedAtBlock
                && this.updatedAtTransaction == curveSystemStateDTO.updatedAtTransaction
                && this.vid == curveSystemStateDTO.vid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (registryContract == null ? 0 : System.hashCode(registryContract));
        hashCode = (17 * hashCode) + (contractCount == null ? 0 : System.hashCode(contractCount));
        hashCode = (17 * hashCode) + (gaugeCount == null ? 0 : System.hashCode(gaugeCount));
        hashCode = (17 * hashCode) + (gaugeTypeCount == null ? 0 : System.hashCode(gaugeTypeCount));
        hashCode = (17 * hashCode) + (poolCount == null ? 0 : System.hashCode(poolCount));
        hashCode = (17 * hashCode) + (tokenCount == null ? 0 : System.hashCode(tokenCount));
        hashCode = (17 * hashCode) + (totalPoolCount == null ? 0 : System.hashCode(totalPoolCount));
        hashCode = (17 * hashCode) + (updated == null ? 0 : System.hashCode(updated));
        hashCode = (17 * hashCode) + (updatedAtBlock == null ? 0 : System.hashCode(updatedAtBlock));
        hashCode = (17 * hashCode) + (updatedAtTransaction == null ? 0 : System.hashCode(updatedAtTransaction));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        return hashCode;
    }
}

