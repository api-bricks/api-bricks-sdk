/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCRYPTOPUNKSMarketplaceDailySnapsh
 */
public class OASCRYPTOPUNKSMarketplaceDailySnapsh implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public String blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * 
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return marketplace
     */
    public String marketplace { get; set; }

    /**
     * 
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * 
     * @return collectionCount
     */
    public Integer collectionCount { get; set; }

    /**
     * 
     * @return cumulativeTradeVolumeEth
     */
    public String cumulativeTradeVolumeEth { get; set; }

    /**
     * 
     * @return marketplaceRevenueEth
     */
    public String marketplaceRevenueEth { get; set; }

    /**
     * 
     * @return creatorRevenueEth
     */
    public String creatorRevenueEth { get; set; }

    /**
     * 
     * @return totalRevenueEth
     */
    public String totalRevenueEth { get; set; }

    /**
     * 
     * @return tradeCount
     */
    public Integer tradeCount { get; set; }

    /**
     * 
     * @return cumulativeUniqueTraders
     */
    public Integer cumulativeUniqueTraders { get; set; }

    /**
     * 
     * @return dailyActiveTraders
     */
    public Integer dailyActiveTraders { get; set; }

    /**
     * 
     * @return dailyTradedCollectionCount
     */
    public Integer dailyTradedCollectionCount { get; set; }

    /**
     * 
     * @return dailyTradedItemCount
     */
    public Integer dailyTradedItemCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'collection_count' => 'collectionCount',
        'cumulative_trade_volume_eth' => 'cumulativeTradeVolumeEth',
        'marketplace_revenue_eth' => 'marketplaceRevenueEth',
        'creator_revenue_eth' => 'creatorRevenueEth',
        'total_revenue_eth' => 'totalRevenueEth',
        'trade_count' => 'tradeCount',
        'cumulative_unique_traders' => 'cumulativeUniqueTraders',
        'daily_active_traders' => 'dailyActiveTraders',
        'daily_traded_collection_count' => 'dailyTradedCollectionCount',
        'daily_traded_item_count' => 'dailyTradedItemCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCRYPTOPUNKSMarketplaceDailySnapsh getExample() {
        OASCRYPTOPUNKSMarketplaceDailySnapsh crYPTOPUNKSMarketplaceDailySnapshotDTO = new OASCRYPTOPUNKSMarketplaceDailySnapsh();
          crYPTOPUNKSMarketplaceDailySnapshotDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          crYPTOPUNKSMarketplaceDailySnapshotDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          crYPTOPUNKSMarketplaceDailySnapshotDTO.blockNumber = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.vid = 123456789L;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.blockRange = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.id = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.marketplace = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.timestamp = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.collectionCount = 0;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.cumulativeTradeVolumeEth = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.marketplaceRevenueEth = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.creatorRevenueEth = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.totalRevenueEth = '';
          crYPTOPUNKSMarketplaceDailySnapshotDTO.tradeCount = 0;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.cumulativeUniqueTraders = 0;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyActiveTraders = 0;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyTradedCollectionCount = 0;
          crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyTradedItemCount = 0;
        return crYPTOPUNKSMarketplaceDailySnapshotDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCRYPTOPUNKSMarketplaceDailySnapsh) {           
            OASCRYPTOPUNKSMarketplaceDailySnapsh crYPTOPUNKSMarketplaceDailySnapshotDTO = (OASCRYPTOPUNKSMarketplaceDailySnapsh) obj;
            return this.entryTime == crYPTOPUNKSMarketplaceDailySnapshotDTO.entryTime
                && this.recvTime == crYPTOPUNKSMarketplaceDailySnapshotDTO.recvTime
                && this.blockNumber == crYPTOPUNKSMarketplaceDailySnapshotDTO.blockNumber
                && this.vid == crYPTOPUNKSMarketplaceDailySnapshotDTO.vid
                && this.blockRange == crYPTOPUNKSMarketplaceDailySnapshotDTO.blockRange
                && this.id == crYPTOPUNKSMarketplaceDailySnapshotDTO.id
                && this.marketplace == crYPTOPUNKSMarketplaceDailySnapshotDTO.marketplace
                && this.timestamp == crYPTOPUNKSMarketplaceDailySnapshotDTO.timestamp
                && this.collectionCount == crYPTOPUNKSMarketplaceDailySnapshotDTO.collectionCount
                && this.cumulativeTradeVolumeEth == crYPTOPUNKSMarketplaceDailySnapshotDTO.cumulativeTradeVolumeEth
                && this.marketplaceRevenueEth == crYPTOPUNKSMarketplaceDailySnapshotDTO.marketplaceRevenueEth
                && this.creatorRevenueEth == crYPTOPUNKSMarketplaceDailySnapshotDTO.creatorRevenueEth
                && this.totalRevenueEth == crYPTOPUNKSMarketplaceDailySnapshotDTO.totalRevenueEth
                && this.tradeCount == crYPTOPUNKSMarketplaceDailySnapshotDTO.tradeCount
                && this.cumulativeUniqueTraders == crYPTOPUNKSMarketplaceDailySnapshotDTO.cumulativeUniqueTraders
                && this.dailyActiveTraders == crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyActiveTraders
                && this.dailyTradedCollectionCount == crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyTradedCollectionCount
                && this.dailyTradedItemCount == crYPTOPUNKSMarketplaceDailySnapshotDTO.dailyTradedItemCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (marketplace == null ? 0 : System.hashCode(marketplace));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (collectionCount == null ? 0 : System.hashCode(collectionCount));
        hashCode = (17 * hashCode) + (cumulativeTradeVolumeEth == null ? 0 : System.hashCode(cumulativeTradeVolumeEth));
        hashCode = (17 * hashCode) + (marketplaceRevenueEth == null ? 0 : System.hashCode(marketplaceRevenueEth));
        hashCode = (17 * hashCode) + (creatorRevenueEth == null ? 0 : System.hashCode(creatorRevenueEth));
        hashCode = (17 * hashCode) + (totalRevenueEth == null ? 0 : System.hashCode(totalRevenueEth));
        hashCode = (17 * hashCode) + (tradeCount == null ? 0 : System.hashCode(tradeCount));
        hashCode = (17 * hashCode) + (cumulativeUniqueTraders == null ? 0 : System.hashCode(cumulativeUniqueTraders));
        hashCode = (17 * hashCode) + (dailyActiveTraders == null ? 0 : System.hashCode(dailyActiveTraders));
        hashCode = (17 * hashCode) + (dailyTradedCollectionCount == null ? 0 : System.hashCode(dailyTradedCollectionCount));
        hashCode = (17 * hashCode) + (dailyTradedItemCount == null ? 0 : System.hashCode(dailyTradedItemCount));
        return hashCode;
    }
}

