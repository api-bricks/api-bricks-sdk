/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASCurveApi {
    OASClient client;

    public OASCurveApi(OASClient client) {
        this.client = client;
    }

    public OASCurveApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveAccountsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/accounts/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveAddLiquidityEventHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/addLiquidityEvent/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveAdminFeeChangeLogHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/adminFeeChangeLog/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveAmplificationCoeffChangeLogHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/amplificationCoeffChangeLog/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveCoinsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/coins/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveContractsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/contracts/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveContractsVersionHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/contractsVersion/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveDailyVolumeHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/dailyVolume/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveFeeChangeLogHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/feeChangeLog/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeDepositHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeDeposit/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gauge/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeLiquidityHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeLiquidity/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeTotalWeightHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeTotalWeight/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeTypeHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeType/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeTypeWeightHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeTypeWeight/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeWeightHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeWeight/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeWeightVoteHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeWeightVote/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveGaugeWithdrawHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/gaugeWithdraw/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveHourlyVolumeHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/hourlyVolume/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveLpTokenHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/lpToken/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurvePoolsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/pools/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveProposalsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/proposals/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveProposalsVoteHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/proposalsVote/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveRemoveLiquidityEventHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/removeLiquidityEvent/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveRemoveLiquidityOneEventHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/removeLiquidityOneEvent/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveSwapsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/swaps/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveSystemStateHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/systemState/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveTokensHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/tokens/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveTransferOwnershipEventHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/transferOwnershipEvent/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveUnderlyingCoinHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/underlyingCoin/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveVotingAppHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/votingApp/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsCurveWeeklyVolumeHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/curve/weeklyVolume/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
}
