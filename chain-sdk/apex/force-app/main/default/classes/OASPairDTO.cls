/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASPairDTO
 */
public class OASPairDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return factory
     */
    public String factory { get; set; }

    /**
     * 
     * @return name
     */
    public String name { get; set; }

    /**
     * 
     * @return token0
     */
    public String token0 { get; set; }

    /**
     * 
     * @return token1
     */
    public String token1 { get; set; }

    /**
     * 
     * @return reserve0
     */
    public String reserve0 { get; set; }

    /**
     * 
     * @return reserve1
     */
    public String reserve1 { get; set; }

    /**
     * 
     * @return totalSupply
     */
    public String totalSupply { get; set; }

    /**
     * 
     * @return reserveEth
     */
    public String reserveEth { get; set; }

    /**
     * 
     * @return reserveUsd
     */
    public String reserveUsd { get; set; }

    /**
     * 
     * @return trackedReserveEth
     */
    public String trackedReserveEth { get; set; }

    /**
     * 
     * @return token0Price
     */
    public String token0Price { get; set; }

    /**
     * 
     * @return token1Price
     */
    public String token1Price { get; set; }

    /**
     * 
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * 
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * 
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * 
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * 
     * @return txCount
     */
    public String txCount { get; set; }

    /**
     * 
     * @return liquidityProviderCount
     */
    public String liquidityProviderCount { get; set; }

    /**
     * 
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * 
     * @return block
     */
    public String block { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * Get evaluatedAsk
     * @return evaluatedAsk
     */
    public Double evaluatedAsk { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'token_0' => 'token0',
        'token_1' => 'token1',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_eth' => 'reserveEth',
        'reserve_usd' => 'reserveUsd',
        'tracked_reserve_eth' => 'trackedReserveEth',
        'token_0_price' => 'token0Price',
        'token_1_price' => 'token1Price',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'tx_count' => 'txCount',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'evaluated_ask' => 'evaluatedAsk'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASPairDTO getExample() {
        OASPairDTO pairDTO = new OASPairDTO();
          pairDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pairDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          pairDTO.blockNumber = 123456789L;
          pairDTO.id = '';
          pairDTO.factory = '';
          pairDTO.name = '';
          pairDTO.token0 = '';
          pairDTO.token1 = '';
          pairDTO.reserve0 = '';
          pairDTO.reserve1 = '';
          pairDTO.totalSupply = '';
          pairDTO.reserveEth = '';
          pairDTO.reserveUsd = '';
          pairDTO.trackedReserveEth = '';
          pairDTO.token0Price = '';
          pairDTO.token1Price = '';
          pairDTO.volumeToken0 = '';
          pairDTO.volumeToken1 = '';
          pairDTO.volumeUsd = '';
          pairDTO.untrackedVolumeUsd = '';
          pairDTO.txCount = '';
          pairDTO.liquidityProviderCount = '';
          pairDTO.timestamp = '';
          pairDTO.block = '';
          pairDTO.vid = 123456789L;
          pairDTO.evaluatedAsk = 1.3579;
        return pairDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASPairDTO) {           
            OASPairDTO pairDTO = (OASPairDTO) obj;
            return this.entryTime == pairDTO.entryTime
                && this.recvTime == pairDTO.recvTime
                && this.blockNumber == pairDTO.blockNumber
                && this.id == pairDTO.id
                && this.factory == pairDTO.factory
                && this.name == pairDTO.name
                && this.token0 == pairDTO.token0
                && this.token1 == pairDTO.token1
                && this.reserve0 == pairDTO.reserve0
                && this.reserve1 == pairDTO.reserve1
                && this.totalSupply == pairDTO.totalSupply
                && this.reserveEth == pairDTO.reserveEth
                && this.reserveUsd == pairDTO.reserveUsd
                && this.trackedReserveEth == pairDTO.trackedReserveEth
                && this.token0Price == pairDTO.token0Price
                && this.token1Price == pairDTO.token1Price
                && this.volumeToken0 == pairDTO.volumeToken0
                && this.volumeToken1 == pairDTO.volumeToken1
                && this.volumeUsd == pairDTO.volumeUsd
                && this.untrackedVolumeUsd == pairDTO.untrackedVolumeUsd
                && this.txCount == pairDTO.txCount
                && this.liquidityProviderCount == pairDTO.liquidityProviderCount
                && this.timestamp == pairDTO.timestamp
                && this.block == pairDTO.block
                && this.vid == pairDTO.vid
                && this.evaluatedAsk == pairDTO.evaluatedAsk;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (factory == null ? 0 : System.hashCode(factory));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (token0 == null ? 0 : System.hashCode(token0));
        hashCode = (17 * hashCode) + (token1 == null ? 0 : System.hashCode(token1));
        hashCode = (17 * hashCode) + (reserve0 == null ? 0 : System.hashCode(reserve0));
        hashCode = (17 * hashCode) + (reserve1 == null ? 0 : System.hashCode(reserve1));
        hashCode = (17 * hashCode) + (totalSupply == null ? 0 : System.hashCode(totalSupply));
        hashCode = (17 * hashCode) + (reserveEth == null ? 0 : System.hashCode(reserveEth));
        hashCode = (17 * hashCode) + (reserveUsd == null ? 0 : System.hashCode(reserveUsd));
        hashCode = (17 * hashCode) + (trackedReserveEth == null ? 0 : System.hashCode(trackedReserveEth));
        hashCode = (17 * hashCode) + (token0Price == null ? 0 : System.hashCode(token0Price));
        hashCode = (17 * hashCode) + (token1Price == null ? 0 : System.hashCode(token1Price));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (txCount == null ? 0 : System.hashCode(txCount));
        hashCode = (17 * hashCode) + (liquidityProviderCount == null ? 0 : System.hashCode(liquidityProviderCount));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (block == null ? 0 : System.hashCode(block));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (evaluatedAsk == null ? 0 : System.hashCode(evaluatedAsk));
        return hashCode;
    }
}

