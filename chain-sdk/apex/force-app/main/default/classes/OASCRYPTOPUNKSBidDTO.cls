/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASCRYPTOPUNKSBidDTO
 */
public class OASCRYPTOPUNKSBidDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public String blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * 
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return tokensBid
     */
    public String tokensBid { get; set; }

    /**
     * 
     * @return tokenId
     */
    public String tokenId { get; set; }

    /**
     * 
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * 
     * @return bidder
     */
    public String bidder { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'tokens_bid' => 'tokensBid',
        'token_id' => 'tokenId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCRYPTOPUNKSBidDTO getExample() {
        OASCRYPTOPUNKSBidDTO crYPTOPUNKSBidDTO = new OASCRYPTOPUNKSBidDTO();
          crYPTOPUNKSBidDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          crYPTOPUNKSBidDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          crYPTOPUNKSBidDTO.blockNumber = '';
          crYPTOPUNKSBidDTO.vid = 123456789L;
          crYPTOPUNKSBidDTO.blockRange = '';
          crYPTOPUNKSBidDTO.id = '';
          crYPTOPUNKSBidDTO.tokensBid = '';
          crYPTOPUNKSBidDTO.tokenId = '';
          crYPTOPUNKSBidDTO.timestamp = '';
          crYPTOPUNKSBidDTO.bidder = '';
        return crYPTOPUNKSBidDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCRYPTOPUNKSBidDTO) {           
            OASCRYPTOPUNKSBidDTO crYPTOPUNKSBidDTO = (OASCRYPTOPUNKSBidDTO) obj;
            return this.entryTime == crYPTOPUNKSBidDTO.entryTime
                && this.recvTime == crYPTOPUNKSBidDTO.recvTime
                && this.blockNumber == crYPTOPUNKSBidDTO.blockNumber
                && this.vid == crYPTOPUNKSBidDTO.vid
                && this.blockRange == crYPTOPUNKSBidDTO.blockRange
                && this.id == crYPTOPUNKSBidDTO.id
                && this.tokensBid == crYPTOPUNKSBidDTO.tokensBid
                && this.tokenId == crYPTOPUNKSBidDTO.tokenId
                && this.timestamp == crYPTOPUNKSBidDTO.timestamp
                && this.bidder == crYPTOPUNKSBidDTO.bidder;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (tokensBid == null ? 0 : System.hashCode(tokensBid));
        hashCode = (17 * hashCode) + (tokenId == null ? 0 : System.hashCode(tokenId));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (bidder == null ? 0 : System.hashCode(bidder));
        return hashCode;
    }
}

