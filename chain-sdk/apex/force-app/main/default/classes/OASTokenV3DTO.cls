/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASTokenV3DTO
 */
public class OASTokenV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return symbol
     */
    public String symbol { get; set; }

    /**
     * 
     * @return name
     */
    public String name { get; set; }

    /**
     * 
     * @return decimals
     */
    public Integer decimals { get; set; }

    /**
     * Get totalSupply
     * @return totalSupply
     */
    public OASBigInteger totalSupply { get; set; }

    /**
     * 
     * @return volume
     */
    public String volume { get; set; }

    /**
     * 
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * 
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * 
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * Get txCount
     * @return txCount
     */
    public OASBigInteger txCount { get; set; }

    /**
     * Get poolCount
     * @return poolCount
     */
    public OASBigInteger poolCount { get; set; }

    /**
     * 
     * @return totalValueLocked
     */
    public String totalValueLocked { get; set; }

    /**
     * 
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * 
     * @return totalValueLockedUsdUntracked
     */
    public String totalValueLockedUsdUntracked { get; set; }

    /**
     * 
     * @return derivedEth
     */
    public String derivedEth { get; set; }

    /**
     * 
     * @return whitelistPools
     */
    public List<String> whitelistPools { get; set; }

    /**
     * Get tokenSymbol
     * @return tokenSymbol
     */
    public String tokenSymbol { get; private set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'total_supply' => 'totalSupply',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'tx_count' => 'txCount',
        'pool_count' => 'poolCount',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_value_locked_usd_untracked' => 'totalValueLockedUsdUntracked',
        'derived_eth' => 'derivedEth',
        'whitelist_pools' => 'whitelistPools',
        'token_symbol' => 'tokenSymbol'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASTokenV3DTO() {
        whitelistPools = new List<String>();
    }

    public static OASTokenV3DTO getExample() {
        OASTokenV3DTO tokenV3DTO = new OASTokenV3DTO();
          tokenV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenV3DTO.blockNumber = 123456789L;
          tokenV3DTO.vid = 123456789L;
          tokenV3DTO.id = '';
          tokenV3DTO.symbol = '';
          tokenV3DTO.name = '';
          tokenV3DTO.decimals = 0;
          tokenV3DTO.totalSupply = OASBigInteger.getExample();
          tokenV3DTO.volume = '';
          tokenV3DTO.volumeUsd = '';
          tokenV3DTO.untrackedVolumeUsd = '';
          tokenV3DTO.feesUsd = '';
          tokenV3DTO.txCount = OASBigInteger.getExample();
          tokenV3DTO.poolCount = OASBigInteger.getExample();
          tokenV3DTO.totalValueLocked = '';
          tokenV3DTO.totalValueLockedUsd = '';
          tokenV3DTO.totalValueLockedUsdUntracked = '';
          tokenV3DTO.derivedEth = '';
          tokenV3DTO.whitelistPools = new List<String>{''};
          tokenV3DTO.tokenSymbol = '';
        return tokenV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTokenV3DTO) {           
            OASTokenV3DTO tokenV3DTO = (OASTokenV3DTO) obj;
            return this.entryTime == tokenV3DTO.entryTime
                && this.recvTime == tokenV3DTO.recvTime
                && this.blockNumber == tokenV3DTO.blockNumber
                && this.vid == tokenV3DTO.vid
                && this.id == tokenV3DTO.id
                && this.symbol == tokenV3DTO.symbol
                && this.name == tokenV3DTO.name
                && this.decimals == tokenV3DTO.decimals
                && this.totalSupply == tokenV3DTO.totalSupply
                && this.volume == tokenV3DTO.volume
                && this.volumeUsd == tokenV3DTO.volumeUsd
                && this.untrackedVolumeUsd == tokenV3DTO.untrackedVolumeUsd
                && this.feesUsd == tokenV3DTO.feesUsd
                && this.txCount == tokenV3DTO.txCount
                && this.poolCount == tokenV3DTO.poolCount
                && this.totalValueLocked == tokenV3DTO.totalValueLocked
                && this.totalValueLockedUsd == tokenV3DTO.totalValueLockedUsd
                && this.totalValueLockedUsdUntracked == tokenV3DTO.totalValueLockedUsdUntracked
                && this.derivedEth == tokenV3DTO.derivedEth
                && this.whitelistPools == tokenV3DTO.whitelistPools
                && this.tokenSymbol == tokenV3DTO.tokenSymbol;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (symbol == null ? 0 : System.hashCode(symbol));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (decimals == null ? 0 : System.hashCode(decimals));
        hashCode = (17 * hashCode) + (totalSupply == null ? 0 : System.hashCode(totalSupply));
        hashCode = (17 * hashCode) + (volume == null ? 0 : System.hashCode(volume));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (txCount == null ? 0 : System.hashCode(txCount));
        hashCode = (17 * hashCode) + (poolCount == null ? 0 : System.hashCode(poolCount));
        hashCode = (17 * hashCode) + (totalValueLocked == null ? 0 : System.hashCode(totalValueLocked));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (totalValueLockedUsdUntracked == null ? 0 : System.hashCode(totalValueLockedUsdUntracked));
        hashCode = (17 * hashCode) + (derivedEth == null ? 0 : System.hashCode(derivedEth));
        hashCode = (17 * hashCode) + (whitelistPools == null ? 0 : System.hashCode(whitelistPools));
        hashCode = (17 * hashCode) + (tokenSymbol == null ? 0 : System.hashCode(tokenSymbol));
        return hashCode;
    }
}

