/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASUniswapV3Api {
    OASClient client;

    public OASUniswapV3Api(OASClient client) {
        this.client = client;
    }

    public OASUniswapV3Api() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * GetBundles (current)
     * Gets bundles.
     * @return List<OASUniswapV3BundleV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BundleV3DTO> uniswapV3GetBundlesCurrent() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BundleV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/bundles/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BundleV3DTO>.class
        );
    }
    /**
     * GetBundles (historical)
     * Gets bundles.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @return List<OASUniswapV3BundleV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BundleV3DTO> uniswapV3GetBundlesHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BundleV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/bundles/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BundleV3DTO>.class
        );
    }
    /**
     * GetBurns (current)
     * Gets burns.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3BurnV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BurnV3DTO> uniswapV3GetBurnsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BurnV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/burns/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BurnV3DTO>.class
        );
    }
    /**
     * GetBurns (historical)
     * Gets burns.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3BurnV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BurnV3DTO> uniswapV3GetBurnsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BurnV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/burns/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BurnV3DTO>.class
        );
    }
    /**
     * GetDayData (current)
     * Gets uniswapv3 day data.
     * @return List<OASUniswapV3UniswapDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3UniswapDayDataV3DTO> uniswapV3GetDayDataCurrent() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3UniswapDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/dayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3UniswapDayDataV3DTO>.class
        );
    }
    /**
     * GetDayData (historical)
     * Gets uniswapv3 day data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @return List<OASUniswapV3UniswapDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3UniswapDayDataV3DTO> uniswapV3GetDayDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3UniswapDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/dayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3UniswapDayDataV3DTO>.class
        );
    }
    /**
     * GetFactory (current)
     * Gets factory.
     * @return List<OASUniswapV3FactoryV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3FactoryV3DTO> uniswapV3GetFactoryCurrent() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3FactoryV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/factory/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3FactoryV3DTO>.class
        );
    }
    /**
     * GetFactory (historical)
     * Gets factory.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @return List<OASUniswapV3FactoryV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3FactoryV3DTO> uniswapV3GetFactoryHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3FactoryV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/factory/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3FactoryV3DTO>.class
        );
    }
    /**
     * GetMints (current)
     * Gets mints.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3MintV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3MintV3DTO> uniswapV3GetMintsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3MintV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/mints/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3MintV3DTO>.class
        );
    }
    /**
     * GetMints (historical)
     * Gets mints.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3MintV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3MintV3DTO> uniswapV3GetMintsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3MintV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/mints/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3MintV3DTO>.class
        );
    }
    /**
     * GetPools (current) 🔥
     * Gets pools.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3PoolV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolV3DTO> uniswapV3GetPoolsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/pools/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolV3DTO>.class
        );
    }
    /**
     * GetPoolsDayData (current)
     * Gets pools day data.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3PoolDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolDayDataV3DTO> uniswapV3GetPoolsDayDataCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolDayDataV3DTO>.class
        );
    }
    /**
     * GetPoolsDayData (historical)
     * Gets pools day data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3PoolDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolDayDataV3DTO> uniswapV3GetPoolsDayDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolDayDataV3DTO>.class
        );
    }
    /**
     * GetPools (historical) 🔥
     * Gets pools.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3PoolV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolV3DTO> uniswapV3GetPoolsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/pools/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolV3DTO>.class
        );
    }
    /**
     * GetPoolsHourData (current)
     * Gets pools hour data.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3PoolHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolHourDataV3DTO> uniswapV3GetPoolsHourDataCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsHourData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolHourDataV3DTO>.class
        );
    }
    /**
     * GetPoolsHourData (historical)
     * Gets pools hour data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3PoolHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolHourDataV3DTO> uniswapV3GetPoolsHourDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsHourData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolHourDataV3DTO>.class
        );
    }
    /**
     * GetPositions (current)
     * Gets positions.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3PositionV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionV3DTO> uniswapV3GetPositionsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positions/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionV3DTO>.class
        );
    }
    /**
     * GetPositions (historical)
     * Gets positions.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3PositionV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionV3DTO> uniswapV3GetPositionsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positions/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionV3DTO>.class
        );
    }
    /**
     * GetPositionsSnaphots (historical)
     * Gets positions snapshots.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3PositionSnapshotV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionSnapshotV3DTO> uniswapV3GetPositionsSnaphotsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionSnapshotV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positionsSnapshots/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionSnapshotV3DTO>.class
        );
    }
    /**
     * GetPositionsSnapshots (current)
     * Gets positions snapshots.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3PositionSnapshotV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionSnapshotV3DTO> uniswapV3GetPositionsSnapshotsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionSnapshotV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positionSnapshots/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionSnapshotV3DTO>.class
        );
    }
    /**
     * GetSwaps (current) 🔥
     * Gets swaps.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3SwapV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3SwapV3DTO> uniswapV3GetSwapsCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3SwapV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/swaps/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3SwapV3DTO>.class
        );
    }
    /**
     * GetSwaps (historical) 🔥
     * Gets swaps.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3SwapV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3SwapV3DTO> uniswapV3GetSwapsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3SwapV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/swaps/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3SwapV3DTO>.class
        );
    }
    /**
     * GetTicks (current)
     * Gets ticks.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3TickV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickV3DTO> uniswapV3GetTicksCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticks/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickV3DTO>.class
        );
    }
    /**
     * GetTicksDayData (current)
     * Gets ticks day data.
     * @param filterPoolId  (optional)
     * @return List<OASUniswapV3TickDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickDayDataV3DTO> uniswapV3GetTicksDayDataCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticksDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickDayDataV3DTO>.class
        );
    }
    /**
     * GetTicksDayData (historical)
     * Gets ticks day data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3TickDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickDayDataV3DTO> uniswapV3GetTicksDayDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticksDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickDayDataV3DTO>.class
        );
    }
    /**
     * GetTicks (historical)
     * Gets ticks.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @return List<OASUniswapV3TickV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickV3DTO> uniswapV3GetTicksHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticks/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickV3DTO>.class
        );
    }
    /**
     * GetTokens (current) 🔥
     * Gets tokens.
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DTO> uniswapV3GetTokensCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokens/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DTO>.class
        );
    }
    /**
     * GetTokensDayData (current)
     * Gets tokens day data.
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenV3DayDataDTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DayDataDTO> uniswapV3GetTokensDayDataCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DayDataDTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DayDataDTO>.class
        );
    }
    /**
     * GetTokensDayData (historical)
     * Gets tokens day data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @return List<OASUniswapV3TokenV3DayDataDTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DayDataDTO> uniswapV3GetTokensDayDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DayDataDTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DayDataDTO>.class
        );
    }
    /**
     * GetTokens (historical) 🔥
     * Gets tokens.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @return List<OASUniswapV3TokenV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DTO> uniswapV3GetTokensHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokens/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DTO>.class
        );
    }
    /**
     * GetTokensHourData (current)
     * Gets tokens hour data.
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenHourDataV3DTO> uniswapV3GetTokensHourDataCurrent(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensHourData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenHourDataV3DTO>.class
        );
    }
    /**
     * GetTokensHourData (historical)
     * Gets tokens hour data.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @return List<OASUniswapV3TokenHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenHourDataV3DTO> uniswapV3GetTokensHourDataHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensHourData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenHourDataV3DTO>.class
        );
    }
    /**
     * GetTransactions (historical)
     * Gets transactions.
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @return List<OASUniswapV3TransactionV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TransactionV3DTO> uniswapV3GetTransactionsHistorical(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TransactionV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/transactions/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TransactionV3DTO>.class
        );
    }
}
