/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASUniswapV3Api {
    OASClient client;

    public OASUniswapV3Api(OASClient client) {
        this.client = client;
    }

    public OASUniswapV3Api() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * GetBundles
     * 
     * @return List<OASUniswapV3BundleV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BundleV3DTO> dappsUniswapv3BundleCurrentGet() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BundleV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/bundle/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BundleV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3BundlesHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/bundles/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetBurns
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3BurnV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3BurnV3DTO> dappsUniswapv3BurnsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3BurnV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/burns/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3BurnV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3BurnsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/burns/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3DayDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/dayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetFactory
     * 
     * @param chainId  (required)
     * @return List<OASUniswapV3FactoryV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3FactoryV3DTO> dappsUniswapv3FactoryCurrentGet(Map<String, Object> params) {
        client.assertNotNull(params.get('chainId'), 'chainId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3FactoryV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/factory/current', '',
            query, form,
            new Map<String, Object>{
                'chain_id' => (String) params.get('chainId')
            },
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3FactoryV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3FactoryHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/factory/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetMints
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3MintV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3MintV3DTO> dappsUniswapv3MintsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3MintV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/mints/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3MintV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3MintsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/mints/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3PoolDayDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/poolDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3PoolHourDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/poolHourData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetPools
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3PoolV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolV3DTO> dappsUniswapv3PoolsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/pools/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolV3DTO>.class
        );
    }
    /**
     * GetPoolsDayData
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3PoolDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolDayDataV3DTO> dappsUniswapv3PoolsDayDataCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolDayDataV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3PoolsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/pools/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetPoolsHourData
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3PoolHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PoolHourDataV3DTO> dappsUniswapv3PoolsHourDataCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PoolHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/poolsHourData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PoolHourDataV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3PositionSnapshotHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/positionSnapshot/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetPositionSnapshot
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3PositionSnapshotV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionSnapshotV3DTO> dappsUniswapv3PositionSnapshotsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionSnapshotV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positionSnapshots/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionSnapshotV3DTO>.class
        );
    }
    /**
     * GetPositions
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3PositionV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3PositionV3DTO> dappsUniswapv3PositionsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3PositionV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/positions/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3PositionV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3PositionsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/positions/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetSwaps
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3SwapV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3SwapV3DTO> dappsUniswapv3SwapsCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3SwapV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/swaps/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3SwapV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3SwapsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/swaps/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TickDayDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/tickDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetTicks
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3TickV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickV3DTO> dappsUniswapv3TicksCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticks/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickV3DTO>.class
        );
    }
    /**
     * GetTicksDayData
     * 
     * @param filterPoolId Filter pool id (optional)
     * @return List<OASUniswapV3TickDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TickDayDataV3DTO> dappsUniswapv3TicksDayDataCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_pool_id', (String) params.get('filterPoolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TickDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/ticksDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TickDayDataV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param poolId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TicksHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('poolId', (String) params.get('poolId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/ticks/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TokenDayDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/tokenDayData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TokenHourDataHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/tokenHourData/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetTokens
     * 
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DTO> dappsUniswapv3TokensCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokens/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DTO>.class
        );
    }
    /**
     * GetTokensDayData
     * 
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenV3DayDataDTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenV3DayDataDTO> dappsUniswapv3TokensDayDataCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenV3DayDataDTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenV3DayDataDTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @param tokenId  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TokensHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));
        query.addAll(client.makeParam('tokenId', (String) params.get('tokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/tokens/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetTokensHourData
     * 
     * @param filterTokenId  (optional)
     * @return List<OASUniswapV3TokenHourDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3TokenHourDataV3DTO> dappsUniswapv3TokensHourDataCurrentGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('filter_token_id', (String) params.get('filterTokenId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3TokenHourDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/tokensHourData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3TokenHourDataV3DTO>.class
        );
    }
    /**
     * 
     * 
     * @param startBlock  (optional)
     * @param endBlock  (optional)
     * @param startDate  (optional)
     * @param endDate  (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void dappsUniswapv3TransactionsHistoricalGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('startBlock', (Long) params.get('startBlock')));
        query.addAll(client.makeParam('endBlock', (Long) params.get('endBlock')));
        query.addAll(client.makeParam('startDate', (Datetime) params.get('startDate')));
        query.addAll(client.makeParam('endDate', (Datetime) params.get('endDate')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/dapps/uniswapv3/transactions/historical', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>(),
            new List<String>(),
            new List<String>(),
            null
        );
    }
    /**
     * GetUniswapDayData
     * 
     * @return List<OASUniswapV3UniswapDayDataV3DTO>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASUniswapV3UniswapDayDataV3DTO> dappsUniswapv3UniswapDayDataCurrentGet() {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASUniswapV3UniswapDayDataV3DTO>) client.invoke(
            'GET', '/dapps/uniswapv3/uniswapDayData/current', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain', 'application/json', 'text/json' },
            new List<String>(),
            new List<String>(),
            List<OASUniswapV3UniswapDayDataV3DTO>.class
        );
    }
}
