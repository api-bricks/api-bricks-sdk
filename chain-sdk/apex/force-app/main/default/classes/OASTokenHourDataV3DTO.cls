/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Token data aggregated across all pairs that include token.
 */
public class OASTokenHourDataV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * 
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * token address concatendated with date
     * @return id
     */
    public String id { get; set; }

    /**
     * unix timestamp for start of hour
     * @return periodStartUnix
     */
    public Integer periodStartUnix { get; set; }

    /**
     * pointer to token
     * @return token
     */
    public String token { get; set; }

    /**
     * volume in token units
     * @return volume
     */
    public String volume { get; set; }

    /**
     * volume in derived USD
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * volume in USD even on pools with less reliable USD values
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * liquidity across all pools in token units
     * @return totalValueLocked
     */
    public String totalValueLocked { get; set; }

    /**
     * liquidity across all pools in derived USD
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * price at end of period in USD
     * @return priceUsd
     */
    public String priceUsd { get; set; }

    /**
     * fees in USD
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * opening price USD
     * @return open
     */
    public String open { get; set; }

    /**
     * high price USD
     * @return high
     */
    public String high { get; set; }

    /**
     * low price USD
     * @return low
     */
    public String low { get; set; }

    /**
     * close price USD
     * @return close
     */
    public String close { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'period_start_unix' => 'periodStartUnix',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'total_value_locked' => 'totalValueLocked',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'price_usd' => 'priceUsd',
        'fees_usd' => 'feesUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASTokenHourDataV3DTO getExample() {
        OASTokenHourDataV3DTO tokenHourDataV3DTO = new OASTokenHourDataV3DTO();
          tokenHourDataV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenHourDataV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          tokenHourDataV3DTO.blockNumber = 123456789L;
          tokenHourDataV3DTO.id = '';
          tokenHourDataV3DTO.periodStartUnix = 0;
          tokenHourDataV3DTO.token = '';
          tokenHourDataV3DTO.volume = '';
          tokenHourDataV3DTO.volumeUsd = '';
          tokenHourDataV3DTO.untrackedVolumeUsd = '';
          tokenHourDataV3DTO.totalValueLocked = '';
          tokenHourDataV3DTO.totalValueLockedUsd = '';
          tokenHourDataV3DTO.priceUsd = '';
          tokenHourDataV3DTO.feesUsd = '';
          tokenHourDataV3DTO.open = '';
          tokenHourDataV3DTO.high = '';
          tokenHourDataV3DTO.low = '';
          tokenHourDataV3DTO.close = '';
          tokenHourDataV3DTO.vid = 123456789L;
        return tokenHourDataV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASTokenHourDataV3DTO) {           
            OASTokenHourDataV3DTO tokenHourDataV3DTO = (OASTokenHourDataV3DTO) obj;
            return this.entryTime == tokenHourDataV3DTO.entryTime
                && this.recvTime == tokenHourDataV3DTO.recvTime
                && this.blockNumber == tokenHourDataV3DTO.blockNumber
                && this.id == tokenHourDataV3DTO.id
                && this.periodStartUnix == tokenHourDataV3DTO.periodStartUnix
                && this.token == tokenHourDataV3DTO.token
                && this.volume == tokenHourDataV3DTO.volume
                && this.volumeUsd == tokenHourDataV3DTO.volumeUsd
                && this.untrackedVolumeUsd == tokenHourDataV3DTO.untrackedVolumeUsd
                && this.totalValueLocked == tokenHourDataV3DTO.totalValueLocked
                && this.totalValueLockedUsd == tokenHourDataV3DTO.totalValueLockedUsd
                && this.priceUsd == tokenHourDataV3DTO.priceUsd
                && this.feesUsd == tokenHourDataV3DTO.feesUsd
                && this.open == tokenHourDataV3DTO.open
                && this.high == tokenHourDataV3DTO.high
                && this.low == tokenHourDataV3DTO.low
                && this.close == tokenHourDataV3DTO.close
                && this.vid == tokenHourDataV3DTO.vid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (periodStartUnix == null ? 0 : System.hashCode(periodStartUnix));
        hashCode = (17 * hashCode) + (token == null ? 0 : System.hashCode(token));
        hashCode = (17 * hashCode) + (volume == null ? 0 : System.hashCode(volume));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (totalValueLocked == null ? 0 : System.hashCode(totalValueLocked));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (priceUsd == null ? 0 : System.hashCode(priceUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (open == null ? 0 : System.hashCode(open));
        hashCode = (17 * hashCode) + (high == null ? 0 : System.hashCode(high));
        hashCode = (17 * hashCode) + (low == null ? 0 : System.hashCode(low));
        hashCode = (17 * hashCode) + (close == null ? 0 : System.hashCode(close));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        return hashCode;
    }
}

