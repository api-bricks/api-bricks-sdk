/*
 * OnChain API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Ticks are the boundaries between discrete areas in price space.
 */
public class OASUniswapV3TickV3DTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * Identifier, format: <pool address>#<tick index>
     * @return id
     */
    public String id { get; set; }

    /**
     * Pool address.
     * @return poolAddress
     */
    public String poolAddress { get; set; }

    /**
     * Get tickIdx
     * @return tickIdx
     */
    public OASNumericsBigInteger tickIdx { get; set; }

    /**
     * Pool address.
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Get liquidityGross
     * @return liquidityGross
     */
    public OASNumericsBigInteger liquidityGross { get; set; }

    /**
     * Get liquidityNet
     * @return liquidityNet
     */
    public OASNumericsBigInteger liquidityNet { get; set; }

    /**
     * Calculated price of token0 of tick within this pool - constant.
     * @return price0
     */
    public String price0 { get; set; }

    /**
     * Calculated price of token1 of tick within this pool - constant.
     * @return price1
     */
    public String price1 { get; set; }

    /**
     * Lifetime volume of token0 with this tick in range.
     * @return volumeToken0
     */
    public String volumeToken0 { get; set; }

    /**
     * Lifetime volume of token1 with this tick in range.
     * @return volumeToken1
     */
    public String volumeToken1 { get; set; }

    /**
     * Lifetime volume in derived USD with this tick in range.
     * @return volumeUsd
     */
    public String volumeUsd { get; set; }

    /**
     * Lifetime volume in untracked USD with this tick in range.
     * @return untrackedVolumeUsd
     */
    public String untrackedVolumeUsd { get; set; }

    /**
     * Fees in USD.
     * @return feesUsd
     */
    public String feesUsd { get; set; }

    /**
     * All time collected fees in token0.
     * @return collectedFeesToken0
     */
    public String collectedFeesToken0 { get; set; }

    /**
     * All time collected fees in token1.
     * @return collectedFeesToken1
     */
    public String collectedFeesToken1 { get; set; }

    /**
     * All time collected fees in USD.
     * @return collectedFeesUsd
     */
    public String collectedFeesUsd { get; set; }

    /**
     * Created time.
     * @return createdAtTimestamp
     */
    public Datetime createdAtTimestamp { get; set; }

    /**
     * Get liquidityProviderCount
     * @return liquidityProviderCount
     */
    public OASNumericsBigInteger liquidityProviderCount { get; set; }

    /**
     * Get feeGrowthOutside0x128
     * @return feeGrowthOutside0x128
     */
    public OASNumericsBigInteger feeGrowthOutside0x128 { get; set; }

    /**
     * Get feeGrowthOutside1x128
     * @return feeGrowthOutside1x128
     */
    public OASNumericsBigInteger feeGrowthOutside1x128 { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'pool_address' => 'poolAddress',
        'tick_idx' => 'tickIdx',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_net' => 'liquidityNet',
        'price_0' => 'price0',
        'price_1' => 'price1',
        'volume_token_0' => 'volumeToken0',
        'volume_token_1' => 'volumeToken1',
        'volume_usd' => 'volumeUsd',
        'untracked_volume_usd' => 'untrackedVolumeUsd',
        'fees_usd' => 'feesUsd',
        'collected_fees_token_0' => 'collectedFeesToken0',
        'collected_fees_token_1' => 'collectedFeesToken1',
        'collected_fees_usd' => 'collectedFeesUsd',
        'created_at_timestamp' => 'createdAtTimestamp',
        'liquidity_provider_count' => 'liquidityProviderCount',
        'fee_growth_outside_0x128' => 'feeGrowthOutside0x128',
        'fee_growth_outside_1x128' => 'feeGrowthOutside1x128'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUniswapV3TickV3DTO getExample() {
        OASUniswapV3TickV3DTO uniswapV3TickV3DTO = new OASUniswapV3TickV3DTO();
          uniswapV3TickV3DTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TickV3DTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TickV3DTO.blockNumber = 123456789L;
          uniswapV3TickV3DTO.vid = 123456789L;
          uniswapV3TickV3DTO.id = '';
          uniswapV3TickV3DTO.poolAddress = '';
          uniswapV3TickV3DTO.tickIdx = OASNumericsBigInteger.getExample();
          uniswapV3TickV3DTO.pool = '';
          uniswapV3TickV3DTO.liquidityGross = OASNumericsBigInteger.getExample();
          uniswapV3TickV3DTO.liquidityNet = OASNumericsBigInteger.getExample();
          uniswapV3TickV3DTO.price0 = '';
          uniswapV3TickV3DTO.price1 = '';
          uniswapV3TickV3DTO.volumeToken0 = '';
          uniswapV3TickV3DTO.volumeToken1 = '';
          uniswapV3TickV3DTO.volumeUsd = '';
          uniswapV3TickV3DTO.untrackedVolumeUsd = '';
          uniswapV3TickV3DTO.feesUsd = '';
          uniswapV3TickV3DTO.collectedFeesToken0 = '';
          uniswapV3TickV3DTO.collectedFeesToken1 = '';
          uniswapV3TickV3DTO.collectedFeesUsd = '';
          uniswapV3TickV3DTO.createdAtTimestamp = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV3TickV3DTO.liquidityProviderCount = OASNumericsBigInteger.getExample();
          uniswapV3TickV3DTO.feeGrowthOutside0x128 = OASNumericsBigInteger.getExample();
          uniswapV3TickV3DTO.feeGrowthOutside1x128 = OASNumericsBigInteger.getExample();
        return uniswapV3TickV3DTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUniswapV3TickV3DTO) {           
            OASUniswapV3TickV3DTO uniswapV3TickV3DTO = (OASUniswapV3TickV3DTO) obj;
            return this.entryTime == uniswapV3TickV3DTO.entryTime
                && this.recvTime == uniswapV3TickV3DTO.recvTime
                && this.blockNumber == uniswapV3TickV3DTO.blockNumber
                && this.vid == uniswapV3TickV3DTO.vid
                && this.id == uniswapV3TickV3DTO.id
                && this.poolAddress == uniswapV3TickV3DTO.poolAddress
                && this.tickIdx == uniswapV3TickV3DTO.tickIdx
                && this.pool == uniswapV3TickV3DTO.pool
                && this.liquidityGross == uniswapV3TickV3DTO.liquidityGross
                && this.liquidityNet == uniswapV3TickV3DTO.liquidityNet
                && this.price0 == uniswapV3TickV3DTO.price0
                && this.price1 == uniswapV3TickV3DTO.price1
                && this.volumeToken0 == uniswapV3TickV3DTO.volumeToken0
                && this.volumeToken1 == uniswapV3TickV3DTO.volumeToken1
                && this.volumeUsd == uniswapV3TickV3DTO.volumeUsd
                && this.untrackedVolumeUsd == uniswapV3TickV3DTO.untrackedVolumeUsd
                && this.feesUsd == uniswapV3TickV3DTO.feesUsd
                && this.collectedFeesToken0 == uniswapV3TickV3DTO.collectedFeesToken0
                && this.collectedFeesToken1 == uniswapV3TickV3DTO.collectedFeesToken1
                && this.collectedFeesUsd == uniswapV3TickV3DTO.collectedFeesUsd
                && this.createdAtTimestamp == uniswapV3TickV3DTO.createdAtTimestamp
                && this.liquidityProviderCount == uniswapV3TickV3DTO.liquidityProviderCount
                && this.feeGrowthOutside0x128 == uniswapV3TickV3DTO.feeGrowthOutside0x128
                && this.feeGrowthOutside1x128 == uniswapV3TickV3DTO.feeGrowthOutside1x128;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (poolAddress == null ? 0 : System.hashCode(poolAddress));
        hashCode = (17 * hashCode) + (tickIdx == null ? 0 : System.hashCode(tickIdx));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (liquidityGross == null ? 0 : System.hashCode(liquidityGross));
        hashCode = (17 * hashCode) + (liquidityNet == null ? 0 : System.hashCode(liquidityNet));
        hashCode = (17 * hashCode) + (price0 == null ? 0 : System.hashCode(price0));
        hashCode = (17 * hashCode) + (price1 == null ? 0 : System.hashCode(price1));
        hashCode = (17 * hashCode) + (volumeToken0 == null ? 0 : System.hashCode(volumeToken0));
        hashCode = (17 * hashCode) + (volumeToken1 == null ? 0 : System.hashCode(volumeToken1));
        hashCode = (17 * hashCode) + (volumeUsd == null ? 0 : System.hashCode(volumeUsd));
        hashCode = (17 * hashCode) + (untrackedVolumeUsd == null ? 0 : System.hashCode(untrackedVolumeUsd));
        hashCode = (17 * hashCode) + (feesUsd == null ? 0 : System.hashCode(feesUsd));
        hashCode = (17 * hashCode) + (collectedFeesToken0 == null ? 0 : System.hashCode(collectedFeesToken0));
        hashCode = (17 * hashCode) + (collectedFeesToken1 == null ? 0 : System.hashCode(collectedFeesToken1));
        hashCode = (17 * hashCode) + (collectedFeesUsd == null ? 0 : System.hashCode(collectedFeesUsd));
        hashCode = (17 * hashCode) + (createdAtTimestamp == null ? 0 : System.hashCode(createdAtTimestamp));
        hashCode = (17 * hashCode) + (liquidityProviderCount == null ? 0 : System.hashCode(liquidityProviderCount));
        hashCode = (17 * hashCode) + (feeGrowthOutside0x128 == null ? 0 : System.hashCode(feeGrowthOutside0x128));
        hashCode = (17 * hashCode) + (feeGrowthOutside1x128 == null ? 0 : System.hashCode(feeGrowthOutside1x128));
        return hashCode;
    }
}

