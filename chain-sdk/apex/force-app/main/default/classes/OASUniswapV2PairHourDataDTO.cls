/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Tracks pair data across each hour.
 */
public class OASUniswapV2PairHourDataDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return id
     */
    public String id { get; set; }

    /**
     * Unix timestamp for start of hour.
     * @return hourStartUnix
     */
    public Integer hourStartUnix { get; set; }

    /**
     * Address for pair contract.
     * @return pair
     */
    public String pair { get; set; }

    /**
     * Reserve of token0 (updated during each transaction on pair).
     * @return reserve0
     */
    public String reserve0 { get; set; }

    /**
     * Reserve of token1 (updated during each transaction on pair).
     * @return reserve1
     */
    public String reserve1 { get; set; }

    /**
     * Total supply of liquidity token distributed to LPs.
     * @return totalSupply
     */
    public String totalSupply { get; set; }

    /**
     * Reserve of token0 plus token1 stored as a derived USD amount.
     * @return reserveUsd
     */
    public String reserveUsd { get; set; }

    /**
     * Total amount of token0 swapped throughout hour.
     * @return hourlyVolumeToken0
     */
    public String hourlyVolumeToken0 { get; set; }

    /**
     * Total amount of token1 swapped throughout hour.
     * @return hourlyVolumeToken1
     */
    public String hourlyVolumeToken1 { get; set; }

    /**
     * Total volume within pair throughout hour.
     * @return hourlyVolumeUsd
     */
    public String hourlyVolumeUsd { get; set; }

    /**
     * Amount of transactions on pair throughout hour.
     * @return hourlyTxns
     */
    public String hourlyTxns { get; set; }

    /**
     * 
     * @return vid
     */
    public Long vid { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'hour_start_unix' => 'hourStartUnix',
        'reserve_0' => 'reserve0',
        'reserve_1' => 'reserve1',
        'total_supply' => 'totalSupply',
        'reserve_usd' => 'reserveUsd',
        'hourly_volume_token_0' => 'hourlyVolumeToken0',
        'hourly_volume_token_1' => 'hourlyVolumeToken1',
        'hourly_volume_usd' => 'hourlyVolumeUsd',
        'hourly_txns' => 'hourlyTxns'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUniswapV2PairHourDataDTO getExample() {
        OASUniswapV2PairHourDataDTO uniswapV2PairHourDataDTO = new OASUniswapV2PairHourDataDTO();
          uniswapV2PairHourDataDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV2PairHourDataDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          uniswapV2PairHourDataDTO.blockNumber = 123456789L;
          uniswapV2PairHourDataDTO.id = '';
          uniswapV2PairHourDataDTO.hourStartUnix = 0;
          uniswapV2PairHourDataDTO.pair = '';
          uniswapV2PairHourDataDTO.reserve0 = '';
          uniswapV2PairHourDataDTO.reserve1 = '';
          uniswapV2PairHourDataDTO.totalSupply = '';
          uniswapV2PairHourDataDTO.reserveUsd = '';
          uniswapV2PairHourDataDTO.hourlyVolumeToken0 = '';
          uniswapV2PairHourDataDTO.hourlyVolumeToken1 = '';
          uniswapV2PairHourDataDTO.hourlyVolumeUsd = '';
          uniswapV2PairHourDataDTO.hourlyTxns = '';
          uniswapV2PairHourDataDTO.vid = 123456789L;
        return uniswapV2PairHourDataDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUniswapV2PairHourDataDTO) {           
            OASUniswapV2PairHourDataDTO uniswapV2PairHourDataDTO = (OASUniswapV2PairHourDataDTO) obj;
            return this.entryTime == uniswapV2PairHourDataDTO.entryTime
                && this.recvTime == uniswapV2PairHourDataDTO.recvTime
                && this.blockNumber == uniswapV2PairHourDataDTO.blockNumber
                && this.id == uniswapV2PairHourDataDTO.id
                && this.hourStartUnix == uniswapV2PairHourDataDTO.hourStartUnix
                && this.pair == uniswapV2PairHourDataDTO.pair
                && this.reserve0 == uniswapV2PairHourDataDTO.reserve0
                && this.reserve1 == uniswapV2PairHourDataDTO.reserve1
                && this.totalSupply == uniswapV2PairHourDataDTO.totalSupply
                && this.reserveUsd == uniswapV2PairHourDataDTO.reserveUsd
                && this.hourlyVolumeToken0 == uniswapV2PairHourDataDTO.hourlyVolumeToken0
                && this.hourlyVolumeToken1 == uniswapV2PairHourDataDTO.hourlyVolumeToken1
                && this.hourlyVolumeUsd == uniswapV2PairHourDataDTO.hourlyVolumeUsd
                && this.hourlyTxns == uniswapV2PairHourDataDTO.hourlyTxns
                && this.vid == uniswapV2PairHourDataDTO.vid;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (hourStartUnix == null ? 0 : System.hashCode(hourStartUnix));
        hashCode = (17 * hashCode) + (pair == null ? 0 : System.hashCode(pair));
        hashCode = (17 * hashCode) + (reserve0 == null ? 0 : System.hashCode(reserve0));
        hashCode = (17 * hashCode) + (reserve1 == null ? 0 : System.hashCode(reserve1));
        hashCode = (17 * hashCode) + (totalSupply == null ? 0 : System.hashCode(totalSupply));
        hashCode = (17 * hashCode) + (reserveUsd == null ? 0 : System.hashCode(reserveUsd));
        hashCode = (17 * hashCode) + (hourlyVolumeToken0 == null ? 0 : System.hashCode(hourlyVolumeToken0));
        hashCode = (17 * hashCode) + (hourlyVolumeToken1 == null ? 0 : System.hashCode(hourlyVolumeToken1));
        hashCode = (17 * hashCode) + (hourlyVolumeUsd == null ? 0 : System.hashCode(hourlyVolumeUsd));
        hashCode = (17 * hashCode) + (hourlyTxns == null ? 0 : System.hashCode(hourlyTxns));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        return hashCode;
    }
}

