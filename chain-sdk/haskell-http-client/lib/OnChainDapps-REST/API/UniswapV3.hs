{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.UniswapV3 where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** uniswapV3BundlesCurrent

-- | @GET \/dapps\/uniswapv3\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV3BundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3BundlesCurrent MimeNoContent [UniswapV3BundleDTO] accept
uniswapV3BundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/current"]

data UniswapV3BundlesCurrent  
-- | @application/json@
instance Produces UniswapV3BundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BundlesCurrent MimePlainText


-- *** uniswapV3BurnsCurrent

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV3BurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3BurnsCurrent MimeNoContent [UniswapV3BurnDTO] accept
uniswapV3BurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data UniswapV3BurnsCurrent  
-- | @application/json@
instance Produces UniswapV3BurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BurnsCurrent MimePlainText


-- *** uniswapV3FactoriesCurrent

-- | @GET \/dapps\/uniswapv3\/factories\/current@
-- 
-- Factories (current)
-- 
-- Gets factories.
-- 
uniswapV3FactoriesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3FactoriesCurrent MimeNoContent [UniswapV3FactoryDTO] accept
uniswapV3FactoriesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factories/current"]

data UniswapV3FactoriesCurrent  
-- | @application/json@
instance Produces UniswapV3FactoriesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3FactoriesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3FactoriesCurrent MimePlainText


-- *** uniswapV3GetBundlesHistorical

-- | @GET \/dapps\/uniswapv3\/bundles\/historical@
-- 
-- Bundles (historical)
-- 
-- Gets bundles.
-- 
uniswapV3GetBundlesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetBundlesHistorical MimeNoContent [UniswapV3BundleDTO] accept
uniswapV3GetBundlesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/historical"]

data UniswapV3GetBundlesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetBundlesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetBundlesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetBundlesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetBundlesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBundlesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBundlesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBundlesHistorical MimePlainText


-- *** uniswapV3GetBurnsHistorical

-- | @GET \/dapps\/uniswapv3\/burns\/historical@
-- 
-- Burns (historical)
-- 
-- Gets burns.
-- 
uniswapV3GetBurnsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetBurnsHistorical MimeNoContent [UniswapV3BurnDTO] accept
uniswapV3GetBurnsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/historical"]

data UniswapV3GetBurnsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetBurnsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetBurnsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetBurnsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetBurnsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash + '#' + index in mints Transaction array.
instance HasOptionalParam UniswapV3GetBurnsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool position is within.
instance HasOptionalParam UniswapV3GetBurnsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetBurnsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetBurnsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBurnsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBurnsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBurnsHistorical MimePlainText


-- *** uniswapV3GetFactoriesHistorical

-- | @GET \/dapps\/uniswapv3\/factories\/historical@
-- 
-- Factories (historical)
-- 
-- Gets factories.
-- 
uniswapV3GetFactoriesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetFactoriesHistorical MimeNoContent [UniswapV3FactoryDTO] accept
uniswapV3GetFactoriesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factories/historical"]

data UniswapV3GetFactoriesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetFactoriesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetFactoriesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetFactoriesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetFactoriesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Factory address.
instance HasOptionalParam UniswapV3GetFactoriesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetFactoriesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetFactoriesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetFactoriesHistorical MimePlainText


-- *** uniswapV3GetMintsHistorical

-- | @GET \/dapps\/uniswapv3\/mints\/historical@
-- 
-- Mints (historical)
-- 
-- Gets mints.
-- 
uniswapV3GetMintsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetMintsHistorical MimeNoContent [UniswapV3MintDTO] accept
uniswapV3GetMintsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/historical"]

data UniswapV3GetMintsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetMintsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetMintsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetMintsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetMintsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash + '#' + index in mints Transaction array.
instance HasOptionalParam UniswapV3GetMintsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool address.
instance HasOptionalParam UniswapV3GetMintsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetMintsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetMintsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetMintsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetMintsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetMintsHistorical MimePlainText


-- *** uniswapV3GetPoolDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/poolDayData\/historical@
-- 
-- PoolDayData (historical)
-- 
-- Gets poolDayData.
-- 
uniswapV3GetPoolDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetPoolDayDataHistorical MimeNoContent [UniswapV3PoolDayDataDTO] accept
uniswapV3GetPoolDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayData/historical"]

data UniswapV3GetPoolDayDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: (pool address)-(day id).
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pointer to pool.
instance HasOptionalParam UniswapV3GetPoolDayDataHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolDayDataHistorical MimePlainText


-- *** uniswapV3GetPoolHourDataHistorical

-- | @GET \/dapps\/uniswapv3\/poolHourData\/historical@
-- 
-- PoolHourData (historical)
-- 
-- Gets poolHourData.
-- 
uniswapV3GetPoolHourDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetPoolHourDataHistorical MimeNoContent [UniswapV3PoolHourDataDTO] accept
uniswapV3GetPoolHourDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourData/historical"]

data UniswapV3GetPoolHourDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: (pool address)-(day id)
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pointer to pool.
instance HasOptionalParam UniswapV3GetPoolHourDataHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolHourDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolHourDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolHourDataHistorical MimePlainText


-- *** uniswapV3GetPoolsHistorical

-- | @GET \/dapps\/uniswapv3\/pools\/historical@
-- 
-- Pools (historical)
-- 
-- Gets pools.
-- 
uniswapV3GetPoolsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetPoolsHistorical MimeNoContent [UniswapV3PoolDTO] accept
uniswapV3GetPoolsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/historical"]

data UniswapV3GetPoolsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPoolsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPoolsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPoolsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPoolsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam UniswapV3GetPoolsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetPoolsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetPoolsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHistorical MimePlainText


-- *** uniswapV3GetPositionSnapshotsHistorical

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/historical@
-- 
-- PositionSnapshots (historical)
-- 
-- Gets positionSnapshots.
-- 
uniswapV3GetPositionSnapshotsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetPositionSnapshotsHistorical MimeNoContent [UniswapV3PositionSnapshotDTO] accept
uniswapV3GetPositionSnapshotsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/historical"]

data UniswapV3GetPositionSnapshotsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - NFT token identifier, format: (NFT token id)#(block number).
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool the position is within.
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimePlainText


-- *** uniswapV3GetPositionsHistorical

-- | @GET \/dapps\/uniswapv3\/positions\/historical@
-- 
-- Positions (historical)
-- 
-- Gets positions.
-- 
uniswapV3GetPositionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetPositionsHistorical MimeNoContent [UniswapV3PositionDTO] accept
uniswapV3GetPositionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/historical"]

data UniswapV3GetPositionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPositionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPositionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPositionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPositionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - NFT token identifier.
instance HasOptionalParam UniswapV3GetPositionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool position is within.
instance HasOptionalParam UniswapV3GetPositionsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pair contract.
instance HasOptionalParam UniswapV3GetPositionsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pair contract.
instance HasOptionalParam UniswapV3GetPositionsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsHistorical MimePlainText


-- *** uniswapV3GetSwapsHistorical

-- | @GET \/dapps\/uniswapv3\/swaps\/historical@
-- 
-- Swaps (historical)
-- 
-- Gets swaps.
-- 
uniswapV3GetSwapsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetSwapsHistorical MimeNoContent [UniswapV3SwapDTO] accept
uniswapV3GetSwapsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/historical"]

data UniswapV3GetSwapsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetSwapsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetSwapsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetSwapsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetSwapsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: (transaction hash) + # + (index in swaps Transaction array).
instance HasOptionalParam UniswapV3GetSwapsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool swap occured within.
instance HasOptionalParam UniswapV3GetSwapsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pair contract.
instance HasOptionalParam UniswapV3GetSwapsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pair contract.
instance HasOptionalParam UniswapV3GetSwapsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetSwapsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetSwapsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetSwapsHistorical MimePlainText


-- *** uniswapV3GetTickDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/tickDayData\/historical@
-- 
-- TickDayData (historical)
-- 
-- Gets tickDayData.
-- 
uniswapV3GetTickDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTickDayDataHistorical MimeNoContent [UniswapV3TickDayDataDTO] accept
uniswapV3GetTickDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayData/historical"]

data UniswapV3GetTickDayDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTickDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTickDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTickDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTickDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: (pool address)-(tick index)-(timestamp).
instance HasOptionalParam UniswapV3GetTickDayDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pointer to pool.
instance HasOptionalParam UniswapV3GetTickDayDataHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTickDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTickDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTickDayDataHistorical MimePlainText


-- *** uniswapV3GetTicksHistorical

-- | @GET \/dapps\/uniswapv3\/ticks\/historical@
-- 
-- Ticks (historical)
-- 
-- Gets ticks.
-- 
uniswapV3GetTicksHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTicksHistorical MimeNoContent [UniswapV3TickDTO] accept
uniswapV3GetTicksHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/historical"]

data UniswapV3GetTicksHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTicksHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTicksHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTicksHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTicksHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: (pool address)#(tick index)
instance HasOptionalParam UniswapV3GetTicksHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool address.
instance HasOptionalParam UniswapV3GetTicksHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksHistorical MimePlainText


-- *** uniswapV3GetTokenHourDataHistorical

-- | @GET \/dapps\/uniswapv3\/tokenHourData\/historical@
-- 
-- TokenHourData (historical)
-- 
-- Gets tokenHourData.
-- 
uniswapV3GetTokenHourDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTokenHourDataHistorical MimeNoContent [UniswapV3TokenHourDataDTO] accept
uniswapV3GetTokenHourDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourData/historical"]

data UniswapV3GetTokenHourDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokenHourDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokenHourDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokenHourDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokenHourDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address concatendated with date.
instance HasOptionalParam UniswapV3GetTokenHourDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokenHourDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokenHourDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokenHourDataHistorical MimePlainText


-- *** uniswapV3GetTokenV3DayDataHistorical

-- | @GET \/dapps\/uniswapv3\/tokenV3DayData\/historical@
-- 
-- TokenV3DayData (historical)
-- 
-- Gets tokenV3DayData.
-- 
uniswapV3GetTokenV3DayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTokenV3DayDataHistorical MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3GetTokenV3DayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenV3DayData/historical"]

data UniswapV3GetTokenV3DayDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokenV3DayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokenV3DayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokenV3DayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokenV3DayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address concatendated with date.
instance HasOptionalParam UniswapV3GetTokenV3DayDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokenV3DayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokenV3DayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokenV3DayDataHistorical MimePlainText


-- *** uniswapV3GetTokensHistorical

-- | @GET \/dapps\/uniswapv3\/tokens\/historical@
-- 
-- Tokens (historical)
-- 
-- Gets tokens.
-- 
uniswapV3GetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTokensHistorical MimeNoContent [UniswapV3TokenDTO] accept
uniswapV3GetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/historical"]

data UniswapV3GetTokensHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address.
instance HasOptionalParam UniswapV3GetTokensHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "symbol" - Token symbol.
instance HasOptionalParam UniswapV3GetTokensHistorical Symbol where
  applyOptionalParam req (Symbol xs) =
    req `addQuery` toQuery ("symbol", Just xs)

-- | /Optional Param/ "name" - Token name.
instance HasOptionalParam UniswapV3GetTokensHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHistorical MimePlainText


-- *** uniswapV3GetTransactionsHistorical

-- | @GET \/dapps\/uniswapv3\/transactions\/historical@
-- 
-- Transactions (historical)
-- 
-- Gets transactions.
-- 
uniswapV3GetTransactionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetTransactionsHistorical MimeNoContent [UniswapV3TransactionDTO] accept
uniswapV3GetTransactionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/historical"]

data UniswapV3GetTransactionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash.
instance HasOptionalParam UniswapV3GetTransactionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTransactionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTransactionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTransactionsHistorical MimePlainText


-- *** uniswapV3GetUniswapDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/uniswapDayData\/historical@
-- 
-- UniswapDayData (historical)
-- 
-- Gets uniswapDayData.
-- 
uniswapV3GetUniswapDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3GetUniswapDayDataHistorical MimeNoContent [UniswapV3UniswapDayDataDTO] accept
uniswapV3GetUniswapDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayData/historical"]

data UniswapV3GetUniswapDayDataHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetUniswapDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetUniswapDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetUniswapDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetUniswapDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Timestamp rounded to current day by dividing by 86400.
instance HasOptionalParam UniswapV3GetUniswapDayDataHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetUniswapDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetUniswapDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetUniswapDayDataHistorical MimePlainText


-- *** uniswapV3MintsCurrent

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV3MintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3MintsCurrent MimeNoContent [UniswapV3MintDTO] accept
uniswapV3MintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data UniswapV3MintsCurrent  
-- | @application/json@
instance Produces UniswapV3MintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3MintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3MintsCurrent MimePlainText


-- *** uniswapV3PoolDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolDayData\/current@
-- 
-- PoolDayData (current)
-- 
-- Gets poolDayData.
-- 
uniswapV3PoolDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolDayDataCurrent MimeNoContent [UniswapV3PoolDayDataDTO] accept
uniswapV3PoolDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayData/current"]

data UniswapV3PoolDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3PoolDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolDayDataCurrent MimePlainText


-- *** uniswapV3PoolHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolHourData\/current@
-- 
-- PoolHourData (current)
-- 
-- Gets poolHourData.
-- 
uniswapV3PoolHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolHourDataCurrent MimeNoContent [UniswapV3PoolHourDataDTO] accept
uniswapV3PoolHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourData/current"]

data UniswapV3PoolHourDataCurrent  
-- | @application/json@
instance Produces UniswapV3PoolHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolHourDataCurrent MimePlainText


-- *** uniswapV3PoolsCurrent

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- Pools (current)
-- 
-- Gets pools.
-- 
uniswapV3PoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolsCurrent MimeNoContent [UniswapV3PoolDTO] accept
uniswapV3PoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data UniswapV3PoolsCurrent  

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam UniswapV3PoolsCurrent Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3PoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolsCurrent MimePlainText


-- *** uniswapV3PositionSnapshotsCurrent

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- PositionSnapshots (current)
-- 
-- Gets positionSnapshots.
-- 
uniswapV3PositionSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PositionSnapshotsCurrent MimeNoContent [UniswapV3PositionSnapshotDTO] accept
uniswapV3PositionSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data UniswapV3PositionSnapshotsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionSnapshotsCurrent MimePlainText


-- *** uniswapV3PositionsCurrent

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- Positions (current)
-- 
-- Gets positions.
-- 
uniswapV3PositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PositionsCurrent MimeNoContent [UniswapV3PositionDTO] accept
uniswapV3PositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data UniswapV3PositionsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionsCurrent MimePlainText


-- *** uniswapV3SwapsCurrent

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- Swaps (current)
-- 
-- Gets swaps.
-- 
uniswapV3SwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3SwapsCurrent MimeNoContent [UniswapV3SwapDTO] accept
uniswapV3SwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data UniswapV3SwapsCurrent  

-- | /Optional Param/ "pool" - Pool swap occured within.
instance HasOptionalParam UniswapV3SwapsCurrent Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3SwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3SwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3SwapsCurrent MimePlainText


-- *** uniswapV3TickDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tickDayData\/current@
-- 
-- TickDayData (current)
-- 
-- Gets tickDayData.
-- 
uniswapV3TickDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TickDayDataCurrent MimeNoContent [UniswapV3TickDayDataDTO] accept
uniswapV3TickDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayData/current"]

data UniswapV3TickDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3TickDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TickDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TickDayDataCurrent MimePlainText


-- *** uniswapV3TicksCurrent

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- Ticks (current)
-- 
-- Gets ticks.
-- 
uniswapV3TicksCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TicksCurrent MimeNoContent [UniswapV3TickDTO] accept
uniswapV3TicksCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data UniswapV3TicksCurrent  
-- | @application/json@
instance Produces UniswapV3TicksCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TicksCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TicksCurrent MimePlainText


-- *** uniswapV3TokenHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokenHourData\/current@
-- 
-- TokenHourData (current)
-- 
-- Gets tokenHourData.
-- 
uniswapV3TokenHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokenHourDataCurrent MimeNoContent [UniswapV3TokenHourDataDTO] accept
uniswapV3TokenHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourData/current"]

data UniswapV3TokenHourDataCurrent  
-- | @application/json@
instance Produces UniswapV3TokenHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenHourDataCurrent MimePlainText


-- *** uniswapV3TokenV3DayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokenV3DayData\/current@
-- 
-- TokenV3DayData (current)
-- 
-- Gets tokenV3DayData.
-- 
uniswapV3TokenV3DayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokenV3DayDataCurrent MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3TokenV3DayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenV3DayData/current"]

data UniswapV3TokenV3DayDataCurrent  
-- | @application/json@
instance Produces UniswapV3TokenV3DayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenV3DayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenV3DayDataCurrent MimePlainText


-- *** uniswapV3TokensCurrent

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
uniswapV3TokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokensCurrent MimeNoContent [UniswapV3TokenDTO] accept
uniswapV3TokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data UniswapV3TokensCurrent  
-- | @application/json@
instance Produces UniswapV3TokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokensCurrent MimePlainText


-- *** uniswapV3TransactionsCurrent

-- | @GET \/dapps\/uniswapv3\/transactions\/current@
-- 
-- Transactions (current)
-- 
-- Gets transactions.
-- 
uniswapV3TransactionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TransactionsCurrent MimeNoContent [UniswapV3TransactionDTO] accept
uniswapV3TransactionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/current"]

data UniswapV3TransactionsCurrent  
-- | @application/json@
instance Produces UniswapV3TransactionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TransactionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TransactionsCurrent MimePlainText


-- *** uniswapV3UniswapDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/uniswapDayData\/current@
-- 
-- UniswapDayData (current)
-- 
-- Gets uniswapDayData.
-- 
uniswapV3UniswapDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3UniswapDayDataCurrent MimeNoContent [UniswapV3UniswapDayDataDTO] accept
uniswapV3UniswapDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayData/current"]

data UniswapV3UniswapDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3UniswapDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3UniswapDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3UniswapDayDataCurrent MimePlainText

