{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import OnChainDapps-REST.Model
import OnChainDapps-REST.Core


-- * CRYPTOPUNKSBidDTO

-- | 'cRYPTOPUNKSBidDTOEntryTime' Lens
cRYPTOPUNKSBidDTOEntryTimeL :: Lens_' CRYPTOPUNKSBidDTO (Maybe DateTime)
cRYPTOPUNKSBidDTOEntryTimeL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOEntryTime -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOEntryTime, ..} ) <$> f cRYPTOPUNKSBidDTOEntryTime
{-# INLINE cRYPTOPUNKSBidDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSBidDTORecvTime' Lens
cRYPTOPUNKSBidDTORecvTimeL :: Lens_' CRYPTOPUNKSBidDTO (Maybe DateTime)
cRYPTOPUNKSBidDTORecvTimeL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTORecvTime -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTORecvTime, ..} ) <$> f cRYPTOPUNKSBidDTORecvTime
{-# INLINE cRYPTOPUNKSBidDTORecvTimeL #-}

-- | 'cRYPTOPUNKSBidDTOBlockNumber' Lens
cRYPTOPUNKSBidDTOBlockNumberL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOBlockNumberL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOBlockNumber -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSBidDTOBlockNumber
{-# INLINE cRYPTOPUNKSBidDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSBidDTOVid' Lens
cRYPTOPUNKSBidDTOVidL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Integer)
cRYPTOPUNKSBidDTOVidL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOVid -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOVid, ..} ) <$> f cRYPTOPUNKSBidDTOVid
{-# INLINE cRYPTOPUNKSBidDTOVidL #-}

-- | 'cRYPTOPUNKSBidDTOBlockRange' Lens
cRYPTOPUNKSBidDTOBlockRangeL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOBlockRangeL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOBlockRange -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOBlockRange, ..} ) <$> f cRYPTOPUNKSBidDTOBlockRange
{-# INLINE cRYPTOPUNKSBidDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSBidDTOId' Lens
cRYPTOPUNKSBidDTOIdL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOIdL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOId -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOId, ..} ) <$> f cRYPTOPUNKSBidDTOId
{-# INLINE cRYPTOPUNKSBidDTOIdL #-}

-- | 'cRYPTOPUNKSBidDTOTokensBid' Lens
cRYPTOPUNKSBidDTOTokensBidL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOTokensBidL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOTokensBid -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOTokensBid, ..} ) <$> f cRYPTOPUNKSBidDTOTokensBid
{-# INLINE cRYPTOPUNKSBidDTOTokensBidL #-}

-- | 'cRYPTOPUNKSBidDTOTokenId' Lens
cRYPTOPUNKSBidDTOTokenIdL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOTokenIdL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOTokenId -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOTokenId, ..} ) <$> f cRYPTOPUNKSBidDTOTokenId
{-# INLINE cRYPTOPUNKSBidDTOTokenIdL #-}

-- | 'cRYPTOPUNKSBidDTOTimestamp' Lens
cRYPTOPUNKSBidDTOTimestampL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOTimestampL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOTimestamp -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOTimestamp, ..} ) <$> f cRYPTOPUNKSBidDTOTimestamp
{-# INLINE cRYPTOPUNKSBidDTOTimestampL #-}

-- | 'cRYPTOPUNKSBidDTOBidder' Lens
cRYPTOPUNKSBidDTOBidderL :: Lens_' CRYPTOPUNKSBidDTO (Maybe Text)
cRYPTOPUNKSBidDTOBidderL f CRYPTOPUNKSBidDTO{..} = (\cRYPTOPUNKSBidDTOBidder -> CRYPTOPUNKSBidDTO { cRYPTOPUNKSBidDTOBidder, ..} ) <$> f cRYPTOPUNKSBidDTOBidder
{-# INLINE cRYPTOPUNKSBidDTOBidderL #-}



-- * CRYPTOPUNKSCollectionDTO

-- | 'cRYPTOPUNKSCollectionDTOEntryTime' Lens
cRYPTOPUNKSCollectionDTOEntryTimeL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe DateTime)
cRYPTOPUNKSCollectionDTOEntryTimeL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOEntryTime -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOEntryTime, ..} ) <$> f cRYPTOPUNKSCollectionDTOEntryTime
{-# INLINE cRYPTOPUNKSCollectionDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSCollectionDTORecvTime' Lens
cRYPTOPUNKSCollectionDTORecvTimeL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe DateTime)
cRYPTOPUNKSCollectionDTORecvTimeL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTORecvTime -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTORecvTime, ..} ) <$> f cRYPTOPUNKSCollectionDTORecvTime
{-# INLINE cRYPTOPUNKSCollectionDTORecvTimeL #-}

-- | 'cRYPTOPUNKSCollectionDTOBlockNumber' Lens
cRYPTOPUNKSCollectionDTOBlockNumberL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Integer)
cRYPTOPUNKSCollectionDTOBlockNumberL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOBlockNumber -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSCollectionDTOBlockNumber
{-# INLINE cRYPTOPUNKSCollectionDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSCollectionDTOVid' Lens
cRYPTOPUNKSCollectionDTOVidL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Integer)
cRYPTOPUNKSCollectionDTOVidL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOVid -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOVid, ..} ) <$> f cRYPTOPUNKSCollectionDTOVid
{-# INLINE cRYPTOPUNKSCollectionDTOVidL #-}

-- | 'cRYPTOPUNKSCollectionDTOBlockRange' Lens
cRYPTOPUNKSCollectionDTOBlockRangeL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOBlockRangeL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOBlockRange -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOBlockRange, ..} ) <$> f cRYPTOPUNKSCollectionDTOBlockRange
{-# INLINE cRYPTOPUNKSCollectionDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSCollectionDTOId' Lens
cRYPTOPUNKSCollectionDTOIdL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOIdL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOId -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOId, ..} ) <$> f cRYPTOPUNKSCollectionDTOId
{-# INLINE cRYPTOPUNKSCollectionDTOIdL #-}

-- | 'cRYPTOPUNKSCollectionDTOName' Lens
cRYPTOPUNKSCollectionDTONameL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTONameL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOName -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOName, ..} ) <$> f cRYPTOPUNKSCollectionDTOName
{-# INLINE cRYPTOPUNKSCollectionDTONameL #-}

-- | 'cRYPTOPUNKSCollectionDTOSymbol' Lens
cRYPTOPUNKSCollectionDTOSymbolL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOSymbolL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOSymbol -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOSymbol, ..} ) <$> f cRYPTOPUNKSCollectionDTOSymbol
{-# INLINE cRYPTOPUNKSCollectionDTOSymbolL #-}

-- | 'cRYPTOPUNKSCollectionDTOTotalSupply' Lens
cRYPTOPUNKSCollectionDTOTotalSupplyL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOTotalSupplyL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOTotalSupply -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOTotalSupply, ..} ) <$> f cRYPTOPUNKSCollectionDTOTotalSupply
{-# INLINE cRYPTOPUNKSCollectionDTOTotalSupplyL #-}

-- | 'cRYPTOPUNKSCollectionDTORoyaltyFee' Lens
cRYPTOPUNKSCollectionDTORoyaltyFeeL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTORoyaltyFeeL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTORoyaltyFee -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTORoyaltyFee, ..} ) <$> f cRYPTOPUNKSCollectionDTORoyaltyFee
{-# INLINE cRYPTOPUNKSCollectionDTORoyaltyFeeL #-}

-- | 'cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEth' Lens
cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEthL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEthL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEth -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEth, ..} ) <$> f cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEth
{-# INLINE cRYPTOPUNKSCollectionDTOCumulativeTradeVolumeEthL #-}

-- | 'cRYPTOPUNKSCollectionDTOMarketplaceRevenueEth' Lens
cRYPTOPUNKSCollectionDTOMarketplaceRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOMarketplaceRevenueEthL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOMarketplaceRevenueEth -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOMarketplaceRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDTOMarketplaceRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDTOMarketplaceRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDTOCreatorRevenueEth' Lens
cRYPTOPUNKSCollectionDTOCreatorRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOCreatorRevenueEthL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOCreatorRevenueEth -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOCreatorRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDTOCreatorRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDTOCreatorRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDTOTotalRevenueEth' Lens
cRYPTOPUNKSCollectionDTOTotalRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Text)
cRYPTOPUNKSCollectionDTOTotalRevenueEthL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOTotalRevenueEth -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOTotalRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDTOTotalRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDTOTotalRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDTOTradeCount' Lens
cRYPTOPUNKSCollectionDTOTradeCountL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Int)
cRYPTOPUNKSCollectionDTOTradeCountL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOTradeCount -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOTradeCount, ..} ) <$> f cRYPTOPUNKSCollectionDTOTradeCount
{-# INLINE cRYPTOPUNKSCollectionDTOTradeCountL #-}

-- | 'cRYPTOPUNKSCollectionDTOBuyerCount' Lens
cRYPTOPUNKSCollectionDTOBuyerCountL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Int)
cRYPTOPUNKSCollectionDTOBuyerCountL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOBuyerCount -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOBuyerCount, ..} ) <$> f cRYPTOPUNKSCollectionDTOBuyerCount
{-# INLINE cRYPTOPUNKSCollectionDTOBuyerCountL #-}

-- | 'cRYPTOPUNKSCollectionDTOSellerCount' Lens
cRYPTOPUNKSCollectionDTOSellerCountL :: Lens_' CRYPTOPUNKSCollectionDTO (Maybe Int)
cRYPTOPUNKSCollectionDTOSellerCountL f CRYPTOPUNKSCollectionDTO{..} = (\cRYPTOPUNKSCollectionDTOSellerCount -> CRYPTOPUNKSCollectionDTO { cRYPTOPUNKSCollectionDTOSellerCount, ..} ) <$> f cRYPTOPUNKSCollectionDTOSellerCount
{-# INLINE cRYPTOPUNKSCollectionDTOSellerCountL #-}



-- * CRYPTOPUNKSCollectionDailySnapshotDTO

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOEntryTime' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOEntryTimeL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe DateTime)
cRYPTOPUNKSCollectionDailySnapshotDTOEntryTimeL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOEntryTime -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOEntryTime, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOEntryTime
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTORecvTime' Lens
cRYPTOPUNKSCollectionDailySnapshotDTORecvTimeL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe DateTime)
cRYPTOPUNKSCollectionDailySnapshotDTORecvTimeL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTORecvTime -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTORecvTime, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTORecvTime
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTORecvTimeL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumber' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumberL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumberL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumber -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumber
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOVid' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOVidL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Integer)
cRYPTOPUNKSCollectionDailySnapshotDTOVidL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOVid -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOVid, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOVid
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOVidL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOBlockRange' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOBlockRangeL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOBlockRangeL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOBlockRange -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOBlockRange, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOBlockRange
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOId' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOIdL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOIdL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOId -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOId, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOId
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOIdL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOCollection' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOCollectionL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOCollectionL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOCollection -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOCollection, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOCollection
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOCollectionL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOTimestamp' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOTimestampL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOTimestampL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOTimestamp -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOTimestamp, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOTimestamp
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOTimestampL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFee' Lens
cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFeeL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFeeL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFee -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFee, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFee
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTORoyaltyFeeL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePrice' Lens
cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePriceL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePriceL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePrice -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePrice, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePrice
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTODailyMinSalePriceL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePrice' Lens
cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePriceL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePriceL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePrice -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePrice, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePrice
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTODailyMaxSalePriceL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEth' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEthL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEthL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEth -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEth, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEth
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOCumulativeTradeVolumeEthL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEth' Lens
cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEthL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEthL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEth -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEth, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEth
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTODailyTradeVolumeEthL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEth' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEthL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEth -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOMarketplaceRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEth' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEthL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEth -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOCreatorRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEth' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEthL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEthL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEth -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEth, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEth
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOTotalRevenueEthL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTOTradeCount' Lens
cRYPTOPUNKSCollectionDailySnapshotDTOTradeCountL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSCollectionDailySnapshotDTOTradeCountL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTOTradeCount -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTOTradeCount, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTOTradeCount
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTOTradeCountL #-}

-- | 'cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCount' Lens
cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCountL :: Lens_' CRYPTOPUNKSCollectionDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCountL f CRYPTOPUNKSCollectionDailySnapshotDTO{..} = (\cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCount -> CRYPTOPUNKSCollectionDailySnapshotDTO { cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCount, ..} ) <$> f cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCount
{-# INLINE cRYPTOPUNKSCollectionDailySnapshotDTODailyTradedItemCountL #-}



-- * CRYPTOPUNKSDataSourcesDTO

-- | 'cRYPTOPUNKSDataSourcesDTOEntryTime' Lens
cRYPTOPUNKSDataSourcesDTOEntryTimeL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe DateTime)
cRYPTOPUNKSDataSourcesDTOEntryTimeL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOEntryTime -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOEntryTime, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOEntryTime
{-# INLINE cRYPTOPUNKSDataSourcesDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSDataSourcesDTORecvTime' Lens
cRYPTOPUNKSDataSourcesDTORecvTimeL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe DateTime)
cRYPTOPUNKSDataSourcesDTORecvTimeL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTORecvTime -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTORecvTime, ..} ) <$> f cRYPTOPUNKSDataSourcesDTORecvTime
{-# INLINE cRYPTOPUNKSDataSourcesDTORecvTimeL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOBlockNumber' Lens
cRYPTOPUNKSDataSourcesDTOBlockNumberL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Integer)
cRYPTOPUNKSDataSourcesDTOBlockNumberL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOBlockNumber -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOBlockNumber
{-# INLINE cRYPTOPUNKSDataSourcesDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOVid' Lens
cRYPTOPUNKSDataSourcesDTOVidL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Int)
cRYPTOPUNKSDataSourcesDTOVidL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOVid -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOVid, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOVid
{-# INLINE cRYPTOPUNKSDataSourcesDTOVidL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOBlockRange' Lens
cRYPTOPUNKSDataSourcesDTOBlockRangeL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Text)
cRYPTOPUNKSDataSourcesDTOBlockRangeL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOBlockRange -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOBlockRange, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOBlockRange
{-# INLINE cRYPTOPUNKSDataSourcesDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOCausalityRegion' Lens
cRYPTOPUNKSDataSourcesDTOCausalityRegionL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Int)
cRYPTOPUNKSDataSourcesDTOCausalityRegionL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOCausalityRegion -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOCausalityRegion, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOCausalityRegion
{-# INLINE cRYPTOPUNKSDataSourcesDTOCausalityRegionL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOManifestIdx' Lens
cRYPTOPUNKSDataSourcesDTOManifestIdxL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Int)
cRYPTOPUNKSDataSourcesDTOManifestIdxL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOManifestIdx -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOManifestIdx, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOManifestIdx
{-# INLINE cRYPTOPUNKSDataSourcesDTOManifestIdxL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOParent' Lens
cRYPTOPUNKSDataSourcesDTOParentL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Int)
cRYPTOPUNKSDataSourcesDTOParentL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOParent -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOParent, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOParent
{-# INLINE cRYPTOPUNKSDataSourcesDTOParentL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOId' Lens
cRYPTOPUNKSDataSourcesDTOIdL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Text)
cRYPTOPUNKSDataSourcesDTOIdL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOId -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOId, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOId
{-# INLINE cRYPTOPUNKSDataSourcesDTOIdL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOParam' Lens
cRYPTOPUNKSDataSourcesDTOParamL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Text)
cRYPTOPUNKSDataSourcesDTOParamL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOParam -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOParam, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOParam
{-# INLINE cRYPTOPUNKSDataSourcesDTOParamL #-}

-- | 'cRYPTOPUNKSDataSourcesDTOContext' Lens
cRYPTOPUNKSDataSourcesDTOContextL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Text)
cRYPTOPUNKSDataSourcesDTOContextL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTOContext -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTOContext, ..} ) <$> f cRYPTOPUNKSDataSourcesDTOContext
{-# INLINE cRYPTOPUNKSDataSourcesDTOContextL #-}

-- | 'cRYPTOPUNKSDataSourcesDTODoneAt' Lens
cRYPTOPUNKSDataSourcesDTODoneAtL :: Lens_' CRYPTOPUNKSDataSourcesDTO (Maybe Int)
cRYPTOPUNKSDataSourcesDTODoneAtL f CRYPTOPUNKSDataSourcesDTO{..} = (\cRYPTOPUNKSDataSourcesDTODoneAt -> CRYPTOPUNKSDataSourcesDTO { cRYPTOPUNKSDataSourcesDTODoneAt, ..} ) <$> f cRYPTOPUNKSDataSourcesDTODoneAt
{-# INLINE cRYPTOPUNKSDataSourcesDTODoneAtL #-}



-- * CRYPTOPUNKSItemDTO

-- | 'cRYPTOPUNKSItemDTOEntryTime' Lens
cRYPTOPUNKSItemDTOEntryTimeL :: Lens_' CRYPTOPUNKSItemDTO (Maybe DateTime)
cRYPTOPUNKSItemDTOEntryTimeL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTOEntryTime -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTOEntryTime, ..} ) <$> f cRYPTOPUNKSItemDTOEntryTime
{-# INLINE cRYPTOPUNKSItemDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSItemDTORecvTime' Lens
cRYPTOPUNKSItemDTORecvTimeL :: Lens_' CRYPTOPUNKSItemDTO (Maybe DateTime)
cRYPTOPUNKSItemDTORecvTimeL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTORecvTime -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTORecvTime, ..} ) <$> f cRYPTOPUNKSItemDTORecvTime
{-# INLINE cRYPTOPUNKSItemDTORecvTimeL #-}

-- | 'cRYPTOPUNKSItemDTOBlockNumber' Lens
cRYPTOPUNKSItemDTOBlockNumberL :: Lens_' CRYPTOPUNKSItemDTO (Maybe Integer)
cRYPTOPUNKSItemDTOBlockNumberL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTOBlockNumber -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSItemDTOBlockNumber
{-# INLINE cRYPTOPUNKSItemDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSItemDTOVid' Lens
cRYPTOPUNKSItemDTOVidL :: Lens_' CRYPTOPUNKSItemDTO (Maybe Integer)
cRYPTOPUNKSItemDTOVidL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTOVid -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTOVid, ..} ) <$> f cRYPTOPUNKSItemDTOVid
{-# INLINE cRYPTOPUNKSItemDTOVidL #-}

-- | 'cRYPTOPUNKSItemDTOBlockRange' Lens
cRYPTOPUNKSItemDTOBlockRangeL :: Lens_' CRYPTOPUNKSItemDTO (Maybe Text)
cRYPTOPUNKSItemDTOBlockRangeL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTOBlockRange -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTOBlockRange, ..} ) <$> f cRYPTOPUNKSItemDTOBlockRange
{-# INLINE cRYPTOPUNKSItemDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSItemDTOId' Lens
cRYPTOPUNKSItemDTOIdL :: Lens_' CRYPTOPUNKSItemDTO (Maybe Text)
cRYPTOPUNKSItemDTOIdL f CRYPTOPUNKSItemDTO{..} = (\cRYPTOPUNKSItemDTOId -> CRYPTOPUNKSItemDTO { cRYPTOPUNKSItemDTOId, ..} ) <$> f cRYPTOPUNKSItemDTOId
{-# INLINE cRYPTOPUNKSItemDTOIdL #-}



-- * CRYPTOPUNKSMarketPlaceDTO

-- | 'cRYPTOPUNKSMarketPlaceDTOEntryTime' Lens
cRYPTOPUNKSMarketPlaceDTOEntryTimeL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe DateTime)
cRYPTOPUNKSMarketPlaceDTOEntryTimeL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOEntryTime -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOEntryTime, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOEntryTime
{-# INLINE cRYPTOPUNKSMarketPlaceDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTORecvTime' Lens
cRYPTOPUNKSMarketPlaceDTORecvTimeL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe DateTime)
cRYPTOPUNKSMarketPlaceDTORecvTimeL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTORecvTime -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTORecvTime, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTORecvTime
{-# INLINE cRYPTOPUNKSMarketPlaceDTORecvTimeL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOBlockNumber' Lens
cRYPTOPUNKSMarketPlaceDTOBlockNumberL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Integer)
cRYPTOPUNKSMarketPlaceDTOBlockNumberL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOBlockNumber -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOBlockNumber
{-# INLINE cRYPTOPUNKSMarketPlaceDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOVid' Lens
cRYPTOPUNKSMarketPlaceDTOVidL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Integer)
cRYPTOPUNKSMarketPlaceDTOVidL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOVid -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOVid, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOVid
{-# INLINE cRYPTOPUNKSMarketPlaceDTOVidL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOBlockRange' Lens
cRYPTOPUNKSMarketPlaceDTOBlockRangeL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOBlockRangeL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOBlockRange -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOBlockRange, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOBlockRange
{-# INLINE cRYPTOPUNKSMarketPlaceDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOId' Lens
cRYPTOPUNKSMarketPlaceDTOIdL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOIdL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOId -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOId, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOId
{-# INLINE cRYPTOPUNKSMarketPlaceDTOIdL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOName' Lens
cRYPTOPUNKSMarketPlaceDTONameL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTONameL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOName -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOName, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOName
{-# INLINE cRYPTOPUNKSMarketPlaceDTONameL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOSlug' Lens
cRYPTOPUNKSMarketPlaceDTOSlugL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOSlugL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOSlug -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOSlug, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOSlug
{-# INLINE cRYPTOPUNKSMarketPlaceDTOSlugL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOSchemaVersion' Lens
cRYPTOPUNKSMarketPlaceDTOSchemaVersionL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOSchemaVersionL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOSchemaVersion -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOSchemaVersion, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOSchemaVersion
{-# INLINE cRYPTOPUNKSMarketPlaceDTOSchemaVersionL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOSubgraphVersion' Lens
cRYPTOPUNKSMarketPlaceDTOSubgraphVersionL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOSubgraphVersionL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOSubgraphVersion -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOSubgraphVersion, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOSubgraphVersion
{-# INLINE cRYPTOPUNKSMarketPlaceDTOSubgraphVersionL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOMethodologyVersion' Lens
cRYPTOPUNKSMarketPlaceDTOMethodologyVersionL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOMethodologyVersionL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOMethodologyVersion -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOMethodologyVersion, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOMethodologyVersion
{-# INLINE cRYPTOPUNKSMarketPlaceDTOMethodologyVersionL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOCollectionCount' Lens
cRYPTOPUNKSMarketPlaceDTOCollectionCountL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Int)
cRYPTOPUNKSMarketPlaceDTOCollectionCountL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOCollectionCount -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOCollectionCount, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOCollectionCount
{-# INLINE cRYPTOPUNKSMarketPlaceDTOCollectionCountL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOTradeCount' Lens
cRYPTOPUNKSMarketPlaceDTOTradeCountL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Int)
cRYPTOPUNKSMarketPlaceDTOTradeCountL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOTradeCount -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOTradeCount, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOTradeCount
{-# INLINE cRYPTOPUNKSMarketPlaceDTOTradeCountL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEth' Lens
cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEthL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEthL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEth -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEth, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEth
{-# INLINE cRYPTOPUNKSMarketPlaceDTOCumulativeTradeVolumeEthL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEth' Lens
cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEthL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEthL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEth -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEth
{-# INLINE cRYPTOPUNKSMarketPlaceDTOMarketplaceRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEth' Lens
cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEthL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEthL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEth -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEth
{-# INLINE cRYPTOPUNKSMarketPlaceDTOCreatorRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOTotalRevenueEth' Lens
cRYPTOPUNKSMarketPlaceDTOTotalRevenueEthL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Text)
cRYPTOPUNKSMarketPlaceDTOTotalRevenueEthL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOTotalRevenueEth -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOTotalRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOTotalRevenueEth
{-# INLINE cRYPTOPUNKSMarketPlaceDTOTotalRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTraders' Lens
cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTradersL :: Lens_' CRYPTOPUNKSMarketPlaceDTO (Maybe Int)
cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTradersL f CRYPTOPUNKSMarketPlaceDTO{..} = (\cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTraders -> CRYPTOPUNKSMarketPlaceDTO { cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTraders, ..} ) <$> f cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTraders
{-# INLINE cRYPTOPUNKSMarketPlaceDTOCumulativeUniqueTradersL #-}



-- * CRYPTOPUNKSMarketplaceDailySnapshotDTO

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTime' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTimeL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe DateTime)
cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTimeL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTime -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTime, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTime
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTime' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTimeL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe DateTime)
cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTimeL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTime -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTime, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTime
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTORecvTimeL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumber' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumberL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumberL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumber -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumber
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOVid' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOVidL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Integer)
cRYPTOPUNKSMarketplaceDailySnapshotDTOVidL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOVid -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOVid, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOVid
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOVidL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRange' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRangeL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRangeL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRange -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRange, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRange
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOId' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOIdL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOIdL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOId -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOId, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOId
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOIdL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplace' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplace -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplace, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplace
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestamp' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestampL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestampL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestamp -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestamp, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestamp
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOTimestampL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCount' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCountL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCountL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCount -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCount, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCount
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOCollectionCountL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEth' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEthL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEthL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEth -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEth, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEth
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeTradeVolumeEthL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEth' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEthL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEthL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEth -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEth
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOMarketplaceRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEth' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEthL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEthL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEth -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEth
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOCreatorRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEth' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEthL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Text)
cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEthL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEth -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEth, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEth
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOTotalRevenueEthL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCount' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCountL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCountL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCount -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCount, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCount
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOTradeCountL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTraders' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTradersL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTradersL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTraders -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTraders, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTraders
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTOCumulativeUniqueTradersL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTraders' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTradersL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTradersL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTraders -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTraders, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTraders
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTODailyActiveTradersL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCount' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCountL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCountL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCount -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCount, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCount
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedCollectionCountL #-}

-- | 'cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCount' Lens
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCountL :: Lens_' CRYPTOPUNKSMarketplaceDailySnapshotDTO (Maybe Int)
cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCountL f CRYPTOPUNKSMarketplaceDailySnapshotDTO{..} = (\cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCount -> CRYPTOPUNKSMarketplaceDailySnapshotDTO { cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCount, ..} ) <$> f cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCount
{-# INLINE cRYPTOPUNKSMarketplaceDailySnapshotDTODailyTradedItemCountL #-}



-- * CRYPTOPUNKSTradeDTO

-- | 'cRYPTOPUNKSTradeDTOEntryTime' Lens
cRYPTOPUNKSTradeDTOEntryTimeL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe DateTime)
cRYPTOPUNKSTradeDTOEntryTimeL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOEntryTime -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOEntryTime, ..} ) <$> f cRYPTOPUNKSTradeDTOEntryTime
{-# INLINE cRYPTOPUNKSTradeDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSTradeDTORecvTime' Lens
cRYPTOPUNKSTradeDTORecvTimeL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe DateTime)
cRYPTOPUNKSTradeDTORecvTimeL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTORecvTime -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTORecvTime, ..} ) <$> f cRYPTOPUNKSTradeDTORecvTime
{-# INLINE cRYPTOPUNKSTradeDTORecvTimeL #-}

-- | 'cRYPTOPUNKSTradeDTOBlockNumber' Lens
cRYPTOPUNKSTradeDTOBlockNumberL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOBlockNumberL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOBlockNumber -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSTradeDTOBlockNumber
{-# INLINE cRYPTOPUNKSTradeDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSTradeDTOVid' Lens
cRYPTOPUNKSTradeDTOVidL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Integer)
cRYPTOPUNKSTradeDTOVidL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOVid -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOVid, ..} ) <$> f cRYPTOPUNKSTradeDTOVid
{-# INLINE cRYPTOPUNKSTradeDTOVidL #-}

-- | 'cRYPTOPUNKSTradeDTOBlockRange' Lens
cRYPTOPUNKSTradeDTOBlockRangeL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOBlockRangeL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOBlockRange -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOBlockRange, ..} ) <$> f cRYPTOPUNKSTradeDTOBlockRange
{-# INLINE cRYPTOPUNKSTradeDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSTradeDTOId' Lens
cRYPTOPUNKSTradeDTOIdL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOIdL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOId -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOId, ..} ) <$> f cRYPTOPUNKSTradeDTOId
{-# INLINE cRYPTOPUNKSTradeDTOIdL #-}

-- | 'cRYPTOPUNKSTradeDTOTransactionHash' Lens
cRYPTOPUNKSTradeDTOTransactionHashL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOTransactionHashL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOTransactionHash -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOTransactionHash, ..} ) <$> f cRYPTOPUNKSTradeDTOTransactionHash
{-# INLINE cRYPTOPUNKSTradeDTOTransactionHashL #-}

-- | 'cRYPTOPUNKSTradeDTOLogIndex' Lens
cRYPTOPUNKSTradeDTOLogIndexL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Int)
cRYPTOPUNKSTradeDTOLogIndexL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOLogIndex -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOLogIndex, ..} ) <$> f cRYPTOPUNKSTradeDTOLogIndex
{-# INLINE cRYPTOPUNKSTradeDTOLogIndexL #-}

-- | 'cRYPTOPUNKSTradeDTOTimestamp' Lens
cRYPTOPUNKSTradeDTOTimestampL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOTimestampL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOTimestamp -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOTimestamp, ..} ) <$> f cRYPTOPUNKSTradeDTOTimestamp
{-# INLINE cRYPTOPUNKSTradeDTOTimestampL #-}

-- | 'cRYPTOPUNKSTradeDTOIsBundle' Lens
cRYPTOPUNKSTradeDTOIsBundleL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Bool)
cRYPTOPUNKSTradeDTOIsBundleL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOIsBundle -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOIsBundle, ..} ) <$> f cRYPTOPUNKSTradeDTOIsBundle
{-# INLINE cRYPTOPUNKSTradeDTOIsBundleL #-}

-- | 'cRYPTOPUNKSTradeDTOCollection' Lens
cRYPTOPUNKSTradeDTOCollectionL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOCollectionL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOCollection -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOCollection, ..} ) <$> f cRYPTOPUNKSTradeDTOCollection
{-# INLINE cRYPTOPUNKSTradeDTOCollectionL #-}

-- | 'cRYPTOPUNKSTradeDTOTokenId' Lens
cRYPTOPUNKSTradeDTOTokenIdL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOTokenIdL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOTokenId -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOTokenId, ..} ) <$> f cRYPTOPUNKSTradeDTOTokenId
{-# INLINE cRYPTOPUNKSTradeDTOTokenIdL #-}

-- | 'cRYPTOPUNKSTradeDTOAmount' Lens
cRYPTOPUNKSTradeDTOAmountL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOAmountL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOAmount -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOAmount, ..} ) <$> f cRYPTOPUNKSTradeDTOAmount
{-# INLINE cRYPTOPUNKSTradeDTOAmountL #-}

-- | 'cRYPTOPUNKSTradeDTOPriceEth' Lens
cRYPTOPUNKSTradeDTOPriceEthL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOPriceEthL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOPriceEth -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOPriceEth, ..} ) <$> f cRYPTOPUNKSTradeDTOPriceEth
{-# INLINE cRYPTOPUNKSTradeDTOPriceEthL #-}

-- | 'cRYPTOPUNKSTradeDTOBuyer' Lens
cRYPTOPUNKSTradeDTOBuyerL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOBuyerL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOBuyer -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOBuyer, ..} ) <$> f cRYPTOPUNKSTradeDTOBuyer
{-# INLINE cRYPTOPUNKSTradeDTOBuyerL #-}

-- | 'cRYPTOPUNKSTradeDTOSeller' Lens
cRYPTOPUNKSTradeDTOSellerL :: Lens_' CRYPTOPUNKSTradeDTO (Maybe Text)
cRYPTOPUNKSTradeDTOSellerL f CRYPTOPUNKSTradeDTO{..} = (\cRYPTOPUNKSTradeDTOSeller -> CRYPTOPUNKSTradeDTO { cRYPTOPUNKSTradeDTOSeller, ..} ) <$> f cRYPTOPUNKSTradeDTOSeller
{-# INLINE cRYPTOPUNKSTradeDTOSellerL #-}



-- * CRYPTOPUNKSUserDTO

-- | 'cRYPTOPUNKSUserDTOEntryTime' Lens
cRYPTOPUNKSUserDTOEntryTimeL :: Lens_' CRYPTOPUNKSUserDTO (Maybe DateTime)
cRYPTOPUNKSUserDTOEntryTimeL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTOEntryTime -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTOEntryTime, ..} ) <$> f cRYPTOPUNKSUserDTOEntryTime
{-# INLINE cRYPTOPUNKSUserDTOEntryTimeL #-}

-- | 'cRYPTOPUNKSUserDTORecvTime' Lens
cRYPTOPUNKSUserDTORecvTimeL :: Lens_' CRYPTOPUNKSUserDTO (Maybe DateTime)
cRYPTOPUNKSUserDTORecvTimeL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTORecvTime -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTORecvTime, ..} ) <$> f cRYPTOPUNKSUserDTORecvTime
{-# INLINE cRYPTOPUNKSUserDTORecvTimeL #-}

-- | 'cRYPTOPUNKSUserDTOBlockNumber' Lens
cRYPTOPUNKSUserDTOBlockNumberL :: Lens_' CRYPTOPUNKSUserDTO (Maybe Integer)
cRYPTOPUNKSUserDTOBlockNumberL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTOBlockNumber -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTOBlockNumber, ..} ) <$> f cRYPTOPUNKSUserDTOBlockNumber
{-# INLINE cRYPTOPUNKSUserDTOBlockNumberL #-}

-- | 'cRYPTOPUNKSUserDTOVid' Lens
cRYPTOPUNKSUserDTOVidL :: Lens_' CRYPTOPUNKSUserDTO (Maybe Integer)
cRYPTOPUNKSUserDTOVidL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTOVid -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTOVid, ..} ) <$> f cRYPTOPUNKSUserDTOVid
{-# INLINE cRYPTOPUNKSUserDTOVidL #-}

-- | 'cRYPTOPUNKSUserDTOBlockRange' Lens
cRYPTOPUNKSUserDTOBlockRangeL :: Lens_' CRYPTOPUNKSUserDTO (Maybe Text)
cRYPTOPUNKSUserDTOBlockRangeL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTOBlockRange -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTOBlockRange, ..} ) <$> f cRYPTOPUNKSUserDTOBlockRange
{-# INLINE cRYPTOPUNKSUserDTOBlockRangeL #-}

-- | 'cRYPTOPUNKSUserDTOId' Lens
cRYPTOPUNKSUserDTOIdL :: Lens_' CRYPTOPUNKSUserDTO (Maybe Text)
cRYPTOPUNKSUserDTOIdL f CRYPTOPUNKSUserDTO{..} = (\cRYPTOPUNKSUserDTOId -> CRYPTOPUNKSUserDTO { cRYPTOPUNKSUserDTOId, ..} ) <$> f cRYPTOPUNKSUserDTOId
{-# INLINE cRYPTOPUNKSUserDTOIdL #-}



-- * CowOrderDTO

-- | 'cowOrderDTOEntryTime' Lens
cowOrderDTOEntryTimeL :: Lens_' CowOrderDTO (Maybe DateTime)
cowOrderDTOEntryTimeL f CowOrderDTO{..} = (\cowOrderDTOEntryTime -> CowOrderDTO { cowOrderDTOEntryTime, ..} ) <$> f cowOrderDTOEntryTime
{-# INLINE cowOrderDTOEntryTimeL #-}

-- | 'cowOrderDTORecvTime' Lens
cowOrderDTORecvTimeL :: Lens_' CowOrderDTO (Maybe DateTime)
cowOrderDTORecvTimeL f CowOrderDTO{..} = (\cowOrderDTORecvTime -> CowOrderDTO { cowOrderDTORecvTime, ..} ) <$> f cowOrderDTORecvTime
{-# INLINE cowOrderDTORecvTimeL #-}

-- | 'cowOrderDTOBlockNumber' Lens
cowOrderDTOBlockNumberL :: Lens_' CowOrderDTO (Maybe Integer)
cowOrderDTOBlockNumberL f CowOrderDTO{..} = (\cowOrderDTOBlockNumber -> CowOrderDTO { cowOrderDTOBlockNumber, ..} ) <$> f cowOrderDTOBlockNumber
{-# INLINE cowOrderDTOBlockNumberL #-}

-- | 'cowOrderDTOId' Lens
cowOrderDTOIdL :: Lens_' CowOrderDTO (Maybe Text)
cowOrderDTOIdL f CowOrderDTO{..} = (\cowOrderDTOId -> CowOrderDTO { cowOrderDTOId, ..} ) <$> f cowOrderDTOId
{-# INLINE cowOrderDTOIdL #-}

-- | 'cowOrderDTOOwner' Lens
cowOrderDTOOwnerL :: Lens_' CowOrderDTO (Maybe Text)
cowOrderDTOOwnerL f CowOrderDTO{..} = (\cowOrderDTOOwner -> CowOrderDTO { cowOrderDTOOwner, ..} ) <$> f cowOrderDTOOwner
{-# INLINE cowOrderDTOOwnerL #-}

-- | 'cowOrderDTOTradesTimestamp' Lens
cowOrderDTOTradesTimestampL :: Lens_' CowOrderDTO (Maybe Text)
cowOrderDTOTradesTimestampL f CowOrderDTO{..} = (\cowOrderDTOTradesTimestamp -> CowOrderDTO { cowOrderDTOTradesTimestamp, ..} ) <$> f cowOrderDTOTradesTimestamp
{-# INLINE cowOrderDTOTradesTimestampL #-}

-- | 'cowOrderDTOInvalidateTimestamp' Lens
cowOrderDTOInvalidateTimestampL :: Lens_' CowOrderDTO (Maybe Text)
cowOrderDTOInvalidateTimestampL f CowOrderDTO{..} = (\cowOrderDTOInvalidateTimestamp -> CowOrderDTO { cowOrderDTOInvalidateTimestamp, ..} ) <$> f cowOrderDTOInvalidateTimestamp
{-# INLINE cowOrderDTOInvalidateTimestampL #-}

-- | 'cowOrderDTOPresignTimestamp' Lens
cowOrderDTOPresignTimestampL :: Lens_' CowOrderDTO (Maybe Text)
cowOrderDTOPresignTimestampL f CowOrderDTO{..} = (\cowOrderDTOPresignTimestamp -> CowOrderDTO { cowOrderDTOPresignTimestamp, ..} ) <$> f cowOrderDTOPresignTimestamp
{-# INLINE cowOrderDTOPresignTimestampL #-}

-- | 'cowOrderDTOIsSigned' Lens
cowOrderDTOIsSignedL :: Lens_' CowOrderDTO (Maybe Bool)
cowOrderDTOIsSignedL f CowOrderDTO{..} = (\cowOrderDTOIsSigned -> CowOrderDTO { cowOrderDTOIsSigned, ..} ) <$> f cowOrderDTOIsSigned
{-# INLINE cowOrderDTOIsSignedL #-}

-- | 'cowOrderDTOIsValid' Lens
cowOrderDTOIsValidL :: Lens_' CowOrderDTO (Maybe Bool)
cowOrderDTOIsValidL f CowOrderDTO{..} = (\cowOrderDTOIsValid -> CowOrderDTO { cowOrderDTOIsValid, ..} ) <$> f cowOrderDTOIsValid
{-# INLINE cowOrderDTOIsValidL #-}

-- | 'cowOrderDTOVid' Lens
cowOrderDTOVidL :: Lens_' CowOrderDTO (Maybe Integer)
cowOrderDTOVidL f CowOrderDTO{..} = (\cowOrderDTOVid -> CowOrderDTO { cowOrderDTOVid, ..} ) <$> f cowOrderDTOVid
{-# INLINE cowOrderDTOVidL #-}



-- * CowSettlementDTO

-- | 'cowSettlementDTOEntryTime' Lens
cowSettlementDTOEntryTimeL :: Lens_' CowSettlementDTO (Maybe DateTime)
cowSettlementDTOEntryTimeL f CowSettlementDTO{..} = (\cowSettlementDTOEntryTime -> CowSettlementDTO { cowSettlementDTOEntryTime, ..} ) <$> f cowSettlementDTOEntryTime
{-# INLINE cowSettlementDTOEntryTimeL #-}

-- | 'cowSettlementDTORecvTime' Lens
cowSettlementDTORecvTimeL :: Lens_' CowSettlementDTO (Maybe DateTime)
cowSettlementDTORecvTimeL f CowSettlementDTO{..} = (\cowSettlementDTORecvTime -> CowSettlementDTO { cowSettlementDTORecvTime, ..} ) <$> f cowSettlementDTORecvTime
{-# INLINE cowSettlementDTORecvTimeL #-}

-- | 'cowSettlementDTOBlockNumber' Lens
cowSettlementDTOBlockNumberL :: Lens_' CowSettlementDTO (Maybe Integer)
cowSettlementDTOBlockNumberL f CowSettlementDTO{..} = (\cowSettlementDTOBlockNumber -> CowSettlementDTO { cowSettlementDTOBlockNumber, ..} ) <$> f cowSettlementDTOBlockNumber
{-# INLINE cowSettlementDTOBlockNumberL #-}

-- | 'cowSettlementDTOId' Lens
cowSettlementDTOIdL :: Lens_' CowSettlementDTO (Maybe Text)
cowSettlementDTOIdL f CowSettlementDTO{..} = (\cowSettlementDTOId -> CowSettlementDTO { cowSettlementDTOId, ..} ) <$> f cowSettlementDTOId
{-# INLINE cowSettlementDTOIdL #-}

-- | 'cowSettlementDTOSolver' Lens
cowSettlementDTOSolverL :: Lens_' CowSettlementDTO (Maybe Text)
cowSettlementDTOSolverL f CowSettlementDTO{..} = (\cowSettlementDTOSolver -> CowSettlementDTO { cowSettlementDTOSolver, ..} ) <$> f cowSettlementDTOSolver
{-# INLINE cowSettlementDTOSolverL #-}

-- | 'cowSettlementDTOTxHash' Lens
cowSettlementDTOTxHashL :: Lens_' CowSettlementDTO (Maybe Text)
cowSettlementDTOTxHashL f CowSettlementDTO{..} = (\cowSettlementDTOTxHash -> CowSettlementDTO { cowSettlementDTOTxHash, ..} ) <$> f cowSettlementDTOTxHash
{-# INLINE cowSettlementDTOTxHashL #-}

-- | 'cowSettlementDTOFirstTradeTimestamp' Lens
cowSettlementDTOFirstTradeTimestampL :: Lens_' CowSettlementDTO (Maybe Text)
cowSettlementDTOFirstTradeTimestampL f CowSettlementDTO{..} = (\cowSettlementDTOFirstTradeTimestamp -> CowSettlementDTO { cowSettlementDTOFirstTradeTimestamp, ..} ) <$> f cowSettlementDTOFirstTradeTimestamp
{-# INLINE cowSettlementDTOFirstTradeTimestampL #-}

-- | 'cowSettlementDTOVid' Lens
cowSettlementDTOVidL :: Lens_' CowSettlementDTO (Maybe Integer)
cowSettlementDTOVidL f CowSettlementDTO{..} = (\cowSettlementDTOVid -> CowSettlementDTO { cowSettlementDTOVid, ..} ) <$> f cowSettlementDTOVid
{-# INLINE cowSettlementDTOVidL #-}



-- * CowTokenDTO

-- | 'cowTokenDTOEntryTime' Lens
cowTokenDTOEntryTimeL :: Lens_' CowTokenDTO (Maybe DateTime)
cowTokenDTOEntryTimeL f CowTokenDTO{..} = (\cowTokenDTOEntryTime -> CowTokenDTO { cowTokenDTOEntryTime, ..} ) <$> f cowTokenDTOEntryTime
{-# INLINE cowTokenDTOEntryTimeL #-}

-- | 'cowTokenDTORecvTime' Lens
cowTokenDTORecvTimeL :: Lens_' CowTokenDTO (Maybe DateTime)
cowTokenDTORecvTimeL f CowTokenDTO{..} = (\cowTokenDTORecvTime -> CowTokenDTO { cowTokenDTORecvTime, ..} ) <$> f cowTokenDTORecvTime
{-# INLINE cowTokenDTORecvTimeL #-}

-- | 'cowTokenDTOBlockNumber' Lens
cowTokenDTOBlockNumberL :: Lens_' CowTokenDTO (Maybe Integer)
cowTokenDTOBlockNumberL f CowTokenDTO{..} = (\cowTokenDTOBlockNumber -> CowTokenDTO { cowTokenDTOBlockNumber, ..} ) <$> f cowTokenDTOBlockNumber
{-# INLINE cowTokenDTOBlockNumberL #-}

-- | 'cowTokenDTOId' Lens
cowTokenDTOIdL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOIdL f CowTokenDTO{..} = (\cowTokenDTOId -> CowTokenDTO { cowTokenDTOId, ..} ) <$> f cowTokenDTOId
{-# INLINE cowTokenDTOIdL #-}

-- | 'cowTokenDTOAddress' Lens
cowTokenDTOAddressL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOAddressL f CowTokenDTO{..} = (\cowTokenDTOAddress -> CowTokenDTO { cowTokenDTOAddress, ..} ) <$> f cowTokenDTOAddress
{-# INLINE cowTokenDTOAddressL #-}

-- | 'cowTokenDTOFirstTradeTimestamp' Lens
cowTokenDTOFirstTradeTimestampL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOFirstTradeTimestampL f CowTokenDTO{..} = (\cowTokenDTOFirstTradeTimestamp -> CowTokenDTO { cowTokenDTOFirstTradeTimestamp, ..} ) <$> f cowTokenDTOFirstTradeTimestamp
{-# INLINE cowTokenDTOFirstTradeTimestampL #-}

-- | 'cowTokenDTOName' Lens
cowTokenDTONameL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTONameL f CowTokenDTO{..} = (\cowTokenDTOName -> CowTokenDTO { cowTokenDTOName, ..} ) <$> f cowTokenDTOName
{-# INLINE cowTokenDTONameL #-}

-- | 'cowTokenDTOSymbol' Lens
cowTokenDTOSymbolL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOSymbolL f CowTokenDTO{..} = (\cowTokenDTOSymbol -> CowTokenDTO { cowTokenDTOSymbol, ..} ) <$> f cowTokenDTOSymbol
{-# INLINE cowTokenDTOSymbolL #-}

-- | 'cowTokenDTODecimals' Lens
cowTokenDTODecimalsL :: Lens_' CowTokenDTO (Maybe Int)
cowTokenDTODecimalsL f CowTokenDTO{..} = (\cowTokenDTODecimals -> CowTokenDTO { cowTokenDTODecimals, ..} ) <$> f cowTokenDTODecimals
{-# INLINE cowTokenDTODecimalsL #-}

-- | 'cowTokenDTOTotalVolume' Lens
cowTokenDTOTotalVolumeL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOTotalVolumeL f CowTokenDTO{..} = (\cowTokenDTOTotalVolume -> CowTokenDTO { cowTokenDTOTotalVolume, ..} ) <$> f cowTokenDTOTotalVolume
{-# INLINE cowTokenDTOTotalVolumeL #-}

-- | 'cowTokenDTOVid' Lens
cowTokenDTOVidL :: Lens_' CowTokenDTO (Maybe Integer)
cowTokenDTOVidL f CowTokenDTO{..} = (\cowTokenDTOVid -> CowTokenDTO { cowTokenDTOVid, ..} ) <$> f cowTokenDTOVid
{-# INLINE cowTokenDTOVidL #-}

-- | 'cowTokenDTOTokenSymbol' Lens
cowTokenDTOTokenSymbolL :: Lens_' CowTokenDTO (Maybe Text)
cowTokenDTOTokenSymbolL f CowTokenDTO{..} = (\cowTokenDTOTokenSymbol -> CowTokenDTO { cowTokenDTOTokenSymbol, ..} ) <$> f cowTokenDTOTokenSymbol
{-# INLINE cowTokenDTOTokenSymbolL #-}



-- * CowTradeDTO

-- | 'cowTradeDTOEntryTime' Lens
cowTradeDTOEntryTimeL :: Lens_' CowTradeDTO (Maybe DateTime)
cowTradeDTOEntryTimeL f CowTradeDTO{..} = (\cowTradeDTOEntryTime -> CowTradeDTO { cowTradeDTOEntryTime, ..} ) <$> f cowTradeDTOEntryTime
{-# INLINE cowTradeDTOEntryTimeL #-}

-- | 'cowTradeDTORecvTime' Lens
cowTradeDTORecvTimeL :: Lens_' CowTradeDTO (Maybe DateTime)
cowTradeDTORecvTimeL f CowTradeDTO{..} = (\cowTradeDTORecvTime -> CowTradeDTO { cowTradeDTORecvTime, ..} ) <$> f cowTradeDTORecvTime
{-# INLINE cowTradeDTORecvTimeL #-}

-- | 'cowTradeDTOBlockNumber' Lens
cowTradeDTOBlockNumberL :: Lens_' CowTradeDTO (Maybe Integer)
cowTradeDTOBlockNumberL f CowTradeDTO{..} = (\cowTradeDTOBlockNumber -> CowTradeDTO { cowTradeDTOBlockNumber, ..} ) <$> f cowTradeDTOBlockNumber
{-# INLINE cowTradeDTOBlockNumberL #-}

-- | 'cowTradeDTOId' Lens
cowTradeDTOIdL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOIdL f CowTradeDTO{..} = (\cowTradeDTOId -> CowTradeDTO { cowTradeDTOId, ..} ) <$> f cowTradeDTOId
{-# INLINE cowTradeDTOIdL #-}

-- | 'cowTradeDTOTimestamp' Lens
cowTradeDTOTimestampL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOTimestampL f CowTradeDTO{..} = (\cowTradeDTOTimestamp -> CowTradeDTO { cowTradeDTOTimestamp, ..} ) <$> f cowTradeDTOTimestamp
{-# INLINE cowTradeDTOTimestampL #-}

-- | 'cowTradeDTOGasPrice' Lens
cowTradeDTOGasPriceL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOGasPriceL f CowTradeDTO{..} = (\cowTradeDTOGasPrice -> CowTradeDTO { cowTradeDTOGasPrice, ..} ) <$> f cowTradeDTOGasPrice
{-# INLINE cowTradeDTOGasPriceL #-}

-- | 'cowTradeDTOGasLimit' Lens
cowTradeDTOGasLimitL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOGasLimitL f CowTradeDTO{..} = (\cowTradeDTOGasLimit -> CowTradeDTO { cowTradeDTOGasLimit, ..} ) <$> f cowTradeDTOGasLimit
{-# INLINE cowTradeDTOGasLimitL #-}

-- | 'cowTradeDTOFeeAmount' Lens
cowTradeDTOFeeAmountL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOFeeAmountL f CowTradeDTO{..} = (\cowTradeDTOFeeAmount -> CowTradeDTO { cowTradeDTOFeeAmount, ..} ) <$> f cowTradeDTOFeeAmount
{-# INLINE cowTradeDTOFeeAmountL #-}

-- | 'cowTradeDTOTxHash' Lens
cowTradeDTOTxHashL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOTxHashL f CowTradeDTO{..} = (\cowTradeDTOTxHash -> CowTradeDTO { cowTradeDTOTxHash, ..} ) <$> f cowTradeDTOTxHash
{-# INLINE cowTradeDTOTxHashL #-}

-- | 'cowTradeDTOSettlement' Lens
cowTradeDTOSettlementL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOSettlementL f CowTradeDTO{..} = (\cowTradeDTOSettlement -> CowTradeDTO { cowTradeDTOSettlement, ..} ) <$> f cowTradeDTOSettlement
{-# INLINE cowTradeDTOSettlementL #-}

-- | 'cowTradeDTOBuyAmount' Lens
cowTradeDTOBuyAmountL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOBuyAmountL f CowTradeDTO{..} = (\cowTradeDTOBuyAmount -> CowTradeDTO { cowTradeDTOBuyAmount, ..} ) <$> f cowTradeDTOBuyAmount
{-# INLINE cowTradeDTOBuyAmountL #-}

-- | 'cowTradeDTOSellAmount' Lens
cowTradeDTOSellAmountL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOSellAmountL f CowTradeDTO{..} = (\cowTradeDTOSellAmount -> CowTradeDTO { cowTradeDTOSellAmount, ..} ) <$> f cowTradeDTOSellAmount
{-# INLINE cowTradeDTOSellAmountL #-}

-- | 'cowTradeDTOSellToken' Lens
cowTradeDTOSellTokenL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOSellTokenL f CowTradeDTO{..} = (\cowTradeDTOSellToken -> CowTradeDTO { cowTradeDTOSellToken, ..} ) <$> f cowTradeDTOSellToken
{-# INLINE cowTradeDTOSellTokenL #-}

-- | 'cowTradeDTOBuyToken' Lens
cowTradeDTOBuyTokenL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOBuyTokenL f CowTradeDTO{..} = (\cowTradeDTOBuyToken -> CowTradeDTO { cowTradeDTOBuyToken, ..} ) <$> f cowTradeDTOBuyToken
{-# INLINE cowTradeDTOBuyTokenL #-}

-- | 'cowTradeDTOOrder' Lens
cowTradeDTOOrderL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOOrderL f CowTradeDTO{..} = (\cowTradeDTOOrder -> CowTradeDTO { cowTradeDTOOrder, ..} ) <$> f cowTradeDTOOrder
{-# INLINE cowTradeDTOOrderL #-}

-- | 'cowTradeDTOVid' Lens
cowTradeDTOVidL :: Lens_' CowTradeDTO (Maybe Integer)
cowTradeDTOVidL f CowTradeDTO{..} = (\cowTradeDTOVid -> CowTradeDTO { cowTradeDTOVid, ..} ) <$> f cowTradeDTOVid
{-# INLINE cowTradeDTOVidL #-}

-- | 'cowTradeDTOPoolId' Lens
cowTradeDTOPoolIdL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOPoolIdL f CowTradeDTO{..} = (\cowTradeDTOPoolId -> CowTradeDTO { cowTradeDTOPoolId, ..} ) <$> f cowTradeDTOPoolId
{-# INLINE cowTradeDTOPoolIdL #-}

-- | 'cowTradeDTOTransactionId' Lens
cowTradeDTOTransactionIdL :: Lens_' CowTradeDTO (Maybe Text)
cowTradeDTOTransactionIdL f CowTradeDTO{..} = (\cowTradeDTOTransactionId -> CowTradeDTO { cowTradeDTOTransactionId, ..} ) <$> f cowTradeDTOTransactionId
{-# INLINE cowTradeDTOTransactionIdL #-}

-- | 'cowTradeDTOEvaluatedPrice' Lens
cowTradeDTOEvaluatedPriceL :: Lens_' CowTradeDTO (Maybe Double)
cowTradeDTOEvaluatedPriceL f CowTradeDTO{..} = (\cowTradeDTOEvaluatedPrice -> CowTradeDTO { cowTradeDTOEvaluatedPrice, ..} ) <$> f cowTradeDTOEvaluatedPrice
{-# INLINE cowTradeDTOEvaluatedPriceL #-}

-- | 'cowTradeDTOEvaluatedAmount' Lens
cowTradeDTOEvaluatedAmountL :: Lens_' CowTradeDTO (Maybe Double)
cowTradeDTOEvaluatedAmountL f CowTradeDTO{..} = (\cowTradeDTOEvaluatedAmount -> CowTradeDTO { cowTradeDTOEvaluatedAmount, ..} ) <$> f cowTradeDTOEvaluatedAmount
{-# INLINE cowTradeDTOEvaluatedAmountL #-}

-- | 'cowTradeDTOEvaluatedAggressor' Lens
cowTradeDTOEvaluatedAggressorL :: Lens_' CowTradeDTO (Maybe TransactionsETradeAggressiveSide)
cowTradeDTOEvaluatedAggressorL f CowTradeDTO{..} = (\cowTradeDTOEvaluatedAggressor -> CowTradeDTO { cowTradeDTOEvaluatedAggressor, ..} ) <$> f cowTradeDTOEvaluatedAggressor
{-# INLINE cowTradeDTOEvaluatedAggressorL #-}



-- * CowUserDTO

-- | 'cowUserDTOEntryTime' Lens
cowUserDTOEntryTimeL :: Lens_' CowUserDTO (Maybe DateTime)
cowUserDTOEntryTimeL f CowUserDTO{..} = (\cowUserDTOEntryTime -> CowUserDTO { cowUserDTOEntryTime, ..} ) <$> f cowUserDTOEntryTime
{-# INLINE cowUserDTOEntryTimeL #-}

-- | 'cowUserDTORecvTime' Lens
cowUserDTORecvTimeL :: Lens_' CowUserDTO (Maybe DateTime)
cowUserDTORecvTimeL f CowUserDTO{..} = (\cowUserDTORecvTime -> CowUserDTO { cowUserDTORecvTime, ..} ) <$> f cowUserDTORecvTime
{-# INLINE cowUserDTORecvTimeL #-}

-- | 'cowUserDTOBlockNumber' Lens
cowUserDTOBlockNumberL :: Lens_' CowUserDTO (Maybe Integer)
cowUserDTOBlockNumberL f CowUserDTO{..} = (\cowUserDTOBlockNumber -> CowUserDTO { cowUserDTOBlockNumber, ..} ) <$> f cowUserDTOBlockNumber
{-# INLINE cowUserDTOBlockNumberL #-}

-- | 'cowUserDTOId' Lens
cowUserDTOIdL :: Lens_' CowUserDTO (Maybe Text)
cowUserDTOIdL f CowUserDTO{..} = (\cowUserDTOId -> CowUserDTO { cowUserDTOId, ..} ) <$> f cowUserDTOId
{-# INLINE cowUserDTOIdL #-}

-- | 'cowUserDTOAddress' Lens
cowUserDTOAddressL :: Lens_' CowUserDTO (Maybe Text)
cowUserDTOAddressL f CowUserDTO{..} = (\cowUserDTOAddress -> CowUserDTO { cowUserDTOAddress, ..} ) <$> f cowUserDTOAddress
{-# INLINE cowUserDTOAddressL #-}

-- | 'cowUserDTOFirstTradeTimestamp' Lens
cowUserDTOFirstTradeTimestampL :: Lens_' CowUserDTO (Maybe Text)
cowUserDTOFirstTradeTimestampL f CowUserDTO{..} = (\cowUserDTOFirstTradeTimestamp -> CowUserDTO { cowUserDTOFirstTradeTimestamp, ..} ) <$> f cowUserDTOFirstTradeTimestamp
{-# INLINE cowUserDTOFirstTradeTimestampL #-}

-- | 'cowUserDTOIsSolver' Lens
cowUserDTOIsSolverL :: Lens_' CowUserDTO (Maybe Bool)
cowUserDTOIsSolverL f CowUserDTO{..} = (\cowUserDTOIsSolver -> CowUserDTO { cowUserDTOIsSolver, ..} ) <$> f cowUserDTOIsSolver
{-# INLINE cowUserDTOIsSolverL #-}

-- | 'cowUserDTOVid' Lens
cowUserDTOVidL :: Lens_' CowUserDTO (Maybe Integer)
cowUserDTOVidL f CowUserDTO{..} = (\cowUserDTOVid -> CowUserDTO { cowUserDTOVid, ..} ) <$> f cowUserDTOVid
{-# INLINE cowUserDTOVidL #-}



-- * CurveAccountDTO

-- | 'curveAccountDTOEntryTime' Lens
curveAccountDTOEntryTimeL :: Lens_' CurveAccountDTO (Maybe DateTime)
curveAccountDTOEntryTimeL f CurveAccountDTO{..} = (\curveAccountDTOEntryTime -> CurveAccountDTO { curveAccountDTOEntryTime, ..} ) <$> f curveAccountDTOEntryTime
{-# INLINE curveAccountDTOEntryTimeL #-}

-- | 'curveAccountDTORecvTime' Lens
curveAccountDTORecvTimeL :: Lens_' CurveAccountDTO (Maybe DateTime)
curveAccountDTORecvTimeL f CurveAccountDTO{..} = (\curveAccountDTORecvTime -> CurveAccountDTO { curveAccountDTORecvTime, ..} ) <$> f curveAccountDTORecvTime
{-# INLINE curveAccountDTORecvTimeL #-}

-- | 'curveAccountDTOBlockNumber' Lens
curveAccountDTOBlockNumberL :: Lens_' CurveAccountDTO (Maybe Integer)
curveAccountDTOBlockNumberL f CurveAccountDTO{..} = (\curveAccountDTOBlockNumber -> CurveAccountDTO { curveAccountDTOBlockNumber, ..} ) <$> f curveAccountDTOBlockNumber
{-# INLINE curveAccountDTOBlockNumberL #-}

-- | 'curveAccountDTOId' Lens
curveAccountDTOIdL :: Lens_' CurveAccountDTO (Maybe Text)
curveAccountDTOIdL f CurveAccountDTO{..} = (\curveAccountDTOId -> CurveAccountDTO { curveAccountDTOId, ..} ) <$> f curveAccountDTOId
{-# INLINE curveAccountDTOIdL #-}

-- | 'curveAccountDTOAddress' Lens
curveAccountDTOAddressL :: Lens_' CurveAccountDTO (Maybe Text)
curveAccountDTOAddressL f CurveAccountDTO{..} = (\curveAccountDTOAddress -> CurveAccountDTO { curveAccountDTOAddress, ..} ) <$> f curveAccountDTOAddress
{-# INLINE curveAccountDTOAddressL #-}

-- | 'curveAccountDTOVid' Lens
curveAccountDTOVidL :: Lens_' CurveAccountDTO (Maybe Integer)
curveAccountDTOVidL f CurveAccountDTO{..} = (\curveAccountDTOVid -> CurveAccountDTO { curveAccountDTOVid, ..} ) <$> f curveAccountDTOVid
{-# INLINE curveAccountDTOVidL #-}



-- * CurveAddLiquidityEventDTO

-- | 'curveAddLiquidityEventDTOEntryTime' Lens
curveAddLiquidityEventDTOEntryTimeL :: Lens_' CurveAddLiquidityEventDTO (Maybe DateTime)
curveAddLiquidityEventDTOEntryTimeL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOEntryTime -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOEntryTime, ..} ) <$> f curveAddLiquidityEventDTOEntryTime
{-# INLINE curveAddLiquidityEventDTOEntryTimeL #-}

-- | 'curveAddLiquidityEventDTORecvTime' Lens
curveAddLiquidityEventDTORecvTimeL :: Lens_' CurveAddLiquidityEventDTO (Maybe DateTime)
curveAddLiquidityEventDTORecvTimeL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTORecvTime -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTORecvTime, ..} ) <$> f curveAddLiquidityEventDTORecvTime
{-# INLINE curveAddLiquidityEventDTORecvTimeL #-}

-- | 'curveAddLiquidityEventDTOBlockNumber' Lens
curveAddLiquidityEventDTOBlockNumberL :: Lens_' CurveAddLiquidityEventDTO (Maybe Integer)
curveAddLiquidityEventDTOBlockNumberL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOBlockNumber -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOBlockNumber, ..} ) <$> f curveAddLiquidityEventDTOBlockNumber
{-# INLINE curveAddLiquidityEventDTOBlockNumberL #-}

-- | 'curveAddLiquidityEventDTOId' Lens
curveAddLiquidityEventDTOIdL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOIdL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOId -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOId, ..} ) <$> f curveAddLiquidityEventDTOId
{-# INLINE curveAddLiquidityEventDTOIdL #-}

-- | 'curveAddLiquidityEventDTOPool' Lens
curveAddLiquidityEventDTOPoolL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOPoolL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOPool -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOPool, ..} ) <$> f curveAddLiquidityEventDTOPool
{-# INLINE curveAddLiquidityEventDTOPoolL #-}

-- | 'curveAddLiquidityEventDTOProvider' Lens
curveAddLiquidityEventDTOProviderL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOProviderL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOProvider -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOProvider, ..} ) <$> f curveAddLiquidityEventDTOProvider
{-# INLINE curveAddLiquidityEventDTOProviderL #-}

-- | 'curveAddLiquidityEventDTOTokenAmounts' Lens
curveAddLiquidityEventDTOTokenAmountsL :: Lens_' CurveAddLiquidityEventDTO (Maybe [Text])
curveAddLiquidityEventDTOTokenAmountsL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOTokenAmounts -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOTokenAmounts, ..} ) <$> f curveAddLiquidityEventDTOTokenAmounts
{-# INLINE curveAddLiquidityEventDTOTokenAmountsL #-}

-- | 'curveAddLiquidityEventDTOFees' Lens
curveAddLiquidityEventDTOFeesL :: Lens_' CurveAddLiquidityEventDTO (Maybe [Text])
curveAddLiquidityEventDTOFeesL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOFees -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOFees, ..} ) <$> f curveAddLiquidityEventDTOFees
{-# INLINE curveAddLiquidityEventDTOFeesL #-}

-- | 'curveAddLiquidityEventDTOInvariant' Lens
curveAddLiquidityEventDTOInvariantL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOInvariantL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOInvariant -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOInvariant, ..} ) <$> f curveAddLiquidityEventDTOInvariant
{-# INLINE curveAddLiquidityEventDTOInvariantL #-}

-- | 'curveAddLiquidityEventDTOTokenSupply' Lens
curveAddLiquidityEventDTOTokenSupplyL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOTokenSupplyL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOTokenSupply -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOTokenSupply, ..} ) <$> f curveAddLiquidityEventDTOTokenSupply
{-# INLINE curveAddLiquidityEventDTOTokenSupplyL #-}

-- | 'curveAddLiquidityEventDTOBlock' Lens
curveAddLiquidityEventDTOBlockL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOBlockL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOBlock -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOBlock, ..} ) <$> f curveAddLiquidityEventDTOBlock
{-# INLINE curveAddLiquidityEventDTOBlockL #-}

-- | 'curveAddLiquidityEventDTOTimestamp' Lens
curveAddLiquidityEventDTOTimestampL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOTimestampL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOTimestamp -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOTimestamp, ..} ) <$> f curveAddLiquidityEventDTOTimestamp
{-# INLINE curveAddLiquidityEventDTOTimestampL #-}

-- | 'curveAddLiquidityEventDTOTransaction' Lens
curveAddLiquidityEventDTOTransactionL :: Lens_' CurveAddLiquidityEventDTO (Maybe Text)
curveAddLiquidityEventDTOTransactionL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOTransaction -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOTransaction, ..} ) <$> f curveAddLiquidityEventDTOTransaction
{-# INLINE curveAddLiquidityEventDTOTransactionL #-}

-- | 'curveAddLiquidityEventDTOVid' Lens
curveAddLiquidityEventDTOVidL :: Lens_' CurveAddLiquidityEventDTO (Maybe Integer)
curveAddLiquidityEventDTOVidL f CurveAddLiquidityEventDTO{..} = (\curveAddLiquidityEventDTOVid -> CurveAddLiquidityEventDTO { curveAddLiquidityEventDTOVid, ..} ) <$> f curveAddLiquidityEventDTOVid
{-# INLINE curveAddLiquidityEventDTOVidL #-}



-- * CurveAdminFeeChangeLogDTO

-- | 'curveAdminFeeChangeLogDTOEntryTime' Lens
curveAdminFeeChangeLogDTOEntryTimeL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe DateTime)
curveAdminFeeChangeLogDTOEntryTimeL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOEntryTime -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOEntryTime, ..} ) <$> f curveAdminFeeChangeLogDTOEntryTime
{-# INLINE curveAdminFeeChangeLogDTOEntryTimeL #-}

-- | 'curveAdminFeeChangeLogDTORecvTime' Lens
curveAdminFeeChangeLogDTORecvTimeL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe DateTime)
curveAdminFeeChangeLogDTORecvTimeL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTORecvTime -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTORecvTime, ..} ) <$> f curveAdminFeeChangeLogDTORecvTime
{-# INLINE curveAdminFeeChangeLogDTORecvTimeL #-}

-- | 'curveAdminFeeChangeLogDTOBlockNumber' Lens
curveAdminFeeChangeLogDTOBlockNumberL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Integer)
curveAdminFeeChangeLogDTOBlockNumberL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOBlockNumber -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOBlockNumber, ..} ) <$> f curveAdminFeeChangeLogDTOBlockNumber
{-# INLINE curveAdminFeeChangeLogDTOBlockNumberL #-}

-- | 'curveAdminFeeChangeLogDTOId' Lens
curveAdminFeeChangeLogDTOIdL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOIdL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOId -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOId, ..} ) <$> f curveAdminFeeChangeLogDTOId
{-# INLINE curveAdminFeeChangeLogDTOIdL #-}

-- | 'curveAdminFeeChangeLogDTOPool' Lens
curveAdminFeeChangeLogDTOPoolL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOPoolL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOPool -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOPool, ..} ) <$> f curveAdminFeeChangeLogDTOPool
{-# INLINE curveAdminFeeChangeLogDTOPoolL #-}

-- | 'curveAdminFeeChangeLogDTOValue' Lens
curveAdminFeeChangeLogDTOValueL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOValueL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOValue -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOValue, ..} ) <$> f curveAdminFeeChangeLogDTOValue
{-# INLINE curveAdminFeeChangeLogDTOValueL #-}

-- | 'curveAdminFeeChangeLogDTOBlock' Lens
curveAdminFeeChangeLogDTOBlockL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOBlockL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOBlock -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOBlock, ..} ) <$> f curveAdminFeeChangeLogDTOBlock
{-# INLINE curveAdminFeeChangeLogDTOBlockL #-}

-- | 'curveAdminFeeChangeLogDTOTimestamp' Lens
curveAdminFeeChangeLogDTOTimestampL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOTimestampL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOTimestamp -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOTimestamp, ..} ) <$> f curveAdminFeeChangeLogDTOTimestamp
{-# INLINE curveAdminFeeChangeLogDTOTimestampL #-}

-- | 'curveAdminFeeChangeLogDTOTransaction' Lens
curveAdminFeeChangeLogDTOTransactionL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Text)
curveAdminFeeChangeLogDTOTransactionL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOTransaction -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOTransaction, ..} ) <$> f curveAdminFeeChangeLogDTOTransaction
{-# INLINE curveAdminFeeChangeLogDTOTransactionL #-}

-- | 'curveAdminFeeChangeLogDTOVid' Lens
curveAdminFeeChangeLogDTOVidL :: Lens_' CurveAdminFeeChangeLogDTO (Maybe Integer)
curveAdminFeeChangeLogDTOVidL f CurveAdminFeeChangeLogDTO{..} = (\curveAdminFeeChangeLogDTOVid -> CurveAdminFeeChangeLogDTO { curveAdminFeeChangeLogDTOVid, ..} ) <$> f curveAdminFeeChangeLogDTOVid
{-# INLINE curveAdminFeeChangeLogDTOVidL #-}



-- * CurveAmplificationCoeffChangeLogDTO

-- | 'curveAmplificationCoeffChangeLogDTOEntryTime' Lens
curveAmplificationCoeffChangeLogDTOEntryTimeL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe DateTime)
curveAmplificationCoeffChangeLogDTOEntryTimeL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOEntryTime -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOEntryTime, ..} ) <$> f curveAmplificationCoeffChangeLogDTOEntryTime
{-# INLINE curveAmplificationCoeffChangeLogDTOEntryTimeL #-}

-- | 'curveAmplificationCoeffChangeLogDTORecvTime' Lens
curveAmplificationCoeffChangeLogDTORecvTimeL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe DateTime)
curveAmplificationCoeffChangeLogDTORecvTimeL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTORecvTime -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTORecvTime, ..} ) <$> f curveAmplificationCoeffChangeLogDTORecvTime
{-# INLINE curveAmplificationCoeffChangeLogDTORecvTimeL #-}

-- | 'curveAmplificationCoeffChangeLogDTOBlockNumber' Lens
curveAmplificationCoeffChangeLogDTOBlockNumberL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Integer)
curveAmplificationCoeffChangeLogDTOBlockNumberL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOBlockNumber -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOBlockNumber, ..} ) <$> f curveAmplificationCoeffChangeLogDTOBlockNumber
{-# INLINE curveAmplificationCoeffChangeLogDTOBlockNumberL #-}

-- | 'curveAmplificationCoeffChangeLogDTOId' Lens
curveAmplificationCoeffChangeLogDTOIdL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOIdL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOId -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOId, ..} ) <$> f curveAmplificationCoeffChangeLogDTOId
{-# INLINE curveAmplificationCoeffChangeLogDTOIdL #-}

-- | 'curveAmplificationCoeffChangeLogDTOPool' Lens
curveAmplificationCoeffChangeLogDTOPoolL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOPoolL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOPool -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOPool, ..} ) <$> f curveAmplificationCoeffChangeLogDTOPool
{-# INLINE curveAmplificationCoeffChangeLogDTOPoolL #-}

-- | 'curveAmplificationCoeffChangeLogDTOValue' Lens
curveAmplificationCoeffChangeLogDTOValueL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOValueL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOValue -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOValue, ..} ) <$> f curveAmplificationCoeffChangeLogDTOValue
{-# INLINE curveAmplificationCoeffChangeLogDTOValueL #-}

-- | 'curveAmplificationCoeffChangeLogDTOBlock' Lens
curveAmplificationCoeffChangeLogDTOBlockL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOBlockL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOBlock -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOBlock, ..} ) <$> f curveAmplificationCoeffChangeLogDTOBlock
{-# INLINE curveAmplificationCoeffChangeLogDTOBlockL #-}

-- | 'curveAmplificationCoeffChangeLogDTOTimestamp' Lens
curveAmplificationCoeffChangeLogDTOTimestampL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOTimestampL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOTimestamp -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOTimestamp, ..} ) <$> f curveAmplificationCoeffChangeLogDTOTimestamp
{-# INLINE curveAmplificationCoeffChangeLogDTOTimestampL #-}

-- | 'curveAmplificationCoeffChangeLogDTOTransaction' Lens
curveAmplificationCoeffChangeLogDTOTransactionL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Text)
curveAmplificationCoeffChangeLogDTOTransactionL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOTransaction -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOTransaction, ..} ) <$> f curveAmplificationCoeffChangeLogDTOTransaction
{-# INLINE curveAmplificationCoeffChangeLogDTOTransactionL #-}

-- | 'curveAmplificationCoeffChangeLogDTOVid' Lens
curveAmplificationCoeffChangeLogDTOVidL :: Lens_' CurveAmplificationCoeffChangeLogDTO (Maybe Integer)
curveAmplificationCoeffChangeLogDTOVidL f CurveAmplificationCoeffChangeLogDTO{..} = (\curveAmplificationCoeffChangeLogDTOVid -> CurveAmplificationCoeffChangeLogDTO { curveAmplificationCoeffChangeLogDTOVid, ..} ) <$> f curveAmplificationCoeffChangeLogDTOVid
{-# INLINE curveAmplificationCoeffChangeLogDTOVidL #-}



-- * CurveCoinDTO

-- | 'curveCoinDTOEntryTime' Lens
curveCoinDTOEntryTimeL :: Lens_' CurveCoinDTO (Maybe DateTime)
curveCoinDTOEntryTimeL f CurveCoinDTO{..} = (\curveCoinDTOEntryTime -> CurveCoinDTO { curveCoinDTOEntryTime, ..} ) <$> f curveCoinDTOEntryTime
{-# INLINE curveCoinDTOEntryTimeL #-}

-- | 'curveCoinDTORecvTime' Lens
curveCoinDTORecvTimeL :: Lens_' CurveCoinDTO (Maybe DateTime)
curveCoinDTORecvTimeL f CurveCoinDTO{..} = (\curveCoinDTORecvTime -> CurveCoinDTO { curveCoinDTORecvTime, ..} ) <$> f curveCoinDTORecvTime
{-# INLINE curveCoinDTORecvTimeL #-}

-- | 'curveCoinDTOBlockNumber' Lens
curveCoinDTOBlockNumberL :: Lens_' CurveCoinDTO (Maybe Integer)
curveCoinDTOBlockNumberL f CurveCoinDTO{..} = (\curveCoinDTOBlockNumber -> CurveCoinDTO { curveCoinDTOBlockNumber, ..} ) <$> f curveCoinDTOBlockNumber
{-# INLINE curveCoinDTOBlockNumberL #-}

-- | 'curveCoinDTOId' Lens
curveCoinDTOIdL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOIdL f CurveCoinDTO{..} = (\curveCoinDTOId -> CurveCoinDTO { curveCoinDTOId, ..} ) <$> f curveCoinDTOId
{-# INLINE curveCoinDTOIdL #-}

-- | 'curveCoinDTOIndex' Lens
curveCoinDTOIndexL :: Lens_' CurveCoinDTO (Maybe Int)
curveCoinDTOIndexL f CurveCoinDTO{..} = (\curveCoinDTOIndex -> CurveCoinDTO { curveCoinDTOIndex, ..} ) <$> f curveCoinDTOIndex
{-# INLINE curveCoinDTOIndexL #-}

-- | 'curveCoinDTOPool' Lens
curveCoinDTOPoolL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOPoolL f CurveCoinDTO{..} = (\curveCoinDTOPool -> CurveCoinDTO { curveCoinDTOPool, ..} ) <$> f curveCoinDTOPool
{-# INLINE curveCoinDTOPoolL #-}

-- | 'curveCoinDTOToken' Lens
curveCoinDTOTokenL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOTokenL f CurveCoinDTO{..} = (\curveCoinDTOToken -> CurveCoinDTO { curveCoinDTOToken, ..} ) <$> f curveCoinDTOToken
{-# INLINE curveCoinDTOTokenL #-}

-- | 'curveCoinDTOUnderlying' Lens
curveCoinDTOUnderlyingL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOUnderlyingL f CurveCoinDTO{..} = (\curveCoinDTOUnderlying -> CurveCoinDTO { curveCoinDTOUnderlying, ..} ) <$> f curveCoinDTOUnderlying
{-# INLINE curveCoinDTOUnderlyingL #-}

-- | 'curveCoinDTOBalance' Lens
curveCoinDTOBalanceL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOBalanceL f CurveCoinDTO{..} = (\curveCoinDTOBalance -> CurveCoinDTO { curveCoinDTOBalance, ..} ) <$> f curveCoinDTOBalance
{-# INLINE curveCoinDTOBalanceL #-}

-- | 'curveCoinDTORate' Lens
curveCoinDTORateL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTORateL f CurveCoinDTO{..} = (\curveCoinDTORate -> CurveCoinDTO { curveCoinDTORate, ..} ) <$> f curveCoinDTORate
{-# INLINE curveCoinDTORateL #-}

-- | 'curveCoinDTOUpdated' Lens
curveCoinDTOUpdatedL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOUpdatedL f CurveCoinDTO{..} = (\curveCoinDTOUpdated -> CurveCoinDTO { curveCoinDTOUpdated, ..} ) <$> f curveCoinDTOUpdated
{-# INLINE curveCoinDTOUpdatedL #-}

-- | 'curveCoinDTOUpdatedAtBlock' Lens
curveCoinDTOUpdatedAtBlockL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOUpdatedAtBlockL f CurveCoinDTO{..} = (\curveCoinDTOUpdatedAtBlock -> CurveCoinDTO { curveCoinDTOUpdatedAtBlock, ..} ) <$> f curveCoinDTOUpdatedAtBlock
{-# INLINE curveCoinDTOUpdatedAtBlockL #-}

-- | 'curveCoinDTOUpdatedAtTransaction' Lens
curveCoinDTOUpdatedAtTransactionL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOUpdatedAtTransactionL f CurveCoinDTO{..} = (\curveCoinDTOUpdatedAtTransaction -> CurveCoinDTO { curveCoinDTOUpdatedAtTransaction, ..} ) <$> f curveCoinDTOUpdatedAtTransaction
{-# INLINE curveCoinDTOUpdatedAtTransactionL #-}

-- | 'curveCoinDTOVid' Lens
curveCoinDTOVidL :: Lens_' CurveCoinDTO (Maybe Integer)
curveCoinDTOVidL f CurveCoinDTO{..} = (\curveCoinDTOVid -> CurveCoinDTO { curveCoinDTOVid, ..} ) <$> f curveCoinDTOVid
{-# INLINE curveCoinDTOVidL #-}

-- | 'curveCoinDTOBlockRange' Lens
curveCoinDTOBlockRangeL :: Lens_' CurveCoinDTO (Maybe Text)
curveCoinDTOBlockRangeL f CurveCoinDTO{..} = (\curveCoinDTOBlockRange -> CurveCoinDTO { curveCoinDTOBlockRange, ..} ) <$> f curveCoinDTOBlockRange
{-# INLINE curveCoinDTOBlockRangeL #-}



-- * CurveContractDTO

-- | 'curveContractDTOEntryTime' Lens
curveContractDTOEntryTimeL :: Lens_' CurveContractDTO (Maybe DateTime)
curveContractDTOEntryTimeL f CurveContractDTO{..} = (\curveContractDTOEntryTime -> CurveContractDTO { curveContractDTOEntryTime, ..} ) <$> f curveContractDTOEntryTime
{-# INLINE curveContractDTOEntryTimeL #-}

-- | 'curveContractDTORecvTime' Lens
curveContractDTORecvTimeL :: Lens_' CurveContractDTO (Maybe DateTime)
curveContractDTORecvTimeL f CurveContractDTO{..} = (\curveContractDTORecvTime -> CurveContractDTO { curveContractDTORecvTime, ..} ) <$> f curveContractDTORecvTime
{-# INLINE curveContractDTORecvTimeL #-}

-- | 'curveContractDTOBlockNumber' Lens
curveContractDTOBlockNumberL :: Lens_' CurveContractDTO (Maybe Integer)
curveContractDTOBlockNumberL f CurveContractDTO{..} = (\curveContractDTOBlockNumber -> CurveContractDTO { curveContractDTOBlockNumber, ..} ) <$> f curveContractDTOBlockNumber
{-# INLINE curveContractDTOBlockNumberL #-}

-- | 'curveContractDTOId' Lens
curveContractDTOIdL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOIdL f CurveContractDTO{..} = (\curveContractDTOId -> CurveContractDTO { curveContractDTOId, ..} ) <$> f curveContractDTOId
{-# INLINE curveContractDTOIdL #-}

-- | 'curveContractDTODescription' Lens
curveContractDTODescriptionL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTODescriptionL f CurveContractDTO{..} = (\curveContractDTODescription -> CurveContractDTO { curveContractDTODescription, ..} ) <$> f curveContractDTODescription
{-# INLINE curveContractDTODescriptionL #-}

-- | 'curveContractDTOAdded' Lens
curveContractDTOAddedL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOAddedL f CurveContractDTO{..} = (\curveContractDTOAdded -> CurveContractDTO { curveContractDTOAdded, ..} ) <$> f curveContractDTOAdded
{-# INLINE curveContractDTOAddedL #-}

-- | 'curveContractDTOAddedAtBlock' Lens
curveContractDTOAddedAtBlockL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOAddedAtBlockL f CurveContractDTO{..} = (\curveContractDTOAddedAtBlock -> CurveContractDTO { curveContractDTOAddedAtBlock, ..} ) <$> f curveContractDTOAddedAtBlock
{-# INLINE curveContractDTOAddedAtBlockL #-}

-- | 'curveContractDTOAddedAtTransaction' Lens
curveContractDTOAddedAtTransactionL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOAddedAtTransactionL f CurveContractDTO{..} = (\curveContractDTOAddedAtTransaction -> CurveContractDTO { curveContractDTOAddedAtTransaction, ..} ) <$> f curveContractDTOAddedAtTransaction
{-# INLINE curveContractDTOAddedAtTransactionL #-}

-- | 'curveContractDTOModified' Lens
curveContractDTOModifiedL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOModifiedL f CurveContractDTO{..} = (\curveContractDTOModified -> CurveContractDTO { curveContractDTOModified, ..} ) <$> f curveContractDTOModified
{-# INLINE curveContractDTOModifiedL #-}

-- | 'curveContractDTOModifiedAtBlock' Lens
curveContractDTOModifiedAtBlockL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOModifiedAtBlockL f CurveContractDTO{..} = (\curveContractDTOModifiedAtBlock -> CurveContractDTO { curveContractDTOModifiedAtBlock, ..} ) <$> f curveContractDTOModifiedAtBlock
{-# INLINE curveContractDTOModifiedAtBlockL #-}

-- | 'curveContractDTOModifiedAtTransaction' Lens
curveContractDTOModifiedAtTransactionL :: Lens_' CurveContractDTO (Maybe Text)
curveContractDTOModifiedAtTransactionL f CurveContractDTO{..} = (\curveContractDTOModifiedAtTransaction -> CurveContractDTO { curveContractDTOModifiedAtTransaction, ..} ) <$> f curveContractDTOModifiedAtTransaction
{-# INLINE curveContractDTOModifiedAtTransactionL #-}

-- | 'curveContractDTOVid' Lens
curveContractDTOVidL :: Lens_' CurveContractDTO (Maybe Integer)
curveContractDTOVidL f CurveContractDTO{..} = (\curveContractDTOVid -> CurveContractDTO { curveContractDTOVid, ..} ) <$> f curveContractDTOVid
{-# INLINE curveContractDTOVidL #-}



-- * CurveContractVersionDTO

-- | 'curveContractVersionDTOEntryTime' Lens
curveContractVersionDTOEntryTimeL :: Lens_' CurveContractVersionDTO (Maybe DateTime)
curveContractVersionDTOEntryTimeL f CurveContractVersionDTO{..} = (\curveContractVersionDTOEntryTime -> CurveContractVersionDTO { curveContractVersionDTOEntryTime, ..} ) <$> f curveContractVersionDTOEntryTime
{-# INLINE curveContractVersionDTOEntryTimeL #-}

-- | 'curveContractVersionDTORecvTime' Lens
curveContractVersionDTORecvTimeL :: Lens_' CurveContractVersionDTO (Maybe DateTime)
curveContractVersionDTORecvTimeL f CurveContractVersionDTO{..} = (\curveContractVersionDTORecvTime -> CurveContractVersionDTO { curveContractVersionDTORecvTime, ..} ) <$> f curveContractVersionDTORecvTime
{-# INLINE curveContractVersionDTORecvTimeL #-}

-- | 'curveContractVersionDTOBlockNumber' Lens
curveContractVersionDTOBlockNumberL :: Lens_' CurveContractVersionDTO (Maybe Integer)
curveContractVersionDTOBlockNumberL f CurveContractVersionDTO{..} = (\curveContractVersionDTOBlockNumber -> CurveContractVersionDTO { curveContractVersionDTOBlockNumber, ..} ) <$> f curveContractVersionDTOBlockNumber
{-# INLINE curveContractVersionDTOBlockNumberL #-}

-- | 'curveContractVersionDTOId' Lens
curveContractVersionDTOIdL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOIdL f CurveContractVersionDTO{..} = (\curveContractVersionDTOId -> CurveContractVersionDTO { curveContractVersionDTOId, ..} ) <$> f curveContractVersionDTOId
{-# INLINE curveContractVersionDTOIdL #-}

-- | 'curveContractVersionDTOContract' Lens
curveContractVersionDTOContractL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOContractL f CurveContractVersionDTO{..} = (\curveContractVersionDTOContract -> CurveContractVersionDTO { curveContractVersionDTOContract, ..} ) <$> f curveContractVersionDTOContract
{-# INLINE curveContractVersionDTOContractL #-}

-- | 'curveContractVersionDTOAddress' Lens
curveContractVersionDTOAddressL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOAddressL f CurveContractVersionDTO{..} = (\curveContractVersionDTOAddress -> CurveContractVersionDTO { curveContractVersionDTOAddress, ..} ) <$> f curveContractVersionDTOAddress
{-# INLINE curveContractVersionDTOAddressL #-}

-- | 'curveContractVersionDTOVersion' Lens
curveContractVersionDTOVersionL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOVersionL f CurveContractVersionDTO{..} = (\curveContractVersionDTOVersion -> CurveContractVersionDTO { curveContractVersionDTOVersion, ..} ) <$> f curveContractVersionDTOVersion
{-# INLINE curveContractVersionDTOVersionL #-}

-- | 'curveContractVersionDTOAdded' Lens
curveContractVersionDTOAddedL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOAddedL f CurveContractVersionDTO{..} = (\curveContractVersionDTOAdded -> CurveContractVersionDTO { curveContractVersionDTOAdded, ..} ) <$> f curveContractVersionDTOAdded
{-# INLINE curveContractVersionDTOAddedL #-}

-- | 'curveContractVersionDTOAddedAtBlock' Lens
curveContractVersionDTOAddedAtBlockL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOAddedAtBlockL f CurveContractVersionDTO{..} = (\curveContractVersionDTOAddedAtBlock -> CurveContractVersionDTO { curveContractVersionDTOAddedAtBlock, ..} ) <$> f curveContractVersionDTOAddedAtBlock
{-# INLINE curveContractVersionDTOAddedAtBlockL #-}

-- | 'curveContractVersionDTOAddedAtTransaction' Lens
curveContractVersionDTOAddedAtTransactionL :: Lens_' CurveContractVersionDTO (Maybe Text)
curveContractVersionDTOAddedAtTransactionL f CurveContractVersionDTO{..} = (\curveContractVersionDTOAddedAtTransaction -> CurveContractVersionDTO { curveContractVersionDTOAddedAtTransaction, ..} ) <$> f curveContractVersionDTOAddedAtTransaction
{-# INLINE curveContractVersionDTOAddedAtTransactionL #-}

-- | 'curveContractVersionDTOVid' Lens
curveContractVersionDTOVidL :: Lens_' CurveContractVersionDTO (Maybe Integer)
curveContractVersionDTOVidL f CurveContractVersionDTO{..} = (\curveContractVersionDTOVid -> CurveContractVersionDTO { curveContractVersionDTOVid, ..} ) <$> f curveContractVersionDTOVid
{-# INLINE curveContractVersionDTOVidL #-}



-- * CurveDailyVolumeDTO

-- | 'curveDailyVolumeDTOEntryTime' Lens
curveDailyVolumeDTOEntryTimeL :: Lens_' CurveDailyVolumeDTO (Maybe DateTime)
curveDailyVolumeDTOEntryTimeL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOEntryTime -> CurveDailyVolumeDTO { curveDailyVolumeDTOEntryTime, ..} ) <$> f curveDailyVolumeDTOEntryTime
{-# INLINE curveDailyVolumeDTOEntryTimeL #-}

-- | 'curveDailyVolumeDTORecvTime' Lens
curveDailyVolumeDTORecvTimeL :: Lens_' CurveDailyVolumeDTO (Maybe DateTime)
curveDailyVolumeDTORecvTimeL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTORecvTime -> CurveDailyVolumeDTO { curveDailyVolumeDTORecvTime, ..} ) <$> f curveDailyVolumeDTORecvTime
{-# INLINE curveDailyVolumeDTORecvTimeL #-}

-- | 'curveDailyVolumeDTOBlockNumber' Lens
curveDailyVolumeDTOBlockNumberL :: Lens_' CurveDailyVolumeDTO (Maybe Integer)
curveDailyVolumeDTOBlockNumberL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOBlockNumber -> CurveDailyVolumeDTO { curveDailyVolumeDTOBlockNumber, ..} ) <$> f curveDailyVolumeDTOBlockNumber
{-# INLINE curveDailyVolumeDTOBlockNumberL #-}

-- | 'curveDailyVolumeDTOId' Lens
curveDailyVolumeDTOIdL :: Lens_' CurveDailyVolumeDTO (Maybe Text)
curveDailyVolumeDTOIdL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOId -> CurveDailyVolumeDTO { curveDailyVolumeDTOId, ..} ) <$> f curveDailyVolumeDTOId
{-# INLINE curveDailyVolumeDTOIdL #-}

-- | 'curveDailyVolumeDTOPool' Lens
curveDailyVolumeDTOPoolL :: Lens_' CurveDailyVolumeDTO (Maybe Text)
curveDailyVolumeDTOPoolL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOPool -> CurveDailyVolumeDTO { curveDailyVolumeDTOPool, ..} ) <$> f curveDailyVolumeDTOPool
{-# INLINE curveDailyVolumeDTOPoolL #-}

-- | 'curveDailyVolumeDTOTimestamp' Lens
curveDailyVolumeDTOTimestampL :: Lens_' CurveDailyVolumeDTO (Maybe Text)
curveDailyVolumeDTOTimestampL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOTimestamp -> CurveDailyVolumeDTO { curveDailyVolumeDTOTimestamp, ..} ) <$> f curveDailyVolumeDTOTimestamp
{-# INLINE curveDailyVolumeDTOTimestampL #-}

-- | 'curveDailyVolumeDTOVolume' Lens
curveDailyVolumeDTOVolumeL :: Lens_' CurveDailyVolumeDTO (Maybe Text)
curveDailyVolumeDTOVolumeL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOVolume -> CurveDailyVolumeDTO { curveDailyVolumeDTOVolume, ..} ) <$> f curveDailyVolumeDTOVolume
{-# INLINE curveDailyVolumeDTOVolumeL #-}

-- | 'curveDailyVolumeDTOVid' Lens
curveDailyVolumeDTOVidL :: Lens_' CurveDailyVolumeDTO (Maybe Integer)
curveDailyVolumeDTOVidL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOVid -> CurveDailyVolumeDTO { curveDailyVolumeDTOVid, ..} ) <$> f curveDailyVolumeDTOVid
{-# INLINE curveDailyVolumeDTOVidL #-}

-- | 'curveDailyVolumeDTOBlockRange' Lens
curveDailyVolumeDTOBlockRangeL :: Lens_' CurveDailyVolumeDTO (Maybe Text)
curveDailyVolumeDTOBlockRangeL f CurveDailyVolumeDTO{..} = (\curveDailyVolumeDTOBlockRange -> CurveDailyVolumeDTO { curveDailyVolumeDTOBlockRange, ..} ) <$> f curveDailyVolumeDTOBlockRange
{-# INLINE curveDailyVolumeDTOBlockRangeL #-}



-- * CurveExchangeDTO

-- | 'curveExchangeDTOEntryTime' Lens
curveExchangeDTOEntryTimeL :: Lens_' CurveExchangeDTO (Maybe DateTime)
curveExchangeDTOEntryTimeL f CurveExchangeDTO{..} = (\curveExchangeDTOEntryTime -> CurveExchangeDTO { curveExchangeDTOEntryTime, ..} ) <$> f curveExchangeDTOEntryTime
{-# INLINE curveExchangeDTOEntryTimeL #-}

-- | 'curveExchangeDTORecvTime' Lens
curveExchangeDTORecvTimeL :: Lens_' CurveExchangeDTO (Maybe DateTime)
curveExchangeDTORecvTimeL f CurveExchangeDTO{..} = (\curveExchangeDTORecvTime -> CurveExchangeDTO { curveExchangeDTORecvTime, ..} ) <$> f curveExchangeDTORecvTime
{-# INLINE curveExchangeDTORecvTimeL #-}

-- | 'curveExchangeDTOBlockNumber' Lens
curveExchangeDTOBlockNumberL :: Lens_' CurveExchangeDTO (Maybe Integer)
curveExchangeDTOBlockNumberL f CurveExchangeDTO{..} = (\curveExchangeDTOBlockNumber -> CurveExchangeDTO { curveExchangeDTOBlockNumber, ..} ) <$> f curveExchangeDTOBlockNumber
{-# INLINE curveExchangeDTOBlockNumberL #-}

-- | 'curveExchangeDTOId' Lens
curveExchangeDTOIdL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOIdL f CurveExchangeDTO{..} = (\curveExchangeDTOId -> CurveExchangeDTO { curveExchangeDTOId, ..} ) <$> f curveExchangeDTOId
{-# INLINE curveExchangeDTOIdL #-}

-- | 'curveExchangeDTOPool' Lens
curveExchangeDTOPoolL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOPoolL f CurveExchangeDTO{..} = (\curveExchangeDTOPool -> CurveExchangeDTO { curveExchangeDTOPool, ..} ) <$> f curveExchangeDTOPool
{-# INLINE curveExchangeDTOPoolL #-}

-- | 'curveExchangeDTOBuyer' Lens
curveExchangeDTOBuyerL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOBuyerL f CurveExchangeDTO{..} = (\curveExchangeDTOBuyer -> CurveExchangeDTO { curveExchangeDTOBuyer, ..} ) <$> f curveExchangeDTOBuyer
{-# INLINE curveExchangeDTOBuyerL #-}

-- | 'curveExchangeDTOReceiver' Lens
curveExchangeDTOReceiverL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOReceiverL f CurveExchangeDTO{..} = (\curveExchangeDTOReceiver -> CurveExchangeDTO { curveExchangeDTOReceiver, ..} ) <$> f curveExchangeDTOReceiver
{-# INLINE curveExchangeDTOReceiverL #-}

-- | 'curveExchangeDTOTokenSold' Lens
curveExchangeDTOTokenSoldL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOTokenSoldL f CurveExchangeDTO{..} = (\curveExchangeDTOTokenSold -> CurveExchangeDTO { curveExchangeDTOTokenSold, ..} ) <$> f curveExchangeDTOTokenSold
{-# INLINE curveExchangeDTOTokenSoldL #-}

-- | 'curveExchangeDTOTokenBought' Lens
curveExchangeDTOTokenBoughtL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOTokenBoughtL f CurveExchangeDTO{..} = (\curveExchangeDTOTokenBought -> CurveExchangeDTO { curveExchangeDTOTokenBought, ..} ) <$> f curveExchangeDTOTokenBought
{-# INLINE curveExchangeDTOTokenBoughtL #-}

-- | 'curveExchangeDTOAmountSold' Lens
curveExchangeDTOAmountSoldL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOAmountSoldL f CurveExchangeDTO{..} = (\curveExchangeDTOAmountSold -> CurveExchangeDTO { curveExchangeDTOAmountSold, ..} ) <$> f curveExchangeDTOAmountSold
{-# INLINE curveExchangeDTOAmountSoldL #-}

-- | 'curveExchangeDTOAmountBought' Lens
curveExchangeDTOAmountBoughtL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOAmountBoughtL f CurveExchangeDTO{..} = (\curveExchangeDTOAmountBought -> CurveExchangeDTO { curveExchangeDTOAmountBought, ..} ) <$> f curveExchangeDTOAmountBought
{-# INLINE curveExchangeDTOAmountBoughtL #-}

-- | 'curveExchangeDTOBlock' Lens
curveExchangeDTOBlockL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOBlockL f CurveExchangeDTO{..} = (\curveExchangeDTOBlock -> CurveExchangeDTO { curveExchangeDTOBlock, ..} ) <$> f curveExchangeDTOBlock
{-# INLINE curveExchangeDTOBlockL #-}

-- | 'curveExchangeDTOTimestamp' Lens
curveExchangeDTOTimestampL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOTimestampL f CurveExchangeDTO{..} = (\curveExchangeDTOTimestamp -> CurveExchangeDTO { curveExchangeDTOTimestamp, ..} ) <$> f curveExchangeDTOTimestamp
{-# INLINE curveExchangeDTOTimestampL #-}

-- | 'curveExchangeDTOTransaction' Lens
curveExchangeDTOTransactionL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOTransactionL f CurveExchangeDTO{..} = (\curveExchangeDTOTransaction -> CurveExchangeDTO { curveExchangeDTOTransaction, ..} ) <$> f curveExchangeDTOTransaction
{-# INLINE curveExchangeDTOTransactionL #-}

-- | 'curveExchangeDTOVid' Lens
curveExchangeDTOVidL :: Lens_' CurveExchangeDTO (Maybe Integer)
curveExchangeDTOVidL f CurveExchangeDTO{..} = (\curveExchangeDTOVid -> CurveExchangeDTO { curveExchangeDTOVid, ..} ) <$> f curveExchangeDTOVid
{-# INLINE curveExchangeDTOVidL #-}

-- | 'curveExchangeDTOEvaluatedPrice' Lens
curveExchangeDTOEvaluatedPriceL :: Lens_' CurveExchangeDTO (Maybe Double)
curveExchangeDTOEvaluatedPriceL f CurveExchangeDTO{..} = (\curveExchangeDTOEvaluatedPrice -> CurveExchangeDTO { curveExchangeDTOEvaluatedPrice, ..} ) <$> f curveExchangeDTOEvaluatedPrice
{-# INLINE curveExchangeDTOEvaluatedPriceL #-}

-- | 'curveExchangeDTOEvaluatedAmount' Lens
curveExchangeDTOEvaluatedAmountL :: Lens_' CurveExchangeDTO (Maybe Double)
curveExchangeDTOEvaluatedAmountL f CurveExchangeDTO{..} = (\curveExchangeDTOEvaluatedAmount -> CurveExchangeDTO { curveExchangeDTOEvaluatedAmount, ..} ) <$> f curveExchangeDTOEvaluatedAmount
{-# INLINE curveExchangeDTOEvaluatedAmountL #-}

-- | 'curveExchangeDTOEvaluatedAggressor' Lens
curveExchangeDTOEvaluatedAggressorL :: Lens_' CurveExchangeDTO (Maybe TransactionsETradeAggressiveSide)
curveExchangeDTOEvaluatedAggressorL f CurveExchangeDTO{..} = (\curveExchangeDTOEvaluatedAggressor -> CurveExchangeDTO { curveExchangeDTOEvaluatedAggressor, ..} ) <$> f curveExchangeDTOEvaluatedAggressor
{-# INLINE curveExchangeDTOEvaluatedAggressorL #-}

-- | 'curveExchangeDTOPoolId' Lens
curveExchangeDTOPoolIdL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOPoolIdL f CurveExchangeDTO{..} = (\curveExchangeDTOPoolId -> CurveExchangeDTO { curveExchangeDTOPoolId, ..} ) <$> f curveExchangeDTOPoolId
{-# INLINE curveExchangeDTOPoolIdL #-}

-- | 'curveExchangeDTOTransactionId' Lens
curveExchangeDTOTransactionIdL :: Lens_' CurveExchangeDTO (Maybe Text)
curveExchangeDTOTransactionIdL f CurveExchangeDTO{..} = (\curveExchangeDTOTransactionId -> CurveExchangeDTO { curveExchangeDTOTransactionId, ..} ) <$> f curveExchangeDTOTransactionId
{-# INLINE curveExchangeDTOTransactionIdL #-}



-- * CurveFeeChangeLogDTO

-- | 'curveFeeChangeLogDTOEntryTime' Lens
curveFeeChangeLogDTOEntryTimeL :: Lens_' CurveFeeChangeLogDTO (Maybe DateTime)
curveFeeChangeLogDTOEntryTimeL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOEntryTime -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOEntryTime, ..} ) <$> f curveFeeChangeLogDTOEntryTime
{-# INLINE curveFeeChangeLogDTOEntryTimeL #-}

-- | 'curveFeeChangeLogDTORecvTime' Lens
curveFeeChangeLogDTORecvTimeL :: Lens_' CurveFeeChangeLogDTO (Maybe DateTime)
curveFeeChangeLogDTORecvTimeL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTORecvTime -> CurveFeeChangeLogDTO { curveFeeChangeLogDTORecvTime, ..} ) <$> f curveFeeChangeLogDTORecvTime
{-# INLINE curveFeeChangeLogDTORecvTimeL #-}

-- | 'curveFeeChangeLogDTOBlockNumber' Lens
curveFeeChangeLogDTOBlockNumberL :: Lens_' CurveFeeChangeLogDTO (Maybe Integer)
curveFeeChangeLogDTOBlockNumberL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOBlockNumber -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOBlockNumber, ..} ) <$> f curveFeeChangeLogDTOBlockNumber
{-# INLINE curveFeeChangeLogDTOBlockNumberL #-}

-- | 'curveFeeChangeLogDTOId' Lens
curveFeeChangeLogDTOIdL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOIdL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOId -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOId, ..} ) <$> f curveFeeChangeLogDTOId
{-# INLINE curveFeeChangeLogDTOIdL #-}

-- | 'curveFeeChangeLogDTOPool' Lens
curveFeeChangeLogDTOPoolL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOPoolL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOPool -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOPool, ..} ) <$> f curveFeeChangeLogDTOPool
{-# INLINE curveFeeChangeLogDTOPoolL #-}

-- | 'curveFeeChangeLogDTOValue' Lens
curveFeeChangeLogDTOValueL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOValueL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOValue -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOValue, ..} ) <$> f curveFeeChangeLogDTOValue
{-# INLINE curveFeeChangeLogDTOValueL #-}

-- | 'curveFeeChangeLogDTOBlock' Lens
curveFeeChangeLogDTOBlockL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOBlockL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOBlock -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOBlock, ..} ) <$> f curveFeeChangeLogDTOBlock
{-# INLINE curveFeeChangeLogDTOBlockL #-}

-- | 'curveFeeChangeLogDTOTimestamp' Lens
curveFeeChangeLogDTOTimestampL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOTimestampL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOTimestamp -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOTimestamp, ..} ) <$> f curveFeeChangeLogDTOTimestamp
{-# INLINE curveFeeChangeLogDTOTimestampL #-}

-- | 'curveFeeChangeLogDTOTransaction' Lens
curveFeeChangeLogDTOTransactionL :: Lens_' CurveFeeChangeLogDTO (Maybe Text)
curveFeeChangeLogDTOTransactionL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOTransaction -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOTransaction, ..} ) <$> f curveFeeChangeLogDTOTransaction
{-# INLINE curveFeeChangeLogDTOTransactionL #-}

-- | 'curveFeeChangeLogDTOVid' Lens
curveFeeChangeLogDTOVidL :: Lens_' CurveFeeChangeLogDTO (Maybe Integer)
curveFeeChangeLogDTOVidL f CurveFeeChangeLogDTO{..} = (\curveFeeChangeLogDTOVid -> CurveFeeChangeLogDTO { curveFeeChangeLogDTOVid, ..} ) <$> f curveFeeChangeLogDTOVid
{-# INLINE curveFeeChangeLogDTOVidL #-}



-- * CurveGaugeDTO

-- | 'curveGaugeDTOEntryTime' Lens
curveGaugeDTOEntryTimeL :: Lens_' CurveGaugeDTO (Maybe DateTime)
curveGaugeDTOEntryTimeL f CurveGaugeDTO{..} = (\curveGaugeDTOEntryTime -> CurveGaugeDTO { curveGaugeDTOEntryTime, ..} ) <$> f curveGaugeDTOEntryTime
{-# INLINE curveGaugeDTOEntryTimeL #-}

-- | 'curveGaugeDTORecvTime' Lens
curveGaugeDTORecvTimeL :: Lens_' CurveGaugeDTO (Maybe DateTime)
curveGaugeDTORecvTimeL f CurveGaugeDTO{..} = (\curveGaugeDTORecvTime -> CurveGaugeDTO { curveGaugeDTORecvTime, ..} ) <$> f curveGaugeDTORecvTime
{-# INLINE curveGaugeDTORecvTimeL #-}

-- | 'curveGaugeDTOBlockNumber' Lens
curveGaugeDTOBlockNumberL :: Lens_' CurveGaugeDTO (Maybe Integer)
curveGaugeDTOBlockNumberL f CurveGaugeDTO{..} = (\curveGaugeDTOBlockNumber -> CurveGaugeDTO { curveGaugeDTOBlockNumber, ..} ) <$> f curveGaugeDTOBlockNumber
{-# INLINE curveGaugeDTOBlockNumberL #-}

-- | 'curveGaugeDTOId' Lens
curveGaugeDTOIdL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOIdL f CurveGaugeDTO{..} = (\curveGaugeDTOId -> CurveGaugeDTO { curveGaugeDTOId, ..} ) <$> f curveGaugeDTOId
{-# INLINE curveGaugeDTOIdL #-}

-- | 'curveGaugeDTOAddress' Lens
curveGaugeDTOAddressL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOAddressL f CurveGaugeDTO{..} = (\curveGaugeDTOAddress -> CurveGaugeDTO { curveGaugeDTOAddress, ..} ) <$> f curveGaugeDTOAddress
{-# INLINE curveGaugeDTOAddressL #-}

-- | 'curveGaugeDTOType' Lens
curveGaugeDTOTypeL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOTypeL f CurveGaugeDTO{..} = (\curveGaugeDTOType -> CurveGaugeDTO { curveGaugeDTOType, ..} ) <$> f curveGaugeDTOType
{-# INLINE curveGaugeDTOTypeL #-}

-- | 'curveGaugeDTOPool' Lens
curveGaugeDTOPoolL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOPoolL f CurveGaugeDTO{..} = (\curveGaugeDTOPool -> CurveGaugeDTO { curveGaugeDTOPool, ..} ) <$> f curveGaugeDTOPool
{-# INLINE curveGaugeDTOPoolL #-}

-- | 'curveGaugeDTOCreated' Lens
curveGaugeDTOCreatedL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOCreatedL f CurveGaugeDTO{..} = (\curveGaugeDTOCreated -> CurveGaugeDTO { curveGaugeDTOCreated, ..} ) <$> f curveGaugeDTOCreated
{-# INLINE curveGaugeDTOCreatedL #-}

-- | 'curveGaugeDTOCreatedAtBlock' Lens
curveGaugeDTOCreatedAtBlockL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOCreatedAtBlockL f CurveGaugeDTO{..} = (\curveGaugeDTOCreatedAtBlock -> CurveGaugeDTO { curveGaugeDTOCreatedAtBlock, ..} ) <$> f curveGaugeDTOCreatedAtBlock
{-# INLINE curveGaugeDTOCreatedAtBlockL #-}

-- | 'curveGaugeDTOCreatedAtTransaction' Lens
curveGaugeDTOCreatedAtTransactionL :: Lens_' CurveGaugeDTO (Maybe Text)
curveGaugeDTOCreatedAtTransactionL f CurveGaugeDTO{..} = (\curveGaugeDTOCreatedAtTransaction -> CurveGaugeDTO { curveGaugeDTOCreatedAtTransaction, ..} ) <$> f curveGaugeDTOCreatedAtTransaction
{-# INLINE curveGaugeDTOCreatedAtTransactionL #-}

-- | 'curveGaugeDTOVid' Lens
curveGaugeDTOVidL :: Lens_' CurveGaugeDTO (Maybe Integer)
curveGaugeDTOVidL f CurveGaugeDTO{..} = (\curveGaugeDTOVid -> CurveGaugeDTO { curveGaugeDTOVid, ..} ) <$> f curveGaugeDTOVid
{-# INLINE curveGaugeDTOVidL #-}



-- * CurveGaugeDepositDTO

-- | 'curveGaugeDepositDTOEntryTime' Lens
curveGaugeDepositDTOEntryTimeL :: Lens_' CurveGaugeDepositDTO (Maybe DateTime)
curveGaugeDepositDTOEntryTimeL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOEntryTime -> CurveGaugeDepositDTO { curveGaugeDepositDTOEntryTime, ..} ) <$> f curveGaugeDepositDTOEntryTime
{-# INLINE curveGaugeDepositDTOEntryTimeL #-}

-- | 'curveGaugeDepositDTORecvTime' Lens
curveGaugeDepositDTORecvTimeL :: Lens_' CurveGaugeDepositDTO (Maybe DateTime)
curveGaugeDepositDTORecvTimeL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTORecvTime -> CurveGaugeDepositDTO { curveGaugeDepositDTORecvTime, ..} ) <$> f curveGaugeDepositDTORecvTime
{-# INLINE curveGaugeDepositDTORecvTimeL #-}

-- | 'curveGaugeDepositDTOBlockNumber' Lens
curveGaugeDepositDTOBlockNumberL :: Lens_' CurveGaugeDepositDTO (Maybe Integer)
curveGaugeDepositDTOBlockNumberL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOBlockNumber -> CurveGaugeDepositDTO { curveGaugeDepositDTOBlockNumber, ..} ) <$> f curveGaugeDepositDTOBlockNumber
{-# INLINE curveGaugeDepositDTOBlockNumberL #-}

-- | 'curveGaugeDepositDTOId' Lens
curveGaugeDepositDTOIdL :: Lens_' CurveGaugeDepositDTO (Maybe Text)
curveGaugeDepositDTOIdL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOId -> CurveGaugeDepositDTO { curveGaugeDepositDTOId, ..} ) <$> f curveGaugeDepositDTOId
{-# INLINE curveGaugeDepositDTOIdL #-}

-- | 'curveGaugeDepositDTOGauge' Lens
curveGaugeDepositDTOGaugeL :: Lens_' CurveGaugeDepositDTO (Maybe Text)
curveGaugeDepositDTOGaugeL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOGauge -> CurveGaugeDepositDTO { curveGaugeDepositDTOGauge, ..} ) <$> f curveGaugeDepositDTOGauge
{-# INLINE curveGaugeDepositDTOGaugeL #-}

-- | 'curveGaugeDepositDTOProvider' Lens
curveGaugeDepositDTOProviderL :: Lens_' CurveGaugeDepositDTO (Maybe Text)
curveGaugeDepositDTOProviderL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOProvider -> CurveGaugeDepositDTO { curveGaugeDepositDTOProvider, ..} ) <$> f curveGaugeDepositDTOProvider
{-# INLINE curveGaugeDepositDTOProviderL #-}

-- | 'curveGaugeDepositDTOValue' Lens
curveGaugeDepositDTOValueL :: Lens_' CurveGaugeDepositDTO (Maybe Text)
curveGaugeDepositDTOValueL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOValue -> CurveGaugeDepositDTO { curveGaugeDepositDTOValue, ..} ) <$> f curveGaugeDepositDTOValue
{-# INLINE curveGaugeDepositDTOValueL #-}

-- | 'curveGaugeDepositDTOVid' Lens
curveGaugeDepositDTOVidL :: Lens_' CurveGaugeDepositDTO (Maybe Integer)
curveGaugeDepositDTOVidL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOVid -> CurveGaugeDepositDTO { curveGaugeDepositDTOVid, ..} ) <$> f curveGaugeDepositDTOVid
{-# INLINE curveGaugeDepositDTOVidL #-}

-- | 'curveGaugeDepositDTOBlockRange' Lens
curveGaugeDepositDTOBlockRangeL :: Lens_' CurveGaugeDepositDTO (Maybe Text)
curveGaugeDepositDTOBlockRangeL f CurveGaugeDepositDTO{..} = (\curveGaugeDepositDTOBlockRange -> CurveGaugeDepositDTO { curveGaugeDepositDTOBlockRange, ..} ) <$> f curveGaugeDepositDTOBlockRange
{-# INLINE curveGaugeDepositDTOBlockRangeL #-}



-- * CurveGaugeLiquidityDTO

-- | 'curveGaugeLiquidityDTOEntryTime' Lens
curveGaugeLiquidityDTOEntryTimeL :: Lens_' CurveGaugeLiquidityDTO (Maybe DateTime)
curveGaugeLiquidityDTOEntryTimeL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOEntryTime -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOEntryTime, ..} ) <$> f curveGaugeLiquidityDTOEntryTime
{-# INLINE curveGaugeLiquidityDTOEntryTimeL #-}

-- | 'curveGaugeLiquidityDTORecvTime' Lens
curveGaugeLiquidityDTORecvTimeL :: Lens_' CurveGaugeLiquidityDTO (Maybe DateTime)
curveGaugeLiquidityDTORecvTimeL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTORecvTime -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTORecvTime, ..} ) <$> f curveGaugeLiquidityDTORecvTime
{-# INLINE curveGaugeLiquidityDTORecvTimeL #-}

-- | 'curveGaugeLiquidityDTOBlockNumber' Lens
curveGaugeLiquidityDTOBlockNumberL :: Lens_' CurveGaugeLiquidityDTO (Maybe Integer)
curveGaugeLiquidityDTOBlockNumberL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOBlockNumber -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOBlockNumber, ..} ) <$> f curveGaugeLiquidityDTOBlockNumber
{-# INLINE curveGaugeLiquidityDTOBlockNumberL #-}

-- | 'curveGaugeLiquidityDTOId' Lens
curveGaugeLiquidityDTOIdL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOIdL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOId -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOId, ..} ) <$> f curveGaugeLiquidityDTOId
{-# INLINE curveGaugeLiquidityDTOIdL #-}

-- | 'curveGaugeLiquidityDTOUser' Lens
curveGaugeLiquidityDTOUserL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOUserL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOUser -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOUser, ..} ) <$> f curveGaugeLiquidityDTOUser
{-# INLINE curveGaugeLiquidityDTOUserL #-}

-- | 'curveGaugeLiquidityDTOGauge' Lens
curveGaugeLiquidityDTOGaugeL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOGaugeL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOGauge -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOGauge, ..} ) <$> f curveGaugeLiquidityDTOGauge
{-# INLINE curveGaugeLiquidityDTOGaugeL #-}

-- | 'curveGaugeLiquidityDTOOriginalBalance' Lens
curveGaugeLiquidityDTOOriginalBalanceL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOOriginalBalanceL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOOriginalBalance -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOOriginalBalance, ..} ) <$> f curveGaugeLiquidityDTOOriginalBalance
{-# INLINE curveGaugeLiquidityDTOOriginalBalanceL #-}

-- | 'curveGaugeLiquidityDTOOriginalSupply' Lens
curveGaugeLiquidityDTOOriginalSupplyL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOOriginalSupplyL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOOriginalSupply -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOOriginalSupply, ..} ) <$> f curveGaugeLiquidityDTOOriginalSupply
{-# INLINE curveGaugeLiquidityDTOOriginalSupplyL #-}

-- | 'curveGaugeLiquidityDTOWorkingBalance' Lens
curveGaugeLiquidityDTOWorkingBalanceL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOWorkingBalanceL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOWorkingBalance -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOWorkingBalance, ..} ) <$> f curveGaugeLiquidityDTOWorkingBalance
{-# INLINE curveGaugeLiquidityDTOWorkingBalanceL #-}

-- | 'curveGaugeLiquidityDTOWorkingSupply' Lens
curveGaugeLiquidityDTOWorkingSupplyL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOWorkingSupplyL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOWorkingSupply -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOWorkingSupply, ..} ) <$> f curveGaugeLiquidityDTOWorkingSupply
{-# INLINE curveGaugeLiquidityDTOWorkingSupplyL #-}

-- | 'curveGaugeLiquidityDTOTimestamp' Lens
curveGaugeLiquidityDTOTimestampL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOTimestampL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOTimestamp -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOTimestamp, ..} ) <$> f curveGaugeLiquidityDTOTimestamp
{-# INLINE curveGaugeLiquidityDTOTimestampL #-}

-- | 'curveGaugeLiquidityDTOBlock' Lens
curveGaugeLiquidityDTOBlockL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOBlockL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOBlock -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOBlock, ..} ) <$> f curveGaugeLiquidityDTOBlock
{-# INLINE curveGaugeLiquidityDTOBlockL #-}

-- | 'curveGaugeLiquidityDTOTransaction' Lens
curveGaugeLiquidityDTOTransactionL :: Lens_' CurveGaugeLiquidityDTO (Maybe Text)
curveGaugeLiquidityDTOTransactionL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOTransaction -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOTransaction, ..} ) <$> f curveGaugeLiquidityDTOTransaction
{-# INLINE curveGaugeLiquidityDTOTransactionL #-}

-- | 'curveGaugeLiquidityDTOVid' Lens
curveGaugeLiquidityDTOVidL :: Lens_' CurveGaugeLiquidityDTO (Maybe Integer)
curveGaugeLiquidityDTOVidL f CurveGaugeLiquidityDTO{..} = (\curveGaugeLiquidityDTOVid -> CurveGaugeLiquidityDTO { curveGaugeLiquidityDTOVid, ..} ) <$> f curveGaugeLiquidityDTOVid
{-# INLINE curveGaugeLiquidityDTOVidL #-}



-- * CurveGaugeTotalWeightDTO

-- | 'curveGaugeTotalWeightDTOEntryTime' Lens
curveGaugeTotalWeightDTOEntryTimeL :: Lens_' CurveGaugeTotalWeightDTO (Maybe DateTime)
curveGaugeTotalWeightDTOEntryTimeL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOEntryTime -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOEntryTime, ..} ) <$> f curveGaugeTotalWeightDTOEntryTime
{-# INLINE curveGaugeTotalWeightDTOEntryTimeL #-}

-- | 'curveGaugeTotalWeightDTORecvTime' Lens
curveGaugeTotalWeightDTORecvTimeL :: Lens_' CurveGaugeTotalWeightDTO (Maybe DateTime)
curveGaugeTotalWeightDTORecvTimeL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTORecvTime -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTORecvTime, ..} ) <$> f curveGaugeTotalWeightDTORecvTime
{-# INLINE curveGaugeTotalWeightDTORecvTimeL #-}

-- | 'curveGaugeTotalWeightDTOBlockNumber' Lens
curveGaugeTotalWeightDTOBlockNumberL :: Lens_' CurveGaugeTotalWeightDTO (Maybe Integer)
curveGaugeTotalWeightDTOBlockNumberL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOBlockNumber -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOBlockNumber, ..} ) <$> f curveGaugeTotalWeightDTOBlockNumber
{-# INLINE curveGaugeTotalWeightDTOBlockNumberL #-}

-- | 'curveGaugeTotalWeightDTOId' Lens
curveGaugeTotalWeightDTOIdL :: Lens_' CurveGaugeTotalWeightDTO (Maybe Text)
curveGaugeTotalWeightDTOIdL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOId -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOId, ..} ) <$> f curveGaugeTotalWeightDTOId
{-# INLINE curveGaugeTotalWeightDTOIdL #-}

-- | 'curveGaugeTotalWeightDTOTime' Lens
curveGaugeTotalWeightDTOTimeL :: Lens_' CurveGaugeTotalWeightDTO (Maybe Text)
curveGaugeTotalWeightDTOTimeL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOTime -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOTime, ..} ) <$> f curveGaugeTotalWeightDTOTime
{-# INLINE curveGaugeTotalWeightDTOTimeL #-}

-- | 'curveGaugeTotalWeightDTOWeight' Lens
curveGaugeTotalWeightDTOWeightL :: Lens_' CurveGaugeTotalWeightDTO (Maybe Text)
curveGaugeTotalWeightDTOWeightL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOWeight -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOWeight, ..} ) <$> f curveGaugeTotalWeightDTOWeight
{-# INLINE curveGaugeTotalWeightDTOWeightL #-}

-- | 'curveGaugeTotalWeightDTOVid' Lens
curveGaugeTotalWeightDTOVidL :: Lens_' CurveGaugeTotalWeightDTO (Maybe Integer)
curveGaugeTotalWeightDTOVidL f CurveGaugeTotalWeightDTO{..} = (\curveGaugeTotalWeightDTOVid -> CurveGaugeTotalWeightDTO { curveGaugeTotalWeightDTOVid, ..} ) <$> f curveGaugeTotalWeightDTOVid
{-# INLINE curveGaugeTotalWeightDTOVidL #-}



-- * CurveGaugeTypeDTO

-- | 'curveGaugeTypeDTOEntryTime' Lens
curveGaugeTypeDTOEntryTimeL :: Lens_' CurveGaugeTypeDTO (Maybe DateTime)
curveGaugeTypeDTOEntryTimeL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOEntryTime -> CurveGaugeTypeDTO { curveGaugeTypeDTOEntryTime, ..} ) <$> f curveGaugeTypeDTOEntryTime
{-# INLINE curveGaugeTypeDTOEntryTimeL #-}

-- | 'curveGaugeTypeDTORecvTime' Lens
curveGaugeTypeDTORecvTimeL :: Lens_' CurveGaugeTypeDTO (Maybe DateTime)
curveGaugeTypeDTORecvTimeL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTORecvTime -> CurveGaugeTypeDTO { curveGaugeTypeDTORecvTime, ..} ) <$> f curveGaugeTypeDTORecvTime
{-# INLINE curveGaugeTypeDTORecvTimeL #-}

-- | 'curveGaugeTypeDTOBlockNumber' Lens
curveGaugeTypeDTOBlockNumberL :: Lens_' CurveGaugeTypeDTO (Maybe Integer)
curveGaugeTypeDTOBlockNumberL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOBlockNumber -> CurveGaugeTypeDTO { curveGaugeTypeDTOBlockNumber, ..} ) <$> f curveGaugeTypeDTOBlockNumber
{-# INLINE curveGaugeTypeDTOBlockNumberL #-}

-- | 'curveGaugeTypeDTOId' Lens
curveGaugeTypeDTOIdL :: Lens_' CurveGaugeTypeDTO (Maybe Text)
curveGaugeTypeDTOIdL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOId -> CurveGaugeTypeDTO { curveGaugeTypeDTOId, ..} ) <$> f curveGaugeTypeDTOId
{-# INLINE curveGaugeTypeDTOIdL #-}

-- | 'curveGaugeTypeDTOName' Lens
curveGaugeTypeDTONameL :: Lens_' CurveGaugeTypeDTO (Maybe Text)
curveGaugeTypeDTONameL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOName -> CurveGaugeTypeDTO { curveGaugeTypeDTOName, ..} ) <$> f curveGaugeTypeDTOName
{-# INLINE curveGaugeTypeDTONameL #-}

-- | 'curveGaugeTypeDTOGaugeCount' Lens
curveGaugeTypeDTOGaugeCountL :: Lens_' CurveGaugeTypeDTO (Maybe Text)
curveGaugeTypeDTOGaugeCountL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOGaugeCount -> CurveGaugeTypeDTO { curveGaugeTypeDTOGaugeCount, ..} ) <$> f curveGaugeTypeDTOGaugeCount
{-# INLINE curveGaugeTypeDTOGaugeCountL #-}

-- | 'curveGaugeTypeDTOVid' Lens
curveGaugeTypeDTOVidL :: Lens_' CurveGaugeTypeDTO (Maybe Integer)
curveGaugeTypeDTOVidL f CurveGaugeTypeDTO{..} = (\curveGaugeTypeDTOVid -> CurveGaugeTypeDTO { curveGaugeTypeDTOVid, ..} ) <$> f curveGaugeTypeDTOVid
{-# INLINE curveGaugeTypeDTOVidL #-}



-- * CurveGaugeTypeWeightDTO

-- | 'curveGaugeTypeWeightDTOEntryTime' Lens
curveGaugeTypeWeightDTOEntryTimeL :: Lens_' CurveGaugeTypeWeightDTO (Maybe DateTime)
curveGaugeTypeWeightDTOEntryTimeL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOEntryTime -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOEntryTime, ..} ) <$> f curveGaugeTypeWeightDTOEntryTime
{-# INLINE curveGaugeTypeWeightDTOEntryTimeL #-}

-- | 'curveGaugeTypeWeightDTORecvTime' Lens
curveGaugeTypeWeightDTORecvTimeL :: Lens_' CurveGaugeTypeWeightDTO (Maybe DateTime)
curveGaugeTypeWeightDTORecvTimeL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTORecvTime -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTORecvTime, ..} ) <$> f curveGaugeTypeWeightDTORecvTime
{-# INLINE curveGaugeTypeWeightDTORecvTimeL #-}

-- | 'curveGaugeTypeWeightDTOBlockNumber' Lens
curveGaugeTypeWeightDTOBlockNumberL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Integer)
curveGaugeTypeWeightDTOBlockNumberL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOBlockNumber -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOBlockNumber, ..} ) <$> f curveGaugeTypeWeightDTOBlockNumber
{-# INLINE curveGaugeTypeWeightDTOBlockNumberL #-}

-- | 'curveGaugeTypeWeightDTOId' Lens
curveGaugeTypeWeightDTOIdL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Text)
curveGaugeTypeWeightDTOIdL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOId -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOId, ..} ) <$> f curveGaugeTypeWeightDTOId
{-# INLINE curveGaugeTypeWeightDTOIdL #-}

-- | 'curveGaugeTypeWeightDTOType' Lens
curveGaugeTypeWeightDTOTypeL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Text)
curveGaugeTypeWeightDTOTypeL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOType -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOType, ..} ) <$> f curveGaugeTypeWeightDTOType
{-# INLINE curveGaugeTypeWeightDTOTypeL #-}

-- | 'curveGaugeTypeWeightDTOTime' Lens
curveGaugeTypeWeightDTOTimeL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Text)
curveGaugeTypeWeightDTOTimeL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOTime -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOTime, ..} ) <$> f curveGaugeTypeWeightDTOTime
{-# INLINE curveGaugeTypeWeightDTOTimeL #-}

-- | 'curveGaugeTypeWeightDTOWeight' Lens
curveGaugeTypeWeightDTOWeightL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Text)
curveGaugeTypeWeightDTOWeightL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOWeight -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOWeight, ..} ) <$> f curveGaugeTypeWeightDTOWeight
{-# INLINE curveGaugeTypeWeightDTOWeightL #-}

-- | 'curveGaugeTypeWeightDTOVid' Lens
curveGaugeTypeWeightDTOVidL :: Lens_' CurveGaugeTypeWeightDTO (Maybe Integer)
curveGaugeTypeWeightDTOVidL f CurveGaugeTypeWeightDTO{..} = (\curveGaugeTypeWeightDTOVid -> CurveGaugeTypeWeightDTO { curveGaugeTypeWeightDTOVid, ..} ) <$> f curveGaugeTypeWeightDTOVid
{-# INLINE curveGaugeTypeWeightDTOVidL #-}



-- * CurveGaugeWeightDTO

-- | 'curveGaugeWeightDTOEntryTime' Lens
curveGaugeWeightDTOEntryTimeL :: Lens_' CurveGaugeWeightDTO (Maybe DateTime)
curveGaugeWeightDTOEntryTimeL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOEntryTime -> CurveGaugeWeightDTO { curveGaugeWeightDTOEntryTime, ..} ) <$> f curveGaugeWeightDTOEntryTime
{-# INLINE curveGaugeWeightDTOEntryTimeL #-}

-- | 'curveGaugeWeightDTORecvTime' Lens
curveGaugeWeightDTORecvTimeL :: Lens_' CurveGaugeWeightDTO (Maybe DateTime)
curveGaugeWeightDTORecvTimeL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTORecvTime -> CurveGaugeWeightDTO { curveGaugeWeightDTORecvTime, ..} ) <$> f curveGaugeWeightDTORecvTime
{-# INLINE curveGaugeWeightDTORecvTimeL #-}

-- | 'curveGaugeWeightDTOBlockNumber' Lens
curveGaugeWeightDTOBlockNumberL :: Lens_' CurveGaugeWeightDTO (Maybe Integer)
curveGaugeWeightDTOBlockNumberL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOBlockNumber -> CurveGaugeWeightDTO { curveGaugeWeightDTOBlockNumber, ..} ) <$> f curveGaugeWeightDTOBlockNumber
{-# INLINE curveGaugeWeightDTOBlockNumberL #-}

-- | 'curveGaugeWeightDTOId' Lens
curveGaugeWeightDTOIdL :: Lens_' CurveGaugeWeightDTO (Maybe Text)
curveGaugeWeightDTOIdL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOId -> CurveGaugeWeightDTO { curveGaugeWeightDTOId, ..} ) <$> f curveGaugeWeightDTOId
{-# INLINE curveGaugeWeightDTOIdL #-}

-- | 'curveGaugeWeightDTOGauge' Lens
curveGaugeWeightDTOGaugeL :: Lens_' CurveGaugeWeightDTO (Maybe Text)
curveGaugeWeightDTOGaugeL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOGauge -> CurveGaugeWeightDTO { curveGaugeWeightDTOGauge, ..} ) <$> f curveGaugeWeightDTOGauge
{-# INLINE curveGaugeWeightDTOGaugeL #-}

-- | 'curveGaugeWeightDTOTime' Lens
curveGaugeWeightDTOTimeL :: Lens_' CurveGaugeWeightDTO (Maybe Text)
curveGaugeWeightDTOTimeL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOTime -> CurveGaugeWeightDTO { curveGaugeWeightDTOTime, ..} ) <$> f curveGaugeWeightDTOTime
{-# INLINE curveGaugeWeightDTOTimeL #-}

-- | 'curveGaugeWeightDTOWeight' Lens
curveGaugeWeightDTOWeightL :: Lens_' CurveGaugeWeightDTO (Maybe Text)
curveGaugeWeightDTOWeightL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOWeight -> CurveGaugeWeightDTO { curveGaugeWeightDTOWeight, ..} ) <$> f curveGaugeWeightDTOWeight
{-# INLINE curveGaugeWeightDTOWeightL #-}

-- | 'curveGaugeWeightDTOVid' Lens
curveGaugeWeightDTOVidL :: Lens_' CurveGaugeWeightDTO (Maybe Integer)
curveGaugeWeightDTOVidL f CurveGaugeWeightDTO{..} = (\curveGaugeWeightDTOVid -> CurveGaugeWeightDTO { curveGaugeWeightDTOVid, ..} ) <$> f curveGaugeWeightDTOVid
{-# INLINE curveGaugeWeightDTOVidL #-}



-- * CurveGaugeWeightVoteDTO

-- | 'curveGaugeWeightVoteDTOEntryTime' Lens
curveGaugeWeightVoteDTOEntryTimeL :: Lens_' CurveGaugeWeightVoteDTO (Maybe DateTime)
curveGaugeWeightVoteDTOEntryTimeL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOEntryTime -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOEntryTime, ..} ) <$> f curveGaugeWeightVoteDTOEntryTime
{-# INLINE curveGaugeWeightVoteDTOEntryTimeL #-}

-- | 'curveGaugeWeightVoteDTORecvTime' Lens
curveGaugeWeightVoteDTORecvTimeL :: Lens_' CurveGaugeWeightVoteDTO (Maybe DateTime)
curveGaugeWeightVoteDTORecvTimeL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTORecvTime -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTORecvTime, ..} ) <$> f curveGaugeWeightVoteDTORecvTime
{-# INLINE curveGaugeWeightVoteDTORecvTimeL #-}

-- | 'curveGaugeWeightVoteDTOBlockNumber' Lens
curveGaugeWeightVoteDTOBlockNumberL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Integer)
curveGaugeWeightVoteDTOBlockNumberL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOBlockNumber -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOBlockNumber, ..} ) <$> f curveGaugeWeightVoteDTOBlockNumber
{-# INLINE curveGaugeWeightVoteDTOBlockNumberL #-}

-- | 'curveGaugeWeightVoteDTOId' Lens
curveGaugeWeightVoteDTOIdL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Text)
curveGaugeWeightVoteDTOIdL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOId -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOId, ..} ) <$> f curveGaugeWeightVoteDTOId
{-# INLINE curveGaugeWeightVoteDTOIdL #-}

-- | 'curveGaugeWeightVoteDTOGauge' Lens
curveGaugeWeightVoteDTOGaugeL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Text)
curveGaugeWeightVoteDTOGaugeL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOGauge -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOGauge, ..} ) <$> f curveGaugeWeightVoteDTOGauge
{-# INLINE curveGaugeWeightVoteDTOGaugeL #-}

-- | 'curveGaugeWeightVoteDTOUser' Lens
curveGaugeWeightVoteDTOUserL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Text)
curveGaugeWeightVoteDTOUserL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOUser -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOUser, ..} ) <$> f curveGaugeWeightVoteDTOUser
{-# INLINE curveGaugeWeightVoteDTOUserL #-}

-- | 'curveGaugeWeightVoteDTOTime' Lens
curveGaugeWeightVoteDTOTimeL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Text)
curveGaugeWeightVoteDTOTimeL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOTime -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOTime, ..} ) <$> f curveGaugeWeightVoteDTOTime
{-# INLINE curveGaugeWeightVoteDTOTimeL #-}

-- | 'curveGaugeWeightVoteDTOWeight' Lens
curveGaugeWeightVoteDTOWeightL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Text)
curveGaugeWeightVoteDTOWeightL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOWeight -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOWeight, ..} ) <$> f curveGaugeWeightVoteDTOWeight
{-# INLINE curveGaugeWeightVoteDTOWeightL #-}

-- | 'curveGaugeWeightVoteDTOVid' Lens
curveGaugeWeightVoteDTOVidL :: Lens_' CurveGaugeWeightVoteDTO (Maybe Integer)
curveGaugeWeightVoteDTOVidL f CurveGaugeWeightVoteDTO{..} = (\curveGaugeWeightVoteDTOVid -> CurveGaugeWeightVoteDTO { curveGaugeWeightVoteDTOVid, ..} ) <$> f curveGaugeWeightVoteDTOVid
{-# INLINE curveGaugeWeightVoteDTOVidL #-}



-- * CurveGaugeWithdrawDTO

-- | 'curveGaugeWithdrawDTOEntryTime' Lens
curveGaugeWithdrawDTOEntryTimeL :: Lens_' CurveGaugeWithdrawDTO (Maybe DateTime)
curveGaugeWithdrawDTOEntryTimeL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOEntryTime -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOEntryTime, ..} ) <$> f curveGaugeWithdrawDTOEntryTime
{-# INLINE curveGaugeWithdrawDTOEntryTimeL #-}

-- | 'curveGaugeWithdrawDTORecvTime' Lens
curveGaugeWithdrawDTORecvTimeL :: Lens_' CurveGaugeWithdrawDTO (Maybe DateTime)
curveGaugeWithdrawDTORecvTimeL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTORecvTime -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTORecvTime, ..} ) <$> f curveGaugeWithdrawDTORecvTime
{-# INLINE curveGaugeWithdrawDTORecvTimeL #-}

-- | 'curveGaugeWithdrawDTOBlockNumber' Lens
curveGaugeWithdrawDTOBlockNumberL :: Lens_' CurveGaugeWithdrawDTO (Maybe Integer)
curveGaugeWithdrawDTOBlockNumberL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOBlockNumber -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOBlockNumber, ..} ) <$> f curveGaugeWithdrawDTOBlockNumber
{-# INLINE curveGaugeWithdrawDTOBlockNumberL #-}

-- | 'curveGaugeWithdrawDTOId' Lens
curveGaugeWithdrawDTOIdL :: Lens_' CurveGaugeWithdrawDTO (Maybe Text)
curveGaugeWithdrawDTOIdL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOId -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOId, ..} ) <$> f curveGaugeWithdrawDTOId
{-# INLINE curveGaugeWithdrawDTOIdL #-}

-- | 'curveGaugeWithdrawDTOGauge' Lens
curveGaugeWithdrawDTOGaugeL :: Lens_' CurveGaugeWithdrawDTO (Maybe Text)
curveGaugeWithdrawDTOGaugeL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOGauge -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOGauge, ..} ) <$> f curveGaugeWithdrawDTOGauge
{-# INLINE curveGaugeWithdrawDTOGaugeL #-}

-- | 'curveGaugeWithdrawDTOProvider' Lens
curveGaugeWithdrawDTOProviderL :: Lens_' CurveGaugeWithdrawDTO (Maybe Text)
curveGaugeWithdrawDTOProviderL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOProvider -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOProvider, ..} ) <$> f curveGaugeWithdrawDTOProvider
{-# INLINE curveGaugeWithdrawDTOProviderL #-}

-- | 'curveGaugeWithdrawDTOValue' Lens
curveGaugeWithdrawDTOValueL :: Lens_' CurveGaugeWithdrawDTO (Maybe Text)
curveGaugeWithdrawDTOValueL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOValue -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOValue, ..} ) <$> f curveGaugeWithdrawDTOValue
{-# INLINE curveGaugeWithdrawDTOValueL #-}

-- | 'curveGaugeWithdrawDTOVid' Lens
curveGaugeWithdrawDTOVidL :: Lens_' CurveGaugeWithdrawDTO (Maybe Integer)
curveGaugeWithdrawDTOVidL f CurveGaugeWithdrawDTO{..} = (\curveGaugeWithdrawDTOVid -> CurveGaugeWithdrawDTO { curveGaugeWithdrawDTOVid, ..} ) <$> f curveGaugeWithdrawDTOVid
{-# INLINE curveGaugeWithdrawDTOVidL #-}



-- * CurveHourlyVolumeDTO

-- | 'curveHourlyVolumeDTOEntryTime' Lens
curveHourlyVolumeDTOEntryTimeL :: Lens_' CurveHourlyVolumeDTO (Maybe DateTime)
curveHourlyVolumeDTOEntryTimeL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOEntryTime -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOEntryTime, ..} ) <$> f curveHourlyVolumeDTOEntryTime
{-# INLINE curveHourlyVolumeDTOEntryTimeL #-}

-- | 'curveHourlyVolumeDTORecvTime' Lens
curveHourlyVolumeDTORecvTimeL :: Lens_' CurveHourlyVolumeDTO (Maybe DateTime)
curveHourlyVolumeDTORecvTimeL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTORecvTime -> CurveHourlyVolumeDTO { curveHourlyVolumeDTORecvTime, ..} ) <$> f curveHourlyVolumeDTORecvTime
{-# INLINE curveHourlyVolumeDTORecvTimeL #-}

-- | 'curveHourlyVolumeDTOBlockNumber' Lens
curveHourlyVolumeDTOBlockNumberL :: Lens_' CurveHourlyVolumeDTO (Maybe Integer)
curveHourlyVolumeDTOBlockNumberL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOBlockNumber -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOBlockNumber, ..} ) <$> f curveHourlyVolumeDTOBlockNumber
{-# INLINE curveHourlyVolumeDTOBlockNumberL #-}

-- | 'curveHourlyVolumeDTOId' Lens
curveHourlyVolumeDTOIdL :: Lens_' CurveHourlyVolumeDTO (Maybe Text)
curveHourlyVolumeDTOIdL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOId -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOId, ..} ) <$> f curveHourlyVolumeDTOId
{-# INLINE curveHourlyVolumeDTOIdL #-}

-- | 'curveHourlyVolumeDTOPool' Lens
curveHourlyVolumeDTOPoolL :: Lens_' CurveHourlyVolumeDTO (Maybe Text)
curveHourlyVolumeDTOPoolL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOPool -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOPool, ..} ) <$> f curveHourlyVolumeDTOPool
{-# INLINE curveHourlyVolumeDTOPoolL #-}

-- | 'curveHourlyVolumeDTOTimestamp' Lens
curveHourlyVolumeDTOTimestampL :: Lens_' CurveHourlyVolumeDTO (Maybe Text)
curveHourlyVolumeDTOTimestampL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOTimestamp -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOTimestamp, ..} ) <$> f curveHourlyVolumeDTOTimestamp
{-# INLINE curveHourlyVolumeDTOTimestampL #-}

-- | 'curveHourlyVolumeDTOVolume' Lens
curveHourlyVolumeDTOVolumeL :: Lens_' CurveHourlyVolumeDTO (Maybe Text)
curveHourlyVolumeDTOVolumeL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOVolume -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOVolume, ..} ) <$> f curveHourlyVolumeDTOVolume
{-# INLINE curveHourlyVolumeDTOVolumeL #-}

-- | 'curveHourlyVolumeDTOVid' Lens
curveHourlyVolumeDTOVidL :: Lens_' CurveHourlyVolumeDTO (Maybe Integer)
curveHourlyVolumeDTOVidL f CurveHourlyVolumeDTO{..} = (\curveHourlyVolumeDTOVid -> CurveHourlyVolumeDTO { curveHourlyVolumeDTOVid, ..} ) <$> f curveHourlyVolumeDTOVid
{-# INLINE curveHourlyVolumeDTOVidL #-}



-- * CurveLpTokenDTO

-- | 'curveLpTokenDTOEntryTime' Lens
curveLpTokenDTOEntryTimeL :: Lens_' CurveLpTokenDTO (Maybe DateTime)
curveLpTokenDTOEntryTimeL f CurveLpTokenDTO{..} = (\curveLpTokenDTOEntryTime -> CurveLpTokenDTO { curveLpTokenDTOEntryTime, ..} ) <$> f curveLpTokenDTOEntryTime
{-# INLINE curveLpTokenDTOEntryTimeL #-}

-- | 'curveLpTokenDTORecvTime' Lens
curveLpTokenDTORecvTimeL :: Lens_' CurveLpTokenDTO (Maybe DateTime)
curveLpTokenDTORecvTimeL f CurveLpTokenDTO{..} = (\curveLpTokenDTORecvTime -> CurveLpTokenDTO { curveLpTokenDTORecvTime, ..} ) <$> f curveLpTokenDTORecvTime
{-# INLINE curveLpTokenDTORecvTimeL #-}

-- | 'curveLpTokenDTOBlockNumber' Lens
curveLpTokenDTOBlockNumberL :: Lens_' CurveLpTokenDTO (Maybe Integer)
curveLpTokenDTOBlockNumberL f CurveLpTokenDTO{..} = (\curveLpTokenDTOBlockNumber -> CurveLpTokenDTO { curveLpTokenDTOBlockNumber, ..} ) <$> f curveLpTokenDTOBlockNumber
{-# INLINE curveLpTokenDTOBlockNumberL #-}

-- | 'curveLpTokenDTOId' Lens
curveLpTokenDTOIdL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTOIdL f CurveLpTokenDTO{..} = (\curveLpTokenDTOId -> CurveLpTokenDTO { curveLpTokenDTOId, ..} ) <$> f curveLpTokenDTOId
{-# INLINE curveLpTokenDTOIdL #-}

-- | 'curveLpTokenDTOAddress' Lens
curveLpTokenDTOAddressL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTOAddressL f CurveLpTokenDTO{..} = (\curveLpTokenDTOAddress -> CurveLpTokenDTO { curveLpTokenDTOAddress, ..} ) <$> f curveLpTokenDTOAddress
{-# INLINE curveLpTokenDTOAddressL #-}

-- | 'curveLpTokenDTODecimals' Lens
curveLpTokenDTODecimalsL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTODecimalsL f CurveLpTokenDTO{..} = (\curveLpTokenDTODecimals -> CurveLpTokenDTO { curveLpTokenDTODecimals, ..} ) <$> f curveLpTokenDTODecimals
{-# INLINE curveLpTokenDTODecimalsL #-}

-- | 'curveLpTokenDTOName' Lens
curveLpTokenDTONameL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTONameL f CurveLpTokenDTO{..} = (\curveLpTokenDTOName -> CurveLpTokenDTO { curveLpTokenDTOName, ..} ) <$> f curveLpTokenDTOName
{-# INLINE curveLpTokenDTONameL #-}

-- | 'curveLpTokenDTOSymbol' Lens
curveLpTokenDTOSymbolL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTOSymbolL f CurveLpTokenDTO{..} = (\curveLpTokenDTOSymbol -> CurveLpTokenDTO { curveLpTokenDTOSymbol, ..} ) <$> f curveLpTokenDTOSymbol
{-# INLINE curveLpTokenDTOSymbolL #-}

-- | 'curveLpTokenDTOGauge' Lens
curveLpTokenDTOGaugeL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTOGaugeL f CurveLpTokenDTO{..} = (\curveLpTokenDTOGauge -> CurveLpTokenDTO { curveLpTokenDTOGauge, ..} ) <$> f curveLpTokenDTOGauge
{-# INLINE curveLpTokenDTOGaugeL #-}

-- | 'curveLpTokenDTOPool' Lens
curveLpTokenDTOPoolL :: Lens_' CurveLpTokenDTO (Maybe Text)
curveLpTokenDTOPoolL f CurveLpTokenDTO{..} = (\curveLpTokenDTOPool -> CurveLpTokenDTO { curveLpTokenDTOPool, ..} ) <$> f curveLpTokenDTOPool
{-# INLINE curveLpTokenDTOPoolL #-}

-- | 'curveLpTokenDTOVid' Lens
curveLpTokenDTOVidL :: Lens_' CurveLpTokenDTO (Maybe Integer)
curveLpTokenDTOVidL f CurveLpTokenDTO{..} = (\curveLpTokenDTOVid -> CurveLpTokenDTO { curveLpTokenDTOVid, ..} ) <$> f curveLpTokenDTOVid
{-# INLINE curveLpTokenDTOVidL #-}



-- * CurvePoolDTO

-- | 'curvePoolDTOEntryTime' Lens
curvePoolDTOEntryTimeL :: Lens_' CurvePoolDTO (Maybe DateTime)
curvePoolDTOEntryTimeL f CurvePoolDTO{..} = (\curvePoolDTOEntryTime -> CurvePoolDTO { curvePoolDTOEntryTime, ..} ) <$> f curvePoolDTOEntryTime
{-# INLINE curvePoolDTOEntryTimeL #-}

-- | 'curvePoolDTORecvTime' Lens
curvePoolDTORecvTimeL :: Lens_' CurvePoolDTO (Maybe DateTime)
curvePoolDTORecvTimeL f CurvePoolDTO{..} = (\curvePoolDTORecvTime -> CurvePoolDTO { curvePoolDTORecvTime, ..} ) <$> f curvePoolDTORecvTime
{-# INLINE curvePoolDTORecvTimeL #-}

-- | 'curvePoolDTOBlockNumber' Lens
curvePoolDTOBlockNumberL :: Lens_' CurvePoolDTO (Maybe Integer)
curvePoolDTOBlockNumberL f CurvePoolDTO{..} = (\curvePoolDTOBlockNumber -> CurvePoolDTO { curvePoolDTOBlockNumber, ..} ) <$> f curvePoolDTOBlockNumber
{-# INLINE curvePoolDTOBlockNumberL #-}

-- | 'curvePoolDTOId' Lens
curvePoolDTOIdL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOIdL f CurvePoolDTO{..} = (\curvePoolDTOId -> CurvePoolDTO { curvePoolDTOId, ..} ) <$> f curvePoolDTOId
{-# INLINE curvePoolDTOIdL #-}

-- | 'curvePoolDTOName' Lens
curvePoolDTONameL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTONameL f CurvePoolDTO{..} = (\curvePoolDTOName -> CurvePoolDTO { curvePoolDTOName, ..} ) <$> f curvePoolDTOName
{-# INLINE curvePoolDTONameL #-}

-- | 'curvePoolDTOIsMeta' Lens
curvePoolDTOIsMetaL :: Lens_' CurvePoolDTO (Maybe Bool)
curvePoolDTOIsMetaL f CurvePoolDTO{..} = (\curvePoolDTOIsMeta -> CurvePoolDTO { curvePoolDTOIsMeta, ..} ) <$> f curvePoolDTOIsMeta
{-# INLINE curvePoolDTOIsMetaL #-}

-- | 'curvePoolDTORegistryAddress' Lens
curvePoolDTORegistryAddressL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTORegistryAddressL f CurvePoolDTO{..} = (\curvePoolDTORegistryAddress -> CurvePoolDTO { curvePoolDTORegistryAddress, ..} ) <$> f curvePoolDTORegistryAddress
{-# INLINE curvePoolDTORegistryAddressL #-}

-- | 'curvePoolDTOSwapAddress' Lens
curvePoolDTOSwapAddressL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOSwapAddressL f CurvePoolDTO{..} = (\curvePoolDTOSwapAddress -> CurvePoolDTO { curvePoolDTOSwapAddress, ..} ) <$> f curvePoolDTOSwapAddress
{-# INLINE curvePoolDTOSwapAddressL #-}

-- | 'curvePoolDTOLpToken' Lens
curvePoolDTOLpTokenL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOLpTokenL f CurvePoolDTO{..} = (\curvePoolDTOLpToken -> CurvePoolDTO { curvePoolDTOLpToken, ..} ) <$> f curvePoolDTOLpToken
{-# INLINE curvePoolDTOLpTokenL #-}

-- | 'curvePoolDTOCoinCount' Lens
curvePoolDTOCoinCountL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOCoinCountL f CurvePoolDTO{..} = (\curvePoolDTOCoinCount -> CurvePoolDTO { curvePoolDTOCoinCount, ..} ) <$> f curvePoolDTOCoinCount
{-# INLINE curvePoolDTOCoinCountL #-}

-- | 'curvePoolDTOUnderlyingCount' Lens
curvePoolDTOUnderlyingCountL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOUnderlyingCountL f CurvePoolDTO{..} = (\curvePoolDTOUnderlyingCount -> CurvePoolDTO { curvePoolDTOUnderlyingCount, ..} ) <$> f curvePoolDTOUnderlyingCount
{-# INLINE curvePoolDTOUnderlyingCountL #-}

-- | 'curvePoolDTOA' Lens
curvePoolDTOAL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOAL f CurvePoolDTO{..} = (\curvePoolDTOA -> CurvePoolDTO { curvePoolDTOA, ..} ) <$> f curvePoolDTOA
{-# INLINE curvePoolDTOAL #-}

-- | 'curvePoolDTOFee' Lens
curvePoolDTOFeeL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOFeeL f CurvePoolDTO{..} = (\curvePoolDTOFee -> CurvePoolDTO { curvePoolDTOFee, ..} ) <$> f curvePoolDTOFee
{-# INLINE curvePoolDTOFeeL #-}

-- | 'curvePoolDTOAdminFee' Lens
curvePoolDTOAdminFeeL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOAdminFeeL f CurvePoolDTO{..} = (\curvePoolDTOAdminFee -> CurvePoolDTO { curvePoolDTOAdminFee, ..} ) <$> f curvePoolDTOAdminFee
{-# INLINE curvePoolDTOAdminFeeL #-}

-- | 'curvePoolDTOOwner' Lens
curvePoolDTOOwnerL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOOwnerL f CurvePoolDTO{..} = (\curvePoolDTOOwner -> CurvePoolDTO { curvePoolDTOOwner, ..} ) <$> f curvePoolDTOOwner
{-# INLINE curvePoolDTOOwnerL #-}

-- | 'curvePoolDTOVirtualPrice' Lens
curvePoolDTOVirtualPriceL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOVirtualPriceL f CurvePoolDTO{..} = (\curvePoolDTOVirtualPrice -> CurvePoolDTO { curvePoolDTOVirtualPrice, ..} ) <$> f curvePoolDTOVirtualPrice
{-# INLINE curvePoolDTOVirtualPriceL #-}

-- | 'curvePoolDTOLocked' Lens
curvePoolDTOLockedL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOLockedL f CurvePoolDTO{..} = (\curvePoolDTOLocked -> CurvePoolDTO { curvePoolDTOLocked, ..} ) <$> f curvePoolDTOLocked
{-# INLINE curvePoolDTOLockedL #-}

-- | 'curvePoolDTOAddedAt' Lens
curvePoolDTOAddedAtL :: Lens_' CurvePoolDTO (Maybe DateTime)
curvePoolDTOAddedAtL f CurvePoolDTO{..} = (\curvePoolDTOAddedAt -> CurvePoolDTO { curvePoolDTOAddedAt, ..} ) <$> f curvePoolDTOAddedAt
{-# INLINE curvePoolDTOAddedAtL #-}

-- | 'curvePoolDTOAddedAtBlock' Lens
curvePoolDTOAddedAtBlockL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOAddedAtBlockL f CurvePoolDTO{..} = (\curvePoolDTOAddedAtBlock -> CurvePoolDTO { curvePoolDTOAddedAtBlock, ..} ) <$> f curvePoolDTOAddedAtBlock
{-# INLINE curvePoolDTOAddedAtBlockL #-}

-- | 'curvePoolDTOAddedAtTransaction' Lens
curvePoolDTOAddedAtTransactionL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOAddedAtTransactionL f CurvePoolDTO{..} = (\curvePoolDTOAddedAtTransaction -> CurvePoolDTO { curvePoolDTOAddedAtTransaction, ..} ) <$> f curvePoolDTOAddedAtTransaction
{-# INLINE curvePoolDTOAddedAtTransactionL #-}

-- | 'curvePoolDTORemovedAt' Lens
curvePoolDTORemovedAtL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTORemovedAtL f CurvePoolDTO{..} = (\curvePoolDTORemovedAt -> CurvePoolDTO { curvePoolDTORemovedAt, ..} ) <$> f curvePoolDTORemovedAt
{-# INLINE curvePoolDTORemovedAtL #-}

-- | 'curvePoolDTORemovedAtBlock' Lens
curvePoolDTORemovedAtBlockL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTORemovedAtBlockL f CurvePoolDTO{..} = (\curvePoolDTORemovedAtBlock -> CurvePoolDTO { curvePoolDTORemovedAtBlock, ..} ) <$> f curvePoolDTORemovedAtBlock
{-# INLINE curvePoolDTORemovedAtBlockL #-}

-- | 'curvePoolDTORemovedAtTransaction' Lens
curvePoolDTORemovedAtTransactionL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTORemovedAtTransactionL f CurvePoolDTO{..} = (\curvePoolDTORemovedAtTransaction -> CurvePoolDTO { curvePoolDTORemovedAtTransaction, ..} ) <$> f curvePoolDTORemovedAtTransaction
{-# INLINE curvePoolDTORemovedAtTransactionL #-}

-- | 'curvePoolDTOExchangeCount' Lens
curvePoolDTOExchangeCountL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOExchangeCountL f CurvePoolDTO{..} = (\curvePoolDTOExchangeCount -> CurvePoolDTO { curvePoolDTOExchangeCount, ..} ) <$> f curvePoolDTOExchangeCount
{-# INLINE curvePoolDTOExchangeCountL #-}

-- | 'curvePoolDTOGaugeCount' Lens
curvePoolDTOGaugeCountL :: Lens_' CurvePoolDTO (Maybe Text)
curvePoolDTOGaugeCountL f CurvePoolDTO{..} = (\curvePoolDTOGaugeCount -> CurvePoolDTO { curvePoolDTOGaugeCount, ..} ) <$> f curvePoolDTOGaugeCount
{-# INLINE curvePoolDTOGaugeCountL #-}

-- | 'curvePoolDTOVid' Lens
curvePoolDTOVidL :: Lens_' CurvePoolDTO (Maybe Integer)
curvePoolDTOVidL f CurvePoolDTO{..} = (\curvePoolDTOVid -> CurvePoolDTO { curvePoolDTOVid, ..} ) <$> f curvePoolDTOVid
{-# INLINE curvePoolDTOVidL #-}

-- | 'curvePoolDTOEvaluatedAsk' Lens
curvePoolDTOEvaluatedAskL :: Lens_' CurvePoolDTO (Maybe Double)
curvePoolDTOEvaluatedAskL f CurvePoolDTO{..} = (\curvePoolDTOEvaluatedAsk -> CurvePoolDTO { curvePoolDTOEvaluatedAsk, ..} ) <$> f curvePoolDTOEvaluatedAsk
{-# INLINE curvePoolDTOEvaluatedAskL #-}



-- * CurveProposalDTO

-- | 'curveProposalDTOEntryTime' Lens
curveProposalDTOEntryTimeL :: Lens_' CurveProposalDTO (Maybe DateTime)
curveProposalDTOEntryTimeL f CurveProposalDTO{..} = (\curveProposalDTOEntryTime -> CurveProposalDTO { curveProposalDTOEntryTime, ..} ) <$> f curveProposalDTOEntryTime
{-# INLINE curveProposalDTOEntryTimeL #-}

-- | 'curveProposalDTORecvTime' Lens
curveProposalDTORecvTimeL :: Lens_' CurveProposalDTO (Maybe DateTime)
curveProposalDTORecvTimeL f CurveProposalDTO{..} = (\curveProposalDTORecvTime -> CurveProposalDTO { curveProposalDTORecvTime, ..} ) <$> f curveProposalDTORecvTime
{-# INLINE curveProposalDTORecvTimeL #-}

-- | 'curveProposalDTOBlockNumber' Lens
curveProposalDTOBlockNumberL :: Lens_' CurveProposalDTO (Maybe Integer)
curveProposalDTOBlockNumberL f CurveProposalDTO{..} = (\curveProposalDTOBlockNumber -> CurveProposalDTO { curveProposalDTOBlockNumber, ..} ) <$> f curveProposalDTOBlockNumber
{-# INLINE curveProposalDTOBlockNumberL #-}

-- | 'curveProposalDTOId' Lens
curveProposalDTOIdL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOIdL f CurveProposalDTO{..} = (\curveProposalDTOId -> CurveProposalDTO { curveProposalDTOId, ..} ) <$> f curveProposalDTOId
{-# INLINE curveProposalDTOIdL #-}

-- | 'curveProposalDTONumber' Lens
curveProposalDTONumberL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTONumberL f CurveProposalDTO{..} = (\curveProposalDTONumber -> CurveProposalDTO { curveProposalDTONumber, ..} ) <$> f curveProposalDTONumber
{-# INLINE curveProposalDTONumberL #-}

-- | 'curveProposalDTOApp' Lens
curveProposalDTOAppL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOAppL f CurveProposalDTO{..} = (\curveProposalDTOApp -> CurveProposalDTO { curveProposalDTOApp, ..} ) <$> f curveProposalDTOApp
{-# INLINE curveProposalDTOAppL #-}

-- | 'curveProposalDTOCreator' Lens
curveProposalDTOCreatorL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCreatorL f CurveProposalDTO{..} = (\curveProposalDTOCreator -> CurveProposalDTO { curveProposalDTOCreator, ..} ) <$> f curveProposalDTOCreator
{-# INLINE curveProposalDTOCreatorL #-}

-- | 'curveProposalDTOExecutionScript' Lens
curveProposalDTOExecutionScriptL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOExecutionScriptL f CurveProposalDTO{..} = (\curveProposalDTOExecutionScript -> CurveProposalDTO { curveProposalDTOExecutionScript, ..} ) <$> f curveProposalDTOExecutionScript
{-# INLINE curveProposalDTOExecutionScriptL #-}

-- | 'curveProposalDTOExpireDate' Lens
curveProposalDTOExpireDateL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOExpireDateL f CurveProposalDTO{..} = (\curveProposalDTOExpireDate -> CurveProposalDTO { curveProposalDTOExpireDate, ..} ) <$> f curveProposalDTOExpireDate
{-# INLINE curveProposalDTOExpireDateL #-}

-- | 'curveProposalDTOMinimumQuorum' Lens
curveProposalDTOMinimumQuorumL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOMinimumQuorumL f CurveProposalDTO{..} = (\curveProposalDTOMinimumQuorum -> CurveProposalDTO { curveProposalDTOMinimumQuorum, ..} ) <$> f curveProposalDTOMinimumQuorum
{-# INLINE curveProposalDTOMinimumQuorumL #-}

-- | 'curveProposalDTORequiredSupport' Lens
curveProposalDTORequiredSupportL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTORequiredSupportL f CurveProposalDTO{..} = (\curveProposalDTORequiredSupport -> CurveProposalDTO { curveProposalDTORequiredSupport, ..} ) <$> f curveProposalDTORequiredSupport
{-# INLINE curveProposalDTORequiredSupportL #-}

-- | 'curveProposalDTOSnapshotBlock' Lens
curveProposalDTOSnapshotBlockL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOSnapshotBlockL f CurveProposalDTO{..} = (\curveProposalDTOSnapshotBlock -> CurveProposalDTO { curveProposalDTOSnapshotBlock, ..} ) <$> f curveProposalDTOSnapshotBlock
{-# INLINE curveProposalDTOSnapshotBlockL #-}

-- | 'curveProposalDTOVotingPower' Lens
curveProposalDTOVotingPowerL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOVotingPowerL f CurveProposalDTO{..} = (\curveProposalDTOVotingPower -> CurveProposalDTO { curveProposalDTOVotingPower, ..} ) <$> f curveProposalDTOVotingPower
{-# INLINE curveProposalDTOVotingPowerL #-}

-- | 'curveProposalDTOMetadata' Lens
curveProposalDTOMetadataL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOMetadataL f CurveProposalDTO{..} = (\curveProposalDTOMetadata -> CurveProposalDTO { curveProposalDTOMetadata, ..} ) <$> f curveProposalDTOMetadata
{-# INLINE curveProposalDTOMetadataL #-}

-- | 'curveProposalDTOText' Lens
curveProposalDTOTextL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOTextL f CurveProposalDTO{..} = (\curveProposalDTOText -> CurveProposalDTO { curveProposalDTOText, ..} ) <$> f curveProposalDTOText
{-# INLINE curveProposalDTOTextL #-}

-- | 'curveProposalDTOVoteCount' Lens
curveProposalDTOVoteCountL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOVoteCountL f CurveProposalDTO{..} = (\curveProposalDTOVoteCount -> CurveProposalDTO { curveProposalDTOVoteCount, ..} ) <$> f curveProposalDTOVoteCount
{-# INLINE curveProposalDTOVoteCountL #-}

-- | 'curveProposalDTOPositiveVoteCount' Lens
curveProposalDTOPositiveVoteCountL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOPositiveVoteCountL f CurveProposalDTO{..} = (\curveProposalDTOPositiveVoteCount -> CurveProposalDTO { curveProposalDTOPositiveVoteCount, ..} ) <$> f curveProposalDTOPositiveVoteCount
{-# INLINE curveProposalDTOPositiveVoteCountL #-}

-- | 'curveProposalDTONegativeVoteCount' Lens
curveProposalDTONegativeVoteCountL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTONegativeVoteCountL f CurveProposalDTO{..} = (\curveProposalDTONegativeVoteCount -> CurveProposalDTO { curveProposalDTONegativeVoteCount, ..} ) <$> f curveProposalDTONegativeVoteCount
{-# INLINE curveProposalDTONegativeVoteCountL #-}

-- | 'curveProposalDTOCurrentQuorum' Lens
curveProposalDTOCurrentQuorumL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCurrentQuorumL f CurveProposalDTO{..} = (\curveProposalDTOCurrentQuorum -> CurveProposalDTO { curveProposalDTOCurrentQuorum, ..} ) <$> f curveProposalDTOCurrentQuorum
{-# INLINE curveProposalDTOCurrentQuorumL #-}

-- | 'curveProposalDTOCurrentSupport' Lens
curveProposalDTOCurrentSupportL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCurrentSupportL f CurveProposalDTO{..} = (\curveProposalDTOCurrentSupport -> CurveProposalDTO { curveProposalDTOCurrentSupport, ..} ) <$> f curveProposalDTOCurrentSupport
{-# INLINE curveProposalDTOCurrentSupportL #-}

-- | 'curveProposalDTOStakedSupport' Lens
curveProposalDTOStakedSupportL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOStakedSupportL f CurveProposalDTO{..} = (\curveProposalDTOStakedSupport -> CurveProposalDTO { curveProposalDTOStakedSupport, ..} ) <$> f curveProposalDTOStakedSupport
{-# INLINE curveProposalDTOStakedSupportL #-}

-- | 'curveProposalDTOTotalStaked' Lens
curveProposalDTOTotalStakedL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOTotalStakedL f CurveProposalDTO{..} = (\curveProposalDTOTotalStaked -> CurveProposalDTO { curveProposalDTOTotalStaked, ..} ) <$> f curveProposalDTOTotalStaked
{-# INLINE curveProposalDTOTotalStakedL #-}

-- | 'curveProposalDTOCreated' Lens
curveProposalDTOCreatedL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCreatedL f CurveProposalDTO{..} = (\curveProposalDTOCreated -> CurveProposalDTO { curveProposalDTOCreated, ..} ) <$> f curveProposalDTOCreated
{-# INLINE curveProposalDTOCreatedL #-}

-- | 'curveProposalDTOCreatedAtBlock' Lens
curveProposalDTOCreatedAtBlockL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCreatedAtBlockL f CurveProposalDTO{..} = (\curveProposalDTOCreatedAtBlock -> CurveProposalDTO { curveProposalDTOCreatedAtBlock, ..} ) <$> f curveProposalDTOCreatedAtBlock
{-# INLINE curveProposalDTOCreatedAtBlockL #-}

-- | 'curveProposalDTOCreatedAtTransaction' Lens
curveProposalDTOCreatedAtTransactionL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOCreatedAtTransactionL f CurveProposalDTO{..} = (\curveProposalDTOCreatedAtTransaction -> CurveProposalDTO { curveProposalDTOCreatedAtTransaction, ..} ) <$> f curveProposalDTOCreatedAtTransaction
{-# INLINE curveProposalDTOCreatedAtTransactionL #-}

-- | 'curveProposalDTOUpdated' Lens
curveProposalDTOUpdatedL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOUpdatedL f CurveProposalDTO{..} = (\curveProposalDTOUpdated -> CurveProposalDTO { curveProposalDTOUpdated, ..} ) <$> f curveProposalDTOUpdated
{-# INLINE curveProposalDTOUpdatedL #-}

-- | 'curveProposalDTOUpdatedAtBlock' Lens
curveProposalDTOUpdatedAtBlockL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOUpdatedAtBlockL f CurveProposalDTO{..} = (\curveProposalDTOUpdatedAtBlock -> CurveProposalDTO { curveProposalDTOUpdatedAtBlock, ..} ) <$> f curveProposalDTOUpdatedAtBlock
{-# INLINE curveProposalDTOUpdatedAtBlockL #-}

-- | 'curveProposalDTOUpdatedAtTransaction' Lens
curveProposalDTOUpdatedAtTransactionL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOUpdatedAtTransactionL f CurveProposalDTO{..} = (\curveProposalDTOUpdatedAtTransaction -> CurveProposalDTO { curveProposalDTOUpdatedAtTransaction, ..} ) <$> f curveProposalDTOUpdatedAtTransaction
{-# INLINE curveProposalDTOUpdatedAtTransactionL #-}

-- | 'curveProposalDTOExecuted' Lens
curveProposalDTOExecutedL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOExecutedL f CurveProposalDTO{..} = (\curveProposalDTOExecuted -> CurveProposalDTO { curveProposalDTOExecuted, ..} ) <$> f curveProposalDTOExecuted
{-# INLINE curveProposalDTOExecutedL #-}

-- | 'curveProposalDTOExecutedAtBlock' Lens
curveProposalDTOExecutedAtBlockL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOExecutedAtBlockL f CurveProposalDTO{..} = (\curveProposalDTOExecutedAtBlock -> CurveProposalDTO { curveProposalDTOExecutedAtBlock, ..} ) <$> f curveProposalDTOExecutedAtBlock
{-# INLINE curveProposalDTOExecutedAtBlockL #-}

-- | 'curveProposalDTOExecutedAtTransaction' Lens
curveProposalDTOExecutedAtTransactionL :: Lens_' CurveProposalDTO (Maybe Text)
curveProposalDTOExecutedAtTransactionL f CurveProposalDTO{..} = (\curveProposalDTOExecutedAtTransaction -> CurveProposalDTO { curveProposalDTOExecutedAtTransaction, ..} ) <$> f curveProposalDTOExecutedAtTransaction
{-# INLINE curveProposalDTOExecutedAtTransactionL #-}

-- | 'curveProposalDTOVid' Lens
curveProposalDTOVidL :: Lens_' CurveProposalDTO (Maybe Integer)
curveProposalDTOVidL f CurveProposalDTO{..} = (\curveProposalDTOVid -> CurveProposalDTO { curveProposalDTOVid, ..} ) <$> f curveProposalDTOVid
{-# INLINE curveProposalDTOVidL #-}



-- * CurveProposalVoteDTO

-- | 'curveProposalVoteDTOEntryTime' Lens
curveProposalVoteDTOEntryTimeL :: Lens_' CurveProposalVoteDTO (Maybe DateTime)
curveProposalVoteDTOEntryTimeL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOEntryTime -> CurveProposalVoteDTO { curveProposalVoteDTOEntryTime, ..} ) <$> f curveProposalVoteDTOEntryTime
{-# INLINE curveProposalVoteDTOEntryTimeL #-}

-- | 'curveProposalVoteDTORecvTime' Lens
curveProposalVoteDTORecvTimeL :: Lens_' CurveProposalVoteDTO (Maybe DateTime)
curveProposalVoteDTORecvTimeL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTORecvTime -> CurveProposalVoteDTO { curveProposalVoteDTORecvTime, ..} ) <$> f curveProposalVoteDTORecvTime
{-# INLINE curveProposalVoteDTORecvTimeL #-}

-- | 'curveProposalVoteDTOBlockNumber' Lens
curveProposalVoteDTOBlockNumberL :: Lens_' CurveProposalVoteDTO (Maybe Integer)
curveProposalVoteDTOBlockNumberL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOBlockNumber -> CurveProposalVoteDTO { curveProposalVoteDTOBlockNumber, ..} ) <$> f curveProposalVoteDTOBlockNumber
{-# INLINE curveProposalVoteDTOBlockNumberL #-}

-- | 'curveProposalVoteDTOId' Lens
curveProposalVoteDTOIdL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOIdL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOId -> CurveProposalVoteDTO { curveProposalVoteDTOId, ..} ) <$> f curveProposalVoteDTOId
{-# INLINE curveProposalVoteDTOIdL #-}

-- | 'curveProposalVoteDTOProposal' Lens
curveProposalVoteDTOProposalL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOProposalL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOProposal -> CurveProposalVoteDTO { curveProposalVoteDTOProposal, ..} ) <$> f curveProposalVoteDTOProposal
{-# INLINE curveProposalVoteDTOProposalL #-}

-- | 'curveProposalVoteDTOSupports' Lens
curveProposalVoteDTOSupportsL :: Lens_' CurveProposalVoteDTO (Maybe Bool)
curveProposalVoteDTOSupportsL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOSupports -> CurveProposalVoteDTO { curveProposalVoteDTOSupports, ..} ) <$> f curveProposalVoteDTOSupports
{-# INLINE curveProposalVoteDTOSupportsL #-}

-- | 'curveProposalVoteDTOStake' Lens
curveProposalVoteDTOStakeL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOStakeL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOStake -> CurveProposalVoteDTO { curveProposalVoteDTOStake, ..} ) <$> f curveProposalVoteDTOStake
{-# INLINE curveProposalVoteDTOStakeL #-}

-- | 'curveProposalVoteDTOVoter' Lens
curveProposalVoteDTOVoterL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOVoterL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOVoter -> CurveProposalVoteDTO { curveProposalVoteDTOVoter, ..} ) <$> f curveProposalVoteDTOVoter
{-# INLINE curveProposalVoteDTOVoterL #-}

-- | 'curveProposalVoteDTOCreated' Lens
curveProposalVoteDTOCreatedL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOCreatedL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOCreated -> CurveProposalVoteDTO { curveProposalVoteDTOCreated, ..} ) <$> f curveProposalVoteDTOCreated
{-# INLINE curveProposalVoteDTOCreatedL #-}

-- | 'curveProposalVoteDTOCreatedAtBlock' Lens
curveProposalVoteDTOCreatedAtBlockL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOCreatedAtBlockL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOCreatedAtBlock -> CurveProposalVoteDTO { curveProposalVoteDTOCreatedAtBlock, ..} ) <$> f curveProposalVoteDTOCreatedAtBlock
{-# INLINE curveProposalVoteDTOCreatedAtBlockL #-}

-- | 'curveProposalVoteDTOCreatedAtTransaction' Lens
curveProposalVoteDTOCreatedAtTransactionL :: Lens_' CurveProposalVoteDTO (Maybe Text)
curveProposalVoteDTOCreatedAtTransactionL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOCreatedAtTransaction -> CurveProposalVoteDTO { curveProposalVoteDTOCreatedAtTransaction, ..} ) <$> f curveProposalVoteDTOCreatedAtTransaction
{-# INLINE curveProposalVoteDTOCreatedAtTransactionL #-}

-- | 'curveProposalVoteDTOVid' Lens
curveProposalVoteDTOVidL :: Lens_' CurveProposalVoteDTO (Maybe Integer)
curveProposalVoteDTOVidL f CurveProposalVoteDTO{..} = (\curveProposalVoteDTOVid -> CurveProposalVoteDTO { curveProposalVoteDTOVid, ..} ) <$> f curveProposalVoteDTOVid
{-# INLINE curveProposalVoteDTOVidL #-}



-- * CurveRemoveLiquidityEventDTO

-- | 'curveRemoveLiquidityEventDTOEntryTime' Lens
curveRemoveLiquidityEventDTOEntryTimeL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe DateTime)
curveRemoveLiquidityEventDTOEntryTimeL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOEntryTime -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOEntryTime, ..} ) <$> f curveRemoveLiquidityEventDTOEntryTime
{-# INLINE curveRemoveLiquidityEventDTOEntryTimeL #-}

-- | 'curveRemoveLiquidityEventDTORecvTime' Lens
curveRemoveLiquidityEventDTORecvTimeL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe DateTime)
curveRemoveLiquidityEventDTORecvTimeL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTORecvTime -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTORecvTime, ..} ) <$> f curveRemoveLiquidityEventDTORecvTime
{-# INLINE curveRemoveLiquidityEventDTORecvTimeL #-}

-- | 'curveRemoveLiquidityEventDTOBlockNumber' Lens
curveRemoveLiquidityEventDTOBlockNumberL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Integer)
curveRemoveLiquidityEventDTOBlockNumberL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOBlockNumber -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOBlockNumber, ..} ) <$> f curveRemoveLiquidityEventDTOBlockNumber
{-# INLINE curveRemoveLiquidityEventDTOBlockNumberL #-}

-- | 'curveRemoveLiquidityEventDTOId' Lens
curveRemoveLiquidityEventDTOIdL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOIdL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOId -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOId, ..} ) <$> f curveRemoveLiquidityEventDTOId
{-# INLINE curveRemoveLiquidityEventDTOIdL #-}

-- | 'curveRemoveLiquidityEventDTOPool' Lens
curveRemoveLiquidityEventDTOPoolL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOPoolL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOPool -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOPool, ..} ) <$> f curveRemoveLiquidityEventDTOPool
{-# INLINE curveRemoveLiquidityEventDTOPoolL #-}

-- | 'curveRemoveLiquidityEventDTOProvider' Lens
curveRemoveLiquidityEventDTOProviderL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOProviderL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOProvider -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOProvider, ..} ) <$> f curveRemoveLiquidityEventDTOProvider
{-# INLINE curveRemoveLiquidityEventDTOProviderL #-}

-- | 'curveRemoveLiquidityEventDTOTokenAmounts' Lens
curveRemoveLiquidityEventDTOTokenAmountsL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe [Text])
curveRemoveLiquidityEventDTOTokenAmountsL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOTokenAmounts -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOTokenAmounts, ..} ) <$> f curveRemoveLiquidityEventDTOTokenAmounts
{-# INLINE curveRemoveLiquidityEventDTOTokenAmountsL #-}

-- | 'curveRemoveLiquidityEventDTOFees' Lens
curveRemoveLiquidityEventDTOFeesL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe [Text])
curveRemoveLiquidityEventDTOFeesL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOFees -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOFees, ..} ) <$> f curveRemoveLiquidityEventDTOFees
{-# INLINE curveRemoveLiquidityEventDTOFeesL #-}

-- | 'curveRemoveLiquidityEventDTOTokenSupply' Lens
curveRemoveLiquidityEventDTOTokenSupplyL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOTokenSupplyL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOTokenSupply -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOTokenSupply, ..} ) <$> f curveRemoveLiquidityEventDTOTokenSupply
{-# INLINE curveRemoveLiquidityEventDTOTokenSupplyL #-}

-- | 'curveRemoveLiquidityEventDTOInvariant' Lens
curveRemoveLiquidityEventDTOInvariantL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOInvariantL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOInvariant -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOInvariant, ..} ) <$> f curveRemoveLiquidityEventDTOInvariant
{-# INLINE curveRemoveLiquidityEventDTOInvariantL #-}

-- | 'curveRemoveLiquidityEventDTOBlock' Lens
curveRemoveLiquidityEventDTOBlockL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOBlockL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOBlock -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOBlock, ..} ) <$> f curveRemoveLiquidityEventDTOBlock
{-# INLINE curveRemoveLiquidityEventDTOBlockL #-}

-- | 'curveRemoveLiquidityEventDTOTimestamp' Lens
curveRemoveLiquidityEventDTOTimestampL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOTimestampL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOTimestamp -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOTimestamp, ..} ) <$> f curveRemoveLiquidityEventDTOTimestamp
{-# INLINE curveRemoveLiquidityEventDTOTimestampL #-}

-- | 'curveRemoveLiquidityEventDTOTransaction' Lens
curveRemoveLiquidityEventDTOTransactionL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Text)
curveRemoveLiquidityEventDTOTransactionL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOTransaction -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOTransaction, ..} ) <$> f curveRemoveLiquidityEventDTOTransaction
{-# INLINE curveRemoveLiquidityEventDTOTransactionL #-}

-- | 'curveRemoveLiquidityEventDTOVid' Lens
curveRemoveLiquidityEventDTOVidL :: Lens_' CurveRemoveLiquidityEventDTO (Maybe Integer)
curveRemoveLiquidityEventDTOVidL f CurveRemoveLiquidityEventDTO{..} = (\curveRemoveLiquidityEventDTOVid -> CurveRemoveLiquidityEventDTO { curveRemoveLiquidityEventDTOVid, ..} ) <$> f curveRemoveLiquidityEventDTOVid
{-# INLINE curveRemoveLiquidityEventDTOVidL #-}



-- * CurveRemoveLiquidityOneEventDTO

-- | 'curveRemoveLiquidityOneEventDTOEntryTime' Lens
curveRemoveLiquidityOneEventDTOEntryTimeL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe DateTime)
curveRemoveLiquidityOneEventDTOEntryTimeL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOEntryTime -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOEntryTime, ..} ) <$> f curveRemoveLiquidityOneEventDTOEntryTime
{-# INLINE curveRemoveLiquidityOneEventDTOEntryTimeL #-}

-- | 'curveRemoveLiquidityOneEventDTORecvTime' Lens
curveRemoveLiquidityOneEventDTORecvTimeL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe DateTime)
curveRemoveLiquidityOneEventDTORecvTimeL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTORecvTime -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTORecvTime, ..} ) <$> f curveRemoveLiquidityOneEventDTORecvTime
{-# INLINE curveRemoveLiquidityOneEventDTORecvTimeL #-}

-- | 'curveRemoveLiquidityOneEventDTOBlockNumber' Lens
curveRemoveLiquidityOneEventDTOBlockNumberL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Integer)
curveRemoveLiquidityOneEventDTOBlockNumberL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOBlockNumber -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOBlockNumber, ..} ) <$> f curveRemoveLiquidityOneEventDTOBlockNumber
{-# INLINE curveRemoveLiquidityOneEventDTOBlockNumberL #-}

-- | 'curveRemoveLiquidityOneEventDTOId' Lens
curveRemoveLiquidityOneEventDTOIdL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOIdL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOId -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOId, ..} ) <$> f curveRemoveLiquidityOneEventDTOId
{-# INLINE curveRemoveLiquidityOneEventDTOIdL #-}

-- | 'curveRemoveLiquidityOneEventDTOPool' Lens
curveRemoveLiquidityOneEventDTOPoolL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOPoolL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOPool -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOPool, ..} ) <$> f curveRemoveLiquidityOneEventDTOPool
{-# INLINE curveRemoveLiquidityOneEventDTOPoolL #-}

-- | 'curveRemoveLiquidityOneEventDTOProvider' Lens
curveRemoveLiquidityOneEventDTOProviderL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOProviderL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOProvider -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOProvider, ..} ) <$> f curveRemoveLiquidityOneEventDTOProvider
{-# INLINE curveRemoveLiquidityOneEventDTOProviderL #-}

-- | 'curveRemoveLiquidityOneEventDTOTokenAmount' Lens
curveRemoveLiquidityOneEventDTOTokenAmountL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOTokenAmountL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOTokenAmount -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOTokenAmount, ..} ) <$> f curveRemoveLiquidityOneEventDTOTokenAmount
{-# INLINE curveRemoveLiquidityOneEventDTOTokenAmountL #-}

-- | 'curveRemoveLiquidityOneEventDTOCoinAmount' Lens
curveRemoveLiquidityOneEventDTOCoinAmountL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOCoinAmountL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOCoinAmount -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOCoinAmount, ..} ) <$> f curveRemoveLiquidityOneEventDTOCoinAmount
{-# INLINE curveRemoveLiquidityOneEventDTOCoinAmountL #-}

-- | 'curveRemoveLiquidityOneEventDTOBlock' Lens
curveRemoveLiquidityOneEventDTOBlockL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOBlockL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOBlock -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOBlock, ..} ) <$> f curveRemoveLiquidityOneEventDTOBlock
{-# INLINE curveRemoveLiquidityOneEventDTOBlockL #-}

-- | 'curveRemoveLiquidityOneEventDTOTimestamp' Lens
curveRemoveLiquidityOneEventDTOTimestampL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOTimestampL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOTimestamp -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOTimestamp, ..} ) <$> f curveRemoveLiquidityOneEventDTOTimestamp
{-# INLINE curveRemoveLiquidityOneEventDTOTimestampL #-}

-- | 'curveRemoveLiquidityOneEventDTOTransaction' Lens
curveRemoveLiquidityOneEventDTOTransactionL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Text)
curveRemoveLiquidityOneEventDTOTransactionL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOTransaction -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOTransaction, ..} ) <$> f curveRemoveLiquidityOneEventDTOTransaction
{-# INLINE curveRemoveLiquidityOneEventDTOTransactionL #-}

-- | 'curveRemoveLiquidityOneEventDTOVid' Lens
curveRemoveLiquidityOneEventDTOVidL :: Lens_' CurveRemoveLiquidityOneEventDTO (Maybe Integer)
curveRemoveLiquidityOneEventDTOVidL f CurveRemoveLiquidityOneEventDTO{..} = (\curveRemoveLiquidityOneEventDTOVid -> CurveRemoveLiquidityOneEventDTO { curveRemoveLiquidityOneEventDTOVid, ..} ) <$> f curveRemoveLiquidityOneEventDTOVid
{-# INLINE curveRemoveLiquidityOneEventDTOVidL #-}



-- * CurveSystemStateDTO

-- | 'curveSystemStateDTOEntryTime' Lens
curveSystemStateDTOEntryTimeL :: Lens_' CurveSystemStateDTO (Maybe DateTime)
curveSystemStateDTOEntryTimeL f CurveSystemStateDTO{..} = (\curveSystemStateDTOEntryTime -> CurveSystemStateDTO { curveSystemStateDTOEntryTime, ..} ) <$> f curveSystemStateDTOEntryTime
{-# INLINE curveSystemStateDTOEntryTimeL #-}

-- | 'curveSystemStateDTORecvTime' Lens
curveSystemStateDTORecvTimeL :: Lens_' CurveSystemStateDTO (Maybe DateTime)
curveSystemStateDTORecvTimeL f CurveSystemStateDTO{..} = (\curveSystemStateDTORecvTime -> CurveSystemStateDTO { curveSystemStateDTORecvTime, ..} ) <$> f curveSystemStateDTORecvTime
{-# INLINE curveSystemStateDTORecvTimeL #-}

-- | 'curveSystemStateDTOBlockNumber' Lens
curveSystemStateDTOBlockNumberL :: Lens_' CurveSystemStateDTO (Maybe Integer)
curveSystemStateDTOBlockNumberL f CurveSystemStateDTO{..} = (\curveSystemStateDTOBlockNumber -> CurveSystemStateDTO { curveSystemStateDTOBlockNumber, ..} ) <$> f curveSystemStateDTOBlockNumber
{-# INLINE curveSystemStateDTOBlockNumberL #-}

-- | 'curveSystemStateDTOId' Lens
curveSystemStateDTOIdL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOIdL f CurveSystemStateDTO{..} = (\curveSystemStateDTOId -> CurveSystemStateDTO { curveSystemStateDTOId, ..} ) <$> f curveSystemStateDTOId
{-# INLINE curveSystemStateDTOIdL #-}

-- | 'curveSystemStateDTORegistryContract' Lens
curveSystemStateDTORegistryContractL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTORegistryContractL f CurveSystemStateDTO{..} = (\curveSystemStateDTORegistryContract -> CurveSystemStateDTO { curveSystemStateDTORegistryContract, ..} ) <$> f curveSystemStateDTORegistryContract
{-# INLINE curveSystemStateDTORegistryContractL #-}

-- | 'curveSystemStateDTOContractCount' Lens
curveSystemStateDTOContractCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOContractCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOContractCount -> CurveSystemStateDTO { curveSystemStateDTOContractCount, ..} ) <$> f curveSystemStateDTOContractCount
{-# INLINE curveSystemStateDTOContractCountL #-}

-- | 'curveSystemStateDTOGaugeCount' Lens
curveSystemStateDTOGaugeCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOGaugeCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOGaugeCount -> CurveSystemStateDTO { curveSystemStateDTOGaugeCount, ..} ) <$> f curveSystemStateDTOGaugeCount
{-# INLINE curveSystemStateDTOGaugeCountL #-}

-- | 'curveSystemStateDTOGaugeTypeCount' Lens
curveSystemStateDTOGaugeTypeCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOGaugeTypeCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOGaugeTypeCount -> CurveSystemStateDTO { curveSystemStateDTOGaugeTypeCount, ..} ) <$> f curveSystemStateDTOGaugeTypeCount
{-# INLINE curveSystemStateDTOGaugeTypeCountL #-}

-- | 'curveSystemStateDTOPoolCount' Lens
curveSystemStateDTOPoolCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOPoolCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOPoolCount -> CurveSystemStateDTO { curveSystemStateDTOPoolCount, ..} ) <$> f curveSystemStateDTOPoolCount
{-# INLINE curveSystemStateDTOPoolCountL #-}

-- | 'curveSystemStateDTOTokenCount' Lens
curveSystemStateDTOTokenCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOTokenCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOTokenCount -> CurveSystemStateDTO { curveSystemStateDTOTokenCount, ..} ) <$> f curveSystemStateDTOTokenCount
{-# INLINE curveSystemStateDTOTokenCountL #-}

-- | 'curveSystemStateDTOTotalPoolCount' Lens
curveSystemStateDTOTotalPoolCountL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOTotalPoolCountL f CurveSystemStateDTO{..} = (\curveSystemStateDTOTotalPoolCount -> CurveSystemStateDTO { curveSystemStateDTOTotalPoolCount, ..} ) <$> f curveSystemStateDTOTotalPoolCount
{-# INLINE curveSystemStateDTOTotalPoolCountL #-}

-- | 'curveSystemStateDTOUpdated' Lens
curveSystemStateDTOUpdatedL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOUpdatedL f CurveSystemStateDTO{..} = (\curveSystemStateDTOUpdated -> CurveSystemStateDTO { curveSystemStateDTOUpdated, ..} ) <$> f curveSystemStateDTOUpdated
{-# INLINE curveSystemStateDTOUpdatedL #-}

-- | 'curveSystemStateDTOUpdatedAtBlock' Lens
curveSystemStateDTOUpdatedAtBlockL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOUpdatedAtBlockL f CurveSystemStateDTO{..} = (\curveSystemStateDTOUpdatedAtBlock -> CurveSystemStateDTO { curveSystemStateDTOUpdatedAtBlock, ..} ) <$> f curveSystemStateDTOUpdatedAtBlock
{-# INLINE curveSystemStateDTOUpdatedAtBlockL #-}

-- | 'curveSystemStateDTOUpdatedAtTransaction' Lens
curveSystemStateDTOUpdatedAtTransactionL :: Lens_' CurveSystemStateDTO (Maybe Text)
curveSystemStateDTOUpdatedAtTransactionL f CurveSystemStateDTO{..} = (\curveSystemStateDTOUpdatedAtTransaction -> CurveSystemStateDTO { curveSystemStateDTOUpdatedAtTransaction, ..} ) <$> f curveSystemStateDTOUpdatedAtTransaction
{-# INLINE curveSystemStateDTOUpdatedAtTransactionL #-}

-- | 'curveSystemStateDTOVid' Lens
curveSystemStateDTOVidL :: Lens_' CurveSystemStateDTO (Maybe Integer)
curveSystemStateDTOVidL f CurveSystemStateDTO{..} = (\curveSystemStateDTOVid -> CurveSystemStateDTO { curveSystemStateDTOVid, ..} ) <$> f curveSystemStateDTOVid
{-# INLINE curveSystemStateDTOVidL #-}



-- * CurveTokenDTO

-- | 'curveTokenDTOEntryTime' Lens
curveTokenDTOEntryTimeL :: Lens_' CurveTokenDTO (Maybe DateTime)
curveTokenDTOEntryTimeL f CurveTokenDTO{..} = (\curveTokenDTOEntryTime -> CurveTokenDTO { curveTokenDTOEntryTime, ..} ) <$> f curveTokenDTOEntryTime
{-# INLINE curveTokenDTOEntryTimeL #-}

-- | 'curveTokenDTORecvTime' Lens
curveTokenDTORecvTimeL :: Lens_' CurveTokenDTO (Maybe DateTime)
curveTokenDTORecvTimeL f CurveTokenDTO{..} = (\curveTokenDTORecvTime -> CurveTokenDTO { curveTokenDTORecvTime, ..} ) <$> f curveTokenDTORecvTime
{-# INLINE curveTokenDTORecvTimeL #-}

-- | 'curveTokenDTOBlockNumber' Lens
curveTokenDTOBlockNumberL :: Lens_' CurveTokenDTO (Maybe Integer)
curveTokenDTOBlockNumberL f CurveTokenDTO{..} = (\curveTokenDTOBlockNumber -> CurveTokenDTO { curveTokenDTOBlockNumber, ..} ) <$> f curveTokenDTOBlockNumber
{-# INLINE curveTokenDTOBlockNumberL #-}

-- | 'curveTokenDTOId' Lens
curveTokenDTOIdL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTOIdL f CurveTokenDTO{..} = (\curveTokenDTOId -> CurveTokenDTO { curveTokenDTOId, ..} ) <$> f curveTokenDTOId
{-# INLINE curveTokenDTOIdL #-}

-- | 'curveTokenDTOAddress' Lens
curveTokenDTOAddressL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTOAddressL f CurveTokenDTO{..} = (\curveTokenDTOAddress -> CurveTokenDTO { curveTokenDTOAddress, ..} ) <$> f curveTokenDTOAddress
{-# INLINE curveTokenDTOAddressL #-}

-- | 'curveTokenDTODecimals' Lens
curveTokenDTODecimalsL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTODecimalsL f CurveTokenDTO{..} = (\curveTokenDTODecimals -> CurveTokenDTO { curveTokenDTODecimals, ..} ) <$> f curveTokenDTODecimals
{-# INLINE curveTokenDTODecimalsL #-}

-- | 'curveTokenDTOName' Lens
curveTokenDTONameL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTONameL f CurveTokenDTO{..} = (\curveTokenDTOName -> CurveTokenDTO { curveTokenDTOName, ..} ) <$> f curveTokenDTOName
{-# INLINE curveTokenDTONameL #-}

-- | 'curveTokenDTOSymbol' Lens
curveTokenDTOSymbolL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTOSymbolL f CurveTokenDTO{..} = (\curveTokenDTOSymbol -> CurveTokenDTO { curveTokenDTOSymbol, ..} ) <$> f curveTokenDTOSymbol
{-# INLINE curveTokenDTOSymbolL #-}

-- | 'curveTokenDTOPools' Lens
curveTokenDTOPoolsL :: Lens_' CurveTokenDTO (Maybe [Text])
curveTokenDTOPoolsL f CurveTokenDTO{..} = (\curveTokenDTOPools -> CurveTokenDTO { curveTokenDTOPools, ..} ) <$> f curveTokenDTOPools
{-# INLINE curveTokenDTOPoolsL #-}

-- | 'curveTokenDTOVid' Lens
curveTokenDTOVidL :: Lens_' CurveTokenDTO (Maybe Integer)
curveTokenDTOVidL f CurveTokenDTO{..} = (\curveTokenDTOVid -> CurveTokenDTO { curveTokenDTOVid, ..} ) <$> f curveTokenDTOVid
{-# INLINE curveTokenDTOVidL #-}

-- | 'curveTokenDTOTokenSymbol' Lens
curveTokenDTOTokenSymbolL :: Lens_' CurveTokenDTO (Maybe Text)
curveTokenDTOTokenSymbolL f CurveTokenDTO{..} = (\curveTokenDTOTokenSymbol -> CurveTokenDTO { curveTokenDTOTokenSymbol, ..} ) <$> f curveTokenDTOTokenSymbol
{-# INLINE curveTokenDTOTokenSymbolL #-}



-- * CurveTransferOwnershipEventDTO

-- | 'curveTransferOwnershipEventDTOEntryTime' Lens
curveTransferOwnershipEventDTOEntryTimeL :: Lens_' CurveTransferOwnershipEventDTO (Maybe DateTime)
curveTransferOwnershipEventDTOEntryTimeL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOEntryTime -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOEntryTime, ..} ) <$> f curveTransferOwnershipEventDTOEntryTime
{-# INLINE curveTransferOwnershipEventDTOEntryTimeL #-}

-- | 'curveTransferOwnershipEventDTORecvTime' Lens
curveTransferOwnershipEventDTORecvTimeL :: Lens_' CurveTransferOwnershipEventDTO (Maybe DateTime)
curveTransferOwnershipEventDTORecvTimeL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTORecvTime -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTORecvTime, ..} ) <$> f curveTransferOwnershipEventDTORecvTime
{-# INLINE curveTransferOwnershipEventDTORecvTimeL #-}

-- | 'curveTransferOwnershipEventDTOBlockNumber' Lens
curveTransferOwnershipEventDTOBlockNumberL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Integer)
curveTransferOwnershipEventDTOBlockNumberL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOBlockNumber -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOBlockNumber, ..} ) <$> f curveTransferOwnershipEventDTOBlockNumber
{-# INLINE curveTransferOwnershipEventDTOBlockNumberL #-}

-- | 'curveTransferOwnershipEventDTOId' Lens
curveTransferOwnershipEventDTOIdL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTOIdL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOId -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOId, ..} ) <$> f curveTransferOwnershipEventDTOId
{-# INLINE curveTransferOwnershipEventDTOIdL #-}

-- | 'curveTransferOwnershipEventDTOPool' Lens
curveTransferOwnershipEventDTOPoolL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTOPoolL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOPool -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOPool, ..} ) <$> f curveTransferOwnershipEventDTOPool
{-# INLINE curveTransferOwnershipEventDTOPoolL #-}

-- | 'curveTransferOwnershipEventDTONewAdmin' Lens
curveTransferOwnershipEventDTONewAdminL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTONewAdminL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTONewAdmin -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTONewAdmin, ..} ) <$> f curveTransferOwnershipEventDTONewAdmin
{-# INLINE curveTransferOwnershipEventDTONewAdminL #-}

-- | 'curveTransferOwnershipEventDTOBlock' Lens
curveTransferOwnershipEventDTOBlockL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTOBlockL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOBlock -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOBlock, ..} ) <$> f curveTransferOwnershipEventDTOBlock
{-# INLINE curveTransferOwnershipEventDTOBlockL #-}

-- | 'curveTransferOwnershipEventDTOTimestamp' Lens
curveTransferOwnershipEventDTOTimestampL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTOTimestampL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOTimestamp -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOTimestamp, ..} ) <$> f curveTransferOwnershipEventDTOTimestamp
{-# INLINE curveTransferOwnershipEventDTOTimestampL #-}

-- | 'curveTransferOwnershipEventDTOTransaction' Lens
curveTransferOwnershipEventDTOTransactionL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Text)
curveTransferOwnershipEventDTOTransactionL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOTransaction -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOTransaction, ..} ) <$> f curveTransferOwnershipEventDTOTransaction
{-# INLINE curveTransferOwnershipEventDTOTransactionL #-}

-- | 'curveTransferOwnershipEventDTOVid' Lens
curveTransferOwnershipEventDTOVidL :: Lens_' CurveTransferOwnershipEventDTO (Maybe Integer)
curveTransferOwnershipEventDTOVidL f CurveTransferOwnershipEventDTO{..} = (\curveTransferOwnershipEventDTOVid -> CurveTransferOwnershipEventDTO { curveTransferOwnershipEventDTOVid, ..} ) <$> f curveTransferOwnershipEventDTOVid
{-# INLINE curveTransferOwnershipEventDTOVidL #-}



-- * CurveUnderlyingCoinDTO

-- | 'curveUnderlyingCoinDTOEntryTime' Lens
curveUnderlyingCoinDTOEntryTimeL :: Lens_' CurveUnderlyingCoinDTO (Maybe DateTime)
curveUnderlyingCoinDTOEntryTimeL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOEntryTime -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOEntryTime, ..} ) <$> f curveUnderlyingCoinDTOEntryTime
{-# INLINE curveUnderlyingCoinDTOEntryTimeL #-}

-- | 'curveUnderlyingCoinDTORecvTime' Lens
curveUnderlyingCoinDTORecvTimeL :: Lens_' CurveUnderlyingCoinDTO (Maybe DateTime)
curveUnderlyingCoinDTORecvTimeL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTORecvTime -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTORecvTime, ..} ) <$> f curveUnderlyingCoinDTORecvTime
{-# INLINE curveUnderlyingCoinDTORecvTimeL #-}

-- | 'curveUnderlyingCoinDTOBlockNumber' Lens
curveUnderlyingCoinDTOBlockNumberL :: Lens_' CurveUnderlyingCoinDTO (Maybe Integer)
curveUnderlyingCoinDTOBlockNumberL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOBlockNumber -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOBlockNumber, ..} ) <$> f curveUnderlyingCoinDTOBlockNumber
{-# INLINE curveUnderlyingCoinDTOBlockNumberL #-}

-- | 'curveUnderlyingCoinDTOId' Lens
curveUnderlyingCoinDTOIdL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOIdL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOId -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOId, ..} ) <$> f curveUnderlyingCoinDTOId
{-# INLINE curveUnderlyingCoinDTOIdL #-}

-- | 'curveUnderlyingCoinDTOIndex' Lens
curveUnderlyingCoinDTOIndexL :: Lens_' CurveUnderlyingCoinDTO (Maybe Int)
curveUnderlyingCoinDTOIndexL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOIndex -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOIndex, ..} ) <$> f curveUnderlyingCoinDTOIndex
{-# INLINE curveUnderlyingCoinDTOIndexL #-}

-- | 'curveUnderlyingCoinDTOPool' Lens
curveUnderlyingCoinDTOPoolL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOPoolL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOPool -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOPool, ..} ) <$> f curveUnderlyingCoinDTOPool
{-# INLINE curveUnderlyingCoinDTOPoolL #-}

-- | 'curveUnderlyingCoinDTOToken' Lens
curveUnderlyingCoinDTOTokenL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOTokenL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOToken -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOToken, ..} ) <$> f curveUnderlyingCoinDTOToken
{-# INLINE curveUnderlyingCoinDTOTokenL #-}

-- | 'curveUnderlyingCoinDTOCoin' Lens
curveUnderlyingCoinDTOCoinL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOCoinL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOCoin -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOCoin, ..} ) <$> f curveUnderlyingCoinDTOCoin
{-# INLINE curveUnderlyingCoinDTOCoinL #-}

-- | 'curveUnderlyingCoinDTOBalance' Lens
curveUnderlyingCoinDTOBalanceL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOBalanceL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOBalance -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOBalance, ..} ) <$> f curveUnderlyingCoinDTOBalance
{-# INLINE curveUnderlyingCoinDTOBalanceL #-}

-- | 'curveUnderlyingCoinDTOUpdated' Lens
curveUnderlyingCoinDTOUpdatedL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOUpdatedL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOUpdated -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOUpdated, ..} ) <$> f curveUnderlyingCoinDTOUpdated
{-# INLINE curveUnderlyingCoinDTOUpdatedL #-}

-- | 'curveUnderlyingCoinDTOUpdatedAtBlock' Lens
curveUnderlyingCoinDTOUpdatedAtBlockL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOUpdatedAtBlockL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOUpdatedAtBlock -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOUpdatedAtBlock, ..} ) <$> f curveUnderlyingCoinDTOUpdatedAtBlock
{-# INLINE curveUnderlyingCoinDTOUpdatedAtBlockL #-}

-- | 'curveUnderlyingCoinDTOUpdatedAtTransaction' Lens
curveUnderlyingCoinDTOUpdatedAtTransactionL :: Lens_' CurveUnderlyingCoinDTO (Maybe Text)
curveUnderlyingCoinDTOUpdatedAtTransactionL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOUpdatedAtTransaction -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOUpdatedAtTransaction, ..} ) <$> f curveUnderlyingCoinDTOUpdatedAtTransaction
{-# INLINE curveUnderlyingCoinDTOUpdatedAtTransactionL #-}

-- | 'curveUnderlyingCoinDTOVid' Lens
curveUnderlyingCoinDTOVidL :: Lens_' CurveUnderlyingCoinDTO (Maybe Integer)
curveUnderlyingCoinDTOVidL f CurveUnderlyingCoinDTO{..} = (\curveUnderlyingCoinDTOVid -> CurveUnderlyingCoinDTO { curveUnderlyingCoinDTOVid, ..} ) <$> f curveUnderlyingCoinDTOVid
{-# INLINE curveUnderlyingCoinDTOVidL #-}



-- * CurveVotingAppDTO

-- | 'curveVotingAppDTOEntryTime' Lens
curveVotingAppDTOEntryTimeL :: Lens_' CurveVotingAppDTO (Maybe DateTime)
curveVotingAppDTOEntryTimeL f CurveVotingAppDTO{..} = (\curveVotingAppDTOEntryTime -> CurveVotingAppDTO { curveVotingAppDTOEntryTime, ..} ) <$> f curveVotingAppDTOEntryTime
{-# INLINE curveVotingAppDTOEntryTimeL #-}

-- | 'curveVotingAppDTORecvTime' Lens
curveVotingAppDTORecvTimeL :: Lens_' CurveVotingAppDTO (Maybe DateTime)
curveVotingAppDTORecvTimeL f CurveVotingAppDTO{..} = (\curveVotingAppDTORecvTime -> CurveVotingAppDTO { curveVotingAppDTORecvTime, ..} ) <$> f curveVotingAppDTORecvTime
{-# INLINE curveVotingAppDTORecvTimeL #-}

-- | 'curveVotingAppDTOBlockNumber' Lens
curveVotingAppDTOBlockNumberL :: Lens_' CurveVotingAppDTO (Maybe Integer)
curveVotingAppDTOBlockNumberL f CurveVotingAppDTO{..} = (\curveVotingAppDTOBlockNumber -> CurveVotingAppDTO { curveVotingAppDTOBlockNumber, ..} ) <$> f curveVotingAppDTOBlockNumber
{-# INLINE curveVotingAppDTOBlockNumberL #-}

-- | 'curveVotingAppDTOId' Lens
curveVotingAppDTOIdL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOIdL f CurveVotingAppDTO{..} = (\curveVotingAppDTOId -> CurveVotingAppDTO { curveVotingAppDTOId, ..} ) <$> f curveVotingAppDTOId
{-# INLINE curveVotingAppDTOIdL #-}

-- | 'curveVotingAppDTOAddress' Lens
curveVotingAppDTOAddressL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOAddressL f CurveVotingAppDTO{..} = (\curveVotingAppDTOAddress -> CurveVotingAppDTO { curveVotingAppDTOAddress, ..} ) <$> f curveVotingAppDTOAddress
{-# INLINE curveVotingAppDTOAddressL #-}

-- | 'curveVotingAppDTOCodename' Lens
curveVotingAppDTOCodenameL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOCodenameL f CurveVotingAppDTO{..} = (\curveVotingAppDTOCodename -> CurveVotingAppDTO { curveVotingAppDTOCodename, ..} ) <$> f curveVotingAppDTOCodename
{-# INLINE curveVotingAppDTOCodenameL #-}

-- | 'curveVotingAppDTOMinimumBalance' Lens
curveVotingAppDTOMinimumBalanceL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOMinimumBalanceL f CurveVotingAppDTO{..} = (\curveVotingAppDTOMinimumBalance -> CurveVotingAppDTO { curveVotingAppDTOMinimumBalance, ..} ) <$> f curveVotingAppDTOMinimumBalance
{-# INLINE curveVotingAppDTOMinimumBalanceL #-}

-- | 'curveVotingAppDTOMinimumQuorum' Lens
curveVotingAppDTOMinimumQuorumL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOMinimumQuorumL f CurveVotingAppDTO{..} = (\curveVotingAppDTOMinimumQuorum -> CurveVotingAppDTO { curveVotingAppDTOMinimumQuorum, ..} ) <$> f curveVotingAppDTOMinimumQuorum
{-# INLINE curveVotingAppDTOMinimumQuorumL #-}

-- | 'curveVotingAppDTOMinimumTime' Lens
curveVotingAppDTOMinimumTimeL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOMinimumTimeL f CurveVotingAppDTO{..} = (\curveVotingAppDTOMinimumTime -> CurveVotingAppDTO { curveVotingAppDTOMinimumTime, ..} ) <$> f curveVotingAppDTOMinimumTime
{-# INLINE curveVotingAppDTOMinimumTimeL #-}

-- | 'curveVotingAppDTORequiredSupport' Lens
curveVotingAppDTORequiredSupportL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTORequiredSupportL f CurveVotingAppDTO{..} = (\curveVotingAppDTORequiredSupport -> CurveVotingAppDTO { curveVotingAppDTORequiredSupport, ..} ) <$> f curveVotingAppDTORequiredSupport
{-# INLINE curveVotingAppDTORequiredSupportL #-}

-- | 'curveVotingAppDTOVoteTime' Lens
curveVotingAppDTOVoteTimeL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOVoteTimeL f CurveVotingAppDTO{..} = (\curveVotingAppDTOVoteTime -> CurveVotingAppDTO { curveVotingAppDTOVoteTime, ..} ) <$> f curveVotingAppDTOVoteTime
{-# INLINE curveVotingAppDTOVoteTimeL #-}

-- | 'curveVotingAppDTOProposalCount' Lens
curveVotingAppDTOProposalCountL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOProposalCountL f CurveVotingAppDTO{..} = (\curveVotingAppDTOProposalCount -> CurveVotingAppDTO { curveVotingAppDTOProposalCount, ..} ) <$> f curveVotingAppDTOProposalCount
{-# INLINE curveVotingAppDTOProposalCountL #-}

-- | 'curveVotingAppDTOVoteCount' Lens
curveVotingAppDTOVoteCountL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOVoteCountL f CurveVotingAppDTO{..} = (\curveVotingAppDTOVoteCount -> CurveVotingAppDTO { curveVotingAppDTOVoteCount, ..} ) <$> f curveVotingAppDTOVoteCount
{-# INLINE curveVotingAppDTOVoteCountL #-}

-- | 'curveVotingAppDTOToken' Lens
curveVotingAppDTOTokenL :: Lens_' CurveVotingAppDTO (Maybe Text)
curveVotingAppDTOTokenL f CurveVotingAppDTO{..} = (\curveVotingAppDTOToken -> CurveVotingAppDTO { curveVotingAppDTOToken, ..} ) <$> f curveVotingAppDTOToken
{-# INLINE curveVotingAppDTOTokenL #-}

-- | 'curveVotingAppDTOVid' Lens
curveVotingAppDTOVidL :: Lens_' CurveVotingAppDTO (Maybe Integer)
curveVotingAppDTOVidL f CurveVotingAppDTO{..} = (\curveVotingAppDTOVid -> CurveVotingAppDTO { curveVotingAppDTOVid, ..} ) <$> f curveVotingAppDTOVid
{-# INLINE curveVotingAppDTOVidL #-}



-- * CurveWeeklyVolumeDTO

-- | 'curveWeeklyVolumeDTOEntryTime' Lens
curveWeeklyVolumeDTOEntryTimeL :: Lens_' CurveWeeklyVolumeDTO (Maybe DateTime)
curveWeeklyVolumeDTOEntryTimeL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOEntryTime -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOEntryTime, ..} ) <$> f curveWeeklyVolumeDTOEntryTime
{-# INLINE curveWeeklyVolumeDTOEntryTimeL #-}

-- | 'curveWeeklyVolumeDTORecvTime' Lens
curveWeeklyVolumeDTORecvTimeL :: Lens_' CurveWeeklyVolumeDTO (Maybe DateTime)
curveWeeklyVolumeDTORecvTimeL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTORecvTime -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTORecvTime, ..} ) <$> f curveWeeklyVolumeDTORecvTime
{-# INLINE curveWeeklyVolumeDTORecvTimeL #-}

-- | 'curveWeeklyVolumeDTOBlockNumber' Lens
curveWeeklyVolumeDTOBlockNumberL :: Lens_' CurveWeeklyVolumeDTO (Maybe Integer)
curveWeeklyVolumeDTOBlockNumberL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOBlockNumber -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOBlockNumber, ..} ) <$> f curveWeeklyVolumeDTOBlockNumber
{-# INLINE curveWeeklyVolumeDTOBlockNumberL #-}

-- | 'curveWeeklyVolumeDTOId' Lens
curveWeeklyVolumeDTOIdL :: Lens_' CurveWeeklyVolumeDTO (Maybe Text)
curveWeeklyVolumeDTOIdL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOId -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOId, ..} ) <$> f curveWeeklyVolumeDTOId
{-# INLINE curveWeeklyVolumeDTOIdL #-}

-- | 'curveWeeklyVolumeDTOPool' Lens
curveWeeklyVolumeDTOPoolL :: Lens_' CurveWeeklyVolumeDTO (Maybe Text)
curveWeeklyVolumeDTOPoolL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOPool -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOPool, ..} ) <$> f curveWeeklyVolumeDTOPool
{-# INLINE curveWeeklyVolumeDTOPoolL #-}

-- | 'curveWeeklyVolumeDTOTimestamp' Lens
curveWeeklyVolumeDTOTimestampL :: Lens_' CurveWeeklyVolumeDTO (Maybe Text)
curveWeeklyVolumeDTOTimestampL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOTimestamp -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOTimestamp, ..} ) <$> f curveWeeklyVolumeDTOTimestamp
{-# INLINE curveWeeklyVolumeDTOTimestampL #-}

-- | 'curveWeeklyVolumeDTOVolume' Lens
curveWeeklyVolumeDTOVolumeL :: Lens_' CurveWeeklyVolumeDTO (Maybe Text)
curveWeeklyVolumeDTOVolumeL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOVolume -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOVolume, ..} ) <$> f curveWeeklyVolumeDTOVolume
{-# INLINE curveWeeklyVolumeDTOVolumeL #-}

-- | 'curveWeeklyVolumeDTOVid' Lens
curveWeeklyVolumeDTOVidL :: Lens_' CurveWeeklyVolumeDTO (Maybe Integer)
curveWeeklyVolumeDTOVidL f CurveWeeklyVolumeDTO{..} = (\curveWeeklyVolumeDTOVid -> CurveWeeklyVolumeDTO { curveWeeklyVolumeDTOVid, ..} ) <$> f curveWeeklyVolumeDTOVid
{-# INLINE curveWeeklyVolumeDTOVidL #-}



-- * DexBatchDTO

-- | 'dexBatchDTOEntryTime' Lens
dexBatchDTOEntryTimeL :: Lens_' DexBatchDTO (Maybe DateTime)
dexBatchDTOEntryTimeL f DexBatchDTO{..} = (\dexBatchDTOEntryTime -> DexBatchDTO { dexBatchDTOEntryTime, ..} ) <$> f dexBatchDTOEntryTime
{-# INLINE dexBatchDTOEntryTimeL #-}

-- | 'dexBatchDTORecvTime' Lens
dexBatchDTORecvTimeL :: Lens_' DexBatchDTO (Maybe DateTime)
dexBatchDTORecvTimeL f DexBatchDTO{..} = (\dexBatchDTORecvTime -> DexBatchDTO { dexBatchDTORecvTime, ..} ) <$> f dexBatchDTORecvTime
{-# INLINE dexBatchDTORecvTimeL #-}

-- | 'dexBatchDTOBlockNumber' Lens
dexBatchDTOBlockNumberL :: Lens_' DexBatchDTO (Maybe Integer)
dexBatchDTOBlockNumberL f DexBatchDTO{..} = (\dexBatchDTOBlockNumber -> DexBatchDTO { dexBatchDTOBlockNumber, ..} ) <$> f dexBatchDTOBlockNumber
{-# INLINE dexBatchDTOBlockNumberL #-}

-- | 'dexBatchDTOId' Lens
dexBatchDTOIdL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOIdL f DexBatchDTO{..} = (\dexBatchDTOId -> DexBatchDTO { dexBatchDTOId, ..} ) <$> f dexBatchDTOId
{-# INLINE dexBatchDTOIdL #-}

-- | 'dexBatchDTOStartEpoch' Lens
dexBatchDTOStartEpochL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOStartEpochL f DexBatchDTO{..} = (\dexBatchDTOStartEpoch -> DexBatchDTO { dexBatchDTOStartEpoch, ..} ) <$> f dexBatchDTOStartEpoch
{-# INLINE dexBatchDTOStartEpochL #-}

-- | 'dexBatchDTOEndEpoch' Lens
dexBatchDTOEndEpochL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOEndEpochL f DexBatchDTO{..} = (\dexBatchDTOEndEpoch -> DexBatchDTO { dexBatchDTOEndEpoch, ..} ) <$> f dexBatchDTOEndEpoch
{-# INLINE dexBatchDTOEndEpochL #-}

-- | 'dexBatchDTOSolution' Lens
dexBatchDTOSolutionL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOSolutionL f DexBatchDTO{..} = (\dexBatchDTOSolution -> DexBatchDTO { dexBatchDTOSolution, ..} ) <$> f dexBatchDTOSolution
{-# INLINE dexBatchDTOSolutionL #-}

-- | 'dexBatchDTOFirstSolutionEpoch' Lens
dexBatchDTOFirstSolutionEpochL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOFirstSolutionEpochL f DexBatchDTO{..} = (\dexBatchDTOFirstSolutionEpoch -> DexBatchDTO { dexBatchDTOFirstSolutionEpoch, ..} ) <$> f dexBatchDTOFirstSolutionEpoch
{-# INLINE dexBatchDTOFirstSolutionEpochL #-}

-- | 'dexBatchDTOLastRevertEpoch' Lens
dexBatchDTOLastRevertEpochL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOLastRevertEpochL f DexBatchDTO{..} = (\dexBatchDTOLastRevertEpoch -> DexBatchDTO { dexBatchDTOLastRevertEpoch, ..} ) <$> f dexBatchDTOLastRevertEpoch
{-# INLINE dexBatchDTOLastRevertEpochL #-}

-- | 'dexBatchDTOTxHash' Lens
dexBatchDTOTxHashL :: Lens_' DexBatchDTO (Maybe Text)
dexBatchDTOTxHashL f DexBatchDTO{..} = (\dexBatchDTOTxHash -> DexBatchDTO { dexBatchDTOTxHash, ..} ) <$> f dexBatchDTOTxHash
{-# INLINE dexBatchDTOTxHashL #-}

-- | 'dexBatchDTOVid' Lens
dexBatchDTOVidL :: Lens_' DexBatchDTO (Maybe Integer)
dexBatchDTOVidL f DexBatchDTO{..} = (\dexBatchDTOVid -> DexBatchDTO { dexBatchDTOVid, ..} ) <$> f dexBatchDTOVid
{-# INLINE dexBatchDTOVidL #-}



-- * DexDepositDTO

-- | 'dexDepositDTOEntryTime' Lens
dexDepositDTOEntryTimeL :: Lens_' DexDepositDTO (Maybe DateTime)
dexDepositDTOEntryTimeL f DexDepositDTO{..} = (\dexDepositDTOEntryTime -> DexDepositDTO { dexDepositDTOEntryTime, ..} ) <$> f dexDepositDTOEntryTime
{-# INLINE dexDepositDTOEntryTimeL #-}

-- | 'dexDepositDTORecvTime' Lens
dexDepositDTORecvTimeL :: Lens_' DexDepositDTO (Maybe DateTime)
dexDepositDTORecvTimeL f DexDepositDTO{..} = (\dexDepositDTORecvTime -> DexDepositDTO { dexDepositDTORecvTime, ..} ) <$> f dexDepositDTORecvTime
{-# INLINE dexDepositDTORecvTimeL #-}

-- | 'dexDepositDTOBlockNumber' Lens
dexDepositDTOBlockNumberL :: Lens_' DexDepositDTO (Maybe Integer)
dexDepositDTOBlockNumberL f DexDepositDTO{..} = (\dexDepositDTOBlockNumber -> DexDepositDTO { dexDepositDTOBlockNumber, ..} ) <$> f dexDepositDTOBlockNumber
{-# INLINE dexDepositDTOBlockNumberL #-}

-- | 'dexDepositDTOId' Lens
dexDepositDTOIdL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOIdL f DexDepositDTO{..} = (\dexDepositDTOId -> DexDepositDTO { dexDepositDTOId, ..} ) <$> f dexDepositDTOId
{-# INLINE dexDepositDTOIdL #-}

-- | 'dexDepositDTOUser' Lens
dexDepositDTOUserL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOUserL f DexDepositDTO{..} = (\dexDepositDTOUser -> DexDepositDTO { dexDepositDTOUser, ..} ) <$> f dexDepositDTOUser
{-# INLINE dexDepositDTOUserL #-}

-- | 'dexDepositDTOTokenAddress' Lens
dexDepositDTOTokenAddressL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOTokenAddressL f DexDepositDTO{..} = (\dexDepositDTOTokenAddress -> DexDepositDTO { dexDepositDTOTokenAddress, ..} ) <$> f dexDepositDTOTokenAddress
{-# INLINE dexDepositDTOTokenAddressL #-}

-- | 'dexDepositDTOAmount' Lens
dexDepositDTOAmountL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOAmountL f DexDepositDTO{..} = (\dexDepositDTOAmount -> DexDepositDTO { dexDepositDTOAmount, ..} ) <$> f dexDepositDTOAmount
{-# INLINE dexDepositDTOAmountL #-}

-- | 'dexDepositDTOBatchId' Lens
dexDepositDTOBatchIdL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOBatchIdL f DexDepositDTO{..} = (\dexDepositDTOBatchId -> DexDepositDTO { dexDepositDTOBatchId, ..} ) <$> f dexDepositDTOBatchId
{-# INLINE dexDepositDTOBatchIdL #-}

-- | 'dexDepositDTOCreateEpoch' Lens
dexDepositDTOCreateEpochL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOCreateEpochL f DexDepositDTO{..} = (\dexDepositDTOCreateEpoch -> DexDepositDTO { dexDepositDTOCreateEpoch, ..} ) <$> f dexDepositDTOCreateEpoch
{-# INLINE dexDepositDTOCreateEpochL #-}

-- | 'dexDepositDTOTxHash' Lens
dexDepositDTOTxHashL :: Lens_' DexDepositDTO (Maybe Text)
dexDepositDTOTxHashL f DexDepositDTO{..} = (\dexDepositDTOTxHash -> DexDepositDTO { dexDepositDTOTxHash, ..} ) <$> f dexDepositDTOTxHash
{-# INLINE dexDepositDTOTxHashL #-}

-- | 'dexDepositDTOVid' Lens
dexDepositDTOVidL :: Lens_' DexDepositDTO (Maybe Integer)
dexDepositDTOVidL f DexDepositDTO{..} = (\dexDepositDTOVid -> DexDepositDTO { dexDepositDTOVid, ..} ) <$> f dexDepositDTOVid
{-# INLINE dexDepositDTOVidL #-}



-- * DexOrderDTO

-- | 'dexOrderDTOEntryTime' Lens
dexOrderDTOEntryTimeL :: Lens_' DexOrderDTO (Maybe DateTime)
dexOrderDTOEntryTimeL f DexOrderDTO{..} = (\dexOrderDTOEntryTime -> DexOrderDTO { dexOrderDTOEntryTime, ..} ) <$> f dexOrderDTOEntryTime
{-# INLINE dexOrderDTOEntryTimeL #-}

-- | 'dexOrderDTORecvTime' Lens
dexOrderDTORecvTimeL :: Lens_' DexOrderDTO (Maybe DateTime)
dexOrderDTORecvTimeL f DexOrderDTO{..} = (\dexOrderDTORecvTime -> DexOrderDTO { dexOrderDTORecvTime, ..} ) <$> f dexOrderDTORecvTime
{-# INLINE dexOrderDTORecvTimeL #-}

-- | 'dexOrderDTOBlockNumber' Lens
dexOrderDTOBlockNumberL :: Lens_' DexOrderDTO (Maybe Integer)
dexOrderDTOBlockNumberL f DexOrderDTO{..} = (\dexOrderDTOBlockNumber -> DexOrderDTO { dexOrderDTOBlockNumber, ..} ) <$> f dexOrderDTOBlockNumber
{-# INLINE dexOrderDTOBlockNumberL #-}

-- | 'dexOrderDTOId' Lens
dexOrderDTOIdL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOIdL f DexOrderDTO{..} = (\dexOrderDTOId -> DexOrderDTO { dexOrderDTOId, ..} ) <$> f dexOrderDTOId
{-# INLINE dexOrderDTOIdL #-}

-- | 'dexOrderDTOOwner' Lens
dexOrderDTOOwnerL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOOwnerL f DexOrderDTO{..} = (\dexOrderDTOOwner -> DexOrderDTO { dexOrderDTOOwner, ..} ) <$> f dexOrderDTOOwner
{-# INLINE dexOrderDTOOwnerL #-}

-- | 'dexOrderDTOOrderId' Lens
dexOrderDTOOrderIdL :: Lens_' DexOrderDTO (Maybe Int)
dexOrderDTOOrderIdL f DexOrderDTO{..} = (\dexOrderDTOOrderId -> DexOrderDTO { dexOrderDTOOrderId, ..} ) <$> f dexOrderDTOOrderId
{-# INLINE dexOrderDTOOrderIdL #-}

-- | 'dexOrderDTOFromBatchId' Lens
dexOrderDTOFromBatchIdL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOFromBatchIdL f DexOrderDTO{..} = (\dexOrderDTOFromBatchId -> DexOrderDTO { dexOrderDTOFromBatchId, ..} ) <$> f dexOrderDTOFromBatchId
{-# INLINE dexOrderDTOFromBatchIdL #-}

-- | 'dexOrderDTOFromEpoch' Lens
dexOrderDTOFromEpochL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOFromEpochL f DexOrderDTO{..} = (\dexOrderDTOFromEpoch -> DexOrderDTO { dexOrderDTOFromEpoch, ..} ) <$> f dexOrderDTOFromEpoch
{-# INLINE dexOrderDTOFromEpochL #-}

-- | 'dexOrderDTOUntilBatchId' Lens
dexOrderDTOUntilBatchIdL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOUntilBatchIdL f DexOrderDTO{..} = (\dexOrderDTOUntilBatchId -> DexOrderDTO { dexOrderDTOUntilBatchId, ..} ) <$> f dexOrderDTOUntilBatchId
{-# INLINE dexOrderDTOUntilBatchIdL #-}

-- | 'dexOrderDTOUntilEpoch' Lens
dexOrderDTOUntilEpochL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOUntilEpochL f DexOrderDTO{..} = (\dexOrderDTOUntilEpoch -> DexOrderDTO { dexOrderDTOUntilEpoch, ..} ) <$> f dexOrderDTOUntilEpoch
{-# INLINE dexOrderDTOUntilEpochL #-}

-- | 'dexOrderDTOBuyToken' Lens
dexOrderDTOBuyTokenL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOBuyTokenL f DexOrderDTO{..} = (\dexOrderDTOBuyToken -> DexOrderDTO { dexOrderDTOBuyToken, ..} ) <$> f dexOrderDTOBuyToken
{-# INLINE dexOrderDTOBuyTokenL #-}

-- | 'dexOrderDTOSellToken' Lens
dexOrderDTOSellTokenL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOSellTokenL f DexOrderDTO{..} = (\dexOrderDTOSellToken -> DexOrderDTO { dexOrderDTOSellToken, ..} ) <$> f dexOrderDTOSellToken
{-# INLINE dexOrderDTOSellTokenL #-}

-- | 'dexOrderDTOPriceNumerator' Lens
dexOrderDTOPriceNumeratorL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOPriceNumeratorL f DexOrderDTO{..} = (\dexOrderDTOPriceNumerator -> DexOrderDTO { dexOrderDTOPriceNumerator, ..} ) <$> f dexOrderDTOPriceNumerator
{-# INLINE dexOrderDTOPriceNumeratorL #-}

-- | 'dexOrderDTOPriceDenominator' Lens
dexOrderDTOPriceDenominatorL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOPriceDenominatorL f DexOrderDTO{..} = (\dexOrderDTOPriceDenominator -> DexOrderDTO { dexOrderDTOPriceDenominator, ..} ) <$> f dexOrderDTOPriceDenominator
{-# INLINE dexOrderDTOPriceDenominatorL #-}

-- | 'dexOrderDTOMaxSellAmount' Lens
dexOrderDTOMaxSellAmountL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOMaxSellAmountL f DexOrderDTO{..} = (\dexOrderDTOMaxSellAmount -> DexOrderDTO { dexOrderDTOMaxSellAmount, ..} ) <$> f dexOrderDTOMaxSellAmount
{-# INLINE dexOrderDTOMaxSellAmountL #-}

-- | 'dexOrderDTOMinReceiveAmount' Lens
dexOrderDTOMinReceiveAmountL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOMinReceiveAmountL f DexOrderDTO{..} = (\dexOrderDTOMinReceiveAmount -> DexOrderDTO { dexOrderDTOMinReceiveAmount, ..} ) <$> f dexOrderDTOMinReceiveAmount
{-# INLINE dexOrderDTOMinReceiveAmountL #-}

-- | 'dexOrderDTOSoldVolume' Lens
dexOrderDTOSoldVolumeL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOSoldVolumeL f DexOrderDTO{..} = (\dexOrderDTOSoldVolume -> DexOrderDTO { dexOrderDTOSoldVolume, ..} ) <$> f dexOrderDTOSoldVolume
{-# INLINE dexOrderDTOSoldVolumeL #-}

-- | 'dexOrderDTOBoughtVolume' Lens
dexOrderDTOBoughtVolumeL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOBoughtVolumeL f DexOrderDTO{..} = (\dexOrderDTOBoughtVolume -> DexOrderDTO { dexOrderDTOBoughtVolume, ..} ) <$> f dexOrderDTOBoughtVolume
{-# INLINE dexOrderDTOBoughtVolumeL #-}

-- | 'dexOrderDTOCreateEpoch' Lens
dexOrderDTOCreateEpochL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOCreateEpochL f DexOrderDTO{..} = (\dexOrderDTOCreateEpoch -> DexOrderDTO { dexOrderDTOCreateEpoch, ..} ) <$> f dexOrderDTOCreateEpoch
{-# INLINE dexOrderDTOCreateEpochL #-}

-- | 'dexOrderDTOCancelEpoch' Lens
dexOrderDTOCancelEpochL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOCancelEpochL f DexOrderDTO{..} = (\dexOrderDTOCancelEpoch -> DexOrderDTO { dexOrderDTOCancelEpoch, ..} ) <$> f dexOrderDTOCancelEpoch
{-# INLINE dexOrderDTOCancelEpochL #-}

-- | 'dexOrderDTODeleteEpoch' Lens
dexOrderDTODeleteEpochL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTODeleteEpochL f DexOrderDTO{..} = (\dexOrderDTODeleteEpoch -> DexOrderDTO { dexOrderDTODeleteEpoch, ..} ) <$> f dexOrderDTODeleteEpoch
{-# INLINE dexOrderDTODeleteEpochL #-}

-- | 'dexOrderDTOTxHash' Lens
dexOrderDTOTxHashL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOTxHashL f DexOrderDTO{..} = (\dexOrderDTOTxHash -> DexOrderDTO { dexOrderDTOTxHash, ..} ) <$> f dexOrderDTOTxHash
{-# INLINE dexOrderDTOTxHashL #-}

-- | 'dexOrderDTOTxLogIndex' Lens
dexOrderDTOTxLogIndexL :: Lens_' DexOrderDTO (Maybe Text)
dexOrderDTOTxLogIndexL f DexOrderDTO{..} = (\dexOrderDTOTxLogIndex -> DexOrderDTO { dexOrderDTOTxLogIndex, ..} ) <$> f dexOrderDTOTxLogIndex
{-# INLINE dexOrderDTOTxLogIndexL #-}

-- | 'dexOrderDTOVid' Lens
dexOrderDTOVidL :: Lens_' DexOrderDTO (Maybe Integer)
dexOrderDTOVidL f DexOrderDTO{..} = (\dexOrderDTOVid -> DexOrderDTO { dexOrderDTOVid, ..} ) <$> f dexOrderDTOVid
{-# INLINE dexOrderDTOVidL #-}



-- * DexPriceDTO

-- | 'dexPriceDTOEntryTime' Lens
dexPriceDTOEntryTimeL :: Lens_' DexPriceDTO (Maybe DateTime)
dexPriceDTOEntryTimeL f DexPriceDTO{..} = (\dexPriceDTOEntryTime -> DexPriceDTO { dexPriceDTOEntryTime, ..} ) <$> f dexPriceDTOEntryTime
{-# INLINE dexPriceDTOEntryTimeL #-}

-- | 'dexPriceDTORecvTime' Lens
dexPriceDTORecvTimeL :: Lens_' DexPriceDTO (Maybe DateTime)
dexPriceDTORecvTimeL f DexPriceDTO{..} = (\dexPriceDTORecvTime -> DexPriceDTO { dexPriceDTORecvTime, ..} ) <$> f dexPriceDTORecvTime
{-# INLINE dexPriceDTORecvTimeL #-}

-- | 'dexPriceDTOBlockNumber' Lens
dexPriceDTOBlockNumberL :: Lens_' DexPriceDTO (Maybe Integer)
dexPriceDTOBlockNumberL f DexPriceDTO{..} = (\dexPriceDTOBlockNumber -> DexPriceDTO { dexPriceDTOBlockNumber, ..} ) <$> f dexPriceDTOBlockNumber
{-# INLINE dexPriceDTOBlockNumberL #-}

-- | 'dexPriceDTOId' Lens
dexPriceDTOIdL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOIdL f DexPriceDTO{..} = (\dexPriceDTOId -> DexPriceDTO { dexPriceDTOId, ..} ) <$> f dexPriceDTOId
{-# INLINE dexPriceDTOIdL #-}

-- | 'dexPriceDTOToken' Lens
dexPriceDTOTokenL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOTokenL f DexPriceDTO{..} = (\dexPriceDTOToken -> DexPriceDTO { dexPriceDTOToken, ..} ) <$> f dexPriceDTOToken
{-# INLINE dexPriceDTOTokenL #-}

-- | 'dexPriceDTOBatchId' Lens
dexPriceDTOBatchIdL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOBatchIdL f DexPriceDTO{..} = (\dexPriceDTOBatchId -> DexPriceDTO { dexPriceDTOBatchId, ..} ) <$> f dexPriceDTOBatchId
{-# INLINE dexPriceDTOBatchIdL #-}

-- | 'dexPriceDTOPriceInOwlNumerator' Lens
dexPriceDTOPriceInOwlNumeratorL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOPriceInOwlNumeratorL f DexPriceDTO{..} = (\dexPriceDTOPriceInOwlNumerator -> DexPriceDTO { dexPriceDTOPriceInOwlNumerator, ..} ) <$> f dexPriceDTOPriceInOwlNumerator
{-# INLINE dexPriceDTOPriceInOwlNumeratorL #-}

-- | 'dexPriceDTOPriceInOwlDenominator' Lens
dexPriceDTOPriceInOwlDenominatorL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOPriceInOwlDenominatorL f DexPriceDTO{..} = (\dexPriceDTOPriceInOwlDenominator -> DexPriceDTO { dexPriceDTOPriceInOwlDenominator, ..} ) <$> f dexPriceDTOPriceInOwlDenominator
{-# INLINE dexPriceDTOPriceInOwlDenominatorL #-}

-- | 'dexPriceDTOVolume' Lens
dexPriceDTOVolumeL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOVolumeL f DexPriceDTO{..} = (\dexPriceDTOVolume -> DexPriceDTO { dexPriceDTOVolume, ..} ) <$> f dexPriceDTOVolume
{-# INLINE dexPriceDTOVolumeL #-}

-- | 'dexPriceDTOCreateEpoch' Lens
dexPriceDTOCreateEpochL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOCreateEpochL f DexPriceDTO{..} = (\dexPriceDTOCreateEpoch -> DexPriceDTO { dexPriceDTOCreateEpoch, ..} ) <$> f dexPriceDTOCreateEpoch
{-# INLINE dexPriceDTOCreateEpochL #-}

-- | 'dexPriceDTOTxHash' Lens
dexPriceDTOTxHashL :: Lens_' DexPriceDTO (Maybe Text)
dexPriceDTOTxHashL f DexPriceDTO{..} = (\dexPriceDTOTxHash -> DexPriceDTO { dexPriceDTOTxHash, ..} ) <$> f dexPriceDTOTxHash
{-# INLINE dexPriceDTOTxHashL #-}

-- | 'dexPriceDTOVid' Lens
dexPriceDTOVidL :: Lens_' DexPriceDTO (Maybe Integer)
dexPriceDTOVidL f DexPriceDTO{..} = (\dexPriceDTOVid -> DexPriceDTO { dexPriceDTOVid, ..} ) <$> f dexPriceDTOVid
{-# INLINE dexPriceDTOVidL #-}



-- * DexSolutionDTO

-- | 'dexSolutionDTOEntryTime' Lens
dexSolutionDTOEntryTimeL :: Lens_' DexSolutionDTO (Maybe DateTime)
dexSolutionDTOEntryTimeL f DexSolutionDTO{..} = (\dexSolutionDTOEntryTime -> DexSolutionDTO { dexSolutionDTOEntryTime, ..} ) <$> f dexSolutionDTOEntryTime
{-# INLINE dexSolutionDTOEntryTimeL #-}

-- | 'dexSolutionDTORecvTime' Lens
dexSolutionDTORecvTimeL :: Lens_' DexSolutionDTO (Maybe DateTime)
dexSolutionDTORecvTimeL f DexSolutionDTO{..} = (\dexSolutionDTORecvTime -> DexSolutionDTO { dexSolutionDTORecvTime, ..} ) <$> f dexSolutionDTORecvTime
{-# INLINE dexSolutionDTORecvTimeL #-}

-- | 'dexSolutionDTOBlockNumber' Lens
dexSolutionDTOBlockNumberL :: Lens_' DexSolutionDTO (Maybe Integer)
dexSolutionDTOBlockNumberL f DexSolutionDTO{..} = (\dexSolutionDTOBlockNumber -> DexSolutionDTO { dexSolutionDTOBlockNumber, ..} ) <$> f dexSolutionDTOBlockNumber
{-# INLINE dexSolutionDTOBlockNumberL #-}

-- | 'dexSolutionDTOId' Lens
dexSolutionDTOIdL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOIdL f DexSolutionDTO{..} = (\dexSolutionDTOId -> DexSolutionDTO { dexSolutionDTOId, ..} ) <$> f dexSolutionDTOId
{-# INLINE dexSolutionDTOIdL #-}

-- | 'dexSolutionDTOBatch' Lens
dexSolutionDTOBatchL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOBatchL f DexSolutionDTO{..} = (\dexSolutionDTOBatch -> DexSolutionDTO { dexSolutionDTOBatch, ..} ) <$> f dexSolutionDTOBatch
{-# INLINE dexSolutionDTOBatchL #-}

-- | 'dexSolutionDTOSolver' Lens
dexSolutionDTOSolverL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOSolverL f DexSolutionDTO{..} = (\dexSolutionDTOSolver -> DexSolutionDTO { dexSolutionDTOSolver, ..} ) <$> f dexSolutionDTOSolver
{-# INLINE dexSolutionDTOSolverL #-}

-- | 'dexSolutionDTOFeeReward' Lens
dexSolutionDTOFeeRewardL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOFeeRewardL f DexSolutionDTO{..} = (\dexSolutionDTOFeeReward -> DexSolutionDTO { dexSolutionDTOFeeReward, ..} ) <$> f dexSolutionDTOFeeReward
{-# INLINE dexSolutionDTOFeeRewardL #-}

-- | 'dexSolutionDTOObjectiveValue' Lens
dexSolutionDTOObjectiveValueL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOObjectiveValueL f DexSolutionDTO{..} = (\dexSolutionDTOObjectiveValue -> DexSolutionDTO { dexSolutionDTOObjectiveValue, ..} ) <$> f dexSolutionDTOObjectiveValue
{-# INLINE dexSolutionDTOObjectiveValueL #-}

-- | 'dexSolutionDTOUtility' Lens
dexSolutionDTOUtilityL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOUtilityL f DexSolutionDTO{..} = (\dexSolutionDTOUtility -> DexSolutionDTO { dexSolutionDTOUtility, ..} ) <$> f dexSolutionDTOUtility
{-# INLINE dexSolutionDTOUtilityL #-}

-- | 'dexSolutionDTOTrades' Lens
dexSolutionDTOTradesL :: Lens_' DexSolutionDTO (Maybe [Text])
dexSolutionDTOTradesL f DexSolutionDTO{..} = (\dexSolutionDTOTrades -> DexSolutionDTO { dexSolutionDTOTrades, ..} ) <$> f dexSolutionDTOTrades
{-# INLINE dexSolutionDTOTradesL #-}

-- | 'dexSolutionDTOCreateEpoch' Lens
dexSolutionDTOCreateEpochL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOCreateEpochL f DexSolutionDTO{..} = (\dexSolutionDTOCreateEpoch -> DexSolutionDTO { dexSolutionDTOCreateEpoch, ..} ) <$> f dexSolutionDTOCreateEpoch
{-# INLINE dexSolutionDTOCreateEpochL #-}

-- | 'dexSolutionDTORevertEpoch' Lens
dexSolutionDTORevertEpochL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTORevertEpochL f DexSolutionDTO{..} = (\dexSolutionDTORevertEpoch -> DexSolutionDTO { dexSolutionDTORevertEpoch, ..} ) <$> f dexSolutionDTORevertEpoch
{-# INLINE dexSolutionDTORevertEpochL #-}

-- | 'dexSolutionDTOTxHash' Lens
dexSolutionDTOTxHashL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOTxHashL f DexSolutionDTO{..} = (\dexSolutionDTOTxHash -> DexSolutionDTO { dexSolutionDTOTxHash, ..} ) <$> f dexSolutionDTOTxHash
{-# INLINE dexSolutionDTOTxHashL #-}

-- | 'dexSolutionDTOTxLogIndex' Lens
dexSolutionDTOTxLogIndexL :: Lens_' DexSolutionDTO (Maybe Text)
dexSolutionDTOTxLogIndexL f DexSolutionDTO{..} = (\dexSolutionDTOTxLogIndex -> DexSolutionDTO { dexSolutionDTOTxLogIndex, ..} ) <$> f dexSolutionDTOTxLogIndex
{-# INLINE dexSolutionDTOTxLogIndexL #-}

-- | 'dexSolutionDTOVid' Lens
dexSolutionDTOVidL :: Lens_' DexSolutionDTO (Maybe Integer)
dexSolutionDTOVidL f DexSolutionDTO{..} = (\dexSolutionDTOVid -> DexSolutionDTO { dexSolutionDTOVid, ..} ) <$> f dexSolutionDTOVid
{-# INLINE dexSolutionDTOVidL #-}



-- * DexStatsDTO

-- | 'dexStatsDTOEntryTime' Lens
dexStatsDTOEntryTimeL :: Lens_' DexStatsDTO (Maybe DateTime)
dexStatsDTOEntryTimeL f DexStatsDTO{..} = (\dexStatsDTOEntryTime -> DexStatsDTO { dexStatsDTOEntryTime, ..} ) <$> f dexStatsDTOEntryTime
{-# INLINE dexStatsDTOEntryTimeL #-}

-- | 'dexStatsDTORecvTime' Lens
dexStatsDTORecvTimeL :: Lens_' DexStatsDTO (Maybe DateTime)
dexStatsDTORecvTimeL f DexStatsDTO{..} = (\dexStatsDTORecvTime -> DexStatsDTO { dexStatsDTORecvTime, ..} ) <$> f dexStatsDTORecvTime
{-# INLINE dexStatsDTORecvTimeL #-}

-- | 'dexStatsDTOBlockNumber' Lens
dexStatsDTOBlockNumberL :: Lens_' DexStatsDTO (Maybe Integer)
dexStatsDTOBlockNumberL f DexStatsDTO{..} = (\dexStatsDTOBlockNumber -> DexStatsDTO { dexStatsDTOBlockNumber, ..} ) <$> f dexStatsDTOBlockNumber
{-# INLINE dexStatsDTOBlockNumberL #-}

-- | 'dexStatsDTOId' Lens
dexStatsDTOIdL :: Lens_' DexStatsDTO (Maybe Text)
dexStatsDTOIdL f DexStatsDTO{..} = (\dexStatsDTOId -> DexStatsDTO { dexStatsDTOId, ..} ) <$> f dexStatsDTOId
{-# INLINE dexStatsDTOIdL #-}

-- | 'dexStatsDTOVolumeInOwl' Lens
dexStatsDTOVolumeInOwlL :: Lens_' DexStatsDTO (Maybe Text)
dexStatsDTOVolumeInOwlL f DexStatsDTO{..} = (\dexStatsDTOVolumeInOwl -> DexStatsDTO { dexStatsDTOVolumeInOwl, ..} ) <$> f dexStatsDTOVolumeInOwl
{-# INLINE dexStatsDTOVolumeInOwlL #-}

-- | 'dexStatsDTOUtilityInOwl' Lens
dexStatsDTOUtilityInOwlL :: Lens_' DexStatsDTO (Maybe Text)
dexStatsDTOUtilityInOwlL f DexStatsDTO{..} = (\dexStatsDTOUtilityInOwl -> DexStatsDTO { dexStatsDTOUtilityInOwl, ..} ) <$> f dexStatsDTOUtilityInOwl
{-# INLINE dexStatsDTOUtilityInOwlL #-}

-- | 'dexStatsDTOOwlBurnt' Lens
dexStatsDTOOwlBurntL :: Lens_' DexStatsDTO (Maybe Text)
dexStatsDTOOwlBurntL f DexStatsDTO{..} = (\dexStatsDTOOwlBurnt -> DexStatsDTO { dexStatsDTOOwlBurnt, ..} ) <$> f dexStatsDTOOwlBurnt
{-# INLINE dexStatsDTOOwlBurntL #-}

-- | 'dexStatsDTOSettledBatchCount' Lens
dexStatsDTOSettledBatchCountL :: Lens_' DexStatsDTO (Maybe Int)
dexStatsDTOSettledBatchCountL f DexStatsDTO{..} = (\dexStatsDTOSettledBatchCount -> DexStatsDTO { dexStatsDTOSettledBatchCount, ..} ) <$> f dexStatsDTOSettledBatchCount
{-# INLINE dexStatsDTOSettledBatchCountL #-}

-- | 'dexStatsDTOSettledTradeCount' Lens
dexStatsDTOSettledTradeCountL :: Lens_' DexStatsDTO (Maybe Int)
dexStatsDTOSettledTradeCountL f DexStatsDTO{..} = (\dexStatsDTOSettledTradeCount -> DexStatsDTO { dexStatsDTOSettledTradeCount, ..} ) <$> f dexStatsDTOSettledTradeCount
{-# INLINE dexStatsDTOSettledTradeCountL #-}

-- | 'dexStatsDTOListedTokens' Lens
dexStatsDTOListedTokensL :: Lens_' DexStatsDTO (Maybe Int)
dexStatsDTOListedTokensL f DexStatsDTO{..} = (\dexStatsDTOListedTokens -> DexStatsDTO { dexStatsDTOListedTokens, ..} ) <$> f dexStatsDTOListedTokens
{-# INLINE dexStatsDTOListedTokensL #-}

-- | 'dexStatsDTOVid' Lens
dexStatsDTOVidL :: Lens_' DexStatsDTO (Maybe Integer)
dexStatsDTOVidL f DexStatsDTO{..} = (\dexStatsDTOVid -> DexStatsDTO { dexStatsDTOVid, ..} ) <$> f dexStatsDTOVid
{-# INLINE dexStatsDTOVidL #-}



-- * DexTokenDTO

-- | 'dexTokenDTOEntryTime' Lens
dexTokenDTOEntryTimeL :: Lens_' DexTokenDTO (Maybe DateTime)
dexTokenDTOEntryTimeL f DexTokenDTO{..} = (\dexTokenDTOEntryTime -> DexTokenDTO { dexTokenDTOEntryTime, ..} ) <$> f dexTokenDTOEntryTime
{-# INLINE dexTokenDTOEntryTimeL #-}

-- | 'dexTokenDTORecvTime' Lens
dexTokenDTORecvTimeL :: Lens_' DexTokenDTO (Maybe DateTime)
dexTokenDTORecvTimeL f DexTokenDTO{..} = (\dexTokenDTORecvTime -> DexTokenDTO { dexTokenDTORecvTime, ..} ) <$> f dexTokenDTORecvTime
{-# INLINE dexTokenDTORecvTimeL #-}

-- | 'dexTokenDTOBlockNumber' Lens
dexTokenDTOBlockNumberL :: Lens_' DexTokenDTO (Maybe Integer)
dexTokenDTOBlockNumberL f DexTokenDTO{..} = (\dexTokenDTOBlockNumber -> DexTokenDTO { dexTokenDTOBlockNumber, ..} ) <$> f dexTokenDTOBlockNumber
{-# INLINE dexTokenDTOBlockNumberL #-}

-- | 'dexTokenDTOId' Lens
dexTokenDTOIdL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOIdL f DexTokenDTO{..} = (\dexTokenDTOId -> DexTokenDTO { dexTokenDTOId, ..} ) <$> f dexTokenDTOId
{-# INLINE dexTokenDTOIdL #-}

-- | 'dexTokenDTOAddress' Lens
dexTokenDTOAddressL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOAddressL f DexTokenDTO{..} = (\dexTokenDTOAddress -> DexTokenDTO { dexTokenDTOAddress, ..} ) <$> f dexTokenDTOAddress
{-# INLINE dexTokenDTOAddressL #-}

-- | 'dexTokenDTOFromBatchId' Lens
dexTokenDTOFromBatchIdL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOFromBatchIdL f DexTokenDTO{..} = (\dexTokenDTOFromBatchId -> DexTokenDTO { dexTokenDTOFromBatchId, ..} ) <$> f dexTokenDTOFromBatchId
{-# INLINE dexTokenDTOFromBatchIdL #-}

-- | 'dexTokenDTOSymbol' Lens
dexTokenDTOSymbolL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOSymbolL f DexTokenDTO{..} = (\dexTokenDTOSymbol -> DexTokenDTO { dexTokenDTOSymbol, ..} ) <$> f dexTokenDTOSymbol
{-# INLINE dexTokenDTOSymbolL #-}

-- | 'dexTokenDTODecimals' Lens
dexTokenDTODecimalsL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTODecimalsL f DexTokenDTO{..} = (\dexTokenDTODecimals -> DexTokenDTO { dexTokenDTODecimals, ..} ) <$> f dexTokenDTODecimals
{-# INLINE dexTokenDTODecimalsL #-}

-- | 'dexTokenDTOName' Lens
dexTokenDTONameL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTONameL f DexTokenDTO{..} = (\dexTokenDTOName -> DexTokenDTO { dexTokenDTOName, ..} ) <$> f dexTokenDTOName
{-# INLINE dexTokenDTONameL #-}

-- | 'dexTokenDTOSellVolume' Lens
dexTokenDTOSellVolumeL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOSellVolumeL f DexTokenDTO{..} = (\dexTokenDTOSellVolume -> DexTokenDTO { dexTokenDTOSellVolume, ..} ) <$> f dexTokenDTOSellVolume
{-# INLINE dexTokenDTOSellVolumeL #-}

-- | 'dexTokenDTOCreateEpoch' Lens
dexTokenDTOCreateEpochL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOCreateEpochL f DexTokenDTO{..} = (\dexTokenDTOCreateEpoch -> DexTokenDTO { dexTokenDTOCreateEpoch, ..} ) <$> f dexTokenDTOCreateEpoch
{-# INLINE dexTokenDTOCreateEpochL #-}

-- | 'dexTokenDTOTxHash' Lens
dexTokenDTOTxHashL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOTxHashL f DexTokenDTO{..} = (\dexTokenDTOTxHash -> DexTokenDTO { dexTokenDTOTxHash, ..} ) <$> f dexTokenDTOTxHash
{-# INLINE dexTokenDTOTxHashL #-}

-- | 'dexTokenDTOVid' Lens
dexTokenDTOVidL :: Lens_' DexTokenDTO (Maybe Integer)
dexTokenDTOVidL f DexTokenDTO{..} = (\dexTokenDTOVid -> DexTokenDTO { dexTokenDTOVid, ..} ) <$> f dexTokenDTOVid
{-# INLINE dexTokenDTOVidL #-}

-- | 'dexTokenDTOTokenSymbol' Lens
dexTokenDTOTokenSymbolL :: Lens_' DexTokenDTO (Maybe Text)
dexTokenDTOTokenSymbolL f DexTokenDTO{..} = (\dexTokenDTOTokenSymbol -> DexTokenDTO { dexTokenDTOTokenSymbol, ..} ) <$> f dexTokenDTOTokenSymbol
{-# INLINE dexTokenDTOTokenSymbolL #-}



-- * DexTradeDTO

-- | 'dexTradeDTOEntryTime' Lens
dexTradeDTOEntryTimeL :: Lens_' DexTradeDTO (Maybe DateTime)
dexTradeDTOEntryTimeL f DexTradeDTO{..} = (\dexTradeDTOEntryTime -> DexTradeDTO { dexTradeDTOEntryTime, ..} ) <$> f dexTradeDTOEntryTime
{-# INLINE dexTradeDTOEntryTimeL #-}

-- | 'dexTradeDTORecvTime' Lens
dexTradeDTORecvTimeL :: Lens_' DexTradeDTO (Maybe DateTime)
dexTradeDTORecvTimeL f DexTradeDTO{..} = (\dexTradeDTORecvTime -> DexTradeDTO { dexTradeDTORecvTime, ..} ) <$> f dexTradeDTORecvTime
{-# INLINE dexTradeDTORecvTimeL #-}

-- | 'dexTradeDTOBlockNumber' Lens
dexTradeDTOBlockNumberL :: Lens_' DexTradeDTO (Maybe Integer)
dexTradeDTOBlockNumberL f DexTradeDTO{..} = (\dexTradeDTOBlockNumber -> DexTradeDTO { dexTradeDTOBlockNumber, ..} ) <$> f dexTradeDTOBlockNumber
{-# INLINE dexTradeDTOBlockNumberL #-}

-- | 'dexTradeDTOId' Lens
dexTradeDTOIdL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOIdL f DexTradeDTO{..} = (\dexTradeDTOId -> DexTradeDTO { dexTradeDTOId, ..} ) <$> f dexTradeDTOId
{-# INLINE dexTradeDTOIdL #-}

-- | 'dexTradeDTOOrder' Lens
dexTradeDTOOrderL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOOrderL f DexTradeDTO{..} = (\dexTradeDTOOrder -> DexTradeDTO { dexTradeDTOOrder, ..} ) <$> f dexTradeDTOOrder
{-# INLINE dexTradeDTOOrderL #-}

-- | 'dexTradeDTOOwner' Lens
dexTradeDTOOwnerL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOOwnerL f DexTradeDTO{..} = (\dexTradeDTOOwner -> DexTradeDTO { dexTradeDTOOwner, ..} ) <$> f dexTradeDTOOwner
{-# INLINE dexTradeDTOOwnerL #-}

-- | 'dexTradeDTOSellVolume' Lens
dexTradeDTOSellVolumeL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOSellVolumeL f DexTradeDTO{..} = (\dexTradeDTOSellVolume -> DexTradeDTO { dexTradeDTOSellVolume, ..} ) <$> f dexTradeDTOSellVolume
{-# INLINE dexTradeDTOSellVolumeL #-}

-- | 'dexTradeDTOBuyVolume' Lens
dexTradeDTOBuyVolumeL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOBuyVolumeL f DexTradeDTO{..} = (\dexTradeDTOBuyVolume -> DexTradeDTO { dexTradeDTOBuyVolume, ..} ) <$> f dexTradeDTOBuyVolume
{-# INLINE dexTradeDTOBuyVolumeL #-}

-- | 'dexTradeDTOTradeBatchId' Lens
dexTradeDTOTradeBatchIdL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOTradeBatchIdL f DexTradeDTO{..} = (\dexTradeDTOTradeBatchId -> DexTradeDTO { dexTradeDTOTradeBatchId, ..} ) <$> f dexTradeDTOTradeBatchId
{-# INLINE dexTradeDTOTradeBatchIdL #-}

-- | 'dexTradeDTOTradeEpoch' Lens
dexTradeDTOTradeEpochL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOTradeEpochL f DexTradeDTO{..} = (\dexTradeDTOTradeEpoch -> DexTradeDTO { dexTradeDTOTradeEpoch, ..} ) <$> f dexTradeDTOTradeEpoch
{-# INLINE dexTradeDTOTradeEpochL #-}

-- | 'dexTradeDTOBuyToken' Lens
dexTradeDTOBuyTokenL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOBuyTokenL f DexTradeDTO{..} = (\dexTradeDTOBuyToken -> DexTradeDTO { dexTradeDTOBuyToken, ..} ) <$> f dexTradeDTOBuyToken
{-# INLINE dexTradeDTOBuyTokenL #-}

-- | 'dexTradeDTOSellToken' Lens
dexTradeDTOSellTokenL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOSellTokenL f DexTradeDTO{..} = (\dexTradeDTOSellToken -> DexTradeDTO { dexTradeDTOSellToken, ..} ) <$> f dexTradeDTOSellToken
{-# INLINE dexTradeDTOSellTokenL #-}

-- | 'dexTradeDTOCreateEpoch' Lens
dexTradeDTOCreateEpochL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOCreateEpochL f DexTradeDTO{..} = (\dexTradeDTOCreateEpoch -> DexTradeDTO { dexTradeDTOCreateEpoch, ..} ) <$> f dexTradeDTOCreateEpoch
{-# INLINE dexTradeDTOCreateEpochL #-}

-- | 'dexTradeDTORevertEpoch' Lens
dexTradeDTORevertEpochL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTORevertEpochL f DexTradeDTO{..} = (\dexTradeDTORevertEpoch -> DexTradeDTO { dexTradeDTORevertEpoch, ..} ) <$> f dexTradeDTORevertEpoch
{-# INLINE dexTradeDTORevertEpochL #-}

-- | 'dexTradeDTOTxHash' Lens
dexTradeDTOTxHashL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOTxHashL f DexTradeDTO{..} = (\dexTradeDTOTxHash -> DexTradeDTO { dexTradeDTOTxHash, ..} ) <$> f dexTradeDTOTxHash
{-# INLINE dexTradeDTOTxHashL #-}

-- | 'dexTradeDTOTxLogIndex' Lens
dexTradeDTOTxLogIndexL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOTxLogIndexL f DexTradeDTO{..} = (\dexTradeDTOTxLogIndex -> DexTradeDTO { dexTradeDTOTxLogIndex, ..} ) <$> f dexTradeDTOTxLogIndex
{-# INLINE dexTradeDTOTxLogIndexL #-}

-- | 'dexTradeDTOVid' Lens
dexTradeDTOVidL :: Lens_' DexTradeDTO (Maybe Integer)
dexTradeDTOVidL f DexTradeDTO{..} = (\dexTradeDTOVid -> DexTradeDTO { dexTradeDTOVid, ..} ) <$> f dexTradeDTOVid
{-# INLINE dexTradeDTOVidL #-}

-- | 'dexTradeDTOPoolId' Lens
dexTradeDTOPoolIdL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOPoolIdL f DexTradeDTO{..} = (\dexTradeDTOPoolId -> DexTradeDTO { dexTradeDTOPoolId, ..} ) <$> f dexTradeDTOPoolId
{-# INLINE dexTradeDTOPoolIdL #-}

-- | 'dexTradeDTOTransactionId' Lens
dexTradeDTOTransactionIdL :: Lens_' DexTradeDTO (Maybe Text)
dexTradeDTOTransactionIdL f DexTradeDTO{..} = (\dexTradeDTOTransactionId -> DexTradeDTO { dexTradeDTOTransactionId, ..} ) <$> f dexTradeDTOTransactionId
{-# INLINE dexTradeDTOTransactionIdL #-}

-- | 'dexTradeDTOEvaluatedPrice' Lens
dexTradeDTOEvaluatedPriceL :: Lens_' DexTradeDTO (Maybe Double)
dexTradeDTOEvaluatedPriceL f DexTradeDTO{..} = (\dexTradeDTOEvaluatedPrice -> DexTradeDTO { dexTradeDTOEvaluatedPrice, ..} ) <$> f dexTradeDTOEvaluatedPrice
{-# INLINE dexTradeDTOEvaluatedPriceL #-}

-- | 'dexTradeDTOEvaluatedAmount' Lens
dexTradeDTOEvaluatedAmountL :: Lens_' DexTradeDTO (Maybe Double)
dexTradeDTOEvaluatedAmountL f DexTradeDTO{..} = (\dexTradeDTOEvaluatedAmount -> DexTradeDTO { dexTradeDTOEvaluatedAmount, ..} ) <$> f dexTradeDTOEvaluatedAmount
{-# INLINE dexTradeDTOEvaluatedAmountL #-}

-- | 'dexTradeDTOEvaluatedAggressor' Lens
dexTradeDTOEvaluatedAggressorL :: Lens_' DexTradeDTO (Maybe TransactionsETradeAggressiveSide)
dexTradeDTOEvaluatedAggressorL f DexTradeDTO{..} = (\dexTradeDTOEvaluatedAggressor -> DexTradeDTO { dexTradeDTOEvaluatedAggressor, ..} ) <$> f dexTradeDTOEvaluatedAggressor
{-# INLINE dexTradeDTOEvaluatedAggressorL #-}



-- * DexUserDTO

-- | 'dexUserDTOEntryTime' Lens
dexUserDTOEntryTimeL :: Lens_' DexUserDTO (Maybe DateTime)
dexUserDTOEntryTimeL f DexUserDTO{..} = (\dexUserDTOEntryTime -> DexUserDTO { dexUserDTOEntryTime, ..} ) <$> f dexUserDTOEntryTime
{-# INLINE dexUserDTOEntryTimeL #-}

-- | 'dexUserDTORecvTime' Lens
dexUserDTORecvTimeL :: Lens_' DexUserDTO (Maybe DateTime)
dexUserDTORecvTimeL f DexUserDTO{..} = (\dexUserDTORecvTime -> DexUserDTO { dexUserDTORecvTime, ..} ) <$> f dexUserDTORecvTime
{-# INLINE dexUserDTORecvTimeL #-}

-- | 'dexUserDTOBlockNumber' Lens
dexUserDTOBlockNumberL :: Lens_' DexUserDTO (Maybe Integer)
dexUserDTOBlockNumberL f DexUserDTO{..} = (\dexUserDTOBlockNumber -> DexUserDTO { dexUserDTOBlockNumber, ..} ) <$> f dexUserDTOBlockNumber
{-# INLINE dexUserDTOBlockNumberL #-}

-- | 'dexUserDTOId' Lens
dexUserDTOIdL :: Lens_' DexUserDTO (Maybe Text)
dexUserDTOIdL f DexUserDTO{..} = (\dexUserDTOId -> DexUserDTO { dexUserDTOId, ..} ) <$> f dexUserDTOId
{-# INLINE dexUserDTOIdL #-}

-- | 'dexUserDTOFromBatchId' Lens
dexUserDTOFromBatchIdL :: Lens_' DexUserDTO (Maybe Text)
dexUserDTOFromBatchIdL f DexUserDTO{..} = (\dexUserDTOFromBatchId -> DexUserDTO { dexUserDTOFromBatchId, ..} ) <$> f dexUserDTOFromBatchId
{-# INLINE dexUserDTOFromBatchIdL #-}

-- | 'dexUserDTOCreateEpoch' Lens
dexUserDTOCreateEpochL :: Lens_' DexUserDTO (Maybe Text)
dexUserDTOCreateEpochL f DexUserDTO{..} = (\dexUserDTOCreateEpoch -> DexUserDTO { dexUserDTOCreateEpoch, ..} ) <$> f dexUserDTOCreateEpoch
{-# INLINE dexUserDTOCreateEpochL #-}

-- | 'dexUserDTOTxHash' Lens
dexUserDTOTxHashL :: Lens_' DexUserDTO (Maybe Text)
dexUserDTOTxHashL f DexUserDTO{..} = (\dexUserDTOTxHash -> DexUserDTO { dexUserDTOTxHash, ..} ) <$> f dexUserDTOTxHash
{-# INLINE dexUserDTOTxHashL #-}

-- | 'dexUserDTOVid' Lens
dexUserDTOVidL :: Lens_' DexUserDTO (Maybe Integer)
dexUserDTOVidL f DexUserDTO{..} = (\dexUserDTOVid -> DexUserDTO { dexUserDTOVid, ..} ) <$> f dexUserDTOVid
{-# INLINE dexUserDTOVidL #-}



-- * DexWithdrawDTO

-- | 'dexWithdrawDTOEntryTime' Lens
dexWithdrawDTOEntryTimeL :: Lens_' DexWithdrawDTO (Maybe DateTime)
dexWithdrawDTOEntryTimeL f DexWithdrawDTO{..} = (\dexWithdrawDTOEntryTime -> DexWithdrawDTO { dexWithdrawDTOEntryTime, ..} ) <$> f dexWithdrawDTOEntryTime
{-# INLINE dexWithdrawDTOEntryTimeL #-}

-- | 'dexWithdrawDTORecvTime' Lens
dexWithdrawDTORecvTimeL :: Lens_' DexWithdrawDTO (Maybe DateTime)
dexWithdrawDTORecvTimeL f DexWithdrawDTO{..} = (\dexWithdrawDTORecvTime -> DexWithdrawDTO { dexWithdrawDTORecvTime, ..} ) <$> f dexWithdrawDTORecvTime
{-# INLINE dexWithdrawDTORecvTimeL #-}

-- | 'dexWithdrawDTOBlockNumber' Lens
dexWithdrawDTOBlockNumberL :: Lens_' DexWithdrawDTO (Maybe Integer)
dexWithdrawDTOBlockNumberL f DexWithdrawDTO{..} = (\dexWithdrawDTOBlockNumber -> DexWithdrawDTO { dexWithdrawDTOBlockNumber, ..} ) <$> f dexWithdrawDTOBlockNumber
{-# INLINE dexWithdrawDTOBlockNumberL #-}

-- | 'dexWithdrawDTOId' Lens
dexWithdrawDTOIdL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOIdL f DexWithdrawDTO{..} = (\dexWithdrawDTOId -> DexWithdrawDTO { dexWithdrawDTOId, ..} ) <$> f dexWithdrawDTOId
{-# INLINE dexWithdrawDTOIdL #-}

-- | 'dexWithdrawDTOUser' Lens
dexWithdrawDTOUserL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOUserL f DexWithdrawDTO{..} = (\dexWithdrawDTOUser -> DexWithdrawDTO { dexWithdrawDTOUser, ..} ) <$> f dexWithdrawDTOUser
{-# INLINE dexWithdrawDTOUserL #-}

-- | 'dexWithdrawDTOTokenAddress' Lens
dexWithdrawDTOTokenAddressL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOTokenAddressL f DexWithdrawDTO{..} = (\dexWithdrawDTOTokenAddress -> DexWithdrawDTO { dexWithdrawDTOTokenAddress, ..} ) <$> f dexWithdrawDTOTokenAddress
{-# INLINE dexWithdrawDTOTokenAddressL #-}

-- | 'dexWithdrawDTOAmount' Lens
dexWithdrawDTOAmountL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOAmountL f DexWithdrawDTO{..} = (\dexWithdrawDTOAmount -> DexWithdrawDTO { dexWithdrawDTOAmount, ..} ) <$> f dexWithdrawDTOAmount
{-# INLINE dexWithdrawDTOAmountL #-}

-- | 'dexWithdrawDTOCreateEpoch' Lens
dexWithdrawDTOCreateEpochL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOCreateEpochL f DexWithdrawDTO{..} = (\dexWithdrawDTOCreateEpoch -> DexWithdrawDTO { dexWithdrawDTOCreateEpoch, ..} ) <$> f dexWithdrawDTOCreateEpoch
{-# INLINE dexWithdrawDTOCreateEpochL #-}

-- | 'dexWithdrawDTOCreateBatchId' Lens
dexWithdrawDTOCreateBatchIdL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOCreateBatchIdL f DexWithdrawDTO{..} = (\dexWithdrawDTOCreateBatchId -> DexWithdrawDTO { dexWithdrawDTOCreateBatchId, ..} ) <$> f dexWithdrawDTOCreateBatchId
{-# INLINE dexWithdrawDTOCreateBatchIdL #-}

-- | 'dexWithdrawDTOTxHash' Lens
dexWithdrawDTOTxHashL :: Lens_' DexWithdrawDTO (Maybe Text)
dexWithdrawDTOTxHashL f DexWithdrawDTO{..} = (\dexWithdrawDTOTxHash -> DexWithdrawDTO { dexWithdrawDTOTxHash, ..} ) <$> f dexWithdrawDTOTxHash
{-# INLINE dexWithdrawDTOTxHashL #-}

-- | 'dexWithdrawDTOVid' Lens
dexWithdrawDTOVidL :: Lens_' DexWithdrawDTO (Maybe Integer)
dexWithdrawDTOVidL f DexWithdrawDTO{..} = (\dexWithdrawDTOVid -> DexWithdrawDTO { dexWithdrawDTOVid, ..} ) <$> f dexWithdrawDTOVid
{-# INLINE dexWithdrawDTOVidL #-}



-- * DexWithdrawRequestDTO

-- | 'dexWithdrawRequestDTOEntryTime' Lens
dexWithdrawRequestDTOEntryTimeL :: Lens_' DexWithdrawRequestDTO (Maybe DateTime)
dexWithdrawRequestDTOEntryTimeL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOEntryTime -> DexWithdrawRequestDTO { dexWithdrawRequestDTOEntryTime, ..} ) <$> f dexWithdrawRequestDTOEntryTime
{-# INLINE dexWithdrawRequestDTOEntryTimeL #-}

-- | 'dexWithdrawRequestDTORecvTime' Lens
dexWithdrawRequestDTORecvTimeL :: Lens_' DexWithdrawRequestDTO (Maybe DateTime)
dexWithdrawRequestDTORecvTimeL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTORecvTime -> DexWithdrawRequestDTO { dexWithdrawRequestDTORecvTime, ..} ) <$> f dexWithdrawRequestDTORecvTime
{-# INLINE dexWithdrawRequestDTORecvTimeL #-}

-- | 'dexWithdrawRequestDTOBlockNumber' Lens
dexWithdrawRequestDTOBlockNumberL :: Lens_' DexWithdrawRequestDTO (Maybe Integer)
dexWithdrawRequestDTOBlockNumberL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOBlockNumber -> DexWithdrawRequestDTO { dexWithdrawRequestDTOBlockNumber, ..} ) <$> f dexWithdrawRequestDTOBlockNumber
{-# INLINE dexWithdrawRequestDTOBlockNumberL #-}

-- | 'dexWithdrawRequestDTOId' Lens
dexWithdrawRequestDTOIdL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOIdL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOId -> DexWithdrawRequestDTO { dexWithdrawRequestDTOId, ..} ) <$> f dexWithdrawRequestDTOId
{-# INLINE dexWithdrawRequestDTOIdL #-}

-- | 'dexWithdrawRequestDTOUser' Lens
dexWithdrawRequestDTOUserL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOUserL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOUser -> DexWithdrawRequestDTO { dexWithdrawRequestDTOUser, ..} ) <$> f dexWithdrawRequestDTOUser
{-# INLINE dexWithdrawRequestDTOUserL #-}

-- | 'dexWithdrawRequestDTOTokenAddress' Lens
dexWithdrawRequestDTOTokenAddressL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOTokenAddressL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOTokenAddress -> DexWithdrawRequestDTO { dexWithdrawRequestDTOTokenAddress, ..} ) <$> f dexWithdrawRequestDTOTokenAddress
{-# INLINE dexWithdrawRequestDTOTokenAddressL #-}

-- | 'dexWithdrawRequestDTOAmount' Lens
dexWithdrawRequestDTOAmountL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOAmountL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOAmount -> DexWithdrawRequestDTO { dexWithdrawRequestDTOAmount, ..} ) <$> f dexWithdrawRequestDTOAmount
{-# INLINE dexWithdrawRequestDTOAmountL #-}

-- | 'dexWithdrawRequestDTOWithdrawableFromBatchId' Lens
dexWithdrawRequestDTOWithdrawableFromBatchIdL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOWithdrawableFromBatchIdL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOWithdrawableFromBatchId -> DexWithdrawRequestDTO { dexWithdrawRequestDTOWithdrawableFromBatchId, ..} ) <$> f dexWithdrawRequestDTOWithdrawableFromBatchId
{-# INLINE dexWithdrawRequestDTOWithdrawableFromBatchIdL #-}

-- | 'dexWithdrawRequestDTOCreateEpoch' Lens
dexWithdrawRequestDTOCreateEpochL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOCreateEpochL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOCreateEpoch -> DexWithdrawRequestDTO { dexWithdrawRequestDTOCreateEpoch, ..} ) <$> f dexWithdrawRequestDTOCreateEpoch
{-# INLINE dexWithdrawRequestDTOCreateEpochL #-}

-- | 'dexWithdrawRequestDTOCreateBatchId' Lens
dexWithdrawRequestDTOCreateBatchIdL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOCreateBatchIdL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOCreateBatchId -> DexWithdrawRequestDTO { dexWithdrawRequestDTOCreateBatchId, ..} ) <$> f dexWithdrawRequestDTOCreateBatchId
{-# INLINE dexWithdrawRequestDTOCreateBatchIdL #-}

-- | 'dexWithdrawRequestDTOTxHash' Lens
dexWithdrawRequestDTOTxHashL :: Lens_' DexWithdrawRequestDTO (Maybe Text)
dexWithdrawRequestDTOTxHashL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOTxHash -> DexWithdrawRequestDTO { dexWithdrawRequestDTOTxHash, ..} ) <$> f dexWithdrawRequestDTOTxHash
{-# INLINE dexWithdrawRequestDTOTxHashL #-}

-- | 'dexWithdrawRequestDTOVid' Lens
dexWithdrawRequestDTOVidL :: Lens_' DexWithdrawRequestDTO (Maybe Integer)
dexWithdrawRequestDTOVidL f DexWithdrawRequestDTO{..} = (\dexWithdrawRequestDTOVid -> DexWithdrawRequestDTO { dexWithdrawRequestDTOVid, ..} ) <$> f dexWithdrawRequestDTOVid
{-# INLINE dexWithdrawRequestDTOVidL #-}



-- * NumericsBigInteger

-- | 'numericsBigIntegerIsPowerOfTwo' Lens
numericsBigIntegerIsPowerOfTwoL :: Lens_' NumericsBigInteger (Maybe Bool)
numericsBigIntegerIsPowerOfTwoL f NumericsBigInteger{..} = (\numericsBigIntegerIsPowerOfTwo -> NumericsBigInteger { numericsBigIntegerIsPowerOfTwo, ..} ) <$> f numericsBigIntegerIsPowerOfTwo
{-# INLINE numericsBigIntegerIsPowerOfTwoL #-}

-- | 'numericsBigIntegerIsZero' Lens
numericsBigIntegerIsZeroL :: Lens_' NumericsBigInteger (Maybe Bool)
numericsBigIntegerIsZeroL f NumericsBigInteger{..} = (\numericsBigIntegerIsZero -> NumericsBigInteger { numericsBigIntegerIsZero, ..} ) <$> f numericsBigIntegerIsZero
{-# INLINE numericsBigIntegerIsZeroL #-}

-- | 'numericsBigIntegerIsOne' Lens
numericsBigIntegerIsOneL :: Lens_' NumericsBigInteger (Maybe Bool)
numericsBigIntegerIsOneL f NumericsBigInteger{..} = (\numericsBigIntegerIsOne -> NumericsBigInteger { numericsBigIntegerIsOne, ..} ) <$> f numericsBigIntegerIsOne
{-# INLINE numericsBigIntegerIsOneL #-}

-- | 'numericsBigIntegerIsEven' Lens
numericsBigIntegerIsEvenL :: Lens_' NumericsBigInteger (Maybe Bool)
numericsBigIntegerIsEvenL f NumericsBigInteger{..} = (\numericsBigIntegerIsEven -> NumericsBigInteger { numericsBigIntegerIsEven, ..} ) <$> f numericsBigIntegerIsEven
{-# INLINE numericsBigIntegerIsEvenL #-}

-- | 'numericsBigIntegerSign' Lens
numericsBigIntegerSignL :: Lens_' NumericsBigInteger (Maybe Int)
numericsBigIntegerSignL f NumericsBigInteger{..} = (\numericsBigIntegerSign -> NumericsBigInteger { numericsBigIntegerSign, ..} ) <$> f numericsBigIntegerSign
{-# INLINE numericsBigIntegerSignL #-}



-- * SushiswapBundleDTO

-- | 'sushiswapBundleDTOEntryTime' Lens
sushiswapBundleDTOEntryTimeL :: Lens_' SushiswapBundleDTO (Maybe DateTime)
sushiswapBundleDTOEntryTimeL f SushiswapBundleDTO{..} = (\sushiswapBundleDTOEntryTime -> SushiswapBundleDTO { sushiswapBundleDTOEntryTime, ..} ) <$> f sushiswapBundleDTOEntryTime
{-# INLINE sushiswapBundleDTOEntryTimeL #-}

-- | 'sushiswapBundleDTORecvTime' Lens
sushiswapBundleDTORecvTimeL :: Lens_' SushiswapBundleDTO (Maybe DateTime)
sushiswapBundleDTORecvTimeL f SushiswapBundleDTO{..} = (\sushiswapBundleDTORecvTime -> SushiswapBundleDTO { sushiswapBundleDTORecvTime, ..} ) <$> f sushiswapBundleDTORecvTime
{-# INLINE sushiswapBundleDTORecvTimeL #-}

-- | 'sushiswapBundleDTOBlockNumber' Lens
sushiswapBundleDTOBlockNumberL :: Lens_' SushiswapBundleDTO (Maybe Integer)
sushiswapBundleDTOBlockNumberL f SushiswapBundleDTO{..} = (\sushiswapBundleDTOBlockNumber -> SushiswapBundleDTO { sushiswapBundleDTOBlockNumber, ..} ) <$> f sushiswapBundleDTOBlockNumber
{-# INLINE sushiswapBundleDTOBlockNumberL #-}

-- | 'sushiswapBundleDTOId' Lens
sushiswapBundleDTOIdL :: Lens_' SushiswapBundleDTO (Maybe Text)
sushiswapBundleDTOIdL f SushiswapBundleDTO{..} = (\sushiswapBundleDTOId -> SushiswapBundleDTO { sushiswapBundleDTOId, ..} ) <$> f sushiswapBundleDTOId
{-# INLINE sushiswapBundleDTOIdL #-}

-- | 'sushiswapBundleDTOEthPrice' Lens
sushiswapBundleDTOEthPriceL :: Lens_' SushiswapBundleDTO (Maybe Text)
sushiswapBundleDTOEthPriceL f SushiswapBundleDTO{..} = (\sushiswapBundleDTOEthPrice -> SushiswapBundleDTO { sushiswapBundleDTOEthPrice, ..} ) <$> f sushiswapBundleDTOEthPrice
{-# INLINE sushiswapBundleDTOEthPriceL #-}

-- | 'sushiswapBundleDTOVid' Lens
sushiswapBundleDTOVidL :: Lens_' SushiswapBundleDTO (Maybe Integer)
sushiswapBundleDTOVidL f SushiswapBundleDTO{..} = (\sushiswapBundleDTOVid -> SushiswapBundleDTO { sushiswapBundleDTOVid, ..} ) <$> f sushiswapBundleDTOVid
{-# INLINE sushiswapBundleDTOVidL #-}



-- * SushiswapBurnDTO

-- | 'sushiswapBurnDTOEntryTime' Lens
sushiswapBurnDTOEntryTimeL :: Lens_' SushiswapBurnDTO (Maybe DateTime)
sushiswapBurnDTOEntryTimeL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOEntryTime -> SushiswapBurnDTO { sushiswapBurnDTOEntryTime, ..} ) <$> f sushiswapBurnDTOEntryTime
{-# INLINE sushiswapBurnDTOEntryTimeL #-}

-- | 'sushiswapBurnDTORecvTime' Lens
sushiswapBurnDTORecvTimeL :: Lens_' SushiswapBurnDTO (Maybe DateTime)
sushiswapBurnDTORecvTimeL f SushiswapBurnDTO{..} = (\sushiswapBurnDTORecvTime -> SushiswapBurnDTO { sushiswapBurnDTORecvTime, ..} ) <$> f sushiswapBurnDTORecvTime
{-# INLINE sushiswapBurnDTORecvTimeL #-}

-- | 'sushiswapBurnDTOBlockNumber' Lens
sushiswapBurnDTOBlockNumberL :: Lens_' SushiswapBurnDTO (Maybe Integer)
sushiswapBurnDTOBlockNumberL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOBlockNumber -> SushiswapBurnDTO { sushiswapBurnDTOBlockNumber, ..} ) <$> f sushiswapBurnDTOBlockNumber
{-# INLINE sushiswapBurnDTOBlockNumberL #-}

-- | 'sushiswapBurnDTOId' Lens
sushiswapBurnDTOIdL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOIdL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOId -> SushiswapBurnDTO { sushiswapBurnDTOId, ..} ) <$> f sushiswapBurnDTOId
{-# INLINE sushiswapBurnDTOIdL #-}

-- | 'sushiswapBurnDTOTransaction' Lens
sushiswapBurnDTOTransactionL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOTransactionL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOTransaction -> SushiswapBurnDTO { sushiswapBurnDTOTransaction, ..} ) <$> f sushiswapBurnDTOTransaction
{-# INLINE sushiswapBurnDTOTransactionL #-}

-- | 'sushiswapBurnDTOTimestamp' Lens
sushiswapBurnDTOTimestampL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOTimestampL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOTimestamp -> SushiswapBurnDTO { sushiswapBurnDTOTimestamp, ..} ) <$> f sushiswapBurnDTOTimestamp
{-# INLINE sushiswapBurnDTOTimestampL #-}

-- | 'sushiswapBurnDTOPair' Lens
sushiswapBurnDTOPairL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOPairL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOPair -> SushiswapBurnDTO { sushiswapBurnDTOPair, ..} ) <$> f sushiswapBurnDTOPair
{-# INLINE sushiswapBurnDTOPairL #-}

-- | 'sushiswapBurnDTOLiquidity' Lens
sushiswapBurnDTOLiquidityL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOLiquidityL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOLiquidity -> SushiswapBurnDTO { sushiswapBurnDTOLiquidity, ..} ) <$> f sushiswapBurnDTOLiquidity
{-# INLINE sushiswapBurnDTOLiquidityL #-}

-- | 'sushiswapBurnDTOSender' Lens
sushiswapBurnDTOSenderL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOSenderL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOSender -> SushiswapBurnDTO { sushiswapBurnDTOSender, ..} ) <$> f sushiswapBurnDTOSender
{-# INLINE sushiswapBurnDTOSenderL #-}

-- | 'sushiswapBurnDTOAmount0' Lens
sushiswapBurnDTOAmount0L :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOAmount0L f SushiswapBurnDTO{..} = (\sushiswapBurnDTOAmount0 -> SushiswapBurnDTO { sushiswapBurnDTOAmount0, ..} ) <$> f sushiswapBurnDTOAmount0
{-# INLINE sushiswapBurnDTOAmount0L #-}

-- | 'sushiswapBurnDTOAmount1' Lens
sushiswapBurnDTOAmount1L :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOAmount1L f SushiswapBurnDTO{..} = (\sushiswapBurnDTOAmount1 -> SushiswapBurnDTO { sushiswapBurnDTOAmount1, ..} ) <$> f sushiswapBurnDTOAmount1
{-# INLINE sushiswapBurnDTOAmount1L #-}

-- | 'sushiswapBurnDTOTo' Lens
sushiswapBurnDTOToL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOToL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOTo -> SushiswapBurnDTO { sushiswapBurnDTOTo, ..} ) <$> f sushiswapBurnDTOTo
{-# INLINE sushiswapBurnDTOToL #-}

-- | 'sushiswapBurnDTOLogIndex' Lens
sushiswapBurnDTOLogIndexL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOLogIndexL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOLogIndex -> SushiswapBurnDTO { sushiswapBurnDTOLogIndex, ..} ) <$> f sushiswapBurnDTOLogIndex
{-# INLINE sushiswapBurnDTOLogIndexL #-}

-- | 'sushiswapBurnDTOAmountUsd' Lens
sushiswapBurnDTOAmountUsdL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOAmountUsdL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOAmountUsd -> SushiswapBurnDTO { sushiswapBurnDTOAmountUsd, ..} ) <$> f sushiswapBurnDTOAmountUsd
{-# INLINE sushiswapBurnDTOAmountUsdL #-}

-- | 'sushiswapBurnDTOComplete' Lens
sushiswapBurnDTOCompleteL :: Lens_' SushiswapBurnDTO (Maybe Bool)
sushiswapBurnDTOCompleteL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOComplete -> SushiswapBurnDTO { sushiswapBurnDTOComplete, ..} ) <$> f sushiswapBurnDTOComplete
{-# INLINE sushiswapBurnDTOCompleteL #-}

-- | 'sushiswapBurnDTOFeeTo' Lens
sushiswapBurnDTOFeeToL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOFeeToL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOFeeTo -> SushiswapBurnDTO { sushiswapBurnDTOFeeTo, ..} ) <$> f sushiswapBurnDTOFeeTo
{-# INLINE sushiswapBurnDTOFeeToL #-}

-- | 'sushiswapBurnDTOFeeLiquidity' Lens
sushiswapBurnDTOFeeLiquidityL :: Lens_' SushiswapBurnDTO (Maybe Text)
sushiswapBurnDTOFeeLiquidityL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOFeeLiquidity -> SushiswapBurnDTO { sushiswapBurnDTOFeeLiquidity, ..} ) <$> f sushiswapBurnDTOFeeLiquidity
{-# INLINE sushiswapBurnDTOFeeLiquidityL #-}

-- | 'sushiswapBurnDTOVid' Lens
sushiswapBurnDTOVidL :: Lens_' SushiswapBurnDTO (Maybe Integer)
sushiswapBurnDTOVidL f SushiswapBurnDTO{..} = (\sushiswapBurnDTOVid -> SushiswapBurnDTO { sushiswapBurnDTOVid, ..} ) <$> f sushiswapBurnDTOVid
{-# INLINE sushiswapBurnDTOVidL #-}



-- * SushiswapDayDataDTO

-- | 'sushiswapDayDataDTOEntryTime' Lens
sushiswapDayDataDTOEntryTimeL :: Lens_' SushiswapDayDataDTO (Maybe DateTime)
sushiswapDayDataDTOEntryTimeL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOEntryTime -> SushiswapDayDataDTO { sushiswapDayDataDTOEntryTime, ..} ) <$> f sushiswapDayDataDTOEntryTime
{-# INLINE sushiswapDayDataDTOEntryTimeL #-}

-- | 'sushiswapDayDataDTORecvTime' Lens
sushiswapDayDataDTORecvTimeL :: Lens_' SushiswapDayDataDTO (Maybe DateTime)
sushiswapDayDataDTORecvTimeL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTORecvTime -> SushiswapDayDataDTO { sushiswapDayDataDTORecvTime, ..} ) <$> f sushiswapDayDataDTORecvTime
{-# INLINE sushiswapDayDataDTORecvTimeL #-}

-- | 'sushiswapDayDataDTOBlockNumber' Lens
sushiswapDayDataDTOBlockNumberL :: Lens_' SushiswapDayDataDTO (Maybe Integer)
sushiswapDayDataDTOBlockNumberL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOBlockNumber -> SushiswapDayDataDTO { sushiswapDayDataDTOBlockNumber, ..} ) <$> f sushiswapDayDataDTOBlockNumber
{-# INLINE sushiswapDayDataDTOBlockNumberL #-}

-- | 'sushiswapDayDataDTOId' Lens
sushiswapDayDataDTOIdL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOIdL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOId -> SushiswapDayDataDTO { sushiswapDayDataDTOId, ..} ) <$> f sushiswapDayDataDTOId
{-# INLINE sushiswapDayDataDTOIdL #-}

-- | 'sushiswapDayDataDTODate' Lens
sushiswapDayDataDTODateL :: Lens_' SushiswapDayDataDTO (Maybe Int)
sushiswapDayDataDTODateL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTODate -> SushiswapDayDataDTO { sushiswapDayDataDTODate, ..} ) <$> f sushiswapDayDataDTODate
{-# INLINE sushiswapDayDataDTODateL #-}

-- | 'sushiswapDayDataDTOFactory' Lens
sushiswapDayDataDTOFactoryL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOFactoryL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOFactory -> SushiswapDayDataDTO { sushiswapDayDataDTOFactory, ..} ) <$> f sushiswapDayDataDTOFactory
{-# INLINE sushiswapDayDataDTOFactoryL #-}

-- | 'sushiswapDayDataDTOVolumeEth' Lens
sushiswapDayDataDTOVolumeEthL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOVolumeEthL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOVolumeEth -> SushiswapDayDataDTO { sushiswapDayDataDTOVolumeEth, ..} ) <$> f sushiswapDayDataDTOVolumeEth
{-# INLINE sushiswapDayDataDTOVolumeEthL #-}

-- | 'sushiswapDayDataDTOVolumeUsd' Lens
sushiswapDayDataDTOVolumeUsdL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOVolumeUsdL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOVolumeUsd -> SushiswapDayDataDTO { sushiswapDayDataDTOVolumeUsd, ..} ) <$> f sushiswapDayDataDTOVolumeUsd
{-# INLINE sushiswapDayDataDTOVolumeUsdL #-}

-- | 'sushiswapDayDataDTOUntrackedVolume' Lens
sushiswapDayDataDTOUntrackedVolumeL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOUntrackedVolumeL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOUntrackedVolume -> SushiswapDayDataDTO { sushiswapDayDataDTOUntrackedVolume, ..} ) <$> f sushiswapDayDataDTOUntrackedVolume
{-# INLINE sushiswapDayDataDTOUntrackedVolumeL #-}

-- | 'sushiswapDayDataDTOLiquidityEth' Lens
sushiswapDayDataDTOLiquidityEthL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOLiquidityEthL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOLiquidityEth -> SushiswapDayDataDTO { sushiswapDayDataDTOLiquidityEth, ..} ) <$> f sushiswapDayDataDTOLiquidityEth
{-# INLINE sushiswapDayDataDTOLiquidityEthL #-}

-- | 'sushiswapDayDataDTOLiquidityUsd' Lens
sushiswapDayDataDTOLiquidityUsdL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOLiquidityUsdL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOLiquidityUsd -> SushiswapDayDataDTO { sushiswapDayDataDTOLiquidityUsd, ..} ) <$> f sushiswapDayDataDTOLiquidityUsd
{-# INLINE sushiswapDayDataDTOLiquidityUsdL #-}

-- | 'sushiswapDayDataDTOTxCount' Lens
sushiswapDayDataDTOTxCountL :: Lens_' SushiswapDayDataDTO (Maybe Text)
sushiswapDayDataDTOTxCountL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOTxCount -> SushiswapDayDataDTO { sushiswapDayDataDTOTxCount, ..} ) <$> f sushiswapDayDataDTOTxCount
{-# INLINE sushiswapDayDataDTOTxCountL #-}

-- | 'sushiswapDayDataDTOVid' Lens
sushiswapDayDataDTOVidL :: Lens_' SushiswapDayDataDTO (Maybe Integer)
sushiswapDayDataDTOVidL f SushiswapDayDataDTO{..} = (\sushiswapDayDataDTOVid -> SushiswapDayDataDTO { sushiswapDayDataDTOVid, ..} ) <$> f sushiswapDayDataDTOVid
{-# INLINE sushiswapDayDataDTOVidL #-}



-- * SushiswapFactoryDTO

-- | 'sushiswapFactoryDTOEntryTime' Lens
sushiswapFactoryDTOEntryTimeL :: Lens_' SushiswapFactoryDTO (Maybe DateTime)
sushiswapFactoryDTOEntryTimeL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOEntryTime -> SushiswapFactoryDTO { sushiswapFactoryDTOEntryTime, ..} ) <$> f sushiswapFactoryDTOEntryTime
{-# INLINE sushiswapFactoryDTOEntryTimeL #-}

-- | 'sushiswapFactoryDTORecvTime' Lens
sushiswapFactoryDTORecvTimeL :: Lens_' SushiswapFactoryDTO (Maybe DateTime)
sushiswapFactoryDTORecvTimeL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTORecvTime -> SushiswapFactoryDTO { sushiswapFactoryDTORecvTime, ..} ) <$> f sushiswapFactoryDTORecvTime
{-# INLINE sushiswapFactoryDTORecvTimeL #-}

-- | 'sushiswapFactoryDTOBlockNumber' Lens
sushiswapFactoryDTOBlockNumberL :: Lens_' SushiswapFactoryDTO (Maybe Integer)
sushiswapFactoryDTOBlockNumberL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOBlockNumber -> SushiswapFactoryDTO { sushiswapFactoryDTOBlockNumber, ..} ) <$> f sushiswapFactoryDTOBlockNumber
{-# INLINE sushiswapFactoryDTOBlockNumberL #-}

-- | 'sushiswapFactoryDTOId' Lens
sushiswapFactoryDTOIdL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOIdL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOId -> SushiswapFactoryDTO { sushiswapFactoryDTOId, ..} ) <$> f sushiswapFactoryDTOId
{-# INLINE sushiswapFactoryDTOIdL #-}

-- | 'sushiswapFactoryDTOPairCount' Lens
sushiswapFactoryDTOPairCountL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOPairCountL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOPairCount -> SushiswapFactoryDTO { sushiswapFactoryDTOPairCount, ..} ) <$> f sushiswapFactoryDTOPairCount
{-# INLINE sushiswapFactoryDTOPairCountL #-}

-- | 'sushiswapFactoryDTOVolumeUsd' Lens
sushiswapFactoryDTOVolumeUsdL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOVolumeUsdL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOVolumeUsd -> SushiswapFactoryDTO { sushiswapFactoryDTOVolumeUsd, ..} ) <$> f sushiswapFactoryDTOVolumeUsd
{-# INLINE sushiswapFactoryDTOVolumeUsdL #-}

-- | 'sushiswapFactoryDTOVolumeEth' Lens
sushiswapFactoryDTOVolumeEthL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOVolumeEthL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOVolumeEth -> SushiswapFactoryDTO { sushiswapFactoryDTOVolumeEth, ..} ) <$> f sushiswapFactoryDTOVolumeEth
{-# INLINE sushiswapFactoryDTOVolumeEthL #-}

-- | 'sushiswapFactoryDTOUntrackedVolumeUsd' Lens
sushiswapFactoryDTOUntrackedVolumeUsdL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOUntrackedVolumeUsdL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOUntrackedVolumeUsd -> SushiswapFactoryDTO { sushiswapFactoryDTOUntrackedVolumeUsd, ..} ) <$> f sushiswapFactoryDTOUntrackedVolumeUsd
{-# INLINE sushiswapFactoryDTOUntrackedVolumeUsdL #-}

-- | 'sushiswapFactoryDTOLiquidityUsd' Lens
sushiswapFactoryDTOLiquidityUsdL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOLiquidityUsdL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOLiquidityUsd -> SushiswapFactoryDTO { sushiswapFactoryDTOLiquidityUsd, ..} ) <$> f sushiswapFactoryDTOLiquidityUsd
{-# INLINE sushiswapFactoryDTOLiquidityUsdL #-}

-- | 'sushiswapFactoryDTOLiquidityEth' Lens
sushiswapFactoryDTOLiquidityEthL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOLiquidityEthL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOLiquidityEth -> SushiswapFactoryDTO { sushiswapFactoryDTOLiquidityEth, ..} ) <$> f sushiswapFactoryDTOLiquidityEth
{-# INLINE sushiswapFactoryDTOLiquidityEthL #-}

-- | 'sushiswapFactoryDTOTxCount' Lens
sushiswapFactoryDTOTxCountL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOTxCountL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOTxCount -> SushiswapFactoryDTO { sushiswapFactoryDTOTxCount, ..} ) <$> f sushiswapFactoryDTOTxCount
{-# INLINE sushiswapFactoryDTOTxCountL #-}

-- | 'sushiswapFactoryDTOTokenCount' Lens
sushiswapFactoryDTOTokenCountL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOTokenCountL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOTokenCount -> SushiswapFactoryDTO { sushiswapFactoryDTOTokenCount, ..} ) <$> f sushiswapFactoryDTOTokenCount
{-# INLINE sushiswapFactoryDTOTokenCountL #-}

-- | 'sushiswapFactoryDTOUserCount' Lens
sushiswapFactoryDTOUserCountL :: Lens_' SushiswapFactoryDTO (Maybe Text)
sushiswapFactoryDTOUserCountL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOUserCount -> SushiswapFactoryDTO { sushiswapFactoryDTOUserCount, ..} ) <$> f sushiswapFactoryDTOUserCount
{-# INLINE sushiswapFactoryDTOUserCountL #-}

-- | 'sushiswapFactoryDTOVid' Lens
sushiswapFactoryDTOVidL :: Lens_' SushiswapFactoryDTO (Maybe Integer)
sushiswapFactoryDTOVidL f SushiswapFactoryDTO{..} = (\sushiswapFactoryDTOVid -> SushiswapFactoryDTO { sushiswapFactoryDTOVid, ..} ) <$> f sushiswapFactoryDTOVid
{-# INLINE sushiswapFactoryDTOVidL #-}



-- * SushiswapHourDataDTO

-- | 'sushiswapHourDataDTOEntryTime' Lens
sushiswapHourDataDTOEntryTimeL :: Lens_' SushiswapHourDataDTO (Maybe DateTime)
sushiswapHourDataDTOEntryTimeL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOEntryTime -> SushiswapHourDataDTO { sushiswapHourDataDTOEntryTime, ..} ) <$> f sushiswapHourDataDTOEntryTime
{-# INLINE sushiswapHourDataDTOEntryTimeL #-}

-- | 'sushiswapHourDataDTORecvTime' Lens
sushiswapHourDataDTORecvTimeL :: Lens_' SushiswapHourDataDTO (Maybe DateTime)
sushiswapHourDataDTORecvTimeL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTORecvTime -> SushiswapHourDataDTO { sushiswapHourDataDTORecvTime, ..} ) <$> f sushiswapHourDataDTORecvTime
{-# INLINE sushiswapHourDataDTORecvTimeL #-}

-- | 'sushiswapHourDataDTOBlockNumber' Lens
sushiswapHourDataDTOBlockNumberL :: Lens_' SushiswapHourDataDTO (Maybe Integer)
sushiswapHourDataDTOBlockNumberL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOBlockNumber -> SushiswapHourDataDTO { sushiswapHourDataDTOBlockNumber, ..} ) <$> f sushiswapHourDataDTOBlockNumber
{-# INLINE sushiswapHourDataDTOBlockNumberL #-}

-- | 'sushiswapHourDataDTOId' Lens
sushiswapHourDataDTOIdL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOIdL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOId -> SushiswapHourDataDTO { sushiswapHourDataDTOId, ..} ) <$> f sushiswapHourDataDTOId
{-# INLINE sushiswapHourDataDTOIdL #-}

-- | 'sushiswapHourDataDTODate' Lens
sushiswapHourDataDTODateL :: Lens_' SushiswapHourDataDTO (Maybe Int)
sushiswapHourDataDTODateL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTODate -> SushiswapHourDataDTO { sushiswapHourDataDTODate, ..} ) <$> f sushiswapHourDataDTODate
{-# INLINE sushiswapHourDataDTODateL #-}

-- | 'sushiswapHourDataDTOFactory' Lens
sushiswapHourDataDTOFactoryL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOFactoryL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOFactory -> SushiswapHourDataDTO { sushiswapHourDataDTOFactory, ..} ) <$> f sushiswapHourDataDTOFactory
{-# INLINE sushiswapHourDataDTOFactoryL #-}

-- | 'sushiswapHourDataDTOVolumeEth' Lens
sushiswapHourDataDTOVolumeEthL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOVolumeEthL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOVolumeEth -> SushiswapHourDataDTO { sushiswapHourDataDTOVolumeEth, ..} ) <$> f sushiswapHourDataDTOVolumeEth
{-# INLINE sushiswapHourDataDTOVolumeEthL #-}

-- | 'sushiswapHourDataDTOVolumeUsd' Lens
sushiswapHourDataDTOVolumeUsdL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOVolumeUsdL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOVolumeUsd -> SushiswapHourDataDTO { sushiswapHourDataDTOVolumeUsd, ..} ) <$> f sushiswapHourDataDTOVolumeUsd
{-# INLINE sushiswapHourDataDTOVolumeUsdL #-}

-- | 'sushiswapHourDataDTOUntrackedVolume' Lens
sushiswapHourDataDTOUntrackedVolumeL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOUntrackedVolumeL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOUntrackedVolume -> SushiswapHourDataDTO { sushiswapHourDataDTOUntrackedVolume, ..} ) <$> f sushiswapHourDataDTOUntrackedVolume
{-# INLINE sushiswapHourDataDTOUntrackedVolumeL #-}

-- | 'sushiswapHourDataDTOLiquidityEth' Lens
sushiswapHourDataDTOLiquidityEthL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOLiquidityEthL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOLiquidityEth -> SushiswapHourDataDTO { sushiswapHourDataDTOLiquidityEth, ..} ) <$> f sushiswapHourDataDTOLiquidityEth
{-# INLINE sushiswapHourDataDTOLiquidityEthL #-}

-- | 'sushiswapHourDataDTOLiquidityUsd' Lens
sushiswapHourDataDTOLiquidityUsdL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOLiquidityUsdL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOLiquidityUsd -> SushiswapHourDataDTO { sushiswapHourDataDTOLiquidityUsd, ..} ) <$> f sushiswapHourDataDTOLiquidityUsd
{-# INLINE sushiswapHourDataDTOLiquidityUsdL #-}

-- | 'sushiswapHourDataDTOTxCount' Lens
sushiswapHourDataDTOTxCountL :: Lens_' SushiswapHourDataDTO (Maybe Text)
sushiswapHourDataDTOTxCountL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOTxCount -> SushiswapHourDataDTO { sushiswapHourDataDTOTxCount, ..} ) <$> f sushiswapHourDataDTOTxCount
{-# INLINE sushiswapHourDataDTOTxCountL #-}

-- | 'sushiswapHourDataDTOVid' Lens
sushiswapHourDataDTOVidL :: Lens_' SushiswapHourDataDTO (Maybe Integer)
sushiswapHourDataDTOVidL f SushiswapHourDataDTO{..} = (\sushiswapHourDataDTOVid -> SushiswapHourDataDTO { sushiswapHourDataDTOVid, ..} ) <$> f sushiswapHourDataDTOVid
{-# INLINE sushiswapHourDataDTOVidL #-}



-- * SushiswapLiquidityPositionDTO

-- | 'sushiswapLiquidityPositionDTOEntryTime' Lens
sushiswapLiquidityPositionDTOEntryTimeL :: Lens_' SushiswapLiquidityPositionDTO (Maybe DateTime)
sushiswapLiquidityPositionDTOEntryTimeL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOEntryTime -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOEntryTime, ..} ) <$> f sushiswapLiquidityPositionDTOEntryTime
{-# INLINE sushiswapLiquidityPositionDTOEntryTimeL #-}

-- | 'sushiswapLiquidityPositionDTORecvTime' Lens
sushiswapLiquidityPositionDTORecvTimeL :: Lens_' SushiswapLiquidityPositionDTO (Maybe DateTime)
sushiswapLiquidityPositionDTORecvTimeL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTORecvTime -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTORecvTime, ..} ) <$> f sushiswapLiquidityPositionDTORecvTime
{-# INLINE sushiswapLiquidityPositionDTORecvTimeL #-}

-- | 'sushiswapLiquidityPositionDTOBlockNumber' Lens
sushiswapLiquidityPositionDTOBlockNumberL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Integer)
sushiswapLiquidityPositionDTOBlockNumberL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOBlockNumber -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOBlockNumber, ..} ) <$> f sushiswapLiquidityPositionDTOBlockNumber
{-# INLINE sushiswapLiquidityPositionDTOBlockNumberL #-}

-- | 'sushiswapLiquidityPositionDTOId' Lens
sushiswapLiquidityPositionDTOIdL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Text)
sushiswapLiquidityPositionDTOIdL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOId -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOId, ..} ) <$> f sushiswapLiquidityPositionDTOId
{-# INLINE sushiswapLiquidityPositionDTOIdL #-}

-- | 'sushiswapLiquidityPositionDTOUser' Lens
sushiswapLiquidityPositionDTOUserL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Text)
sushiswapLiquidityPositionDTOUserL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOUser -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOUser, ..} ) <$> f sushiswapLiquidityPositionDTOUser
{-# INLINE sushiswapLiquidityPositionDTOUserL #-}

-- | 'sushiswapLiquidityPositionDTOPair' Lens
sushiswapLiquidityPositionDTOPairL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Text)
sushiswapLiquidityPositionDTOPairL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOPair -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOPair, ..} ) <$> f sushiswapLiquidityPositionDTOPair
{-# INLINE sushiswapLiquidityPositionDTOPairL #-}

-- | 'sushiswapLiquidityPositionDTOLiquidityTokenBalance' Lens
sushiswapLiquidityPositionDTOLiquidityTokenBalanceL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Text)
sushiswapLiquidityPositionDTOLiquidityTokenBalanceL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOLiquidityTokenBalance -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOLiquidityTokenBalance, ..} ) <$> f sushiswapLiquidityPositionDTOLiquidityTokenBalance
{-# INLINE sushiswapLiquidityPositionDTOLiquidityTokenBalanceL #-}

-- | 'sushiswapLiquidityPositionDTOBlock' Lens
sushiswapLiquidityPositionDTOBlockL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Int)
sushiswapLiquidityPositionDTOBlockL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOBlock -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOBlock, ..} ) <$> f sushiswapLiquidityPositionDTOBlock
{-# INLINE sushiswapLiquidityPositionDTOBlockL #-}

-- | 'sushiswapLiquidityPositionDTOTimestamp' Lens
sushiswapLiquidityPositionDTOTimestampL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Int)
sushiswapLiquidityPositionDTOTimestampL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOTimestamp -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOTimestamp, ..} ) <$> f sushiswapLiquidityPositionDTOTimestamp
{-# INLINE sushiswapLiquidityPositionDTOTimestampL #-}

-- | 'sushiswapLiquidityPositionDTOVid' Lens
sushiswapLiquidityPositionDTOVidL :: Lens_' SushiswapLiquidityPositionDTO (Maybe Integer)
sushiswapLiquidityPositionDTOVidL f SushiswapLiquidityPositionDTO{..} = (\sushiswapLiquidityPositionDTOVid -> SushiswapLiquidityPositionDTO { sushiswapLiquidityPositionDTOVid, ..} ) <$> f sushiswapLiquidityPositionDTOVid
{-# INLINE sushiswapLiquidityPositionDTOVidL #-}



-- * SushiswapLiquidityPositionSnapshotDTO

-- | 'sushiswapLiquidityPositionSnapshotDTOEntryTime' Lens
sushiswapLiquidityPositionSnapshotDTOEntryTimeL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe DateTime)
sushiswapLiquidityPositionSnapshotDTOEntryTimeL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOEntryTime -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOEntryTime, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOEntryTime
{-# INLINE sushiswapLiquidityPositionSnapshotDTOEntryTimeL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTORecvTime' Lens
sushiswapLiquidityPositionSnapshotDTORecvTimeL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe DateTime)
sushiswapLiquidityPositionSnapshotDTORecvTimeL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTORecvTime -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTORecvTime, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTORecvTime
{-# INLINE sushiswapLiquidityPositionSnapshotDTORecvTimeL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOBlockNumber' Lens
sushiswapLiquidityPositionSnapshotDTOBlockNumberL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Integer)
sushiswapLiquidityPositionSnapshotDTOBlockNumberL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOBlockNumber -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOBlockNumber, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOBlockNumber
{-# INLINE sushiswapLiquidityPositionSnapshotDTOBlockNumberL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOId' Lens
sushiswapLiquidityPositionSnapshotDTOIdL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOIdL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOId -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOId, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOId
{-# INLINE sushiswapLiquidityPositionSnapshotDTOIdL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOLiquidityPosition' Lens
sushiswapLiquidityPositionSnapshotDTOLiquidityPositionL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOLiquidityPositionL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOLiquidityPosition -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOLiquidityPosition, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOLiquidityPosition
{-# INLINE sushiswapLiquidityPositionSnapshotDTOLiquidityPositionL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOTimestamp' Lens
sushiswapLiquidityPositionSnapshotDTOTimestampL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Int)
sushiswapLiquidityPositionSnapshotDTOTimestampL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOTimestamp -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOTimestamp, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOTimestamp
{-# INLINE sushiswapLiquidityPositionSnapshotDTOTimestampL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOBlock' Lens
sushiswapLiquidityPositionSnapshotDTOBlockL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Int)
sushiswapLiquidityPositionSnapshotDTOBlockL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOBlock -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOBlock, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOBlock
{-# INLINE sushiswapLiquidityPositionSnapshotDTOBlockL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOUser' Lens
sushiswapLiquidityPositionSnapshotDTOUserL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOUserL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOUser -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOUser, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOUser
{-# INLINE sushiswapLiquidityPositionSnapshotDTOUserL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOPair' Lens
sushiswapLiquidityPositionSnapshotDTOPairL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOPairL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOPair -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOPair, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOPair
{-# INLINE sushiswapLiquidityPositionSnapshotDTOPairL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOToken0PriceUsd' Lens
sushiswapLiquidityPositionSnapshotDTOToken0PriceUsdL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOToken0PriceUsdL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOToken0PriceUsd -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOToken0PriceUsd, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOToken0PriceUsd
{-# INLINE sushiswapLiquidityPositionSnapshotDTOToken0PriceUsdL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOToken1PriceUsd' Lens
sushiswapLiquidityPositionSnapshotDTOToken1PriceUsdL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOToken1PriceUsdL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOToken1PriceUsd -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOToken1PriceUsd, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOToken1PriceUsd
{-# INLINE sushiswapLiquidityPositionSnapshotDTOToken1PriceUsdL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOReserve0' Lens
sushiswapLiquidityPositionSnapshotDTOReserve0L :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOReserve0L f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOReserve0 -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOReserve0, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOReserve0
{-# INLINE sushiswapLiquidityPositionSnapshotDTOReserve0L #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOReserve1' Lens
sushiswapLiquidityPositionSnapshotDTOReserve1L :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOReserve1L f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOReserve1 -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOReserve1, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOReserve1
{-# INLINE sushiswapLiquidityPositionSnapshotDTOReserve1L #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOReserveUsd' Lens
sushiswapLiquidityPositionSnapshotDTOReserveUsdL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOReserveUsdL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOReserveUsd -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOReserveUsd, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOReserveUsd
{-# INLINE sushiswapLiquidityPositionSnapshotDTOReserveUsdL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupply' Lens
sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupply -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupply, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupply
{-# INLINE sushiswapLiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalance' Lens
sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalanceL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Text)
sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalanceL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalance -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalance, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalance
{-# INLINE sushiswapLiquidityPositionSnapshotDTOLiquidityTokenBalanceL #-}

-- | 'sushiswapLiquidityPositionSnapshotDTOVid' Lens
sushiswapLiquidityPositionSnapshotDTOVidL :: Lens_' SushiswapLiquidityPositionSnapshotDTO (Maybe Integer)
sushiswapLiquidityPositionSnapshotDTOVidL f SushiswapLiquidityPositionSnapshotDTO{..} = (\sushiswapLiquidityPositionSnapshotDTOVid -> SushiswapLiquidityPositionSnapshotDTO { sushiswapLiquidityPositionSnapshotDTOVid, ..} ) <$> f sushiswapLiquidityPositionSnapshotDTOVid
{-# INLINE sushiswapLiquidityPositionSnapshotDTOVidL #-}



-- * SushiswapMintDTO

-- | 'sushiswapMintDTOEntryTime' Lens
sushiswapMintDTOEntryTimeL :: Lens_' SushiswapMintDTO (Maybe DateTime)
sushiswapMintDTOEntryTimeL f SushiswapMintDTO{..} = (\sushiswapMintDTOEntryTime -> SushiswapMintDTO { sushiswapMintDTOEntryTime, ..} ) <$> f sushiswapMintDTOEntryTime
{-# INLINE sushiswapMintDTOEntryTimeL #-}

-- | 'sushiswapMintDTORecvTime' Lens
sushiswapMintDTORecvTimeL :: Lens_' SushiswapMintDTO (Maybe DateTime)
sushiswapMintDTORecvTimeL f SushiswapMintDTO{..} = (\sushiswapMintDTORecvTime -> SushiswapMintDTO { sushiswapMintDTORecvTime, ..} ) <$> f sushiswapMintDTORecvTime
{-# INLINE sushiswapMintDTORecvTimeL #-}

-- | 'sushiswapMintDTOBlockNumber' Lens
sushiswapMintDTOBlockNumberL :: Lens_' SushiswapMintDTO (Maybe Integer)
sushiswapMintDTOBlockNumberL f SushiswapMintDTO{..} = (\sushiswapMintDTOBlockNumber -> SushiswapMintDTO { sushiswapMintDTOBlockNumber, ..} ) <$> f sushiswapMintDTOBlockNumber
{-# INLINE sushiswapMintDTOBlockNumberL #-}

-- | 'sushiswapMintDTOId' Lens
sushiswapMintDTOIdL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOIdL f SushiswapMintDTO{..} = (\sushiswapMintDTOId -> SushiswapMintDTO { sushiswapMintDTOId, ..} ) <$> f sushiswapMintDTOId
{-# INLINE sushiswapMintDTOIdL #-}

-- | 'sushiswapMintDTOTransaction' Lens
sushiswapMintDTOTransactionL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOTransactionL f SushiswapMintDTO{..} = (\sushiswapMintDTOTransaction -> SushiswapMintDTO { sushiswapMintDTOTransaction, ..} ) <$> f sushiswapMintDTOTransaction
{-# INLINE sushiswapMintDTOTransactionL #-}

-- | 'sushiswapMintDTOTimestamp' Lens
sushiswapMintDTOTimestampL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOTimestampL f SushiswapMintDTO{..} = (\sushiswapMintDTOTimestamp -> SushiswapMintDTO { sushiswapMintDTOTimestamp, ..} ) <$> f sushiswapMintDTOTimestamp
{-# INLINE sushiswapMintDTOTimestampL #-}

-- | 'sushiswapMintDTOPair' Lens
sushiswapMintDTOPairL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOPairL f SushiswapMintDTO{..} = (\sushiswapMintDTOPair -> SushiswapMintDTO { sushiswapMintDTOPair, ..} ) <$> f sushiswapMintDTOPair
{-# INLINE sushiswapMintDTOPairL #-}

-- | 'sushiswapMintDTOTo' Lens
sushiswapMintDTOToL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOToL f SushiswapMintDTO{..} = (\sushiswapMintDTOTo -> SushiswapMintDTO { sushiswapMintDTOTo, ..} ) <$> f sushiswapMintDTOTo
{-# INLINE sushiswapMintDTOToL #-}

-- | 'sushiswapMintDTOLiquidity' Lens
sushiswapMintDTOLiquidityL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOLiquidityL f SushiswapMintDTO{..} = (\sushiswapMintDTOLiquidity -> SushiswapMintDTO { sushiswapMintDTOLiquidity, ..} ) <$> f sushiswapMintDTOLiquidity
{-# INLINE sushiswapMintDTOLiquidityL #-}

-- | 'sushiswapMintDTOSender' Lens
sushiswapMintDTOSenderL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOSenderL f SushiswapMintDTO{..} = (\sushiswapMintDTOSender -> SushiswapMintDTO { sushiswapMintDTOSender, ..} ) <$> f sushiswapMintDTOSender
{-# INLINE sushiswapMintDTOSenderL #-}

-- | 'sushiswapMintDTOAmount0' Lens
sushiswapMintDTOAmount0L :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOAmount0L f SushiswapMintDTO{..} = (\sushiswapMintDTOAmount0 -> SushiswapMintDTO { sushiswapMintDTOAmount0, ..} ) <$> f sushiswapMintDTOAmount0
{-# INLINE sushiswapMintDTOAmount0L #-}

-- | 'sushiswapMintDTOAmount1' Lens
sushiswapMintDTOAmount1L :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOAmount1L f SushiswapMintDTO{..} = (\sushiswapMintDTOAmount1 -> SushiswapMintDTO { sushiswapMintDTOAmount1, ..} ) <$> f sushiswapMintDTOAmount1
{-# INLINE sushiswapMintDTOAmount1L #-}

-- | 'sushiswapMintDTOLogIndex' Lens
sushiswapMintDTOLogIndexL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOLogIndexL f SushiswapMintDTO{..} = (\sushiswapMintDTOLogIndex -> SushiswapMintDTO { sushiswapMintDTOLogIndex, ..} ) <$> f sushiswapMintDTOLogIndex
{-# INLINE sushiswapMintDTOLogIndexL #-}

-- | 'sushiswapMintDTOAmountUsd' Lens
sushiswapMintDTOAmountUsdL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOAmountUsdL f SushiswapMintDTO{..} = (\sushiswapMintDTOAmountUsd -> SushiswapMintDTO { sushiswapMintDTOAmountUsd, ..} ) <$> f sushiswapMintDTOAmountUsd
{-# INLINE sushiswapMintDTOAmountUsdL #-}

-- | 'sushiswapMintDTOFeeTo' Lens
sushiswapMintDTOFeeToL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOFeeToL f SushiswapMintDTO{..} = (\sushiswapMintDTOFeeTo -> SushiswapMintDTO { sushiswapMintDTOFeeTo, ..} ) <$> f sushiswapMintDTOFeeTo
{-# INLINE sushiswapMintDTOFeeToL #-}

-- | 'sushiswapMintDTOFeeLiquidity' Lens
sushiswapMintDTOFeeLiquidityL :: Lens_' SushiswapMintDTO (Maybe Text)
sushiswapMintDTOFeeLiquidityL f SushiswapMintDTO{..} = (\sushiswapMintDTOFeeLiquidity -> SushiswapMintDTO { sushiswapMintDTOFeeLiquidity, ..} ) <$> f sushiswapMintDTOFeeLiquidity
{-# INLINE sushiswapMintDTOFeeLiquidityL #-}

-- | 'sushiswapMintDTOVid' Lens
sushiswapMintDTOVidL :: Lens_' SushiswapMintDTO (Maybe Integer)
sushiswapMintDTOVidL f SushiswapMintDTO{..} = (\sushiswapMintDTOVid -> SushiswapMintDTO { sushiswapMintDTOVid, ..} ) <$> f sushiswapMintDTOVid
{-# INLINE sushiswapMintDTOVidL #-}



-- * SushiswapPairDTO

-- | 'sushiswapPairDTOEntryTime' Lens
sushiswapPairDTOEntryTimeL :: Lens_' SushiswapPairDTO (Maybe DateTime)
sushiswapPairDTOEntryTimeL f SushiswapPairDTO{..} = (\sushiswapPairDTOEntryTime -> SushiswapPairDTO { sushiswapPairDTOEntryTime, ..} ) <$> f sushiswapPairDTOEntryTime
{-# INLINE sushiswapPairDTOEntryTimeL #-}

-- | 'sushiswapPairDTORecvTime' Lens
sushiswapPairDTORecvTimeL :: Lens_' SushiswapPairDTO (Maybe DateTime)
sushiswapPairDTORecvTimeL f SushiswapPairDTO{..} = (\sushiswapPairDTORecvTime -> SushiswapPairDTO { sushiswapPairDTORecvTime, ..} ) <$> f sushiswapPairDTORecvTime
{-# INLINE sushiswapPairDTORecvTimeL #-}

-- | 'sushiswapPairDTOBlockNumber' Lens
sushiswapPairDTOBlockNumberL :: Lens_' SushiswapPairDTO (Maybe Integer)
sushiswapPairDTOBlockNumberL f SushiswapPairDTO{..} = (\sushiswapPairDTOBlockNumber -> SushiswapPairDTO { sushiswapPairDTOBlockNumber, ..} ) <$> f sushiswapPairDTOBlockNumber
{-# INLINE sushiswapPairDTOBlockNumberL #-}

-- | 'sushiswapPairDTOId' Lens
sushiswapPairDTOIdL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOIdL f SushiswapPairDTO{..} = (\sushiswapPairDTOId -> SushiswapPairDTO { sushiswapPairDTOId, ..} ) <$> f sushiswapPairDTOId
{-# INLINE sushiswapPairDTOIdL #-}

-- | 'sushiswapPairDTOFactory' Lens
sushiswapPairDTOFactoryL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOFactoryL f SushiswapPairDTO{..} = (\sushiswapPairDTOFactory -> SushiswapPairDTO { sushiswapPairDTOFactory, ..} ) <$> f sushiswapPairDTOFactory
{-# INLINE sushiswapPairDTOFactoryL #-}

-- | 'sushiswapPairDTOName' Lens
sushiswapPairDTONameL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTONameL f SushiswapPairDTO{..} = (\sushiswapPairDTOName -> SushiswapPairDTO { sushiswapPairDTOName, ..} ) <$> f sushiswapPairDTOName
{-# INLINE sushiswapPairDTONameL #-}

-- | 'sushiswapPairDTOToken0' Lens
sushiswapPairDTOToken0L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOToken0L f SushiswapPairDTO{..} = (\sushiswapPairDTOToken0 -> SushiswapPairDTO { sushiswapPairDTOToken0, ..} ) <$> f sushiswapPairDTOToken0
{-# INLINE sushiswapPairDTOToken0L #-}

-- | 'sushiswapPairDTOToken1' Lens
sushiswapPairDTOToken1L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOToken1L f SushiswapPairDTO{..} = (\sushiswapPairDTOToken1 -> SushiswapPairDTO { sushiswapPairDTOToken1, ..} ) <$> f sushiswapPairDTOToken1
{-# INLINE sushiswapPairDTOToken1L #-}

-- | 'sushiswapPairDTOReserve0' Lens
sushiswapPairDTOReserve0L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOReserve0L f SushiswapPairDTO{..} = (\sushiswapPairDTOReserve0 -> SushiswapPairDTO { sushiswapPairDTOReserve0, ..} ) <$> f sushiswapPairDTOReserve0
{-# INLINE sushiswapPairDTOReserve0L #-}

-- | 'sushiswapPairDTOReserve1' Lens
sushiswapPairDTOReserve1L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOReserve1L f SushiswapPairDTO{..} = (\sushiswapPairDTOReserve1 -> SushiswapPairDTO { sushiswapPairDTOReserve1, ..} ) <$> f sushiswapPairDTOReserve1
{-# INLINE sushiswapPairDTOReserve1L #-}

-- | 'sushiswapPairDTOTotalSupply' Lens
sushiswapPairDTOTotalSupplyL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOTotalSupplyL f SushiswapPairDTO{..} = (\sushiswapPairDTOTotalSupply -> SushiswapPairDTO { sushiswapPairDTOTotalSupply, ..} ) <$> f sushiswapPairDTOTotalSupply
{-# INLINE sushiswapPairDTOTotalSupplyL #-}

-- | 'sushiswapPairDTOReserveEth' Lens
sushiswapPairDTOReserveEthL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOReserveEthL f SushiswapPairDTO{..} = (\sushiswapPairDTOReserveEth -> SushiswapPairDTO { sushiswapPairDTOReserveEth, ..} ) <$> f sushiswapPairDTOReserveEth
{-# INLINE sushiswapPairDTOReserveEthL #-}

-- | 'sushiswapPairDTOReserveUsd' Lens
sushiswapPairDTOReserveUsdL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOReserveUsdL f SushiswapPairDTO{..} = (\sushiswapPairDTOReserveUsd -> SushiswapPairDTO { sushiswapPairDTOReserveUsd, ..} ) <$> f sushiswapPairDTOReserveUsd
{-# INLINE sushiswapPairDTOReserveUsdL #-}

-- | 'sushiswapPairDTOTrackedReserveEth' Lens
sushiswapPairDTOTrackedReserveEthL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOTrackedReserveEthL f SushiswapPairDTO{..} = (\sushiswapPairDTOTrackedReserveEth -> SushiswapPairDTO { sushiswapPairDTOTrackedReserveEth, ..} ) <$> f sushiswapPairDTOTrackedReserveEth
{-# INLINE sushiswapPairDTOTrackedReserveEthL #-}

-- | 'sushiswapPairDTOToken0Price' Lens
sushiswapPairDTOToken0PriceL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOToken0PriceL f SushiswapPairDTO{..} = (\sushiswapPairDTOToken0Price -> SushiswapPairDTO { sushiswapPairDTOToken0Price, ..} ) <$> f sushiswapPairDTOToken0Price
{-# INLINE sushiswapPairDTOToken0PriceL #-}

-- | 'sushiswapPairDTOToken1Price' Lens
sushiswapPairDTOToken1PriceL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOToken1PriceL f SushiswapPairDTO{..} = (\sushiswapPairDTOToken1Price -> SushiswapPairDTO { sushiswapPairDTOToken1Price, ..} ) <$> f sushiswapPairDTOToken1Price
{-# INLINE sushiswapPairDTOToken1PriceL #-}

-- | 'sushiswapPairDTOVolumeToken0' Lens
sushiswapPairDTOVolumeToken0L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOVolumeToken0L f SushiswapPairDTO{..} = (\sushiswapPairDTOVolumeToken0 -> SushiswapPairDTO { sushiswapPairDTOVolumeToken0, ..} ) <$> f sushiswapPairDTOVolumeToken0
{-# INLINE sushiswapPairDTOVolumeToken0L #-}

-- | 'sushiswapPairDTOVolumeToken1' Lens
sushiswapPairDTOVolumeToken1L :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOVolumeToken1L f SushiswapPairDTO{..} = (\sushiswapPairDTOVolumeToken1 -> SushiswapPairDTO { sushiswapPairDTOVolumeToken1, ..} ) <$> f sushiswapPairDTOVolumeToken1
{-# INLINE sushiswapPairDTOVolumeToken1L #-}

-- | 'sushiswapPairDTOVolumeUsd' Lens
sushiswapPairDTOVolumeUsdL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOVolumeUsdL f SushiswapPairDTO{..} = (\sushiswapPairDTOVolumeUsd -> SushiswapPairDTO { sushiswapPairDTOVolumeUsd, ..} ) <$> f sushiswapPairDTOVolumeUsd
{-# INLINE sushiswapPairDTOVolumeUsdL #-}

-- | 'sushiswapPairDTOUntrackedVolumeUsd' Lens
sushiswapPairDTOUntrackedVolumeUsdL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOUntrackedVolumeUsdL f SushiswapPairDTO{..} = (\sushiswapPairDTOUntrackedVolumeUsd -> SushiswapPairDTO { sushiswapPairDTOUntrackedVolumeUsd, ..} ) <$> f sushiswapPairDTOUntrackedVolumeUsd
{-# INLINE sushiswapPairDTOUntrackedVolumeUsdL #-}

-- | 'sushiswapPairDTOTxCount' Lens
sushiswapPairDTOTxCountL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOTxCountL f SushiswapPairDTO{..} = (\sushiswapPairDTOTxCount -> SushiswapPairDTO { sushiswapPairDTOTxCount, ..} ) <$> f sushiswapPairDTOTxCount
{-# INLINE sushiswapPairDTOTxCountL #-}

-- | 'sushiswapPairDTOLiquidityProviderCount' Lens
sushiswapPairDTOLiquidityProviderCountL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOLiquidityProviderCountL f SushiswapPairDTO{..} = (\sushiswapPairDTOLiquidityProviderCount -> SushiswapPairDTO { sushiswapPairDTOLiquidityProviderCount, ..} ) <$> f sushiswapPairDTOLiquidityProviderCount
{-# INLINE sushiswapPairDTOLiquidityProviderCountL #-}

-- | 'sushiswapPairDTOTimestamp' Lens
sushiswapPairDTOTimestampL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOTimestampL f SushiswapPairDTO{..} = (\sushiswapPairDTOTimestamp -> SushiswapPairDTO { sushiswapPairDTOTimestamp, ..} ) <$> f sushiswapPairDTOTimestamp
{-# INLINE sushiswapPairDTOTimestampL #-}

-- | 'sushiswapPairDTOBlock' Lens
sushiswapPairDTOBlockL :: Lens_' SushiswapPairDTO (Maybe Text)
sushiswapPairDTOBlockL f SushiswapPairDTO{..} = (\sushiswapPairDTOBlock -> SushiswapPairDTO { sushiswapPairDTOBlock, ..} ) <$> f sushiswapPairDTOBlock
{-# INLINE sushiswapPairDTOBlockL #-}

-- | 'sushiswapPairDTOVid' Lens
sushiswapPairDTOVidL :: Lens_' SushiswapPairDTO (Maybe Integer)
sushiswapPairDTOVidL f SushiswapPairDTO{..} = (\sushiswapPairDTOVid -> SushiswapPairDTO { sushiswapPairDTOVid, ..} ) <$> f sushiswapPairDTOVid
{-# INLINE sushiswapPairDTOVidL #-}

-- | 'sushiswapPairDTOEvaluatedAsk' Lens
sushiswapPairDTOEvaluatedAskL :: Lens_' SushiswapPairDTO (Maybe Double)
sushiswapPairDTOEvaluatedAskL f SushiswapPairDTO{..} = (\sushiswapPairDTOEvaluatedAsk -> SushiswapPairDTO { sushiswapPairDTOEvaluatedAsk, ..} ) <$> f sushiswapPairDTOEvaluatedAsk
{-# INLINE sushiswapPairDTOEvaluatedAskL #-}



-- * SushiswapPairDayDataDTO

-- | 'sushiswapPairDayDataDTOEntryTime' Lens
sushiswapPairDayDataDTOEntryTimeL :: Lens_' SushiswapPairDayDataDTO (Maybe DateTime)
sushiswapPairDayDataDTOEntryTimeL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOEntryTime -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOEntryTime, ..} ) <$> f sushiswapPairDayDataDTOEntryTime
{-# INLINE sushiswapPairDayDataDTOEntryTimeL #-}

-- | 'sushiswapPairDayDataDTORecvTime' Lens
sushiswapPairDayDataDTORecvTimeL :: Lens_' SushiswapPairDayDataDTO (Maybe DateTime)
sushiswapPairDayDataDTORecvTimeL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTORecvTime -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTORecvTime, ..} ) <$> f sushiswapPairDayDataDTORecvTime
{-# INLINE sushiswapPairDayDataDTORecvTimeL #-}

-- | 'sushiswapPairDayDataDTOBlockNumber' Lens
sushiswapPairDayDataDTOBlockNumberL :: Lens_' SushiswapPairDayDataDTO (Maybe Integer)
sushiswapPairDayDataDTOBlockNumberL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOBlockNumber -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOBlockNumber, ..} ) <$> f sushiswapPairDayDataDTOBlockNumber
{-# INLINE sushiswapPairDayDataDTOBlockNumberL #-}

-- | 'sushiswapPairDayDataDTOId' Lens
sushiswapPairDayDataDTOIdL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOIdL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOId -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOId, ..} ) <$> f sushiswapPairDayDataDTOId
{-# INLINE sushiswapPairDayDataDTOIdL #-}

-- | 'sushiswapPairDayDataDTODate' Lens
sushiswapPairDayDataDTODateL :: Lens_' SushiswapPairDayDataDTO (Maybe Int)
sushiswapPairDayDataDTODateL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTODate -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTODate, ..} ) <$> f sushiswapPairDayDataDTODate
{-# INLINE sushiswapPairDayDataDTODateL #-}

-- | 'sushiswapPairDayDataDTOPair' Lens
sushiswapPairDayDataDTOPairL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOPairL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOPair -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOPair, ..} ) <$> f sushiswapPairDayDataDTOPair
{-# INLINE sushiswapPairDayDataDTOPairL #-}

-- | 'sushiswapPairDayDataDTOToken0' Lens
sushiswapPairDayDataDTOToken0L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOToken0L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOToken0 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOToken0, ..} ) <$> f sushiswapPairDayDataDTOToken0
{-# INLINE sushiswapPairDayDataDTOToken0L #-}

-- | 'sushiswapPairDayDataDTOToken1' Lens
sushiswapPairDayDataDTOToken1L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOToken1L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOToken1 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOToken1, ..} ) <$> f sushiswapPairDayDataDTOToken1
{-# INLINE sushiswapPairDayDataDTOToken1L #-}

-- | 'sushiswapPairDayDataDTOReserve0' Lens
sushiswapPairDayDataDTOReserve0L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOReserve0L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOReserve0 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOReserve0, ..} ) <$> f sushiswapPairDayDataDTOReserve0
{-# INLINE sushiswapPairDayDataDTOReserve0L #-}

-- | 'sushiswapPairDayDataDTOReserve1' Lens
sushiswapPairDayDataDTOReserve1L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOReserve1L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOReserve1 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOReserve1, ..} ) <$> f sushiswapPairDayDataDTOReserve1
{-# INLINE sushiswapPairDayDataDTOReserve1L #-}

-- | 'sushiswapPairDayDataDTOTotalSupply' Lens
sushiswapPairDayDataDTOTotalSupplyL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOTotalSupplyL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOTotalSupply -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOTotalSupply, ..} ) <$> f sushiswapPairDayDataDTOTotalSupply
{-# INLINE sushiswapPairDayDataDTOTotalSupplyL #-}

-- | 'sushiswapPairDayDataDTOReserveUsd' Lens
sushiswapPairDayDataDTOReserveUsdL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOReserveUsdL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOReserveUsd -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOReserveUsd, ..} ) <$> f sushiswapPairDayDataDTOReserveUsd
{-# INLINE sushiswapPairDayDataDTOReserveUsdL #-}

-- | 'sushiswapPairDayDataDTOVolumeToken0' Lens
sushiswapPairDayDataDTOVolumeToken0L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOVolumeToken0L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOVolumeToken0 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOVolumeToken0, ..} ) <$> f sushiswapPairDayDataDTOVolumeToken0
{-# INLINE sushiswapPairDayDataDTOVolumeToken0L #-}

-- | 'sushiswapPairDayDataDTOVolumeToken1' Lens
sushiswapPairDayDataDTOVolumeToken1L :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOVolumeToken1L f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOVolumeToken1 -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOVolumeToken1, ..} ) <$> f sushiswapPairDayDataDTOVolumeToken1
{-# INLINE sushiswapPairDayDataDTOVolumeToken1L #-}

-- | 'sushiswapPairDayDataDTOVolumeUsd' Lens
sushiswapPairDayDataDTOVolumeUsdL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOVolumeUsdL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOVolumeUsd -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOVolumeUsd, ..} ) <$> f sushiswapPairDayDataDTOVolumeUsd
{-# INLINE sushiswapPairDayDataDTOVolumeUsdL #-}

-- | 'sushiswapPairDayDataDTOTxCount' Lens
sushiswapPairDayDataDTOTxCountL :: Lens_' SushiswapPairDayDataDTO (Maybe Text)
sushiswapPairDayDataDTOTxCountL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOTxCount -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOTxCount, ..} ) <$> f sushiswapPairDayDataDTOTxCount
{-# INLINE sushiswapPairDayDataDTOTxCountL #-}

-- | 'sushiswapPairDayDataDTOVid' Lens
sushiswapPairDayDataDTOVidL :: Lens_' SushiswapPairDayDataDTO (Maybe Integer)
sushiswapPairDayDataDTOVidL f SushiswapPairDayDataDTO{..} = (\sushiswapPairDayDataDTOVid -> SushiswapPairDayDataDTO { sushiswapPairDayDataDTOVid, ..} ) <$> f sushiswapPairDayDataDTOVid
{-# INLINE sushiswapPairDayDataDTOVidL #-}



-- * SushiswapPairHourDataDTO

-- | 'sushiswapPairHourDataDTOEntryTime' Lens
sushiswapPairHourDataDTOEntryTimeL :: Lens_' SushiswapPairHourDataDTO (Maybe DateTime)
sushiswapPairHourDataDTOEntryTimeL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOEntryTime -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOEntryTime, ..} ) <$> f sushiswapPairHourDataDTOEntryTime
{-# INLINE sushiswapPairHourDataDTOEntryTimeL #-}

-- | 'sushiswapPairHourDataDTORecvTime' Lens
sushiswapPairHourDataDTORecvTimeL :: Lens_' SushiswapPairHourDataDTO (Maybe DateTime)
sushiswapPairHourDataDTORecvTimeL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTORecvTime -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTORecvTime, ..} ) <$> f sushiswapPairHourDataDTORecvTime
{-# INLINE sushiswapPairHourDataDTORecvTimeL #-}

-- | 'sushiswapPairHourDataDTOBlockNumber' Lens
sushiswapPairHourDataDTOBlockNumberL :: Lens_' SushiswapPairHourDataDTO (Maybe Integer)
sushiswapPairHourDataDTOBlockNumberL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOBlockNumber -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOBlockNumber, ..} ) <$> f sushiswapPairHourDataDTOBlockNumber
{-# INLINE sushiswapPairHourDataDTOBlockNumberL #-}

-- | 'sushiswapPairHourDataDTOId' Lens
sushiswapPairHourDataDTOIdL :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOIdL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOId -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOId, ..} ) <$> f sushiswapPairHourDataDTOId
{-# INLINE sushiswapPairHourDataDTOIdL #-}

-- | 'sushiswapPairHourDataDTODate' Lens
sushiswapPairHourDataDTODateL :: Lens_' SushiswapPairHourDataDTO (Maybe Int)
sushiswapPairHourDataDTODateL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTODate -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTODate, ..} ) <$> f sushiswapPairHourDataDTODate
{-# INLINE sushiswapPairHourDataDTODateL #-}

-- | 'sushiswapPairHourDataDTOPair' Lens
sushiswapPairHourDataDTOPairL :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOPairL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOPair -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOPair, ..} ) <$> f sushiswapPairHourDataDTOPair
{-# INLINE sushiswapPairHourDataDTOPairL #-}

-- | 'sushiswapPairHourDataDTOReserve0' Lens
sushiswapPairHourDataDTOReserve0L :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOReserve0L f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOReserve0 -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOReserve0, ..} ) <$> f sushiswapPairHourDataDTOReserve0
{-# INLINE sushiswapPairHourDataDTOReserve0L #-}

-- | 'sushiswapPairHourDataDTOReserve1' Lens
sushiswapPairHourDataDTOReserve1L :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOReserve1L f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOReserve1 -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOReserve1, ..} ) <$> f sushiswapPairHourDataDTOReserve1
{-# INLINE sushiswapPairHourDataDTOReserve1L #-}

-- | 'sushiswapPairHourDataDTOReserveUsd' Lens
sushiswapPairHourDataDTOReserveUsdL :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOReserveUsdL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOReserveUsd -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOReserveUsd, ..} ) <$> f sushiswapPairHourDataDTOReserveUsd
{-# INLINE sushiswapPairHourDataDTOReserveUsdL #-}

-- | 'sushiswapPairHourDataDTOVolumeToken0' Lens
sushiswapPairHourDataDTOVolumeToken0L :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOVolumeToken0L f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOVolumeToken0 -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOVolumeToken0, ..} ) <$> f sushiswapPairHourDataDTOVolumeToken0
{-# INLINE sushiswapPairHourDataDTOVolumeToken0L #-}

-- | 'sushiswapPairHourDataDTOVolumeToken1' Lens
sushiswapPairHourDataDTOVolumeToken1L :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOVolumeToken1L f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOVolumeToken1 -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOVolumeToken1, ..} ) <$> f sushiswapPairHourDataDTOVolumeToken1
{-# INLINE sushiswapPairHourDataDTOVolumeToken1L #-}

-- | 'sushiswapPairHourDataDTOVolumeUsd' Lens
sushiswapPairHourDataDTOVolumeUsdL :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOVolumeUsdL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOVolumeUsd -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOVolumeUsd, ..} ) <$> f sushiswapPairHourDataDTOVolumeUsd
{-# INLINE sushiswapPairHourDataDTOVolumeUsdL #-}

-- | 'sushiswapPairHourDataDTOTxCount' Lens
sushiswapPairHourDataDTOTxCountL :: Lens_' SushiswapPairHourDataDTO (Maybe Text)
sushiswapPairHourDataDTOTxCountL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOTxCount -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOTxCount, ..} ) <$> f sushiswapPairHourDataDTOTxCount
{-# INLINE sushiswapPairHourDataDTOTxCountL #-}

-- | 'sushiswapPairHourDataDTOVid' Lens
sushiswapPairHourDataDTOVidL :: Lens_' SushiswapPairHourDataDTO (Maybe Integer)
sushiswapPairHourDataDTOVidL f SushiswapPairHourDataDTO{..} = (\sushiswapPairHourDataDTOVid -> SushiswapPairHourDataDTO { sushiswapPairHourDataDTOVid, ..} ) <$> f sushiswapPairHourDataDTOVid
{-# INLINE sushiswapPairHourDataDTOVidL #-}



-- * SushiswapSwapDTO

-- | 'sushiswapSwapDTOEntryTime' Lens
sushiswapSwapDTOEntryTimeL :: Lens_' SushiswapSwapDTO (Maybe DateTime)
sushiswapSwapDTOEntryTimeL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOEntryTime -> SushiswapSwapDTO { sushiswapSwapDTOEntryTime, ..} ) <$> f sushiswapSwapDTOEntryTime
{-# INLINE sushiswapSwapDTOEntryTimeL #-}

-- | 'sushiswapSwapDTORecvTime' Lens
sushiswapSwapDTORecvTimeL :: Lens_' SushiswapSwapDTO (Maybe DateTime)
sushiswapSwapDTORecvTimeL f SushiswapSwapDTO{..} = (\sushiswapSwapDTORecvTime -> SushiswapSwapDTO { sushiswapSwapDTORecvTime, ..} ) <$> f sushiswapSwapDTORecvTime
{-# INLINE sushiswapSwapDTORecvTimeL #-}

-- | 'sushiswapSwapDTOBlockNumber' Lens
sushiswapSwapDTOBlockNumberL :: Lens_' SushiswapSwapDTO (Maybe Integer)
sushiswapSwapDTOBlockNumberL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOBlockNumber -> SushiswapSwapDTO { sushiswapSwapDTOBlockNumber, ..} ) <$> f sushiswapSwapDTOBlockNumber
{-# INLINE sushiswapSwapDTOBlockNumberL #-}

-- | 'sushiswapSwapDTOId' Lens
sushiswapSwapDTOIdL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOIdL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOId -> SushiswapSwapDTO { sushiswapSwapDTOId, ..} ) <$> f sushiswapSwapDTOId
{-# INLINE sushiswapSwapDTOIdL #-}

-- | 'sushiswapSwapDTOTransaction' Lens
sushiswapSwapDTOTransactionL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOTransactionL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOTransaction -> SushiswapSwapDTO { sushiswapSwapDTOTransaction, ..} ) <$> f sushiswapSwapDTOTransaction
{-# INLINE sushiswapSwapDTOTransactionL #-}

-- | 'sushiswapSwapDTOTimestamp' Lens
sushiswapSwapDTOTimestampL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOTimestampL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOTimestamp -> SushiswapSwapDTO { sushiswapSwapDTOTimestamp, ..} ) <$> f sushiswapSwapDTOTimestamp
{-# INLINE sushiswapSwapDTOTimestampL #-}

-- | 'sushiswapSwapDTOPair' Lens
sushiswapSwapDTOPairL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOPairL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOPair -> SushiswapSwapDTO { sushiswapSwapDTOPair, ..} ) <$> f sushiswapSwapDTOPair
{-# INLINE sushiswapSwapDTOPairL #-}

-- | 'sushiswapSwapDTOSender' Lens
sushiswapSwapDTOSenderL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOSenderL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOSender -> SushiswapSwapDTO { sushiswapSwapDTOSender, ..} ) <$> f sushiswapSwapDTOSender
{-# INLINE sushiswapSwapDTOSenderL #-}

-- | 'sushiswapSwapDTOAmount0In' Lens
sushiswapSwapDTOAmount0InL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOAmount0InL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOAmount0In -> SushiswapSwapDTO { sushiswapSwapDTOAmount0In, ..} ) <$> f sushiswapSwapDTOAmount0In
{-# INLINE sushiswapSwapDTOAmount0InL #-}

-- | 'sushiswapSwapDTOAmount1In' Lens
sushiswapSwapDTOAmount1InL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOAmount1InL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOAmount1In -> SushiswapSwapDTO { sushiswapSwapDTOAmount1In, ..} ) <$> f sushiswapSwapDTOAmount1In
{-# INLINE sushiswapSwapDTOAmount1InL #-}

-- | 'sushiswapSwapDTOAmount0Out' Lens
sushiswapSwapDTOAmount0OutL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOAmount0OutL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOAmount0Out -> SushiswapSwapDTO { sushiswapSwapDTOAmount0Out, ..} ) <$> f sushiswapSwapDTOAmount0Out
{-# INLINE sushiswapSwapDTOAmount0OutL #-}

-- | 'sushiswapSwapDTOAmount1Out' Lens
sushiswapSwapDTOAmount1OutL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOAmount1OutL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOAmount1Out -> SushiswapSwapDTO { sushiswapSwapDTOAmount1Out, ..} ) <$> f sushiswapSwapDTOAmount1Out
{-# INLINE sushiswapSwapDTOAmount1OutL #-}

-- | 'sushiswapSwapDTOTo' Lens
sushiswapSwapDTOToL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOToL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOTo -> SushiswapSwapDTO { sushiswapSwapDTOTo, ..} ) <$> f sushiswapSwapDTOTo
{-# INLINE sushiswapSwapDTOToL #-}

-- | 'sushiswapSwapDTOLogIndex' Lens
sushiswapSwapDTOLogIndexL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOLogIndexL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOLogIndex -> SushiswapSwapDTO { sushiswapSwapDTOLogIndex, ..} ) <$> f sushiswapSwapDTOLogIndex
{-# INLINE sushiswapSwapDTOLogIndexL #-}

-- | 'sushiswapSwapDTOAmountUsd' Lens
sushiswapSwapDTOAmountUsdL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOAmountUsdL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOAmountUsd -> SushiswapSwapDTO { sushiswapSwapDTOAmountUsd, ..} ) <$> f sushiswapSwapDTOAmountUsd
{-# INLINE sushiswapSwapDTOAmountUsdL #-}

-- | 'sushiswapSwapDTOVid' Lens
sushiswapSwapDTOVidL :: Lens_' SushiswapSwapDTO (Maybe Integer)
sushiswapSwapDTOVidL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOVid -> SushiswapSwapDTO { sushiswapSwapDTOVid, ..} ) <$> f sushiswapSwapDTOVid
{-# INLINE sushiswapSwapDTOVidL #-}

-- | 'sushiswapSwapDTOPoolId' Lens
sushiswapSwapDTOPoolIdL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOPoolIdL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOPoolId -> SushiswapSwapDTO { sushiswapSwapDTOPoolId, ..} ) <$> f sushiswapSwapDTOPoolId
{-# INLINE sushiswapSwapDTOPoolIdL #-}

-- | 'sushiswapSwapDTOTransactionId' Lens
sushiswapSwapDTOTransactionIdL :: Lens_' SushiswapSwapDTO (Maybe Text)
sushiswapSwapDTOTransactionIdL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOTransactionId -> SushiswapSwapDTO { sushiswapSwapDTOTransactionId, ..} ) <$> f sushiswapSwapDTOTransactionId
{-# INLINE sushiswapSwapDTOTransactionIdL #-}

-- | 'sushiswapSwapDTOEvaluatedPrice' Lens
sushiswapSwapDTOEvaluatedPriceL :: Lens_' SushiswapSwapDTO (Maybe Double)
sushiswapSwapDTOEvaluatedPriceL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOEvaluatedPrice -> SushiswapSwapDTO { sushiswapSwapDTOEvaluatedPrice, ..} ) <$> f sushiswapSwapDTOEvaluatedPrice
{-# INLINE sushiswapSwapDTOEvaluatedPriceL #-}

-- | 'sushiswapSwapDTOEvaluatedAmount' Lens
sushiswapSwapDTOEvaluatedAmountL :: Lens_' SushiswapSwapDTO (Maybe Double)
sushiswapSwapDTOEvaluatedAmountL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOEvaluatedAmount -> SushiswapSwapDTO { sushiswapSwapDTOEvaluatedAmount, ..} ) <$> f sushiswapSwapDTOEvaluatedAmount
{-# INLINE sushiswapSwapDTOEvaluatedAmountL #-}

-- | 'sushiswapSwapDTOEvaluatedAggressor' Lens
sushiswapSwapDTOEvaluatedAggressorL :: Lens_' SushiswapSwapDTO (Maybe TransactionsETradeAggressiveSide)
sushiswapSwapDTOEvaluatedAggressorL f SushiswapSwapDTO{..} = (\sushiswapSwapDTOEvaluatedAggressor -> SushiswapSwapDTO { sushiswapSwapDTOEvaluatedAggressor, ..} ) <$> f sushiswapSwapDTOEvaluatedAggressor
{-# INLINE sushiswapSwapDTOEvaluatedAggressorL #-}



-- * SushiswapTokenDTO

-- | 'sushiswapTokenDTOEntryTime' Lens
sushiswapTokenDTOEntryTimeL :: Lens_' SushiswapTokenDTO (Maybe DateTime)
sushiswapTokenDTOEntryTimeL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOEntryTime -> SushiswapTokenDTO { sushiswapTokenDTOEntryTime, ..} ) <$> f sushiswapTokenDTOEntryTime
{-# INLINE sushiswapTokenDTOEntryTimeL #-}

-- | 'sushiswapTokenDTORecvTime' Lens
sushiswapTokenDTORecvTimeL :: Lens_' SushiswapTokenDTO (Maybe DateTime)
sushiswapTokenDTORecvTimeL f SushiswapTokenDTO{..} = (\sushiswapTokenDTORecvTime -> SushiswapTokenDTO { sushiswapTokenDTORecvTime, ..} ) <$> f sushiswapTokenDTORecvTime
{-# INLINE sushiswapTokenDTORecvTimeL #-}

-- | 'sushiswapTokenDTOBlockNumber' Lens
sushiswapTokenDTOBlockNumberL :: Lens_' SushiswapTokenDTO (Maybe Integer)
sushiswapTokenDTOBlockNumberL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOBlockNumber -> SushiswapTokenDTO { sushiswapTokenDTOBlockNumber, ..} ) <$> f sushiswapTokenDTOBlockNumber
{-# INLINE sushiswapTokenDTOBlockNumberL #-}

-- | 'sushiswapTokenDTOId' Lens
sushiswapTokenDTOIdL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOIdL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOId -> SushiswapTokenDTO { sushiswapTokenDTOId, ..} ) <$> f sushiswapTokenDTOId
{-# INLINE sushiswapTokenDTOIdL #-}

-- | 'sushiswapTokenDTOFactory' Lens
sushiswapTokenDTOFactoryL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOFactoryL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOFactory -> SushiswapTokenDTO { sushiswapTokenDTOFactory, ..} ) <$> f sushiswapTokenDTOFactory
{-# INLINE sushiswapTokenDTOFactoryL #-}

-- | 'sushiswapTokenDTOSymbol' Lens
sushiswapTokenDTOSymbolL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOSymbolL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOSymbol -> SushiswapTokenDTO { sushiswapTokenDTOSymbol, ..} ) <$> f sushiswapTokenDTOSymbol
{-# INLINE sushiswapTokenDTOSymbolL #-}

-- | 'sushiswapTokenDTOName' Lens
sushiswapTokenDTONameL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTONameL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOName -> SushiswapTokenDTO { sushiswapTokenDTOName, ..} ) <$> f sushiswapTokenDTOName
{-# INLINE sushiswapTokenDTONameL #-}

-- | 'sushiswapTokenDTODecimals' Lens
sushiswapTokenDTODecimalsL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTODecimalsL f SushiswapTokenDTO{..} = (\sushiswapTokenDTODecimals -> SushiswapTokenDTO { sushiswapTokenDTODecimals, ..} ) <$> f sushiswapTokenDTODecimals
{-# INLINE sushiswapTokenDTODecimalsL #-}

-- | 'sushiswapTokenDTOTotalSupply' Lens
sushiswapTokenDTOTotalSupplyL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOTotalSupplyL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOTotalSupply -> SushiswapTokenDTO { sushiswapTokenDTOTotalSupply, ..} ) <$> f sushiswapTokenDTOTotalSupply
{-# INLINE sushiswapTokenDTOTotalSupplyL #-}

-- | 'sushiswapTokenDTOVolume' Lens
sushiswapTokenDTOVolumeL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOVolumeL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOVolume -> SushiswapTokenDTO { sushiswapTokenDTOVolume, ..} ) <$> f sushiswapTokenDTOVolume
{-# INLINE sushiswapTokenDTOVolumeL #-}

-- | 'sushiswapTokenDTOVolumeUsd' Lens
sushiswapTokenDTOVolumeUsdL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOVolumeUsdL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOVolumeUsd -> SushiswapTokenDTO { sushiswapTokenDTOVolumeUsd, ..} ) <$> f sushiswapTokenDTOVolumeUsd
{-# INLINE sushiswapTokenDTOVolumeUsdL #-}

-- | 'sushiswapTokenDTOUntrackedVolumeUsd' Lens
sushiswapTokenDTOUntrackedVolumeUsdL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOUntrackedVolumeUsdL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOUntrackedVolumeUsd -> SushiswapTokenDTO { sushiswapTokenDTOUntrackedVolumeUsd, ..} ) <$> f sushiswapTokenDTOUntrackedVolumeUsd
{-# INLINE sushiswapTokenDTOUntrackedVolumeUsdL #-}

-- | 'sushiswapTokenDTOTxCount' Lens
sushiswapTokenDTOTxCountL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOTxCountL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOTxCount -> SushiswapTokenDTO { sushiswapTokenDTOTxCount, ..} ) <$> f sushiswapTokenDTOTxCount
{-# INLINE sushiswapTokenDTOTxCountL #-}

-- | 'sushiswapTokenDTOLiquidity' Lens
sushiswapTokenDTOLiquidityL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOLiquidityL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOLiquidity -> SushiswapTokenDTO { sushiswapTokenDTOLiquidity, ..} ) <$> f sushiswapTokenDTOLiquidity
{-# INLINE sushiswapTokenDTOLiquidityL #-}

-- | 'sushiswapTokenDTODerivedEth' Lens
sushiswapTokenDTODerivedEthL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTODerivedEthL f SushiswapTokenDTO{..} = (\sushiswapTokenDTODerivedEth -> SushiswapTokenDTO { sushiswapTokenDTODerivedEth, ..} ) <$> f sushiswapTokenDTODerivedEth
{-# INLINE sushiswapTokenDTODerivedEthL #-}

-- | 'sushiswapTokenDTOWhitelistPairs' Lens
sushiswapTokenDTOWhitelistPairsL :: Lens_' SushiswapTokenDTO (Maybe [Text])
sushiswapTokenDTOWhitelistPairsL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOWhitelistPairs -> SushiswapTokenDTO { sushiswapTokenDTOWhitelistPairs, ..} ) <$> f sushiswapTokenDTOWhitelistPairs
{-# INLINE sushiswapTokenDTOWhitelistPairsL #-}

-- | 'sushiswapTokenDTOVid' Lens
sushiswapTokenDTOVidL :: Lens_' SushiswapTokenDTO (Maybe Integer)
sushiswapTokenDTOVidL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOVid -> SushiswapTokenDTO { sushiswapTokenDTOVid, ..} ) <$> f sushiswapTokenDTOVid
{-# INLINE sushiswapTokenDTOVidL #-}

-- | 'sushiswapTokenDTOTokenSymbol' Lens
sushiswapTokenDTOTokenSymbolL :: Lens_' SushiswapTokenDTO (Maybe Text)
sushiswapTokenDTOTokenSymbolL f SushiswapTokenDTO{..} = (\sushiswapTokenDTOTokenSymbol -> SushiswapTokenDTO { sushiswapTokenDTOTokenSymbol, ..} ) <$> f sushiswapTokenDTOTokenSymbol
{-# INLINE sushiswapTokenDTOTokenSymbolL #-}



-- * SushiswapTokenDayDataDTO

-- | 'sushiswapTokenDayDataDTOEntryTime' Lens
sushiswapTokenDayDataDTOEntryTimeL :: Lens_' SushiswapTokenDayDataDTO (Maybe DateTime)
sushiswapTokenDayDataDTOEntryTimeL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOEntryTime -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOEntryTime, ..} ) <$> f sushiswapTokenDayDataDTOEntryTime
{-# INLINE sushiswapTokenDayDataDTOEntryTimeL #-}

-- | 'sushiswapTokenDayDataDTORecvTime' Lens
sushiswapTokenDayDataDTORecvTimeL :: Lens_' SushiswapTokenDayDataDTO (Maybe DateTime)
sushiswapTokenDayDataDTORecvTimeL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTORecvTime -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTORecvTime, ..} ) <$> f sushiswapTokenDayDataDTORecvTime
{-# INLINE sushiswapTokenDayDataDTORecvTimeL #-}

-- | 'sushiswapTokenDayDataDTOBlockNumber' Lens
sushiswapTokenDayDataDTOBlockNumberL :: Lens_' SushiswapTokenDayDataDTO (Maybe Integer)
sushiswapTokenDayDataDTOBlockNumberL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOBlockNumber -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOBlockNumber, ..} ) <$> f sushiswapTokenDayDataDTOBlockNumber
{-# INLINE sushiswapTokenDayDataDTOBlockNumberL #-}

-- | 'sushiswapTokenDayDataDTOId' Lens
sushiswapTokenDayDataDTOIdL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOIdL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOId -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOId, ..} ) <$> f sushiswapTokenDayDataDTOId
{-# INLINE sushiswapTokenDayDataDTOIdL #-}

-- | 'sushiswapTokenDayDataDTODate' Lens
sushiswapTokenDayDataDTODateL :: Lens_' SushiswapTokenDayDataDTO (Maybe Int)
sushiswapTokenDayDataDTODateL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTODate -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTODate, ..} ) <$> f sushiswapTokenDayDataDTODate
{-# INLINE sushiswapTokenDayDataDTODateL #-}

-- | 'sushiswapTokenDayDataDTOToken' Lens
sushiswapTokenDayDataDTOTokenL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOTokenL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOToken -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOToken, ..} ) <$> f sushiswapTokenDayDataDTOToken
{-# INLINE sushiswapTokenDayDataDTOTokenL #-}

-- | 'sushiswapTokenDayDataDTOVolume' Lens
sushiswapTokenDayDataDTOVolumeL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOVolumeL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOVolume -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOVolume, ..} ) <$> f sushiswapTokenDayDataDTOVolume
{-# INLINE sushiswapTokenDayDataDTOVolumeL #-}

-- | 'sushiswapTokenDayDataDTOVolumeEth' Lens
sushiswapTokenDayDataDTOVolumeEthL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOVolumeEthL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOVolumeEth -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOVolumeEth, ..} ) <$> f sushiswapTokenDayDataDTOVolumeEth
{-# INLINE sushiswapTokenDayDataDTOVolumeEthL #-}

-- | 'sushiswapTokenDayDataDTOVolumeUsd' Lens
sushiswapTokenDayDataDTOVolumeUsdL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOVolumeUsdL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOVolumeUsd -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOVolumeUsd, ..} ) <$> f sushiswapTokenDayDataDTOVolumeUsd
{-# INLINE sushiswapTokenDayDataDTOVolumeUsdL #-}

-- | 'sushiswapTokenDayDataDTOTxCount' Lens
sushiswapTokenDayDataDTOTxCountL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOTxCountL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOTxCount -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOTxCount, ..} ) <$> f sushiswapTokenDayDataDTOTxCount
{-# INLINE sushiswapTokenDayDataDTOTxCountL #-}

-- | 'sushiswapTokenDayDataDTOLiquidity' Lens
sushiswapTokenDayDataDTOLiquidityL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOLiquidityL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOLiquidity -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOLiquidity, ..} ) <$> f sushiswapTokenDayDataDTOLiquidity
{-# INLINE sushiswapTokenDayDataDTOLiquidityL #-}

-- | 'sushiswapTokenDayDataDTOLiquidityEth' Lens
sushiswapTokenDayDataDTOLiquidityEthL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOLiquidityEthL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOLiquidityEth -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOLiquidityEth, ..} ) <$> f sushiswapTokenDayDataDTOLiquidityEth
{-# INLINE sushiswapTokenDayDataDTOLiquidityEthL #-}

-- | 'sushiswapTokenDayDataDTOLiquidityUsd' Lens
sushiswapTokenDayDataDTOLiquidityUsdL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOLiquidityUsdL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOLiquidityUsd -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOLiquidityUsd, ..} ) <$> f sushiswapTokenDayDataDTOLiquidityUsd
{-# INLINE sushiswapTokenDayDataDTOLiquidityUsdL #-}

-- | 'sushiswapTokenDayDataDTOPriceUsd' Lens
sushiswapTokenDayDataDTOPriceUsdL :: Lens_' SushiswapTokenDayDataDTO (Maybe Text)
sushiswapTokenDayDataDTOPriceUsdL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOPriceUsd -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOPriceUsd, ..} ) <$> f sushiswapTokenDayDataDTOPriceUsd
{-# INLINE sushiswapTokenDayDataDTOPriceUsdL #-}

-- | 'sushiswapTokenDayDataDTOVid' Lens
sushiswapTokenDayDataDTOVidL :: Lens_' SushiswapTokenDayDataDTO (Maybe Integer)
sushiswapTokenDayDataDTOVidL f SushiswapTokenDayDataDTO{..} = (\sushiswapTokenDayDataDTOVid -> SushiswapTokenDayDataDTO { sushiswapTokenDayDataDTOVid, ..} ) <$> f sushiswapTokenDayDataDTOVid
{-# INLINE sushiswapTokenDayDataDTOVidL #-}



-- * SushiswapTransactionDTO

-- | 'sushiswapTransactionDTOEntryTime' Lens
sushiswapTransactionDTOEntryTimeL :: Lens_' SushiswapTransactionDTO (Maybe DateTime)
sushiswapTransactionDTOEntryTimeL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOEntryTime -> SushiswapTransactionDTO { sushiswapTransactionDTOEntryTime, ..} ) <$> f sushiswapTransactionDTOEntryTime
{-# INLINE sushiswapTransactionDTOEntryTimeL #-}

-- | 'sushiswapTransactionDTORecvTime' Lens
sushiswapTransactionDTORecvTimeL :: Lens_' SushiswapTransactionDTO (Maybe DateTime)
sushiswapTransactionDTORecvTimeL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTORecvTime -> SushiswapTransactionDTO { sushiswapTransactionDTORecvTime, ..} ) <$> f sushiswapTransactionDTORecvTime
{-# INLINE sushiswapTransactionDTORecvTimeL #-}

-- | 'sushiswapTransactionDTOBlockNumber' Lens
sushiswapTransactionDTOBlockNumberL :: Lens_' SushiswapTransactionDTO (Maybe Integer)
sushiswapTransactionDTOBlockNumberL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOBlockNumber -> SushiswapTransactionDTO { sushiswapTransactionDTOBlockNumber, ..} ) <$> f sushiswapTransactionDTOBlockNumber
{-# INLINE sushiswapTransactionDTOBlockNumberL #-}

-- | 'sushiswapTransactionDTOId' Lens
sushiswapTransactionDTOIdL :: Lens_' SushiswapTransactionDTO (Maybe Text)
sushiswapTransactionDTOIdL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOId -> SushiswapTransactionDTO { sushiswapTransactionDTOId, ..} ) <$> f sushiswapTransactionDTOId
{-# INLINE sushiswapTransactionDTOIdL #-}

-- | 'sushiswapTransactionDTOTimestamp' Lens
sushiswapTransactionDTOTimestampL :: Lens_' SushiswapTransactionDTO (Maybe Text)
sushiswapTransactionDTOTimestampL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOTimestamp -> SushiswapTransactionDTO { sushiswapTransactionDTOTimestamp, ..} ) <$> f sushiswapTransactionDTOTimestamp
{-# INLINE sushiswapTransactionDTOTimestampL #-}

-- | 'sushiswapTransactionDTOMints' Lens
sushiswapTransactionDTOMintsL :: Lens_' SushiswapTransactionDTO (Maybe [Text])
sushiswapTransactionDTOMintsL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOMints -> SushiswapTransactionDTO { sushiswapTransactionDTOMints, ..} ) <$> f sushiswapTransactionDTOMints
{-# INLINE sushiswapTransactionDTOMintsL #-}

-- | 'sushiswapTransactionDTOBurns' Lens
sushiswapTransactionDTOBurnsL :: Lens_' SushiswapTransactionDTO (Maybe [Text])
sushiswapTransactionDTOBurnsL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOBurns -> SushiswapTransactionDTO { sushiswapTransactionDTOBurns, ..} ) <$> f sushiswapTransactionDTOBurns
{-# INLINE sushiswapTransactionDTOBurnsL #-}

-- | 'sushiswapTransactionDTOSwaps' Lens
sushiswapTransactionDTOSwapsL :: Lens_' SushiswapTransactionDTO (Maybe [Text])
sushiswapTransactionDTOSwapsL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOSwaps -> SushiswapTransactionDTO { sushiswapTransactionDTOSwaps, ..} ) <$> f sushiswapTransactionDTOSwaps
{-# INLINE sushiswapTransactionDTOSwapsL #-}

-- | 'sushiswapTransactionDTOVid' Lens
sushiswapTransactionDTOVidL :: Lens_' SushiswapTransactionDTO (Maybe Integer)
sushiswapTransactionDTOVidL f SushiswapTransactionDTO{..} = (\sushiswapTransactionDTOVid -> SushiswapTransactionDTO { sushiswapTransactionDTOVid, ..} ) <$> f sushiswapTransactionDTOVid
{-# INLINE sushiswapTransactionDTOVidL #-}



-- * SushiswapUserDTO

-- | 'sushiswapUserDTOEntryTime' Lens
sushiswapUserDTOEntryTimeL :: Lens_' SushiswapUserDTO (Maybe DateTime)
sushiswapUserDTOEntryTimeL f SushiswapUserDTO{..} = (\sushiswapUserDTOEntryTime -> SushiswapUserDTO { sushiswapUserDTOEntryTime, ..} ) <$> f sushiswapUserDTOEntryTime
{-# INLINE sushiswapUserDTOEntryTimeL #-}

-- | 'sushiswapUserDTORecvTime' Lens
sushiswapUserDTORecvTimeL :: Lens_' SushiswapUserDTO (Maybe DateTime)
sushiswapUserDTORecvTimeL f SushiswapUserDTO{..} = (\sushiswapUserDTORecvTime -> SushiswapUserDTO { sushiswapUserDTORecvTime, ..} ) <$> f sushiswapUserDTORecvTime
{-# INLINE sushiswapUserDTORecvTimeL #-}

-- | 'sushiswapUserDTOBlockNumber' Lens
sushiswapUserDTOBlockNumberL :: Lens_' SushiswapUserDTO (Maybe Integer)
sushiswapUserDTOBlockNumberL f SushiswapUserDTO{..} = (\sushiswapUserDTOBlockNumber -> SushiswapUserDTO { sushiswapUserDTOBlockNumber, ..} ) <$> f sushiswapUserDTOBlockNumber
{-# INLINE sushiswapUserDTOBlockNumberL #-}

-- | 'sushiswapUserDTOId' Lens
sushiswapUserDTOIdL :: Lens_' SushiswapUserDTO (Maybe Text)
sushiswapUserDTOIdL f SushiswapUserDTO{..} = (\sushiswapUserDTOId -> SushiswapUserDTO { sushiswapUserDTOId, ..} ) <$> f sushiswapUserDTOId
{-# INLINE sushiswapUserDTOIdL #-}

-- | 'sushiswapUserDTOVid' Lens
sushiswapUserDTOVidL :: Lens_' SushiswapUserDTO (Maybe Integer)
sushiswapUserDTOVidL f SushiswapUserDTO{..} = (\sushiswapUserDTOVid -> SushiswapUserDTO { sushiswapUserDTOVid, ..} ) <$> f sushiswapUserDTOVid
{-# INLINE sushiswapUserDTOVidL #-}



-- * TransactionsETradeAggressiveSide



-- * UniswapV2BundleDTO

-- | 'uniswapV2BundleDTOEntryTime' Lens
uniswapV2BundleDTOEntryTimeL :: Lens_' UniswapV2BundleDTO (Maybe DateTime)
uniswapV2BundleDTOEntryTimeL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOEntryTime -> UniswapV2BundleDTO { uniswapV2BundleDTOEntryTime, ..} ) <$> f uniswapV2BundleDTOEntryTime
{-# INLINE uniswapV2BundleDTOEntryTimeL #-}

-- | 'uniswapV2BundleDTORecvTime' Lens
uniswapV2BundleDTORecvTimeL :: Lens_' UniswapV2BundleDTO (Maybe DateTime)
uniswapV2BundleDTORecvTimeL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTORecvTime -> UniswapV2BundleDTO { uniswapV2BundleDTORecvTime, ..} ) <$> f uniswapV2BundleDTORecvTime
{-# INLINE uniswapV2BundleDTORecvTimeL #-}

-- | 'uniswapV2BundleDTOBlockNumber' Lens
uniswapV2BundleDTOBlockNumberL :: Lens_' UniswapV2BundleDTO (Maybe Integer)
uniswapV2BundleDTOBlockNumberL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOBlockNumber -> UniswapV2BundleDTO { uniswapV2BundleDTOBlockNumber, ..} ) <$> f uniswapV2BundleDTOBlockNumber
{-# INLINE uniswapV2BundleDTOBlockNumberL #-}

-- | 'uniswapV2BundleDTOId' Lens
uniswapV2BundleDTOIdL :: Lens_' UniswapV2BundleDTO (Maybe Text)
uniswapV2BundleDTOIdL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOId -> UniswapV2BundleDTO { uniswapV2BundleDTOId, ..} ) <$> f uniswapV2BundleDTOId
{-# INLINE uniswapV2BundleDTOIdL #-}

-- | 'uniswapV2BundleDTOEthPrice' Lens
uniswapV2BundleDTOEthPriceL :: Lens_' UniswapV2BundleDTO (Maybe Text)
uniswapV2BundleDTOEthPriceL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOEthPrice -> UniswapV2BundleDTO { uniswapV2BundleDTOEthPrice, ..} ) <$> f uniswapV2BundleDTOEthPrice
{-# INLINE uniswapV2BundleDTOEthPriceL #-}

-- | 'uniswapV2BundleDTOVid' Lens
uniswapV2BundleDTOVidL :: Lens_' UniswapV2BundleDTO (Maybe Integer)
uniswapV2BundleDTOVidL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOVid -> UniswapV2BundleDTO { uniswapV2BundleDTOVid, ..} ) <$> f uniswapV2BundleDTOVid
{-# INLINE uniswapV2BundleDTOVidL #-}

-- | 'uniswapV2BundleDTOBlockRange' Lens
uniswapV2BundleDTOBlockRangeL :: Lens_' UniswapV2BundleDTO (Maybe Text)
uniswapV2BundleDTOBlockRangeL f UniswapV2BundleDTO{..} = (\uniswapV2BundleDTOBlockRange -> UniswapV2BundleDTO { uniswapV2BundleDTOBlockRange, ..} ) <$> f uniswapV2BundleDTOBlockRange
{-# INLINE uniswapV2BundleDTOBlockRangeL #-}



-- * UniswapV2BurnDTO

-- | 'uniswapV2BurnDTOEntryTime' Lens
uniswapV2BurnDTOEntryTimeL :: Lens_' UniswapV2BurnDTO (Maybe DateTime)
uniswapV2BurnDTOEntryTimeL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOEntryTime -> UniswapV2BurnDTO { uniswapV2BurnDTOEntryTime, ..} ) <$> f uniswapV2BurnDTOEntryTime
{-# INLINE uniswapV2BurnDTOEntryTimeL #-}

-- | 'uniswapV2BurnDTORecvTime' Lens
uniswapV2BurnDTORecvTimeL :: Lens_' UniswapV2BurnDTO (Maybe DateTime)
uniswapV2BurnDTORecvTimeL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTORecvTime -> UniswapV2BurnDTO { uniswapV2BurnDTORecvTime, ..} ) <$> f uniswapV2BurnDTORecvTime
{-# INLINE uniswapV2BurnDTORecvTimeL #-}

-- | 'uniswapV2BurnDTOBlockNumber' Lens
uniswapV2BurnDTOBlockNumberL :: Lens_' UniswapV2BurnDTO (Maybe Integer)
uniswapV2BurnDTOBlockNumberL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOBlockNumber -> UniswapV2BurnDTO { uniswapV2BurnDTOBlockNumber, ..} ) <$> f uniswapV2BurnDTOBlockNumber
{-# INLINE uniswapV2BurnDTOBlockNumberL #-}

-- | 'uniswapV2BurnDTOId' Lens
uniswapV2BurnDTOIdL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOIdL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOId -> UniswapV2BurnDTO { uniswapV2BurnDTOId, ..} ) <$> f uniswapV2BurnDTOId
{-# INLINE uniswapV2BurnDTOIdL #-}

-- | 'uniswapV2BurnDTOTransaction' Lens
uniswapV2BurnDTOTransactionL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOTransactionL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOTransaction -> UniswapV2BurnDTO { uniswapV2BurnDTOTransaction, ..} ) <$> f uniswapV2BurnDTOTransaction
{-# INLINE uniswapV2BurnDTOTransactionL #-}

-- | 'uniswapV2BurnDTOTimestamp' Lens
uniswapV2BurnDTOTimestampL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOTimestampL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOTimestamp -> UniswapV2BurnDTO { uniswapV2BurnDTOTimestamp, ..} ) <$> f uniswapV2BurnDTOTimestamp
{-# INLINE uniswapV2BurnDTOTimestampL #-}

-- | 'uniswapV2BurnDTOPair' Lens
uniswapV2BurnDTOPairL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOPairL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOPair -> UniswapV2BurnDTO { uniswapV2BurnDTOPair, ..} ) <$> f uniswapV2BurnDTOPair
{-# INLINE uniswapV2BurnDTOPairL #-}

-- | 'uniswapV2BurnDTOLiquidity' Lens
uniswapV2BurnDTOLiquidityL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOLiquidityL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOLiquidity -> UniswapV2BurnDTO { uniswapV2BurnDTOLiquidity, ..} ) <$> f uniswapV2BurnDTOLiquidity
{-# INLINE uniswapV2BurnDTOLiquidityL #-}

-- | 'uniswapV2BurnDTOSender' Lens
uniswapV2BurnDTOSenderL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOSenderL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOSender -> UniswapV2BurnDTO { uniswapV2BurnDTOSender, ..} ) <$> f uniswapV2BurnDTOSender
{-# INLINE uniswapV2BurnDTOSenderL #-}

-- | 'uniswapV2BurnDTOAmount0' Lens
uniswapV2BurnDTOAmount0L :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOAmount0L f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOAmount0 -> UniswapV2BurnDTO { uniswapV2BurnDTOAmount0, ..} ) <$> f uniswapV2BurnDTOAmount0
{-# INLINE uniswapV2BurnDTOAmount0L #-}

-- | 'uniswapV2BurnDTOAmount1' Lens
uniswapV2BurnDTOAmount1L :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOAmount1L f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOAmount1 -> UniswapV2BurnDTO { uniswapV2BurnDTOAmount1, ..} ) <$> f uniswapV2BurnDTOAmount1
{-# INLINE uniswapV2BurnDTOAmount1L #-}

-- | 'uniswapV2BurnDTOTo' Lens
uniswapV2BurnDTOToL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOToL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOTo -> UniswapV2BurnDTO { uniswapV2BurnDTOTo, ..} ) <$> f uniswapV2BurnDTOTo
{-# INLINE uniswapV2BurnDTOToL #-}

-- | 'uniswapV2BurnDTOLogIndex' Lens
uniswapV2BurnDTOLogIndexL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOLogIndexL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOLogIndex -> UniswapV2BurnDTO { uniswapV2BurnDTOLogIndex, ..} ) <$> f uniswapV2BurnDTOLogIndex
{-# INLINE uniswapV2BurnDTOLogIndexL #-}

-- | 'uniswapV2BurnDTOAmountUsd' Lens
uniswapV2BurnDTOAmountUsdL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOAmountUsdL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOAmountUsd -> UniswapV2BurnDTO { uniswapV2BurnDTOAmountUsd, ..} ) <$> f uniswapV2BurnDTOAmountUsd
{-# INLINE uniswapV2BurnDTOAmountUsdL #-}

-- | 'uniswapV2BurnDTONeedsComplete' Lens
uniswapV2BurnDTONeedsCompleteL :: Lens_' UniswapV2BurnDTO (Maybe Bool)
uniswapV2BurnDTONeedsCompleteL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTONeedsComplete -> UniswapV2BurnDTO { uniswapV2BurnDTONeedsComplete, ..} ) <$> f uniswapV2BurnDTONeedsComplete
{-# INLINE uniswapV2BurnDTONeedsCompleteL #-}

-- | 'uniswapV2BurnDTOFeeTo' Lens
uniswapV2BurnDTOFeeToL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOFeeToL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOFeeTo -> UniswapV2BurnDTO { uniswapV2BurnDTOFeeTo, ..} ) <$> f uniswapV2BurnDTOFeeTo
{-# INLINE uniswapV2BurnDTOFeeToL #-}

-- | 'uniswapV2BurnDTOFeeLiquidity' Lens
uniswapV2BurnDTOFeeLiquidityL :: Lens_' UniswapV2BurnDTO (Maybe Text)
uniswapV2BurnDTOFeeLiquidityL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOFeeLiquidity -> UniswapV2BurnDTO { uniswapV2BurnDTOFeeLiquidity, ..} ) <$> f uniswapV2BurnDTOFeeLiquidity
{-# INLINE uniswapV2BurnDTOFeeLiquidityL #-}

-- | 'uniswapV2BurnDTOVid' Lens
uniswapV2BurnDTOVidL :: Lens_' UniswapV2BurnDTO (Maybe Integer)
uniswapV2BurnDTOVidL f UniswapV2BurnDTO{..} = (\uniswapV2BurnDTOVid -> UniswapV2BurnDTO { uniswapV2BurnDTOVid, ..} ) <$> f uniswapV2BurnDTOVid
{-# INLINE uniswapV2BurnDTOVidL #-}



-- * UniswapV2LiquidityPositionDTO

-- | 'uniswapV2LiquidityPositionDTOEntryTime' Lens
uniswapV2LiquidityPositionDTOEntryTimeL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe DateTime)
uniswapV2LiquidityPositionDTOEntryTimeL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOEntryTime -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOEntryTime, ..} ) <$> f uniswapV2LiquidityPositionDTOEntryTime
{-# INLINE uniswapV2LiquidityPositionDTOEntryTimeL #-}

-- | 'uniswapV2LiquidityPositionDTORecvTime' Lens
uniswapV2LiquidityPositionDTORecvTimeL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe DateTime)
uniswapV2LiquidityPositionDTORecvTimeL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTORecvTime -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTORecvTime, ..} ) <$> f uniswapV2LiquidityPositionDTORecvTime
{-# INLINE uniswapV2LiquidityPositionDTORecvTimeL #-}

-- | 'uniswapV2LiquidityPositionDTOBlockNumber' Lens
uniswapV2LiquidityPositionDTOBlockNumberL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Integer)
uniswapV2LiquidityPositionDTOBlockNumberL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOBlockNumber -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOBlockNumber, ..} ) <$> f uniswapV2LiquidityPositionDTOBlockNumber
{-# INLINE uniswapV2LiquidityPositionDTOBlockNumberL #-}

-- | 'uniswapV2LiquidityPositionDTOId' Lens
uniswapV2LiquidityPositionDTOIdL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Text)
uniswapV2LiquidityPositionDTOIdL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOId -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOId, ..} ) <$> f uniswapV2LiquidityPositionDTOId
{-# INLINE uniswapV2LiquidityPositionDTOIdL #-}

-- | 'uniswapV2LiquidityPositionDTOUser' Lens
uniswapV2LiquidityPositionDTOUserL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Text)
uniswapV2LiquidityPositionDTOUserL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOUser -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOUser, ..} ) <$> f uniswapV2LiquidityPositionDTOUser
{-# INLINE uniswapV2LiquidityPositionDTOUserL #-}

-- | 'uniswapV2LiquidityPositionDTOPair' Lens
uniswapV2LiquidityPositionDTOPairL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Text)
uniswapV2LiquidityPositionDTOPairL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOPair -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOPair, ..} ) <$> f uniswapV2LiquidityPositionDTOPair
{-# INLINE uniswapV2LiquidityPositionDTOPairL #-}

-- | 'uniswapV2LiquidityPositionDTOLiquidityTokenBalance' Lens
uniswapV2LiquidityPositionDTOLiquidityTokenBalanceL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Text)
uniswapV2LiquidityPositionDTOLiquidityTokenBalanceL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOLiquidityTokenBalance -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOLiquidityTokenBalance, ..} ) <$> f uniswapV2LiquidityPositionDTOLiquidityTokenBalance
{-# INLINE uniswapV2LiquidityPositionDTOLiquidityTokenBalanceL #-}

-- | 'uniswapV2LiquidityPositionDTOVid' Lens
uniswapV2LiquidityPositionDTOVidL :: Lens_' UniswapV2LiquidityPositionDTO (Maybe Integer)
uniswapV2LiquidityPositionDTOVidL f UniswapV2LiquidityPositionDTO{..} = (\uniswapV2LiquidityPositionDTOVid -> UniswapV2LiquidityPositionDTO { uniswapV2LiquidityPositionDTOVid, ..} ) <$> f uniswapV2LiquidityPositionDTOVid
{-# INLINE uniswapV2LiquidityPositionDTOVidL #-}



-- * UniswapV2LiquidityPositionSnapshotDTO

-- | 'uniswapV2LiquidityPositionSnapshotDTOEntryTime' Lens
uniswapV2LiquidityPositionSnapshotDTOEntryTimeL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe DateTime)
uniswapV2LiquidityPositionSnapshotDTOEntryTimeL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOEntryTime -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOEntryTime, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOEntryTime
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOEntryTimeL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTORecvTime' Lens
uniswapV2LiquidityPositionSnapshotDTORecvTimeL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe DateTime)
uniswapV2LiquidityPositionSnapshotDTORecvTimeL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTORecvTime -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTORecvTime, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTORecvTime
{-# INLINE uniswapV2LiquidityPositionSnapshotDTORecvTimeL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOBlockNumber' Lens
uniswapV2LiquidityPositionSnapshotDTOBlockNumberL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Integer)
uniswapV2LiquidityPositionSnapshotDTOBlockNumberL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOBlockNumber -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOBlockNumber, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOBlockNumber
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOBlockNumberL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOId' Lens
uniswapV2LiquidityPositionSnapshotDTOIdL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOIdL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOId -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOId, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOId
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOIdL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOLiquidityPosition' Lens
uniswapV2LiquidityPositionSnapshotDTOLiquidityPositionL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOLiquidityPositionL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOLiquidityPosition -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOLiquidityPosition, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOLiquidityPosition
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOLiquidityPositionL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOTimestamp' Lens
uniswapV2LiquidityPositionSnapshotDTOTimestampL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Int)
uniswapV2LiquidityPositionSnapshotDTOTimestampL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOTimestamp -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOTimestamp, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOTimestamp
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOTimestampL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOBlock' Lens
uniswapV2LiquidityPositionSnapshotDTOBlockL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Int)
uniswapV2LiquidityPositionSnapshotDTOBlockL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOBlock -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOBlock, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOBlock
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOBlockL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOUser' Lens
uniswapV2LiquidityPositionSnapshotDTOUserL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOUserL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOUser -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOUser, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOUser
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOUserL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOPair' Lens
uniswapV2LiquidityPositionSnapshotDTOPairL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOPairL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOPair -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOPair, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOPair
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOPairL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsd' Lens
uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsdL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsdL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsd -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsd, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsd
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOToken0PriceUsdL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsd' Lens
uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsdL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsdL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsd -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsd, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsd
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOToken1PriceUsdL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOReserve0' Lens
uniswapV2LiquidityPositionSnapshotDTOReserve0L :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOReserve0L f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOReserve0 -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOReserve0, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOReserve0
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOReserve0L #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOReserve1' Lens
uniswapV2LiquidityPositionSnapshotDTOReserve1L :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOReserve1L f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOReserve1 -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOReserve1, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOReserve1
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOReserve1L #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOReserveUsd' Lens
uniswapV2LiquidityPositionSnapshotDTOReserveUsdL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOReserveUsdL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOReserveUsd -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOReserveUsd, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOReserveUsd
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOReserveUsdL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupply' Lens
uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupply -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupply, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupply
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenTotalSupplyL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalance' Lens
uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalanceL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalanceL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalance -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalance, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalance
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOLiquidityTokenBalanceL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOVid' Lens
uniswapV2LiquidityPositionSnapshotDTOVidL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Integer)
uniswapV2LiquidityPositionSnapshotDTOVidL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOVid -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOVid, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOVid
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOVidL #-}

-- | 'uniswapV2LiquidityPositionSnapshotDTOBlockRange' Lens
uniswapV2LiquidityPositionSnapshotDTOBlockRangeL :: Lens_' UniswapV2LiquidityPositionSnapshotDTO (Maybe Text)
uniswapV2LiquidityPositionSnapshotDTOBlockRangeL f UniswapV2LiquidityPositionSnapshotDTO{..} = (\uniswapV2LiquidityPositionSnapshotDTOBlockRange -> UniswapV2LiquidityPositionSnapshotDTO { uniswapV2LiquidityPositionSnapshotDTOBlockRange, ..} ) <$> f uniswapV2LiquidityPositionSnapshotDTOBlockRange
{-# INLINE uniswapV2LiquidityPositionSnapshotDTOBlockRangeL #-}



-- * UniswapV2MintDTO

-- | 'uniswapV2MintDTOEntryTime' Lens
uniswapV2MintDTOEntryTimeL :: Lens_' UniswapV2MintDTO (Maybe DateTime)
uniswapV2MintDTOEntryTimeL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOEntryTime -> UniswapV2MintDTO { uniswapV2MintDTOEntryTime, ..} ) <$> f uniswapV2MintDTOEntryTime
{-# INLINE uniswapV2MintDTOEntryTimeL #-}

-- | 'uniswapV2MintDTORecvTime' Lens
uniswapV2MintDTORecvTimeL :: Lens_' UniswapV2MintDTO (Maybe DateTime)
uniswapV2MintDTORecvTimeL f UniswapV2MintDTO{..} = (\uniswapV2MintDTORecvTime -> UniswapV2MintDTO { uniswapV2MintDTORecvTime, ..} ) <$> f uniswapV2MintDTORecvTime
{-# INLINE uniswapV2MintDTORecvTimeL #-}

-- | 'uniswapV2MintDTOBlockNumber' Lens
uniswapV2MintDTOBlockNumberL :: Lens_' UniswapV2MintDTO (Maybe Integer)
uniswapV2MintDTOBlockNumberL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOBlockNumber -> UniswapV2MintDTO { uniswapV2MintDTOBlockNumber, ..} ) <$> f uniswapV2MintDTOBlockNumber
{-# INLINE uniswapV2MintDTOBlockNumberL #-}

-- | 'uniswapV2MintDTOId' Lens
uniswapV2MintDTOIdL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOIdL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOId -> UniswapV2MintDTO { uniswapV2MintDTOId, ..} ) <$> f uniswapV2MintDTOId
{-# INLINE uniswapV2MintDTOIdL #-}

-- | 'uniswapV2MintDTOTransaction' Lens
uniswapV2MintDTOTransactionL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOTransactionL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOTransaction -> UniswapV2MintDTO { uniswapV2MintDTOTransaction, ..} ) <$> f uniswapV2MintDTOTransaction
{-# INLINE uniswapV2MintDTOTransactionL #-}

-- | 'uniswapV2MintDTOTimestamp' Lens
uniswapV2MintDTOTimestampL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOTimestampL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOTimestamp -> UniswapV2MintDTO { uniswapV2MintDTOTimestamp, ..} ) <$> f uniswapV2MintDTOTimestamp
{-# INLINE uniswapV2MintDTOTimestampL #-}

-- | 'uniswapV2MintDTOPair' Lens
uniswapV2MintDTOPairL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOPairL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOPair -> UniswapV2MintDTO { uniswapV2MintDTOPair, ..} ) <$> f uniswapV2MintDTOPair
{-# INLINE uniswapV2MintDTOPairL #-}

-- | 'uniswapV2MintDTOTo' Lens
uniswapV2MintDTOToL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOToL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOTo -> UniswapV2MintDTO { uniswapV2MintDTOTo, ..} ) <$> f uniswapV2MintDTOTo
{-# INLINE uniswapV2MintDTOToL #-}

-- | 'uniswapV2MintDTOLiquidity' Lens
uniswapV2MintDTOLiquidityL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOLiquidityL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOLiquidity -> UniswapV2MintDTO { uniswapV2MintDTOLiquidity, ..} ) <$> f uniswapV2MintDTOLiquidity
{-# INLINE uniswapV2MintDTOLiquidityL #-}

-- | 'uniswapV2MintDTOSender' Lens
uniswapV2MintDTOSenderL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOSenderL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOSender -> UniswapV2MintDTO { uniswapV2MintDTOSender, ..} ) <$> f uniswapV2MintDTOSender
{-# INLINE uniswapV2MintDTOSenderL #-}

-- | 'uniswapV2MintDTOAmount0' Lens
uniswapV2MintDTOAmount0L :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOAmount0L f UniswapV2MintDTO{..} = (\uniswapV2MintDTOAmount0 -> UniswapV2MintDTO { uniswapV2MintDTOAmount0, ..} ) <$> f uniswapV2MintDTOAmount0
{-# INLINE uniswapV2MintDTOAmount0L #-}

-- | 'uniswapV2MintDTOAmount1' Lens
uniswapV2MintDTOAmount1L :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOAmount1L f UniswapV2MintDTO{..} = (\uniswapV2MintDTOAmount1 -> UniswapV2MintDTO { uniswapV2MintDTOAmount1, ..} ) <$> f uniswapV2MintDTOAmount1
{-# INLINE uniswapV2MintDTOAmount1L #-}

-- | 'uniswapV2MintDTOLogIndex' Lens
uniswapV2MintDTOLogIndexL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOLogIndexL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOLogIndex -> UniswapV2MintDTO { uniswapV2MintDTOLogIndex, ..} ) <$> f uniswapV2MintDTOLogIndex
{-# INLINE uniswapV2MintDTOLogIndexL #-}

-- | 'uniswapV2MintDTOAmountUsd' Lens
uniswapV2MintDTOAmountUsdL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOAmountUsdL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOAmountUsd -> UniswapV2MintDTO { uniswapV2MintDTOAmountUsd, ..} ) <$> f uniswapV2MintDTOAmountUsd
{-# INLINE uniswapV2MintDTOAmountUsdL #-}

-- | 'uniswapV2MintDTOFeeTo' Lens
uniswapV2MintDTOFeeToL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOFeeToL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOFeeTo -> UniswapV2MintDTO { uniswapV2MintDTOFeeTo, ..} ) <$> f uniswapV2MintDTOFeeTo
{-# INLINE uniswapV2MintDTOFeeToL #-}

-- | 'uniswapV2MintDTOFeeLiquidity' Lens
uniswapV2MintDTOFeeLiquidityL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOFeeLiquidityL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOFeeLiquidity -> UniswapV2MintDTO { uniswapV2MintDTOFeeLiquidity, ..} ) <$> f uniswapV2MintDTOFeeLiquidity
{-# INLINE uniswapV2MintDTOFeeLiquidityL #-}

-- | 'uniswapV2MintDTOVid' Lens
uniswapV2MintDTOVidL :: Lens_' UniswapV2MintDTO (Maybe Integer)
uniswapV2MintDTOVidL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOVid -> UniswapV2MintDTO { uniswapV2MintDTOVid, ..} ) <$> f uniswapV2MintDTOVid
{-# INLINE uniswapV2MintDTOVidL #-}

-- | 'uniswapV2MintDTOBlockRange' Lens
uniswapV2MintDTOBlockRangeL :: Lens_' UniswapV2MintDTO (Maybe Text)
uniswapV2MintDTOBlockRangeL f UniswapV2MintDTO{..} = (\uniswapV2MintDTOBlockRange -> UniswapV2MintDTO { uniswapV2MintDTOBlockRange, ..} ) <$> f uniswapV2MintDTOBlockRange
{-# INLINE uniswapV2MintDTOBlockRangeL #-}



-- * UniswapV2PairDTO

-- | 'uniswapV2PairDTOEntryTime' Lens
uniswapV2PairDTOEntryTimeL :: Lens_' UniswapV2PairDTO (Maybe DateTime)
uniswapV2PairDTOEntryTimeL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOEntryTime -> UniswapV2PairDTO { uniswapV2PairDTOEntryTime, ..} ) <$> f uniswapV2PairDTOEntryTime
{-# INLINE uniswapV2PairDTOEntryTimeL #-}

-- | 'uniswapV2PairDTORecvTime' Lens
uniswapV2PairDTORecvTimeL :: Lens_' UniswapV2PairDTO (Maybe DateTime)
uniswapV2PairDTORecvTimeL f UniswapV2PairDTO{..} = (\uniswapV2PairDTORecvTime -> UniswapV2PairDTO { uniswapV2PairDTORecvTime, ..} ) <$> f uniswapV2PairDTORecvTime
{-# INLINE uniswapV2PairDTORecvTimeL #-}

-- | 'uniswapV2PairDTOBlockNumber' Lens
uniswapV2PairDTOBlockNumberL :: Lens_' UniswapV2PairDTO (Maybe Integer)
uniswapV2PairDTOBlockNumberL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOBlockNumber -> UniswapV2PairDTO { uniswapV2PairDTOBlockNumber, ..} ) <$> f uniswapV2PairDTOBlockNumber
{-# INLINE uniswapV2PairDTOBlockNumberL #-}

-- | 'uniswapV2PairDTOVid' Lens
uniswapV2PairDTOVidL :: Lens_' UniswapV2PairDTO (Maybe Integer)
uniswapV2PairDTOVidL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOVid -> UniswapV2PairDTO { uniswapV2PairDTOVid, ..} ) <$> f uniswapV2PairDTOVid
{-# INLINE uniswapV2PairDTOVidL #-}

-- | 'uniswapV2PairDTOId' Lens
uniswapV2PairDTOIdL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOIdL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOId -> UniswapV2PairDTO { uniswapV2PairDTOId, ..} ) <$> f uniswapV2PairDTOId
{-# INLINE uniswapV2PairDTOIdL #-}

-- | 'uniswapV2PairDTOToken0' Lens
uniswapV2PairDTOToken0L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOToken0L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOToken0 -> UniswapV2PairDTO { uniswapV2PairDTOToken0, ..} ) <$> f uniswapV2PairDTOToken0
{-# INLINE uniswapV2PairDTOToken0L #-}

-- | 'uniswapV2PairDTOToken1' Lens
uniswapV2PairDTOToken1L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOToken1L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOToken1 -> UniswapV2PairDTO { uniswapV2PairDTOToken1, ..} ) <$> f uniswapV2PairDTOToken1
{-# INLINE uniswapV2PairDTOToken1L #-}

-- | 'uniswapV2PairDTOReserve0' Lens
uniswapV2PairDTOReserve0L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOReserve0L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOReserve0 -> UniswapV2PairDTO { uniswapV2PairDTOReserve0, ..} ) <$> f uniswapV2PairDTOReserve0
{-# INLINE uniswapV2PairDTOReserve0L #-}

-- | 'uniswapV2PairDTOReserve1' Lens
uniswapV2PairDTOReserve1L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOReserve1L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOReserve1 -> UniswapV2PairDTO { uniswapV2PairDTOReserve1, ..} ) <$> f uniswapV2PairDTOReserve1
{-# INLINE uniswapV2PairDTOReserve1L #-}

-- | 'uniswapV2PairDTOTotalSupply' Lens
uniswapV2PairDTOTotalSupplyL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOTotalSupplyL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOTotalSupply -> UniswapV2PairDTO { uniswapV2PairDTOTotalSupply, ..} ) <$> f uniswapV2PairDTOTotalSupply
{-# INLINE uniswapV2PairDTOTotalSupplyL #-}

-- | 'uniswapV2PairDTOReserveEth' Lens
uniswapV2PairDTOReserveEthL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOReserveEthL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOReserveEth -> UniswapV2PairDTO { uniswapV2PairDTOReserveEth, ..} ) <$> f uniswapV2PairDTOReserveEth
{-# INLINE uniswapV2PairDTOReserveEthL #-}

-- | 'uniswapV2PairDTOReserveUsd' Lens
uniswapV2PairDTOReserveUsdL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOReserveUsdL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOReserveUsd -> UniswapV2PairDTO { uniswapV2PairDTOReserveUsd, ..} ) <$> f uniswapV2PairDTOReserveUsd
{-# INLINE uniswapV2PairDTOReserveUsdL #-}

-- | 'uniswapV2PairDTOTrackedReserveEth' Lens
uniswapV2PairDTOTrackedReserveEthL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOTrackedReserveEthL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOTrackedReserveEth -> UniswapV2PairDTO { uniswapV2PairDTOTrackedReserveEth, ..} ) <$> f uniswapV2PairDTOTrackedReserveEth
{-# INLINE uniswapV2PairDTOTrackedReserveEthL #-}

-- | 'uniswapV2PairDTOToken0Price' Lens
uniswapV2PairDTOToken0PriceL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOToken0PriceL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOToken0Price -> UniswapV2PairDTO { uniswapV2PairDTOToken0Price, ..} ) <$> f uniswapV2PairDTOToken0Price
{-# INLINE uniswapV2PairDTOToken0PriceL #-}

-- | 'uniswapV2PairDTOToken1Price' Lens
uniswapV2PairDTOToken1PriceL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOToken1PriceL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOToken1Price -> UniswapV2PairDTO { uniswapV2PairDTOToken1Price, ..} ) <$> f uniswapV2PairDTOToken1Price
{-# INLINE uniswapV2PairDTOToken1PriceL #-}

-- | 'uniswapV2PairDTOVolumeToken0' Lens
uniswapV2PairDTOVolumeToken0L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOVolumeToken0L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOVolumeToken0 -> UniswapV2PairDTO { uniswapV2PairDTOVolumeToken0, ..} ) <$> f uniswapV2PairDTOVolumeToken0
{-# INLINE uniswapV2PairDTOVolumeToken0L #-}

-- | 'uniswapV2PairDTOVolumeToken1' Lens
uniswapV2PairDTOVolumeToken1L :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOVolumeToken1L f UniswapV2PairDTO{..} = (\uniswapV2PairDTOVolumeToken1 -> UniswapV2PairDTO { uniswapV2PairDTOVolumeToken1, ..} ) <$> f uniswapV2PairDTOVolumeToken1
{-# INLINE uniswapV2PairDTOVolumeToken1L #-}

-- | 'uniswapV2PairDTOVolumeUsd' Lens
uniswapV2PairDTOVolumeUsdL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOVolumeUsdL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOVolumeUsd -> UniswapV2PairDTO { uniswapV2PairDTOVolumeUsd, ..} ) <$> f uniswapV2PairDTOVolumeUsd
{-# INLINE uniswapV2PairDTOVolumeUsdL #-}

-- | 'uniswapV2PairDTOUntrackedVolumeUsd' Lens
uniswapV2PairDTOUntrackedVolumeUsdL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOUntrackedVolumeUsdL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOUntrackedVolumeUsd -> UniswapV2PairDTO { uniswapV2PairDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV2PairDTOUntrackedVolumeUsd
{-# INLINE uniswapV2PairDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV2PairDTOTxCount' Lens
uniswapV2PairDTOTxCountL :: Lens_' UniswapV2PairDTO (Maybe NumericsBigInteger)
uniswapV2PairDTOTxCountL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOTxCount -> UniswapV2PairDTO { uniswapV2PairDTOTxCount, ..} ) <$> f uniswapV2PairDTOTxCount
{-# INLINE uniswapV2PairDTOTxCountL #-}

-- | 'uniswapV2PairDTOCreatedAtTimestamp' Lens
uniswapV2PairDTOCreatedAtTimestampL :: Lens_' UniswapV2PairDTO (Maybe DateTime)
uniswapV2PairDTOCreatedAtTimestampL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOCreatedAtTimestamp -> UniswapV2PairDTO { uniswapV2PairDTOCreatedAtTimestamp, ..} ) <$> f uniswapV2PairDTOCreatedAtTimestamp
{-# INLINE uniswapV2PairDTOCreatedAtTimestampL #-}

-- | 'uniswapV2PairDTOLiquidityProviderCount' Lens
uniswapV2PairDTOLiquidityProviderCountL :: Lens_' UniswapV2PairDTO (Maybe Text)
uniswapV2PairDTOLiquidityProviderCountL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOLiquidityProviderCount -> UniswapV2PairDTO { uniswapV2PairDTOLiquidityProviderCount, ..} ) <$> f uniswapV2PairDTOLiquidityProviderCount
{-# INLINE uniswapV2PairDTOLiquidityProviderCountL #-}

-- | 'uniswapV2PairDTOEvaluatedAsk' Lens
uniswapV2PairDTOEvaluatedAskL :: Lens_' UniswapV2PairDTO (Maybe Double)
uniswapV2PairDTOEvaluatedAskL f UniswapV2PairDTO{..} = (\uniswapV2PairDTOEvaluatedAsk -> UniswapV2PairDTO { uniswapV2PairDTOEvaluatedAsk, ..} ) <$> f uniswapV2PairDTOEvaluatedAsk
{-# INLINE uniswapV2PairDTOEvaluatedAskL #-}



-- * UniswapV2PairDayDataDTO

-- | 'uniswapV2PairDayDataDTOEntryTime' Lens
uniswapV2PairDayDataDTOEntryTimeL :: Lens_' UniswapV2PairDayDataDTO (Maybe DateTime)
uniswapV2PairDayDataDTOEntryTimeL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOEntryTime -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOEntryTime, ..} ) <$> f uniswapV2PairDayDataDTOEntryTime
{-# INLINE uniswapV2PairDayDataDTOEntryTimeL #-}

-- | 'uniswapV2PairDayDataDTORecvTime' Lens
uniswapV2PairDayDataDTORecvTimeL :: Lens_' UniswapV2PairDayDataDTO (Maybe DateTime)
uniswapV2PairDayDataDTORecvTimeL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTORecvTime -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTORecvTime, ..} ) <$> f uniswapV2PairDayDataDTORecvTime
{-# INLINE uniswapV2PairDayDataDTORecvTimeL #-}

-- | 'uniswapV2PairDayDataDTOBlockNumber' Lens
uniswapV2PairDayDataDTOBlockNumberL :: Lens_' UniswapV2PairDayDataDTO (Maybe Integer)
uniswapV2PairDayDataDTOBlockNumberL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOBlockNumber -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOBlockNumber, ..} ) <$> f uniswapV2PairDayDataDTOBlockNumber
{-# INLINE uniswapV2PairDayDataDTOBlockNumberL #-}

-- | 'uniswapV2PairDayDataDTOId' Lens
uniswapV2PairDayDataDTOIdL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOIdL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOId -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOId, ..} ) <$> f uniswapV2PairDayDataDTOId
{-# INLINE uniswapV2PairDayDataDTOIdL #-}

-- | 'uniswapV2PairDayDataDTODate' Lens
uniswapV2PairDayDataDTODateL :: Lens_' UniswapV2PairDayDataDTO (Maybe Int)
uniswapV2PairDayDataDTODateL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTODate -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTODate, ..} ) <$> f uniswapV2PairDayDataDTODate
{-# INLINE uniswapV2PairDayDataDTODateL #-}

-- | 'uniswapV2PairDayDataDTOPairAddress' Lens
uniswapV2PairDayDataDTOPairAddressL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOPairAddressL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOPairAddress -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOPairAddress, ..} ) <$> f uniswapV2PairDayDataDTOPairAddress
{-# INLINE uniswapV2PairDayDataDTOPairAddressL #-}

-- | 'uniswapV2PairDayDataDTOToken0' Lens
uniswapV2PairDayDataDTOToken0L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOToken0L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOToken0 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOToken0, ..} ) <$> f uniswapV2PairDayDataDTOToken0
{-# INLINE uniswapV2PairDayDataDTOToken0L #-}

-- | 'uniswapV2PairDayDataDTOToken1' Lens
uniswapV2PairDayDataDTOToken1L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOToken1L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOToken1 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOToken1, ..} ) <$> f uniswapV2PairDayDataDTOToken1
{-# INLINE uniswapV2PairDayDataDTOToken1L #-}

-- | 'uniswapV2PairDayDataDTOReserve0' Lens
uniswapV2PairDayDataDTOReserve0L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOReserve0L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOReserve0 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOReserve0, ..} ) <$> f uniswapV2PairDayDataDTOReserve0
{-# INLINE uniswapV2PairDayDataDTOReserve0L #-}

-- | 'uniswapV2PairDayDataDTOReserve1' Lens
uniswapV2PairDayDataDTOReserve1L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOReserve1L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOReserve1 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOReserve1, ..} ) <$> f uniswapV2PairDayDataDTOReserve1
{-# INLINE uniswapV2PairDayDataDTOReserve1L #-}

-- | 'uniswapV2PairDayDataDTOTotalSupply' Lens
uniswapV2PairDayDataDTOTotalSupplyL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOTotalSupplyL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOTotalSupply -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOTotalSupply, ..} ) <$> f uniswapV2PairDayDataDTOTotalSupply
{-# INLINE uniswapV2PairDayDataDTOTotalSupplyL #-}

-- | 'uniswapV2PairDayDataDTOReserveUsd' Lens
uniswapV2PairDayDataDTOReserveUsdL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTOReserveUsdL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOReserveUsd -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOReserveUsd, ..} ) <$> f uniswapV2PairDayDataDTOReserveUsd
{-# INLINE uniswapV2PairDayDataDTOReserveUsdL #-}

-- | 'uniswapV2PairDayDataDTODailyVolumeToken0' Lens
uniswapV2PairDayDataDTODailyVolumeToken0L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTODailyVolumeToken0L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTODailyVolumeToken0 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTODailyVolumeToken0, ..} ) <$> f uniswapV2PairDayDataDTODailyVolumeToken0
{-# INLINE uniswapV2PairDayDataDTODailyVolumeToken0L #-}

-- | 'uniswapV2PairDayDataDTODailyVolumeToken1' Lens
uniswapV2PairDayDataDTODailyVolumeToken1L :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTODailyVolumeToken1L f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTODailyVolumeToken1 -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTODailyVolumeToken1, ..} ) <$> f uniswapV2PairDayDataDTODailyVolumeToken1
{-# INLINE uniswapV2PairDayDataDTODailyVolumeToken1L #-}

-- | 'uniswapV2PairDayDataDTODailyVolumeUsd' Lens
uniswapV2PairDayDataDTODailyVolumeUsdL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTODailyVolumeUsdL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTODailyVolumeUsd -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTODailyVolumeUsd, ..} ) <$> f uniswapV2PairDayDataDTODailyVolumeUsd
{-# INLINE uniswapV2PairDayDataDTODailyVolumeUsdL #-}

-- | 'uniswapV2PairDayDataDTODailyTxns' Lens
uniswapV2PairDayDataDTODailyTxnsL :: Lens_' UniswapV2PairDayDataDTO (Maybe Text)
uniswapV2PairDayDataDTODailyTxnsL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTODailyTxns -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTODailyTxns, ..} ) <$> f uniswapV2PairDayDataDTODailyTxns
{-# INLINE uniswapV2PairDayDataDTODailyTxnsL #-}

-- | 'uniswapV2PairDayDataDTOVid' Lens
uniswapV2PairDayDataDTOVidL :: Lens_' UniswapV2PairDayDataDTO (Maybe Integer)
uniswapV2PairDayDataDTOVidL f UniswapV2PairDayDataDTO{..} = (\uniswapV2PairDayDataDTOVid -> UniswapV2PairDayDataDTO { uniswapV2PairDayDataDTOVid, ..} ) <$> f uniswapV2PairDayDataDTOVid
{-# INLINE uniswapV2PairDayDataDTOVidL #-}



-- * UniswapV2PairHourDataDTO

-- | 'uniswapV2PairHourDataDTOEntryTime' Lens
uniswapV2PairHourDataDTOEntryTimeL :: Lens_' UniswapV2PairHourDataDTO (Maybe DateTime)
uniswapV2PairHourDataDTOEntryTimeL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOEntryTime -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOEntryTime, ..} ) <$> f uniswapV2PairHourDataDTOEntryTime
{-# INLINE uniswapV2PairHourDataDTOEntryTimeL #-}

-- | 'uniswapV2PairHourDataDTORecvTime' Lens
uniswapV2PairHourDataDTORecvTimeL :: Lens_' UniswapV2PairHourDataDTO (Maybe DateTime)
uniswapV2PairHourDataDTORecvTimeL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTORecvTime -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTORecvTime, ..} ) <$> f uniswapV2PairHourDataDTORecvTime
{-# INLINE uniswapV2PairHourDataDTORecvTimeL #-}

-- | 'uniswapV2PairHourDataDTOBlockNumber' Lens
uniswapV2PairHourDataDTOBlockNumberL :: Lens_' UniswapV2PairHourDataDTO (Maybe Integer)
uniswapV2PairHourDataDTOBlockNumberL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOBlockNumber -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOBlockNumber, ..} ) <$> f uniswapV2PairHourDataDTOBlockNumber
{-# INLINE uniswapV2PairHourDataDTOBlockNumberL #-}

-- | 'uniswapV2PairHourDataDTOId' Lens
uniswapV2PairHourDataDTOIdL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOIdL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOId -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOId, ..} ) <$> f uniswapV2PairHourDataDTOId
{-# INLINE uniswapV2PairHourDataDTOIdL #-}

-- | 'uniswapV2PairHourDataDTOHourStartUnix' Lens
uniswapV2PairHourDataDTOHourStartUnixL :: Lens_' UniswapV2PairHourDataDTO (Maybe Int)
uniswapV2PairHourDataDTOHourStartUnixL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOHourStartUnix -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOHourStartUnix, ..} ) <$> f uniswapV2PairHourDataDTOHourStartUnix
{-# INLINE uniswapV2PairHourDataDTOHourStartUnixL #-}

-- | 'uniswapV2PairHourDataDTOPair' Lens
uniswapV2PairHourDataDTOPairL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOPairL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOPair -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOPair, ..} ) <$> f uniswapV2PairHourDataDTOPair
{-# INLINE uniswapV2PairHourDataDTOPairL #-}

-- | 'uniswapV2PairHourDataDTOReserve0' Lens
uniswapV2PairHourDataDTOReserve0L :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOReserve0L f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOReserve0 -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOReserve0, ..} ) <$> f uniswapV2PairHourDataDTOReserve0
{-# INLINE uniswapV2PairHourDataDTOReserve0L #-}

-- | 'uniswapV2PairHourDataDTOReserve1' Lens
uniswapV2PairHourDataDTOReserve1L :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOReserve1L f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOReserve1 -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOReserve1, ..} ) <$> f uniswapV2PairHourDataDTOReserve1
{-# INLINE uniswapV2PairHourDataDTOReserve1L #-}

-- | 'uniswapV2PairHourDataDTOTotalSupply' Lens
uniswapV2PairHourDataDTOTotalSupplyL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOTotalSupplyL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOTotalSupply -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOTotalSupply, ..} ) <$> f uniswapV2PairHourDataDTOTotalSupply
{-# INLINE uniswapV2PairHourDataDTOTotalSupplyL #-}

-- | 'uniswapV2PairHourDataDTOReserveUsd' Lens
uniswapV2PairHourDataDTOReserveUsdL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOReserveUsdL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOReserveUsd -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOReserveUsd, ..} ) <$> f uniswapV2PairHourDataDTOReserveUsd
{-# INLINE uniswapV2PairHourDataDTOReserveUsdL #-}

-- | 'uniswapV2PairHourDataDTOHourlyVolumeToken0' Lens
uniswapV2PairHourDataDTOHourlyVolumeToken0L :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOHourlyVolumeToken0L f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOHourlyVolumeToken0 -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOHourlyVolumeToken0, ..} ) <$> f uniswapV2PairHourDataDTOHourlyVolumeToken0
{-# INLINE uniswapV2PairHourDataDTOHourlyVolumeToken0L #-}

-- | 'uniswapV2PairHourDataDTOHourlyVolumeToken1' Lens
uniswapV2PairHourDataDTOHourlyVolumeToken1L :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOHourlyVolumeToken1L f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOHourlyVolumeToken1 -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOHourlyVolumeToken1, ..} ) <$> f uniswapV2PairHourDataDTOHourlyVolumeToken1
{-# INLINE uniswapV2PairHourDataDTOHourlyVolumeToken1L #-}

-- | 'uniswapV2PairHourDataDTOHourlyVolumeUsd' Lens
uniswapV2PairHourDataDTOHourlyVolumeUsdL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOHourlyVolumeUsdL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOHourlyVolumeUsd -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOHourlyVolumeUsd, ..} ) <$> f uniswapV2PairHourDataDTOHourlyVolumeUsd
{-# INLINE uniswapV2PairHourDataDTOHourlyVolumeUsdL #-}

-- | 'uniswapV2PairHourDataDTOHourlyTxns' Lens
uniswapV2PairHourDataDTOHourlyTxnsL :: Lens_' UniswapV2PairHourDataDTO (Maybe Text)
uniswapV2PairHourDataDTOHourlyTxnsL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOHourlyTxns -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOHourlyTxns, ..} ) <$> f uniswapV2PairHourDataDTOHourlyTxns
{-# INLINE uniswapV2PairHourDataDTOHourlyTxnsL #-}

-- | 'uniswapV2PairHourDataDTOVid' Lens
uniswapV2PairHourDataDTOVidL :: Lens_' UniswapV2PairHourDataDTO (Maybe Integer)
uniswapV2PairHourDataDTOVidL f UniswapV2PairHourDataDTO{..} = (\uniswapV2PairHourDataDTOVid -> UniswapV2PairHourDataDTO { uniswapV2PairHourDataDTOVid, ..} ) <$> f uniswapV2PairHourDataDTOVid
{-# INLINE uniswapV2PairHourDataDTOVidL #-}



-- * UniswapV2SwapDTO

-- | 'uniswapV2SwapDTOEntryTime' Lens
uniswapV2SwapDTOEntryTimeL :: Lens_' UniswapV2SwapDTO (Maybe DateTime)
uniswapV2SwapDTOEntryTimeL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOEntryTime -> UniswapV2SwapDTO { uniswapV2SwapDTOEntryTime, ..} ) <$> f uniswapV2SwapDTOEntryTime
{-# INLINE uniswapV2SwapDTOEntryTimeL #-}

-- | 'uniswapV2SwapDTORecvTime' Lens
uniswapV2SwapDTORecvTimeL :: Lens_' UniswapV2SwapDTO (Maybe DateTime)
uniswapV2SwapDTORecvTimeL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTORecvTime -> UniswapV2SwapDTO { uniswapV2SwapDTORecvTime, ..} ) <$> f uniswapV2SwapDTORecvTime
{-# INLINE uniswapV2SwapDTORecvTimeL #-}

-- | 'uniswapV2SwapDTOBlockNumber' Lens
uniswapV2SwapDTOBlockNumberL :: Lens_' UniswapV2SwapDTO (Maybe Integer)
uniswapV2SwapDTOBlockNumberL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOBlockNumber -> UniswapV2SwapDTO { uniswapV2SwapDTOBlockNumber, ..} ) <$> f uniswapV2SwapDTOBlockNumber
{-# INLINE uniswapV2SwapDTOBlockNumberL #-}

-- | 'uniswapV2SwapDTOVid' Lens
uniswapV2SwapDTOVidL :: Lens_' UniswapV2SwapDTO (Maybe Integer)
uniswapV2SwapDTOVidL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOVid -> UniswapV2SwapDTO { uniswapV2SwapDTOVid, ..} ) <$> f uniswapV2SwapDTOVid
{-# INLINE uniswapV2SwapDTOVidL #-}

-- | 'uniswapV2SwapDTOId' Lens
uniswapV2SwapDTOIdL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOIdL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOId -> UniswapV2SwapDTO { uniswapV2SwapDTOId, ..} ) <$> f uniswapV2SwapDTOId
{-# INLINE uniswapV2SwapDTOIdL #-}

-- | 'uniswapV2SwapDTOTransaction' Lens
uniswapV2SwapDTOTransactionL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOTransactionL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOTransaction -> UniswapV2SwapDTO { uniswapV2SwapDTOTransaction, ..} ) <$> f uniswapV2SwapDTOTransaction
{-# INLINE uniswapV2SwapDTOTransactionL #-}

-- | 'uniswapV2SwapDTOTimestamp' Lens
uniswapV2SwapDTOTimestampL :: Lens_' UniswapV2SwapDTO (Maybe DateTime)
uniswapV2SwapDTOTimestampL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOTimestamp -> UniswapV2SwapDTO { uniswapV2SwapDTOTimestamp, ..} ) <$> f uniswapV2SwapDTOTimestamp
{-# INLINE uniswapV2SwapDTOTimestampL #-}

-- | 'uniswapV2SwapDTOPair' Lens
uniswapV2SwapDTOPairL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOPairL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOPair -> UniswapV2SwapDTO { uniswapV2SwapDTOPair, ..} ) <$> f uniswapV2SwapDTOPair
{-# INLINE uniswapV2SwapDTOPairL #-}

-- | 'uniswapV2SwapDTOSender' Lens
uniswapV2SwapDTOSenderL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOSenderL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOSender -> UniswapV2SwapDTO { uniswapV2SwapDTOSender, ..} ) <$> f uniswapV2SwapDTOSender
{-# INLINE uniswapV2SwapDTOSenderL #-}

-- | 'uniswapV2SwapDTOFrom' Lens
uniswapV2SwapDTOFromL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOFromL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOFrom -> UniswapV2SwapDTO { uniswapV2SwapDTOFrom, ..} ) <$> f uniswapV2SwapDTOFrom
{-# INLINE uniswapV2SwapDTOFromL #-}

-- | 'uniswapV2SwapDTOAmount0In' Lens
uniswapV2SwapDTOAmount0InL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOAmount0InL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOAmount0In -> UniswapV2SwapDTO { uniswapV2SwapDTOAmount0In, ..} ) <$> f uniswapV2SwapDTOAmount0In
{-# INLINE uniswapV2SwapDTOAmount0InL #-}

-- | 'uniswapV2SwapDTOAmount1In' Lens
uniswapV2SwapDTOAmount1InL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOAmount1InL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOAmount1In -> UniswapV2SwapDTO { uniswapV2SwapDTOAmount1In, ..} ) <$> f uniswapV2SwapDTOAmount1In
{-# INLINE uniswapV2SwapDTOAmount1InL #-}

-- | 'uniswapV2SwapDTOAmount0Out' Lens
uniswapV2SwapDTOAmount0OutL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOAmount0OutL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOAmount0Out -> UniswapV2SwapDTO { uniswapV2SwapDTOAmount0Out, ..} ) <$> f uniswapV2SwapDTOAmount0Out
{-# INLINE uniswapV2SwapDTOAmount0OutL #-}

-- | 'uniswapV2SwapDTOAmount1Out' Lens
uniswapV2SwapDTOAmount1OutL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOAmount1OutL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOAmount1Out -> UniswapV2SwapDTO { uniswapV2SwapDTOAmount1Out, ..} ) <$> f uniswapV2SwapDTOAmount1Out
{-# INLINE uniswapV2SwapDTOAmount1OutL #-}

-- | 'uniswapV2SwapDTOTo' Lens
uniswapV2SwapDTOToL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOToL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOTo -> UniswapV2SwapDTO { uniswapV2SwapDTOTo, ..} ) <$> f uniswapV2SwapDTOTo
{-# INLINE uniswapV2SwapDTOToL #-}

-- | 'uniswapV2SwapDTOLogIndex' Lens
uniswapV2SwapDTOLogIndexL :: Lens_' UniswapV2SwapDTO (Maybe NumericsBigInteger)
uniswapV2SwapDTOLogIndexL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOLogIndex -> UniswapV2SwapDTO { uniswapV2SwapDTOLogIndex, ..} ) <$> f uniswapV2SwapDTOLogIndex
{-# INLINE uniswapV2SwapDTOLogIndexL #-}

-- | 'uniswapV2SwapDTOAmountUsd' Lens
uniswapV2SwapDTOAmountUsdL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOAmountUsdL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOAmountUsd -> UniswapV2SwapDTO { uniswapV2SwapDTOAmountUsd, ..} ) <$> f uniswapV2SwapDTOAmountUsd
{-# INLINE uniswapV2SwapDTOAmountUsdL #-}

-- | 'uniswapV2SwapDTOEvaluatedPrice' Lens
uniswapV2SwapDTOEvaluatedPriceL :: Lens_' UniswapV2SwapDTO (Maybe Double)
uniswapV2SwapDTOEvaluatedPriceL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOEvaluatedPrice -> UniswapV2SwapDTO { uniswapV2SwapDTOEvaluatedPrice, ..} ) <$> f uniswapV2SwapDTOEvaluatedPrice
{-# INLINE uniswapV2SwapDTOEvaluatedPriceL #-}

-- | 'uniswapV2SwapDTOEvaluatedAmount' Lens
uniswapV2SwapDTOEvaluatedAmountL :: Lens_' UniswapV2SwapDTO (Maybe Double)
uniswapV2SwapDTOEvaluatedAmountL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOEvaluatedAmount -> UniswapV2SwapDTO { uniswapV2SwapDTOEvaluatedAmount, ..} ) <$> f uniswapV2SwapDTOEvaluatedAmount
{-# INLINE uniswapV2SwapDTOEvaluatedAmountL #-}

-- | 'uniswapV2SwapDTOEvaluatedAggressor' Lens
uniswapV2SwapDTOEvaluatedAggressorL :: Lens_' UniswapV2SwapDTO (Maybe TransactionsETradeAggressiveSide)
uniswapV2SwapDTOEvaluatedAggressorL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOEvaluatedAggressor -> UniswapV2SwapDTO { uniswapV2SwapDTOEvaluatedAggressor, ..} ) <$> f uniswapV2SwapDTOEvaluatedAggressor
{-# INLINE uniswapV2SwapDTOEvaluatedAggressorL #-}

-- | 'uniswapV2SwapDTOPoolId' Lens
uniswapV2SwapDTOPoolIdL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOPoolIdL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOPoolId -> UniswapV2SwapDTO { uniswapV2SwapDTOPoolId, ..} ) <$> f uniswapV2SwapDTOPoolId
{-# INLINE uniswapV2SwapDTOPoolIdL #-}

-- | 'uniswapV2SwapDTOTransactionId' Lens
uniswapV2SwapDTOTransactionIdL :: Lens_' UniswapV2SwapDTO (Maybe Text)
uniswapV2SwapDTOTransactionIdL f UniswapV2SwapDTO{..} = (\uniswapV2SwapDTOTransactionId -> UniswapV2SwapDTO { uniswapV2SwapDTOTransactionId, ..} ) <$> f uniswapV2SwapDTOTransactionId
{-# INLINE uniswapV2SwapDTOTransactionIdL #-}



-- * UniswapV2TokenDTO

-- | 'uniswapV2TokenDTOEntryTime' Lens
uniswapV2TokenDTOEntryTimeL :: Lens_' UniswapV2TokenDTO (Maybe DateTime)
uniswapV2TokenDTOEntryTimeL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOEntryTime -> UniswapV2TokenDTO { uniswapV2TokenDTOEntryTime, ..} ) <$> f uniswapV2TokenDTOEntryTime
{-# INLINE uniswapV2TokenDTOEntryTimeL #-}

-- | 'uniswapV2TokenDTORecvTime' Lens
uniswapV2TokenDTORecvTimeL :: Lens_' UniswapV2TokenDTO (Maybe DateTime)
uniswapV2TokenDTORecvTimeL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTORecvTime -> UniswapV2TokenDTO { uniswapV2TokenDTORecvTime, ..} ) <$> f uniswapV2TokenDTORecvTime
{-# INLINE uniswapV2TokenDTORecvTimeL #-}

-- | 'uniswapV2TokenDTOBlockNumber' Lens
uniswapV2TokenDTOBlockNumberL :: Lens_' UniswapV2TokenDTO (Maybe Integer)
uniswapV2TokenDTOBlockNumberL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOBlockNumber -> UniswapV2TokenDTO { uniswapV2TokenDTOBlockNumber, ..} ) <$> f uniswapV2TokenDTOBlockNumber
{-# INLINE uniswapV2TokenDTOBlockNumberL #-}

-- | 'uniswapV2TokenDTOVid' Lens
uniswapV2TokenDTOVidL :: Lens_' UniswapV2TokenDTO (Maybe Integer)
uniswapV2TokenDTOVidL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOVid -> UniswapV2TokenDTO { uniswapV2TokenDTOVid, ..} ) <$> f uniswapV2TokenDTOVid
{-# INLINE uniswapV2TokenDTOVidL #-}

-- | 'uniswapV2TokenDTOId' Lens
uniswapV2TokenDTOIdL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOIdL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOId -> UniswapV2TokenDTO { uniswapV2TokenDTOId, ..} ) <$> f uniswapV2TokenDTOId
{-# INLINE uniswapV2TokenDTOIdL #-}

-- | 'uniswapV2TokenDTOSymbol' Lens
uniswapV2TokenDTOSymbolL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOSymbolL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOSymbol -> UniswapV2TokenDTO { uniswapV2TokenDTOSymbol, ..} ) <$> f uniswapV2TokenDTOSymbol
{-# INLINE uniswapV2TokenDTOSymbolL #-}

-- | 'uniswapV2TokenDTOName' Lens
uniswapV2TokenDTONameL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTONameL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOName -> UniswapV2TokenDTO { uniswapV2TokenDTOName, ..} ) <$> f uniswapV2TokenDTOName
{-# INLINE uniswapV2TokenDTONameL #-}

-- | 'uniswapV2TokenDTODecimals' Lens
uniswapV2TokenDTODecimalsL :: Lens_' UniswapV2TokenDTO (Maybe Int)
uniswapV2TokenDTODecimalsL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTODecimals -> UniswapV2TokenDTO { uniswapV2TokenDTODecimals, ..} ) <$> f uniswapV2TokenDTODecimals
{-# INLINE uniswapV2TokenDTODecimalsL #-}

-- | 'uniswapV2TokenDTOTotalSupply' Lens
uniswapV2TokenDTOTotalSupplyL :: Lens_' UniswapV2TokenDTO (Maybe NumericsBigInteger)
uniswapV2TokenDTOTotalSupplyL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTotalSupply -> UniswapV2TokenDTO { uniswapV2TokenDTOTotalSupply, ..} ) <$> f uniswapV2TokenDTOTotalSupply
{-# INLINE uniswapV2TokenDTOTotalSupplyL #-}

-- | 'uniswapV2TokenDTOTradeVolume' Lens
uniswapV2TokenDTOTradeVolumeL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOTradeVolumeL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTradeVolume -> UniswapV2TokenDTO { uniswapV2TokenDTOTradeVolume, ..} ) <$> f uniswapV2TokenDTOTradeVolume
{-# INLINE uniswapV2TokenDTOTradeVolumeL #-}

-- | 'uniswapV2TokenDTOTradeVolumeUsd' Lens
uniswapV2TokenDTOTradeVolumeUsdL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOTradeVolumeUsdL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTradeVolumeUsd -> UniswapV2TokenDTO { uniswapV2TokenDTOTradeVolumeUsd, ..} ) <$> f uniswapV2TokenDTOTradeVolumeUsd
{-# INLINE uniswapV2TokenDTOTradeVolumeUsdL #-}

-- | 'uniswapV2TokenDTOUntrackedVolumeUsd' Lens
uniswapV2TokenDTOUntrackedVolumeUsdL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOUntrackedVolumeUsdL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOUntrackedVolumeUsd -> UniswapV2TokenDTO { uniswapV2TokenDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV2TokenDTOUntrackedVolumeUsd
{-# INLINE uniswapV2TokenDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV2TokenDTOTxCount' Lens
uniswapV2TokenDTOTxCountL :: Lens_' UniswapV2TokenDTO (Maybe NumericsBigInteger)
uniswapV2TokenDTOTxCountL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTxCount -> UniswapV2TokenDTO { uniswapV2TokenDTOTxCount, ..} ) <$> f uniswapV2TokenDTOTxCount
{-# INLINE uniswapV2TokenDTOTxCountL #-}

-- | 'uniswapV2TokenDTOTotalLiquidity' Lens
uniswapV2TokenDTOTotalLiquidityL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOTotalLiquidityL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTotalLiquidity -> UniswapV2TokenDTO { uniswapV2TokenDTOTotalLiquidity, ..} ) <$> f uniswapV2TokenDTOTotalLiquidity
{-# INLINE uniswapV2TokenDTOTotalLiquidityL #-}

-- | 'uniswapV2TokenDTODerivedEth' Lens
uniswapV2TokenDTODerivedEthL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTODerivedEthL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTODerivedEth -> UniswapV2TokenDTO { uniswapV2TokenDTODerivedEth, ..} ) <$> f uniswapV2TokenDTODerivedEth
{-# INLINE uniswapV2TokenDTODerivedEthL #-}

-- | 'uniswapV2TokenDTOTokenSymbol' Lens
uniswapV2TokenDTOTokenSymbolL :: Lens_' UniswapV2TokenDTO (Maybe Text)
uniswapV2TokenDTOTokenSymbolL f UniswapV2TokenDTO{..} = (\uniswapV2TokenDTOTokenSymbol -> UniswapV2TokenDTO { uniswapV2TokenDTOTokenSymbol, ..} ) <$> f uniswapV2TokenDTOTokenSymbol
{-# INLINE uniswapV2TokenDTOTokenSymbolL #-}



-- * UniswapV2TokenDayDataDTO

-- | 'uniswapV2TokenDayDataDTOEntryTime' Lens
uniswapV2TokenDayDataDTOEntryTimeL :: Lens_' UniswapV2TokenDayDataDTO (Maybe DateTime)
uniswapV2TokenDayDataDTOEntryTimeL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOEntryTime -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOEntryTime, ..} ) <$> f uniswapV2TokenDayDataDTOEntryTime
{-# INLINE uniswapV2TokenDayDataDTOEntryTimeL #-}

-- | 'uniswapV2TokenDayDataDTORecvTime' Lens
uniswapV2TokenDayDataDTORecvTimeL :: Lens_' UniswapV2TokenDayDataDTO (Maybe DateTime)
uniswapV2TokenDayDataDTORecvTimeL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTORecvTime -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTORecvTime, ..} ) <$> f uniswapV2TokenDayDataDTORecvTime
{-# INLINE uniswapV2TokenDayDataDTORecvTimeL #-}

-- | 'uniswapV2TokenDayDataDTOBlockNumber' Lens
uniswapV2TokenDayDataDTOBlockNumberL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Integer)
uniswapV2TokenDayDataDTOBlockNumberL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOBlockNumber -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOBlockNumber, ..} ) <$> f uniswapV2TokenDayDataDTOBlockNumber
{-# INLINE uniswapV2TokenDayDataDTOBlockNumberL #-}

-- | 'uniswapV2TokenDayDataDTOId' Lens
uniswapV2TokenDayDataDTOIdL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOIdL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOId -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOId, ..} ) <$> f uniswapV2TokenDayDataDTOId
{-# INLINE uniswapV2TokenDayDataDTOIdL #-}

-- | 'uniswapV2TokenDayDataDTODate' Lens
uniswapV2TokenDayDataDTODateL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Int)
uniswapV2TokenDayDataDTODateL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTODate -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTODate, ..} ) <$> f uniswapV2TokenDayDataDTODate
{-# INLINE uniswapV2TokenDayDataDTODateL #-}

-- | 'uniswapV2TokenDayDataDTOToken' Lens
uniswapV2TokenDayDataDTOTokenL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOTokenL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOToken -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOToken, ..} ) <$> f uniswapV2TokenDayDataDTOToken
{-# INLINE uniswapV2TokenDayDataDTOTokenL #-}

-- | 'uniswapV2TokenDayDataDTODailyVolumeToken' Lens
uniswapV2TokenDayDataDTODailyVolumeTokenL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTODailyVolumeTokenL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTODailyVolumeToken -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTODailyVolumeToken, ..} ) <$> f uniswapV2TokenDayDataDTODailyVolumeToken
{-# INLINE uniswapV2TokenDayDataDTODailyVolumeTokenL #-}

-- | 'uniswapV2TokenDayDataDTODailyVolumeEth' Lens
uniswapV2TokenDayDataDTODailyVolumeEthL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTODailyVolumeEthL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTODailyVolumeEth -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTODailyVolumeEth, ..} ) <$> f uniswapV2TokenDayDataDTODailyVolumeEth
{-# INLINE uniswapV2TokenDayDataDTODailyVolumeEthL #-}

-- | 'uniswapV2TokenDayDataDTODailyVolumeUsd' Lens
uniswapV2TokenDayDataDTODailyVolumeUsdL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTODailyVolumeUsdL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTODailyVolumeUsd -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTODailyVolumeUsd, ..} ) <$> f uniswapV2TokenDayDataDTODailyVolumeUsd
{-# INLINE uniswapV2TokenDayDataDTODailyVolumeUsdL #-}

-- | 'uniswapV2TokenDayDataDTODailyTxns' Lens
uniswapV2TokenDayDataDTODailyTxnsL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTODailyTxnsL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTODailyTxns -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTODailyTxns, ..} ) <$> f uniswapV2TokenDayDataDTODailyTxns
{-# INLINE uniswapV2TokenDayDataDTODailyTxnsL #-}

-- | 'uniswapV2TokenDayDataDTOTotalLiquidityToken' Lens
uniswapV2TokenDayDataDTOTotalLiquidityTokenL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOTotalLiquidityTokenL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOTotalLiquidityToken -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOTotalLiquidityToken, ..} ) <$> f uniswapV2TokenDayDataDTOTotalLiquidityToken
{-# INLINE uniswapV2TokenDayDataDTOTotalLiquidityTokenL #-}

-- | 'uniswapV2TokenDayDataDTOTotalLiquidityEth' Lens
uniswapV2TokenDayDataDTOTotalLiquidityEthL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOTotalLiquidityEthL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOTotalLiquidityEth -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOTotalLiquidityEth, ..} ) <$> f uniswapV2TokenDayDataDTOTotalLiquidityEth
{-# INLINE uniswapV2TokenDayDataDTOTotalLiquidityEthL #-}

-- | 'uniswapV2TokenDayDataDTOTotalLiquidityUsd' Lens
uniswapV2TokenDayDataDTOTotalLiquidityUsdL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOTotalLiquidityUsdL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOTotalLiquidityUsd -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOTotalLiquidityUsd, ..} ) <$> f uniswapV2TokenDayDataDTOTotalLiquidityUsd
{-# INLINE uniswapV2TokenDayDataDTOTotalLiquidityUsdL #-}

-- | 'uniswapV2TokenDayDataDTOPriceUsd' Lens
uniswapV2TokenDayDataDTOPriceUsdL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Text)
uniswapV2TokenDayDataDTOPriceUsdL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOPriceUsd -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOPriceUsd, ..} ) <$> f uniswapV2TokenDayDataDTOPriceUsd
{-# INLINE uniswapV2TokenDayDataDTOPriceUsdL #-}

-- | 'uniswapV2TokenDayDataDTOVid' Lens
uniswapV2TokenDayDataDTOVidL :: Lens_' UniswapV2TokenDayDataDTO (Maybe Integer)
uniswapV2TokenDayDataDTOVidL f UniswapV2TokenDayDataDTO{..} = (\uniswapV2TokenDayDataDTOVid -> UniswapV2TokenDayDataDTO { uniswapV2TokenDayDataDTOVid, ..} ) <$> f uniswapV2TokenDayDataDTOVid
{-# INLINE uniswapV2TokenDayDataDTOVidL #-}



-- * UniswapV2TransactionDTO

-- | 'uniswapV2TransactionDTOEntryTime' Lens
uniswapV2TransactionDTOEntryTimeL :: Lens_' UniswapV2TransactionDTO (Maybe DateTime)
uniswapV2TransactionDTOEntryTimeL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOEntryTime -> UniswapV2TransactionDTO { uniswapV2TransactionDTOEntryTime, ..} ) <$> f uniswapV2TransactionDTOEntryTime
{-# INLINE uniswapV2TransactionDTOEntryTimeL #-}

-- | 'uniswapV2TransactionDTORecvTime' Lens
uniswapV2TransactionDTORecvTimeL :: Lens_' UniswapV2TransactionDTO (Maybe DateTime)
uniswapV2TransactionDTORecvTimeL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTORecvTime -> UniswapV2TransactionDTO { uniswapV2TransactionDTORecvTime, ..} ) <$> f uniswapV2TransactionDTORecvTime
{-# INLINE uniswapV2TransactionDTORecvTimeL #-}

-- | 'uniswapV2TransactionDTOBlockNumber' Lens
uniswapV2TransactionDTOBlockNumberL :: Lens_' UniswapV2TransactionDTO (Maybe Integer)
uniswapV2TransactionDTOBlockNumberL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOBlockNumber -> UniswapV2TransactionDTO { uniswapV2TransactionDTOBlockNumber, ..} ) <$> f uniswapV2TransactionDTOBlockNumber
{-# INLINE uniswapV2TransactionDTOBlockNumberL #-}

-- | 'uniswapV2TransactionDTOId' Lens
uniswapV2TransactionDTOIdL :: Lens_' UniswapV2TransactionDTO (Maybe Text)
uniswapV2TransactionDTOIdL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOId -> UniswapV2TransactionDTO { uniswapV2TransactionDTOId, ..} ) <$> f uniswapV2TransactionDTOId
{-# INLINE uniswapV2TransactionDTOIdL #-}

-- | 'uniswapV2TransactionDTOTimestamp' Lens
uniswapV2TransactionDTOTimestampL :: Lens_' UniswapV2TransactionDTO (Maybe Text)
uniswapV2TransactionDTOTimestampL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOTimestamp -> UniswapV2TransactionDTO { uniswapV2TransactionDTOTimestamp, ..} ) <$> f uniswapV2TransactionDTOTimestamp
{-# INLINE uniswapV2TransactionDTOTimestampL #-}

-- | 'uniswapV2TransactionDTOMints' Lens
uniswapV2TransactionDTOMintsL :: Lens_' UniswapV2TransactionDTO (Maybe [Text])
uniswapV2TransactionDTOMintsL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOMints -> UniswapV2TransactionDTO { uniswapV2TransactionDTOMints, ..} ) <$> f uniswapV2TransactionDTOMints
{-# INLINE uniswapV2TransactionDTOMintsL #-}

-- | 'uniswapV2TransactionDTOBurns' Lens
uniswapV2TransactionDTOBurnsL :: Lens_' UniswapV2TransactionDTO (Maybe [Text])
uniswapV2TransactionDTOBurnsL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOBurns -> UniswapV2TransactionDTO { uniswapV2TransactionDTOBurns, ..} ) <$> f uniswapV2TransactionDTOBurns
{-# INLINE uniswapV2TransactionDTOBurnsL #-}

-- | 'uniswapV2TransactionDTOSwaps' Lens
uniswapV2TransactionDTOSwapsL :: Lens_' UniswapV2TransactionDTO (Maybe [Text])
uniswapV2TransactionDTOSwapsL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOSwaps -> UniswapV2TransactionDTO { uniswapV2TransactionDTOSwaps, ..} ) <$> f uniswapV2TransactionDTOSwaps
{-# INLINE uniswapV2TransactionDTOSwapsL #-}

-- | 'uniswapV2TransactionDTOVid' Lens
uniswapV2TransactionDTOVidL :: Lens_' UniswapV2TransactionDTO (Maybe Integer)
uniswapV2TransactionDTOVidL f UniswapV2TransactionDTO{..} = (\uniswapV2TransactionDTOVid -> UniswapV2TransactionDTO { uniswapV2TransactionDTOVid, ..} ) <$> f uniswapV2TransactionDTOVid
{-# INLINE uniswapV2TransactionDTOVidL #-}



-- * UniswapV2UniswapDayDataDTO

-- | 'uniswapV2UniswapDayDataDTOEntryTime' Lens
uniswapV2UniswapDayDataDTOEntryTimeL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe DateTime)
uniswapV2UniswapDayDataDTOEntryTimeL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOEntryTime -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOEntryTime, ..} ) <$> f uniswapV2UniswapDayDataDTOEntryTime
{-# INLINE uniswapV2UniswapDayDataDTOEntryTimeL #-}

-- | 'uniswapV2UniswapDayDataDTORecvTime' Lens
uniswapV2UniswapDayDataDTORecvTimeL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe DateTime)
uniswapV2UniswapDayDataDTORecvTimeL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTORecvTime -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTORecvTime, ..} ) <$> f uniswapV2UniswapDayDataDTORecvTime
{-# INLINE uniswapV2UniswapDayDataDTORecvTimeL #-}

-- | 'uniswapV2UniswapDayDataDTOBlockNumber' Lens
uniswapV2UniswapDayDataDTOBlockNumberL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Integer)
uniswapV2UniswapDayDataDTOBlockNumberL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOBlockNumber -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOBlockNumber, ..} ) <$> f uniswapV2UniswapDayDataDTOBlockNumber
{-# INLINE uniswapV2UniswapDayDataDTOBlockNumberL #-}

-- | 'uniswapV2UniswapDayDataDTOId' Lens
uniswapV2UniswapDayDataDTOIdL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOIdL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOId -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOId, ..} ) <$> f uniswapV2UniswapDayDataDTOId
{-# INLINE uniswapV2UniswapDayDataDTOIdL #-}

-- | 'uniswapV2UniswapDayDataDTODate' Lens
uniswapV2UniswapDayDataDTODateL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Int)
uniswapV2UniswapDayDataDTODateL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTODate -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTODate, ..} ) <$> f uniswapV2UniswapDayDataDTODate
{-# INLINE uniswapV2UniswapDayDataDTODateL #-}

-- | 'uniswapV2UniswapDayDataDTODailyVolumeEth' Lens
uniswapV2UniswapDayDataDTODailyVolumeEthL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTODailyVolumeEthL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTODailyVolumeEth -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTODailyVolumeEth, ..} ) <$> f uniswapV2UniswapDayDataDTODailyVolumeEth
{-# INLINE uniswapV2UniswapDayDataDTODailyVolumeEthL #-}

-- | 'uniswapV2UniswapDayDataDTODailyVolumeUsd' Lens
uniswapV2UniswapDayDataDTODailyVolumeUsdL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTODailyVolumeUsdL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTODailyVolumeUsd -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTODailyVolumeUsd, ..} ) <$> f uniswapV2UniswapDayDataDTODailyVolumeUsd
{-# INLINE uniswapV2UniswapDayDataDTODailyVolumeUsdL #-}

-- | 'uniswapV2UniswapDayDataDTODailyVolumeUntracked' Lens
uniswapV2UniswapDayDataDTODailyVolumeUntrackedL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTODailyVolumeUntrackedL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTODailyVolumeUntracked -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTODailyVolumeUntracked, ..} ) <$> f uniswapV2UniswapDayDataDTODailyVolumeUntracked
{-# INLINE uniswapV2UniswapDayDataDTODailyVolumeUntrackedL #-}

-- | 'uniswapV2UniswapDayDataDTOTotalVolumeEth' Lens
uniswapV2UniswapDayDataDTOTotalVolumeEthL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOTotalVolumeEthL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOTotalVolumeEth -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOTotalVolumeEth, ..} ) <$> f uniswapV2UniswapDayDataDTOTotalVolumeEth
{-# INLINE uniswapV2UniswapDayDataDTOTotalVolumeEthL #-}

-- | 'uniswapV2UniswapDayDataDTOTotalLiquidityEth' Lens
uniswapV2UniswapDayDataDTOTotalLiquidityEthL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOTotalLiquidityEthL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOTotalLiquidityEth -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOTotalLiquidityEth, ..} ) <$> f uniswapV2UniswapDayDataDTOTotalLiquidityEth
{-# INLINE uniswapV2UniswapDayDataDTOTotalLiquidityEthL #-}

-- | 'uniswapV2UniswapDayDataDTOTotalVolumeUsd' Lens
uniswapV2UniswapDayDataDTOTotalVolumeUsdL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOTotalVolumeUsdL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOTotalVolumeUsd -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOTotalVolumeUsd, ..} ) <$> f uniswapV2UniswapDayDataDTOTotalVolumeUsd
{-# INLINE uniswapV2UniswapDayDataDTOTotalVolumeUsdL #-}

-- | 'uniswapV2UniswapDayDataDTOTotalLiquidityUsd' Lens
uniswapV2UniswapDayDataDTOTotalLiquidityUsdL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOTotalLiquidityUsdL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOTotalLiquidityUsd -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOTotalLiquidityUsd, ..} ) <$> f uniswapV2UniswapDayDataDTOTotalLiquidityUsd
{-# INLINE uniswapV2UniswapDayDataDTOTotalLiquidityUsdL #-}

-- | 'uniswapV2UniswapDayDataDTOTxCount' Lens
uniswapV2UniswapDayDataDTOTxCountL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Text)
uniswapV2UniswapDayDataDTOTxCountL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOTxCount -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOTxCount, ..} ) <$> f uniswapV2UniswapDayDataDTOTxCount
{-# INLINE uniswapV2UniswapDayDataDTOTxCountL #-}

-- | 'uniswapV2UniswapDayDataDTOVid' Lens
uniswapV2UniswapDayDataDTOVidL :: Lens_' UniswapV2UniswapDayDataDTO (Maybe Integer)
uniswapV2UniswapDayDataDTOVidL f UniswapV2UniswapDayDataDTO{..} = (\uniswapV2UniswapDayDataDTOVid -> UniswapV2UniswapDayDataDTO { uniswapV2UniswapDayDataDTOVid, ..} ) <$> f uniswapV2UniswapDayDataDTOVid
{-# INLINE uniswapV2UniswapDayDataDTOVidL #-}



-- * UniswapV2UniswapFactoryDTO

-- | 'uniswapV2UniswapFactoryDTOEntryTime' Lens
uniswapV2UniswapFactoryDTOEntryTimeL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe DateTime)
uniswapV2UniswapFactoryDTOEntryTimeL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOEntryTime -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOEntryTime, ..} ) <$> f uniswapV2UniswapFactoryDTOEntryTime
{-# INLINE uniswapV2UniswapFactoryDTOEntryTimeL #-}

-- | 'uniswapV2UniswapFactoryDTORecvTime' Lens
uniswapV2UniswapFactoryDTORecvTimeL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe DateTime)
uniswapV2UniswapFactoryDTORecvTimeL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTORecvTime -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTORecvTime, ..} ) <$> f uniswapV2UniswapFactoryDTORecvTime
{-# INLINE uniswapV2UniswapFactoryDTORecvTimeL #-}

-- | 'uniswapV2UniswapFactoryDTOBlockNumber' Lens
uniswapV2UniswapFactoryDTOBlockNumberL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Integer)
uniswapV2UniswapFactoryDTOBlockNumberL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOBlockNumber -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOBlockNumber, ..} ) <$> f uniswapV2UniswapFactoryDTOBlockNumber
{-# INLINE uniswapV2UniswapFactoryDTOBlockNumberL #-}

-- | 'uniswapV2UniswapFactoryDTOId' Lens
uniswapV2UniswapFactoryDTOIdL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOIdL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOId -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOId, ..} ) <$> f uniswapV2UniswapFactoryDTOId
{-# INLINE uniswapV2UniswapFactoryDTOIdL #-}

-- | 'uniswapV2UniswapFactoryDTOPairCount' Lens
uniswapV2UniswapFactoryDTOPairCountL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Int)
uniswapV2UniswapFactoryDTOPairCountL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOPairCount -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOPairCount, ..} ) <$> f uniswapV2UniswapFactoryDTOPairCount
{-# INLINE uniswapV2UniswapFactoryDTOPairCountL #-}

-- | 'uniswapV2UniswapFactoryDTOTotalVolumeUsd' Lens
uniswapV2UniswapFactoryDTOTotalVolumeUsdL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOTotalVolumeUsdL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOTotalVolumeUsd -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOTotalVolumeUsd, ..} ) <$> f uniswapV2UniswapFactoryDTOTotalVolumeUsd
{-# INLINE uniswapV2UniswapFactoryDTOTotalVolumeUsdL #-}

-- | 'uniswapV2UniswapFactoryDTOTotalVolumeEth' Lens
uniswapV2UniswapFactoryDTOTotalVolumeEthL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOTotalVolumeEthL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOTotalVolumeEth -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOTotalVolumeEth, ..} ) <$> f uniswapV2UniswapFactoryDTOTotalVolumeEth
{-# INLINE uniswapV2UniswapFactoryDTOTotalVolumeEthL #-}

-- | 'uniswapV2UniswapFactoryDTOUntrackedVolumeUsd' Lens
uniswapV2UniswapFactoryDTOUntrackedVolumeUsdL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOUntrackedVolumeUsdL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOUntrackedVolumeUsd -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV2UniswapFactoryDTOUntrackedVolumeUsd
{-# INLINE uniswapV2UniswapFactoryDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV2UniswapFactoryDTOTotalLiquidityUsd' Lens
uniswapV2UniswapFactoryDTOTotalLiquidityUsdL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOTotalLiquidityUsdL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOTotalLiquidityUsd -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOTotalLiquidityUsd, ..} ) <$> f uniswapV2UniswapFactoryDTOTotalLiquidityUsd
{-# INLINE uniswapV2UniswapFactoryDTOTotalLiquidityUsdL #-}

-- | 'uniswapV2UniswapFactoryDTOTotalLiquidityEth' Lens
uniswapV2UniswapFactoryDTOTotalLiquidityEthL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOTotalLiquidityEthL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOTotalLiquidityEth -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOTotalLiquidityEth, ..} ) <$> f uniswapV2UniswapFactoryDTOTotalLiquidityEth
{-# INLINE uniswapV2UniswapFactoryDTOTotalLiquidityEthL #-}

-- | 'uniswapV2UniswapFactoryDTOTxCount' Lens
uniswapV2UniswapFactoryDTOTxCountL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Text)
uniswapV2UniswapFactoryDTOTxCountL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOTxCount -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOTxCount, ..} ) <$> f uniswapV2UniswapFactoryDTOTxCount
{-# INLINE uniswapV2UniswapFactoryDTOTxCountL #-}

-- | 'uniswapV2UniswapFactoryDTOVid' Lens
uniswapV2UniswapFactoryDTOVidL :: Lens_' UniswapV2UniswapFactoryDTO (Maybe Integer)
uniswapV2UniswapFactoryDTOVidL f UniswapV2UniswapFactoryDTO{..} = (\uniswapV2UniswapFactoryDTOVid -> UniswapV2UniswapFactoryDTO { uniswapV2UniswapFactoryDTOVid, ..} ) <$> f uniswapV2UniswapFactoryDTOVid
{-# INLINE uniswapV2UniswapFactoryDTOVidL #-}



-- * UniswapV2UserDTO

-- | 'uniswapV2UserDTOEntryTime' Lens
uniswapV2UserDTOEntryTimeL :: Lens_' UniswapV2UserDTO (Maybe DateTime)
uniswapV2UserDTOEntryTimeL f UniswapV2UserDTO{..} = (\uniswapV2UserDTOEntryTime -> UniswapV2UserDTO { uniswapV2UserDTOEntryTime, ..} ) <$> f uniswapV2UserDTOEntryTime
{-# INLINE uniswapV2UserDTOEntryTimeL #-}

-- | 'uniswapV2UserDTORecvTime' Lens
uniswapV2UserDTORecvTimeL :: Lens_' UniswapV2UserDTO (Maybe DateTime)
uniswapV2UserDTORecvTimeL f UniswapV2UserDTO{..} = (\uniswapV2UserDTORecvTime -> UniswapV2UserDTO { uniswapV2UserDTORecvTime, ..} ) <$> f uniswapV2UserDTORecvTime
{-# INLINE uniswapV2UserDTORecvTimeL #-}

-- | 'uniswapV2UserDTOBlockNumber' Lens
uniswapV2UserDTOBlockNumberL :: Lens_' UniswapV2UserDTO (Maybe Integer)
uniswapV2UserDTOBlockNumberL f UniswapV2UserDTO{..} = (\uniswapV2UserDTOBlockNumber -> UniswapV2UserDTO { uniswapV2UserDTOBlockNumber, ..} ) <$> f uniswapV2UserDTOBlockNumber
{-# INLINE uniswapV2UserDTOBlockNumberL #-}

-- | 'uniswapV2UserDTOId' Lens
uniswapV2UserDTOIdL :: Lens_' UniswapV2UserDTO (Maybe Text)
uniswapV2UserDTOIdL f UniswapV2UserDTO{..} = (\uniswapV2UserDTOId -> UniswapV2UserDTO { uniswapV2UserDTOId, ..} ) <$> f uniswapV2UserDTOId
{-# INLINE uniswapV2UserDTOIdL #-}

-- | 'uniswapV2UserDTOUsdSwapped' Lens
uniswapV2UserDTOUsdSwappedL :: Lens_' UniswapV2UserDTO (Maybe Text)
uniswapV2UserDTOUsdSwappedL f UniswapV2UserDTO{..} = (\uniswapV2UserDTOUsdSwapped -> UniswapV2UserDTO { uniswapV2UserDTOUsdSwapped, ..} ) <$> f uniswapV2UserDTOUsdSwapped
{-# INLINE uniswapV2UserDTOUsdSwappedL #-}

-- | 'uniswapV2UserDTOVid' Lens
uniswapV2UserDTOVidL :: Lens_' UniswapV2UserDTO (Maybe Integer)
uniswapV2UserDTOVidL f UniswapV2UserDTO{..} = (\uniswapV2UserDTOVid -> UniswapV2UserDTO { uniswapV2UserDTOVid, ..} ) <$> f uniswapV2UserDTOVid
{-# INLINE uniswapV2UserDTOVidL #-}



-- * UniswapV3BundleDTO

-- | 'uniswapV3BundleDTOEntryTime' Lens
uniswapV3BundleDTOEntryTimeL :: Lens_' UniswapV3BundleDTO (Maybe DateTime)
uniswapV3BundleDTOEntryTimeL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTOEntryTime -> UniswapV3BundleDTO { uniswapV3BundleDTOEntryTime, ..} ) <$> f uniswapV3BundleDTOEntryTime
{-# INLINE uniswapV3BundleDTOEntryTimeL #-}

-- | 'uniswapV3BundleDTORecvTime' Lens
uniswapV3BundleDTORecvTimeL :: Lens_' UniswapV3BundleDTO (Maybe DateTime)
uniswapV3BundleDTORecvTimeL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTORecvTime -> UniswapV3BundleDTO { uniswapV3BundleDTORecvTime, ..} ) <$> f uniswapV3BundleDTORecvTime
{-# INLINE uniswapV3BundleDTORecvTimeL #-}

-- | 'uniswapV3BundleDTOBlockNumber' Lens
uniswapV3BundleDTOBlockNumberL :: Lens_' UniswapV3BundleDTO (Maybe Integer)
uniswapV3BundleDTOBlockNumberL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTOBlockNumber -> UniswapV3BundleDTO { uniswapV3BundleDTOBlockNumber, ..} ) <$> f uniswapV3BundleDTOBlockNumber
{-# INLINE uniswapV3BundleDTOBlockNumberL #-}

-- | 'uniswapV3BundleDTOId' Lens
uniswapV3BundleDTOIdL :: Lens_' UniswapV3BundleDTO (Maybe Text)
uniswapV3BundleDTOIdL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTOId -> UniswapV3BundleDTO { uniswapV3BundleDTOId, ..} ) <$> f uniswapV3BundleDTOId
{-# INLINE uniswapV3BundleDTOIdL #-}

-- | 'uniswapV3BundleDTOEthPriceUsd' Lens
uniswapV3BundleDTOEthPriceUsdL :: Lens_' UniswapV3BundleDTO (Maybe Text)
uniswapV3BundleDTOEthPriceUsdL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTOEthPriceUsd -> UniswapV3BundleDTO { uniswapV3BundleDTOEthPriceUsd, ..} ) <$> f uniswapV3BundleDTOEthPriceUsd
{-# INLINE uniswapV3BundleDTOEthPriceUsdL #-}

-- | 'uniswapV3BundleDTOVid' Lens
uniswapV3BundleDTOVidL :: Lens_' UniswapV3BundleDTO (Maybe Integer)
uniswapV3BundleDTOVidL f UniswapV3BundleDTO{..} = (\uniswapV3BundleDTOVid -> UniswapV3BundleDTO { uniswapV3BundleDTOVid, ..} ) <$> f uniswapV3BundleDTOVid
{-# INLINE uniswapV3BundleDTOVidL #-}



-- * UniswapV3BurnDTO

-- | 'uniswapV3BurnDTOEntryTime' Lens
uniswapV3BurnDTOEntryTimeL :: Lens_' UniswapV3BurnDTO (Maybe DateTime)
uniswapV3BurnDTOEntryTimeL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOEntryTime -> UniswapV3BurnDTO { uniswapV3BurnDTOEntryTime, ..} ) <$> f uniswapV3BurnDTOEntryTime
{-# INLINE uniswapV3BurnDTOEntryTimeL #-}

-- | 'uniswapV3BurnDTORecvTime' Lens
uniswapV3BurnDTORecvTimeL :: Lens_' UniswapV3BurnDTO (Maybe DateTime)
uniswapV3BurnDTORecvTimeL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTORecvTime -> UniswapV3BurnDTO { uniswapV3BurnDTORecvTime, ..} ) <$> f uniswapV3BurnDTORecvTime
{-# INLINE uniswapV3BurnDTORecvTimeL #-}

-- | 'uniswapV3BurnDTOBlockNumber' Lens
uniswapV3BurnDTOBlockNumberL :: Lens_' UniswapV3BurnDTO (Maybe Integer)
uniswapV3BurnDTOBlockNumberL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOBlockNumber -> UniswapV3BurnDTO { uniswapV3BurnDTOBlockNumber, ..} ) <$> f uniswapV3BurnDTOBlockNumber
{-# INLINE uniswapV3BurnDTOBlockNumberL #-}

-- | 'uniswapV3BurnDTOId' Lens
uniswapV3BurnDTOIdL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOIdL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOId -> UniswapV3BurnDTO { uniswapV3BurnDTOId, ..} ) <$> f uniswapV3BurnDTOId
{-# INLINE uniswapV3BurnDTOIdL #-}

-- | 'uniswapV3BurnDTOTransaction' Lens
uniswapV3BurnDTOTransactionL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOTransactionL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOTransaction -> UniswapV3BurnDTO { uniswapV3BurnDTOTransaction, ..} ) <$> f uniswapV3BurnDTOTransaction
{-# INLINE uniswapV3BurnDTOTransactionL #-}

-- | 'uniswapV3BurnDTOPool' Lens
uniswapV3BurnDTOPoolL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOPoolL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOPool -> UniswapV3BurnDTO { uniswapV3BurnDTOPool, ..} ) <$> f uniswapV3BurnDTOPool
{-# INLINE uniswapV3BurnDTOPoolL #-}

-- | 'uniswapV3BurnDTOToken0' Lens
uniswapV3BurnDTOToken0L :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOToken0L f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOToken0 -> UniswapV3BurnDTO { uniswapV3BurnDTOToken0, ..} ) <$> f uniswapV3BurnDTOToken0
{-# INLINE uniswapV3BurnDTOToken0L #-}

-- | 'uniswapV3BurnDTOToken1' Lens
uniswapV3BurnDTOToken1L :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOToken1L f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOToken1 -> UniswapV3BurnDTO { uniswapV3BurnDTOToken1, ..} ) <$> f uniswapV3BurnDTOToken1
{-# INLINE uniswapV3BurnDTOToken1L #-}

-- | 'uniswapV3BurnDTOTimestamp' Lens
uniswapV3BurnDTOTimestampL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOTimestampL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOTimestamp -> UniswapV3BurnDTO { uniswapV3BurnDTOTimestamp, ..} ) <$> f uniswapV3BurnDTOTimestamp
{-# INLINE uniswapV3BurnDTOTimestampL #-}

-- | 'uniswapV3BurnDTOOwner' Lens
uniswapV3BurnDTOOwnerL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOOwnerL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOOwner -> UniswapV3BurnDTO { uniswapV3BurnDTOOwner, ..} ) <$> f uniswapV3BurnDTOOwner
{-# INLINE uniswapV3BurnDTOOwnerL #-}

-- | 'uniswapV3BurnDTOOrigin' Lens
uniswapV3BurnDTOOriginL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOOriginL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOOrigin -> UniswapV3BurnDTO { uniswapV3BurnDTOOrigin, ..} ) <$> f uniswapV3BurnDTOOrigin
{-# INLINE uniswapV3BurnDTOOriginL #-}

-- | 'uniswapV3BurnDTOAmount' Lens
uniswapV3BurnDTOAmountL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOAmountL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOAmount -> UniswapV3BurnDTO { uniswapV3BurnDTOAmount, ..} ) <$> f uniswapV3BurnDTOAmount
{-# INLINE uniswapV3BurnDTOAmountL #-}

-- | 'uniswapV3BurnDTOAmount0' Lens
uniswapV3BurnDTOAmount0L :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOAmount0L f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOAmount0 -> UniswapV3BurnDTO { uniswapV3BurnDTOAmount0, ..} ) <$> f uniswapV3BurnDTOAmount0
{-# INLINE uniswapV3BurnDTOAmount0L #-}

-- | 'uniswapV3BurnDTOAmount1' Lens
uniswapV3BurnDTOAmount1L :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOAmount1L f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOAmount1 -> UniswapV3BurnDTO { uniswapV3BurnDTOAmount1, ..} ) <$> f uniswapV3BurnDTOAmount1
{-# INLINE uniswapV3BurnDTOAmount1L #-}

-- | 'uniswapV3BurnDTOAmountUsd' Lens
uniswapV3BurnDTOAmountUsdL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOAmountUsdL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOAmountUsd -> UniswapV3BurnDTO { uniswapV3BurnDTOAmountUsd, ..} ) <$> f uniswapV3BurnDTOAmountUsd
{-# INLINE uniswapV3BurnDTOAmountUsdL #-}

-- | 'uniswapV3BurnDTOTickLower' Lens
uniswapV3BurnDTOTickLowerL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOTickLowerL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOTickLower -> UniswapV3BurnDTO { uniswapV3BurnDTOTickLower, ..} ) <$> f uniswapV3BurnDTOTickLower
{-# INLINE uniswapV3BurnDTOTickLowerL #-}

-- | 'uniswapV3BurnDTOTickUpper' Lens
uniswapV3BurnDTOTickUpperL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOTickUpperL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOTickUpper -> UniswapV3BurnDTO { uniswapV3BurnDTOTickUpper, ..} ) <$> f uniswapV3BurnDTOTickUpper
{-# INLINE uniswapV3BurnDTOTickUpperL #-}

-- | 'uniswapV3BurnDTOLogIndex' Lens
uniswapV3BurnDTOLogIndexL :: Lens_' UniswapV3BurnDTO (Maybe Text)
uniswapV3BurnDTOLogIndexL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOLogIndex -> UniswapV3BurnDTO { uniswapV3BurnDTOLogIndex, ..} ) <$> f uniswapV3BurnDTOLogIndex
{-# INLINE uniswapV3BurnDTOLogIndexL #-}

-- | 'uniswapV3BurnDTOVid' Lens
uniswapV3BurnDTOVidL :: Lens_' UniswapV3BurnDTO (Maybe Integer)
uniswapV3BurnDTOVidL f UniswapV3BurnDTO{..} = (\uniswapV3BurnDTOVid -> UniswapV3BurnDTO { uniswapV3BurnDTOVid, ..} ) <$> f uniswapV3BurnDTOVid
{-# INLINE uniswapV3BurnDTOVidL #-}



-- * UniswapV3FactoryDTO

-- | 'uniswapV3FactoryDTOEntryTime' Lens
uniswapV3FactoryDTOEntryTimeL :: Lens_' UniswapV3FactoryDTO (Maybe DateTime)
uniswapV3FactoryDTOEntryTimeL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOEntryTime -> UniswapV3FactoryDTO { uniswapV3FactoryDTOEntryTime, ..} ) <$> f uniswapV3FactoryDTOEntryTime
{-# INLINE uniswapV3FactoryDTOEntryTimeL #-}

-- | 'uniswapV3FactoryDTORecvTime' Lens
uniswapV3FactoryDTORecvTimeL :: Lens_' UniswapV3FactoryDTO (Maybe DateTime)
uniswapV3FactoryDTORecvTimeL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTORecvTime -> UniswapV3FactoryDTO { uniswapV3FactoryDTORecvTime, ..} ) <$> f uniswapV3FactoryDTORecvTime
{-# INLINE uniswapV3FactoryDTORecvTimeL #-}

-- | 'uniswapV3FactoryDTOBlockNumber' Lens
uniswapV3FactoryDTOBlockNumberL :: Lens_' UniswapV3FactoryDTO (Maybe Integer)
uniswapV3FactoryDTOBlockNumberL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOBlockNumber -> UniswapV3FactoryDTO { uniswapV3FactoryDTOBlockNumber, ..} ) <$> f uniswapV3FactoryDTOBlockNumber
{-# INLINE uniswapV3FactoryDTOBlockNumberL #-}

-- | 'uniswapV3FactoryDTOId' Lens
uniswapV3FactoryDTOIdL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOIdL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOId -> UniswapV3FactoryDTO { uniswapV3FactoryDTOId, ..} ) <$> f uniswapV3FactoryDTOId
{-# INLINE uniswapV3FactoryDTOIdL #-}

-- | 'uniswapV3FactoryDTOPoolCount' Lens
uniswapV3FactoryDTOPoolCountL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOPoolCountL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOPoolCount -> UniswapV3FactoryDTO { uniswapV3FactoryDTOPoolCount, ..} ) <$> f uniswapV3FactoryDTOPoolCount
{-# INLINE uniswapV3FactoryDTOPoolCountL #-}

-- | 'uniswapV3FactoryDTOTxCount' Lens
uniswapV3FactoryDTOTxCountL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTxCountL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTxCount -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTxCount, ..} ) <$> f uniswapV3FactoryDTOTxCount
{-# INLINE uniswapV3FactoryDTOTxCountL #-}

-- | 'uniswapV3FactoryDTOTotalVolumeUsd' Lens
uniswapV3FactoryDTOTotalVolumeUsdL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalVolumeUsdL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalVolumeUsd -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalVolumeUsd, ..} ) <$> f uniswapV3FactoryDTOTotalVolumeUsd
{-# INLINE uniswapV3FactoryDTOTotalVolumeUsdL #-}

-- | 'uniswapV3FactoryDTOTotalVolumeEth' Lens
uniswapV3FactoryDTOTotalVolumeEthL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalVolumeEthL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalVolumeEth -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalVolumeEth, ..} ) <$> f uniswapV3FactoryDTOTotalVolumeEth
{-# INLINE uniswapV3FactoryDTOTotalVolumeEthL #-}

-- | 'uniswapV3FactoryDTOTotalFeesUsd' Lens
uniswapV3FactoryDTOTotalFeesUsdL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalFeesUsdL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalFeesUsd -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalFeesUsd, ..} ) <$> f uniswapV3FactoryDTOTotalFeesUsd
{-# INLINE uniswapV3FactoryDTOTotalFeesUsdL #-}

-- | 'uniswapV3FactoryDTOTotalFeesEth' Lens
uniswapV3FactoryDTOTotalFeesEthL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalFeesEthL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalFeesEth -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalFeesEth, ..} ) <$> f uniswapV3FactoryDTOTotalFeesEth
{-# INLINE uniswapV3FactoryDTOTotalFeesEthL #-}

-- | 'uniswapV3FactoryDTOUntrackedVolumeUsd' Lens
uniswapV3FactoryDTOUntrackedVolumeUsdL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOUntrackedVolumeUsdL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOUntrackedVolumeUsd -> UniswapV3FactoryDTO { uniswapV3FactoryDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3FactoryDTOUntrackedVolumeUsd
{-# INLINE uniswapV3FactoryDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3FactoryDTOTotalValueLockedUsd' Lens
uniswapV3FactoryDTOTotalValueLockedUsdL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalValueLockedUsdL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalValueLockedUsd -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalValueLockedUsd, ..} ) <$> f uniswapV3FactoryDTOTotalValueLockedUsd
{-# INLINE uniswapV3FactoryDTOTotalValueLockedUsdL #-}

-- | 'uniswapV3FactoryDTOTotalValueLockedEth' Lens
uniswapV3FactoryDTOTotalValueLockedEthL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalValueLockedEthL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalValueLockedEth -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalValueLockedEth, ..} ) <$> f uniswapV3FactoryDTOTotalValueLockedEth
{-# INLINE uniswapV3FactoryDTOTotalValueLockedEthL #-}

-- | 'uniswapV3FactoryDTOTotalValueLockedUsdUntracked' Lens
uniswapV3FactoryDTOTotalValueLockedUsdUntrackedL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalValueLockedUsdUntrackedL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalValueLockedUsdUntracked -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalValueLockedUsdUntracked, ..} ) <$> f uniswapV3FactoryDTOTotalValueLockedUsdUntracked
{-# INLINE uniswapV3FactoryDTOTotalValueLockedUsdUntrackedL #-}

-- | 'uniswapV3FactoryDTOTotalValueLockedEthUntracked' Lens
uniswapV3FactoryDTOTotalValueLockedEthUntrackedL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOTotalValueLockedEthUntrackedL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOTotalValueLockedEthUntracked -> UniswapV3FactoryDTO { uniswapV3FactoryDTOTotalValueLockedEthUntracked, ..} ) <$> f uniswapV3FactoryDTOTotalValueLockedEthUntracked
{-# INLINE uniswapV3FactoryDTOTotalValueLockedEthUntrackedL #-}

-- | 'uniswapV3FactoryDTOOwner' Lens
uniswapV3FactoryDTOOwnerL :: Lens_' UniswapV3FactoryDTO (Maybe Text)
uniswapV3FactoryDTOOwnerL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOOwner -> UniswapV3FactoryDTO { uniswapV3FactoryDTOOwner, ..} ) <$> f uniswapV3FactoryDTOOwner
{-# INLINE uniswapV3FactoryDTOOwnerL #-}

-- | 'uniswapV3FactoryDTOVid' Lens
uniswapV3FactoryDTOVidL :: Lens_' UniswapV3FactoryDTO (Maybe Integer)
uniswapV3FactoryDTOVidL f UniswapV3FactoryDTO{..} = (\uniswapV3FactoryDTOVid -> UniswapV3FactoryDTO { uniswapV3FactoryDTOVid, ..} ) <$> f uniswapV3FactoryDTOVid
{-# INLINE uniswapV3FactoryDTOVidL #-}



-- * UniswapV3MintDTO

-- | 'uniswapV3MintDTOEntryTime' Lens
uniswapV3MintDTOEntryTimeL :: Lens_' UniswapV3MintDTO (Maybe DateTime)
uniswapV3MintDTOEntryTimeL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOEntryTime -> UniswapV3MintDTO { uniswapV3MintDTOEntryTime, ..} ) <$> f uniswapV3MintDTOEntryTime
{-# INLINE uniswapV3MintDTOEntryTimeL #-}

-- | 'uniswapV3MintDTORecvTime' Lens
uniswapV3MintDTORecvTimeL :: Lens_' UniswapV3MintDTO (Maybe DateTime)
uniswapV3MintDTORecvTimeL f UniswapV3MintDTO{..} = (\uniswapV3MintDTORecvTime -> UniswapV3MintDTO { uniswapV3MintDTORecvTime, ..} ) <$> f uniswapV3MintDTORecvTime
{-# INLINE uniswapV3MintDTORecvTimeL #-}

-- | 'uniswapV3MintDTOBlockNumber' Lens
uniswapV3MintDTOBlockNumberL :: Lens_' UniswapV3MintDTO (Maybe Integer)
uniswapV3MintDTOBlockNumberL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOBlockNumber -> UniswapV3MintDTO { uniswapV3MintDTOBlockNumber, ..} ) <$> f uniswapV3MintDTOBlockNumber
{-# INLINE uniswapV3MintDTOBlockNumberL #-}

-- | 'uniswapV3MintDTOId' Lens
uniswapV3MintDTOIdL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOIdL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOId -> UniswapV3MintDTO { uniswapV3MintDTOId, ..} ) <$> f uniswapV3MintDTOId
{-# INLINE uniswapV3MintDTOIdL #-}

-- | 'uniswapV3MintDTOTransaction' Lens
uniswapV3MintDTOTransactionL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOTransactionL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOTransaction -> UniswapV3MintDTO { uniswapV3MintDTOTransaction, ..} ) <$> f uniswapV3MintDTOTransaction
{-# INLINE uniswapV3MintDTOTransactionL #-}

-- | 'uniswapV3MintDTOTimestamp' Lens
uniswapV3MintDTOTimestampL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOTimestampL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOTimestamp -> UniswapV3MintDTO { uniswapV3MintDTOTimestamp, ..} ) <$> f uniswapV3MintDTOTimestamp
{-# INLINE uniswapV3MintDTOTimestampL #-}

-- | 'uniswapV3MintDTOPool' Lens
uniswapV3MintDTOPoolL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOPoolL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOPool -> UniswapV3MintDTO { uniswapV3MintDTOPool, ..} ) <$> f uniswapV3MintDTOPool
{-# INLINE uniswapV3MintDTOPoolL #-}

-- | 'uniswapV3MintDTOToken0' Lens
uniswapV3MintDTOToken0L :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOToken0L f UniswapV3MintDTO{..} = (\uniswapV3MintDTOToken0 -> UniswapV3MintDTO { uniswapV3MintDTOToken0, ..} ) <$> f uniswapV3MintDTOToken0
{-# INLINE uniswapV3MintDTOToken0L #-}

-- | 'uniswapV3MintDTOToken1' Lens
uniswapV3MintDTOToken1L :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOToken1L f UniswapV3MintDTO{..} = (\uniswapV3MintDTOToken1 -> UniswapV3MintDTO { uniswapV3MintDTOToken1, ..} ) <$> f uniswapV3MintDTOToken1
{-# INLINE uniswapV3MintDTOToken1L #-}

-- | 'uniswapV3MintDTOOwner' Lens
uniswapV3MintDTOOwnerL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOOwnerL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOOwner -> UniswapV3MintDTO { uniswapV3MintDTOOwner, ..} ) <$> f uniswapV3MintDTOOwner
{-# INLINE uniswapV3MintDTOOwnerL #-}

-- | 'uniswapV3MintDTOSender' Lens
uniswapV3MintDTOSenderL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOSenderL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOSender -> UniswapV3MintDTO { uniswapV3MintDTOSender, ..} ) <$> f uniswapV3MintDTOSender
{-# INLINE uniswapV3MintDTOSenderL #-}

-- | 'uniswapV3MintDTOOrigin' Lens
uniswapV3MintDTOOriginL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOOriginL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOOrigin -> UniswapV3MintDTO { uniswapV3MintDTOOrigin, ..} ) <$> f uniswapV3MintDTOOrigin
{-# INLINE uniswapV3MintDTOOriginL #-}

-- | 'uniswapV3MintDTOAmount' Lens
uniswapV3MintDTOAmountL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOAmountL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOAmount -> UniswapV3MintDTO { uniswapV3MintDTOAmount, ..} ) <$> f uniswapV3MintDTOAmount
{-# INLINE uniswapV3MintDTOAmountL #-}

-- | 'uniswapV3MintDTOAmount0' Lens
uniswapV3MintDTOAmount0L :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOAmount0L f UniswapV3MintDTO{..} = (\uniswapV3MintDTOAmount0 -> UniswapV3MintDTO { uniswapV3MintDTOAmount0, ..} ) <$> f uniswapV3MintDTOAmount0
{-# INLINE uniswapV3MintDTOAmount0L #-}

-- | 'uniswapV3MintDTOAmount1' Lens
uniswapV3MintDTOAmount1L :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOAmount1L f UniswapV3MintDTO{..} = (\uniswapV3MintDTOAmount1 -> UniswapV3MintDTO { uniswapV3MintDTOAmount1, ..} ) <$> f uniswapV3MintDTOAmount1
{-# INLINE uniswapV3MintDTOAmount1L #-}

-- | 'uniswapV3MintDTOAmountUsd' Lens
uniswapV3MintDTOAmountUsdL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOAmountUsdL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOAmountUsd -> UniswapV3MintDTO { uniswapV3MintDTOAmountUsd, ..} ) <$> f uniswapV3MintDTOAmountUsd
{-# INLINE uniswapV3MintDTOAmountUsdL #-}

-- | 'uniswapV3MintDTOTickLower' Lens
uniswapV3MintDTOTickLowerL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOTickLowerL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOTickLower -> UniswapV3MintDTO { uniswapV3MintDTOTickLower, ..} ) <$> f uniswapV3MintDTOTickLower
{-# INLINE uniswapV3MintDTOTickLowerL #-}

-- | 'uniswapV3MintDTOTickUpper' Lens
uniswapV3MintDTOTickUpperL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOTickUpperL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOTickUpper -> UniswapV3MintDTO { uniswapV3MintDTOTickUpper, ..} ) <$> f uniswapV3MintDTOTickUpper
{-# INLINE uniswapV3MintDTOTickUpperL #-}

-- | 'uniswapV3MintDTOLogIndex' Lens
uniswapV3MintDTOLogIndexL :: Lens_' UniswapV3MintDTO (Maybe Text)
uniswapV3MintDTOLogIndexL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOLogIndex -> UniswapV3MintDTO { uniswapV3MintDTOLogIndex, ..} ) <$> f uniswapV3MintDTOLogIndex
{-# INLINE uniswapV3MintDTOLogIndexL #-}

-- | 'uniswapV3MintDTOVid' Lens
uniswapV3MintDTOVidL :: Lens_' UniswapV3MintDTO (Maybe Integer)
uniswapV3MintDTOVidL f UniswapV3MintDTO{..} = (\uniswapV3MintDTOVid -> UniswapV3MintDTO { uniswapV3MintDTOVid, ..} ) <$> f uniswapV3MintDTOVid
{-# INLINE uniswapV3MintDTOVidL #-}



-- * UniswapV3PoolDTO

-- | 'uniswapV3PoolDTOEntryTime' Lens
uniswapV3PoolDTOEntryTimeL :: Lens_' UniswapV3PoolDTO (Maybe DateTime)
uniswapV3PoolDTOEntryTimeL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOEntryTime -> UniswapV3PoolDTO { uniswapV3PoolDTOEntryTime, ..} ) <$> f uniswapV3PoolDTOEntryTime
{-# INLINE uniswapV3PoolDTOEntryTimeL #-}

-- | 'uniswapV3PoolDTORecvTime' Lens
uniswapV3PoolDTORecvTimeL :: Lens_' UniswapV3PoolDTO (Maybe DateTime)
uniswapV3PoolDTORecvTimeL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTORecvTime -> UniswapV3PoolDTO { uniswapV3PoolDTORecvTime, ..} ) <$> f uniswapV3PoolDTORecvTime
{-# INLINE uniswapV3PoolDTORecvTimeL #-}

-- | 'uniswapV3PoolDTOBlockNumber' Lens
uniswapV3PoolDTOBlockNumberL :: Lens_' UniswapV3PoolDTO (Maybe Integer)
uniswapV3PoolDTOBlockNumberL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOBlockNumber -> UniswapV3PoolDTO { uniswapV3PoolDTOBlockNumber, ..} ) <$> f uniswapV3PoolDTOBlockNumber
{-# INLINE uniswapV3PoolDTOBlockNumberL #-}

-- | 'uniswapV3PoolDTOVid' Lens
uniswapV3PoolDTOVidL :: Lens_' UniswapV3PoolDTO (Maybe Integer)
uniswapV3PoolDTOVidL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOVid -> UniswapV3PoolDTO { uniswapV3PoolDTOVid, ..} ) <$> f uniswapV3PoolDTOVid
{-# INLINE uniswapV3PoolDTOVidL #-}

-- | 'uniswapV3PoolDTOId' Lens
uniswapV3PoolDTOIdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOIdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOId -> UniswapV3PoolDTO { uniswapV3PoolDTOId, ..} ) <$> f uniswapV3PoolDTOId
{-# INLINE uniswapV3PoolDTOIdL #-}

-- | 'uniswapV3PoolDTOCreatedAtTimestamp' Lens
uniswapV3PoolDTOCreatedAtTimestampL :: Lens_' UniswapV3PoolDTO (Maybe DateTime)
uniswapV3PoolDTOCreatedAtTimestampL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOCreatedAtTimestamp -> UniswapV3PoolDTO { uniswapV3PoolDTOCreatedAtTimestamp, ..} ) <$> f uniswapV3PoolDTOCreatedAtTimestamp
{-# INLINE uniswapV3PoolDTOCreatedAtTimestampL #-}

-- | 'uniswapV3PoolDTOToken0' Lens
uniswapV3PoolDTOToken0L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOToken0L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOToken0 -> UniswapV3PoolDTO { uniswapV3PoolDTOToken0, ..} ) <$> f uniswapV3PoolDTOToken0
{-# INLINE uniswapV3PoolDTOToken0L #-}

-- | 'uniswapV3PoolDTOToken1' Lens
uniswapV3PoolDTOToken1L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOToken1L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOToken1 -> UniswapV3PoolDTO { uniswapV3PoolDTOToken1, ..} ) <$> f uniswapV3PoolDTOToken1
{-# INLINE uniswapV3PoolDTOToken1L #-}

-- | 'uniswapV3PoolDTOFeeTier' Lens
uniswapV3PoolDTOFeeTierL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOFeeTierL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOFeeTier -> UniswapV3PoolDTO { uniswapV3PoolDTOFeeTier, ..} ) <$> f uniswapV3PoolDTOFeeTier
{-# INLINE uniswapV3PoolDTOFeeTierL #-}

-- | 'uniswapV3PoolDTOLiquidity' Lens
uniswapV3PoolDTOLiquidityL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOLiquidityL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOLiquidity -> UniswapV3PoolDTO { uniswapV3PoolDTOLiquidity, ..} ) <$> f uniswapV3PoolDTOLiquidity
{-# INLINE uniswapV3PoolDTOLiquidityL #-}

-- | 'uniswapV3PoolDTOSqrtPrice' Lens
uniswapV3PoolDTOSqrtPriceL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOSqrtPriceL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOSqrtPrice -> UniswapV3PoolDTO { uniswapV3PoolDTOSqrtPrice, ..} ) <$> f uniswapV3PoolDTOSqrtPrice
{-# INLINE uniswapV3PoolDTOSqrtPriceL #-}

-- | 'uniswapV3PoolDTOFeeGrowthGlobal0x128' Lens
uniswapV3PoolDTOFeeGrowthGlobal0x128L :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOFeeGrowthGlobal0x128L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOFeeGrowthGlobal0x128 -> UniswapV3PoolDTO { uniswapV3PoolDTOFeeGrowthGlobal0x128, ..} ) <$> f uniswapV3PoolDTOFeeGrowthGlobal0x128
{-# INLINE uniswapV3PoolDTOFeeGrowthGlobal0x128L #-}

-- | 'uniswapV3PoolDTOFeeGrowthGlobal1x128' Lens
uniswapV3PoolDTOFeeGrowthGlobal1x128L :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOFeeGrowthGlobal1x128L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOFeeGrowthGlobal1x128 -> UniswapV3PoolDTO { uniswapV3PoolDTOFeeGrowthGlobal1x128, ..} ) <$> f uniswapV3PoolDTOFeeGrowthGlobal1x128
{-# INLINE uniswapV3PoolDTOFeeGrowthGlobal1x128L #-}

-- | 'uniswapV3PoolDTOToken0Price' Lens
uniswapV3PoolDTOToken0PriceL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOToken0PriceL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOToken0Price -> UniswapV3PoolDTO { uniswapV3PoolDTOToken0Price, ..} ) <$> f uniswapV3PoolDTOToken0Price
{-# INLINE uniswapV3PoolDTOToken0PriceL #-}

-- | 'uniswapV3PoolDTOToken1Price' Lens
uniswapV3PoolDTOToken1PriceL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOToken1PriceL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOToken1Price -> UniswapV3PoolDTO { uniswapV3PoolDTOToken1Price, ..} ) <$> f uniswapV3PoolDTOToken1Price
{-# INLINE uniswapV3PoolDTOToken1PriceL #-}

-- | 'uniswapV3PoolDTOTick' Lens
uniswapV3PoolDTOTickL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOTickL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTick -> UniswapV3PoolDTO { uniswapV3PoolDTOTick, ..} ) <$> f uniswapV3PoolDTOTick
{-# INLINE uniswapV3PoolDTOTickL #-}

-- | 'uniswapV3PoolDTOObservationIndex' Lens
uniswapV3PoolDTOObservationIndexL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOObservationIndexL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOObservationIndex -> UniswapV3PoolDTO { uniswapV3PoolDTOObservationIndex, ..} ) <$> f uniswapV3PoolDTOObservationIndex
{-# INLINE uniswapV3PoolDTOObservationIndexL #-}

-- | 'uniswapV3PoolDTOVolumeToken0' Lens
uniswapV3PoolDTOVolumeToken0L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOVolumeToken0L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOVolumeToken0 -> UniswapV3PoolDTO { uniswapV3PoolDTOVolumeToken0, ..} ) <$> f uniswapV3PoolDTOVolumeToken0
{-# INLINE uniswapV3PoolDTOVolumeToken0L #-}

-- | 'uniswapV3PoolDTOVolumeToken1' Lens
uniswapV3PoolDTOVolumeToken1L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOVolumeToken1L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOVolumeToken1 -> UniswapV3PoolDTO { uniswapV3PoolDTOVolumeToken1, ..} ) <$> f uniswapV3PoolDTOVolumeToken1
{-# INLINE uniswapV3PoolDTOVolumeToken1L #-}

-- | 'uniswapV3PoolDTOVolumeUsd' Lens
uniswapV3PoolDTOVolumeUsdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOVolumeUsdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOVolumeUsd -> UniswapV3PoolDTO { uniswapV3PoolDTOVolumeUsd, ..} ) <$> f uniswapV3PoolDTOVolumeUsd
{-# INLINE uniswapV3PoolDTOVolumeUsdL #-}

-- | 'uniswapV3PoolDTOUntrackedVolumeUsd' Lens
uniswapV3PoolDTOUntrackedVolumeUsdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOUntrackedVolumeUsdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOUntrackedVolumeUsd -> UniswapV3PoolDTO { uniswapV3PoolDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3PoolDTOUntrackedVolumeUsd
{-# INLINE uniswapV3PoolDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3PoolDTOFeesUsd' Lens
uniswapV3PoolDTOFeesUsdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOFeesUsdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOFeesUsd -> UniswapV3PoolDTO { uniswapV3PoolDTOFeesUsd, ..} ) <$> f uniswapV3PoolDTOFeesUsd
{-# INLINE uniswapV3PoolDTOFeesUsdL #-}

-- | 'uniswapV3PoolDTOTxCount' Lens
uniswapV3PoolDTOTxCountL :: Lens_' UniswapV3PoolDTO (Maybe NumericsBigInteger)
uniswapV3PoolDTOTxCountL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTxCount -> UniswapV3PoolDTO { uniswapV3PoolDTOTxCount, ..} ) <$> f uniswapV3PoolDTOTxCount
{-# INLINE uniswapV3PoolDTOTxCountL #-}

-- | 'uniswapV3PoolDTOCollectedFeesToken0' Lens
uniswapV3PoolDTOCollectedFeesToken0L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOCollectedFeesToken0L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOCollectedFeesToken0 -> UniswapV3PoolDTO { uniswapV3PoolDTOCollectedFeesToken0, ..} ) <$> f uniswapV3PoolDTOCollectedFeesToken0
{-# INLINE uniswapV3PoolDTOCollectedFeesToken0L #-}

-- | 'uniswapV3PoolDTOCollectedFeesToken1' Lens
uniswapV3PoolDTOCollectedFeesToken1L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOCollectedFeesToken1L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOCollectedFeesToken1 -> UniswapV3PoolDTO { uniswapV3PoolDTOCollectedFeesToken1, ..} ) <$> f uniswapV3PoolDTOCollectedFeesToken1
{-# INLINE uniswapV3PoolDTOCollectedFeesToken1L #-}

-- | 'uniswapV3PoolDTOCollectedFeesUsd' Lens
uniswapV3PoolDTOCollectedFeesUsdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOCollectedFeesUsdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOCollectedFeesUsd -> UniswapV3PoolDTO { uniswapV3PoolDTOCollectedFeesUsd, ..} ) <$> f uniswapV3PoolDTOCollectedFeesUsd
{-# INLINE uniswapV3PoolDTOCollectedFeesUsdL #-}

-- | 'uniswapV3PoolDTOTotalValueLockedToken0' Lens
uniswapV3PoolDTOTotalValueLockedToken0L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOTotalValueLockedToken0L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTotalValueLockedToken0 -> UniswapV3PoolDTO { uniswapV3PoolDTOTotalValueLockedToken0, ..} ) <$> f uniswapV3PoolDTOTotalValueLockedToken0
{-# INLINE uniswapV3PoolDTOTotalValueLockedToken0L #-}

-- | 'uniswapV3PoolDTOTotalValueLockedToken1' Lens
uniswapV3PoolDTOTotalValueLockedToken1L :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOTotalValueLockedToken1L f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTotalValueLockedToken1 -> UniswapV3PoolDTO { uniswapV3PoolDTOTotalValueLockedToken1, ..} ) <$> f uniswapV3PoolDTOTotalValueLockedToken1
{-# INLINE uniswapV3PoolDTOTotalValueLockedToken1L #-}

-- | 'uniswapV3PoolDTOTotalValueLockedEth' Lens
uniswapV3PoolDTOTotalValueLockedEthL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOTotalValueLockedEthL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTotalValueLockedEth -> UniswapV3PoolDTO { uniswapV3PoolDTOTotalValueLockedEth, ..} ) <$> f uniswapV3PoolDTOTotalValueLockedEth
{-# INLINE uniswapV3PoolDTOTotalValueLockedEthL #-}

-- | 'uniswapV3PoolDTOTotalValueLockedUsd' Lens
uniswapV3PoolDTOTotalValueLockedUsdL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOTotalValueLockedUsdL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTotalValueLockedUsd -> UniswapV3PoolDTO { uniswapV3PoolDTOTotalValueLockedUsd, ..} ) <$> f uniswapV3PoolDTOTotalValueLockedUsd
{-# INLINE uniswapV3PoolDTOTotalValueLockedUsdL #-}

-- | 'uniswapV3PoolDTOTotalValueLockedUsdUntracked' Lens
uniswapV3PoolDTOTotalValueLockedUsdUntrackedL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOTotalValueLockedUsdUntrackedL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOTotalValueLockedUsdUntracked -> UniswapV3PoolDTO { uniswapV3PoolDTOTotalValueLockedUsdUntracked, ..} ) <$> f uniswapV3PoolDTOTotalValueLockedUsdUntracked
{-# INLINE uniswapV3PoolDTOTotalValueLockedUsdUntrackedL #-}

-- | 'uniswapV3PoolDTOLiquidityProviderCount' Lens
uniswapV3PoolDTOLiquidityProviderCountL :: Lens_' UniswapV3PoolDTO (Maybe Text)
uniswapV3PoolDTOLiquidityProviderCountL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOLiquidityProviderCount -> UniswapV3PoolDTO { uniswapV3PoolDTOLiquidityProviderCount, ..} ) <$> f uniswapV3PoolDTOLiquidityProviderCount
{-# INLINE uniswapV3PoolDTOLiquidityProviderCountL #-}

-- | 'uniswapV3PoolDTOEvaluatedAsk' Lens
uniswapV3PoolDTOEvaluatedAskL :: Lens_' UniswapV3PoolDTO (Maybe Double)
uniswapV3PoolDTOEvaluatedAskL f UniswapV3PoolDTO{..} = (\uniswapV3PoolDTOEvaluatedAsk -> UniswapV3PoolDTO { uniswapV3PoolDTOEvaluatedAsk, ..} ) <$> f uniswapV3PoolDTOEvaluatedAsk
{-# INLINE uniswapV3PoolDTOEvaluatedAskL #-}



-- * UniswapV3PoolDayDataDTO

-- | 'uniswapV3PoolDayDataDTOEntryTime' Lens
uniswapV3PoolDayDataDTOEntryTimeL :: Lens_' UniswapV3PoolDayDataDTO (Maybe DateTime)
uniswapV3PoolDayDataDTOEntryTimeL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOEntryTime -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOEntryTime, ..} ) <$> f uniswapV3PoolDayDataDTOEntryTime
{-# INLINE uniswapV3PoolDayDataDTOEntryTimeL #-}

-- | 'uniswapV3PoolDayDataDTORecvTime' Lens
uniswapV3PoolDayDataDTORecvTimeL :: Lens_' UniswapV3PoolDayDataDTO (Maybe DateTime)
uniswapV3PoolDayDataDTORecvTimeL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTORecvTime -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTORecvTime, ..} ) <$> f uniswapV3PoolDayDataDTORecvTime
{-# INLINE uniswapV3PoolDayDataDTORecvTimeL #-}

-- | 'uniswapV3PoolDayDataDTOBlockNumber' Lens
uniswapV3PoolDayDataDTOBlockNumberL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Integer)
uniswapV3PoolDayDataDTOBlockNumberL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOBlockNumber -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOBlockNumber, ..} ) <$> f uniswapV3PoolDayDataDTOBlockNumber
{-# INLINE uniswapV3PoolDayDataDTOBlockNumberL #-}

-- | 'uniswapV3PoolDayDataDTOId' Lens
uniswapV3PoolDayDataDTOIdL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOIdL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOId -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOId, ..} ) <$> f uniswapV3PoolDayDataDTOId
{-# INLINE uniswapV3PoolDayDataDTOIdL #-}

-- | 'uniswapV3PoolDayDataDTODate' Lens
uniswapV3PoolDayDataDTODateL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Int)
uniswapV3PoolDayDataDTODateL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTODate -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTODate, ..} ) <$> f uniswapV3PoolDayDataDTODate
{-# INLINE uniswapV3PoolDayDataDTODateL #-}

-- | 'uniswapV3PoolDayDataDTOPool' Lens
uniswapV3PoolDayDataDTOPoolL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOPoolL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOPool -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOPool, ..} ) <$> f uniswapV3PoolDayDataDTOPool
{-# INLINE uniswapV3PoolDayDataDTOPoolL #-}

-- | 'uniswapV3PoolDayDataDTOLiquidity' Lens
uniswapV3PoolDayDataDTOLiquidityL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOLiquidityL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOLiquidity -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOLiquidity, ..} ) <$> f uniswapV3PoolDayDataDTOLiquidity
{-# INLINE uniswapV3PoolDayDataDTOLiquidityL #-}

-- | 'uniswapV3PoolDayDataDTOSqrtPrice' Lens
uniswapV3PoolDayDataDTOSqrtPriceL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOSqrtPriceL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOSqrtPrice -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOSqrtPrice, ..} ) <$> f uniswapV3PoolDayDataDTOSqrtPrice
{-# INLINE uniswapV3PoolDayDataDTOSqrtPriceL #-}

-- | 'uniswapV3PoolDayDataDTOToken0Price' Lens
uniswapV3PoolDayDataDTOToken0PriceL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOToken0PriceL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOToken0Price -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOToken0Price, ..} ) <$> f uniswapV3PoolDayDataDTOToken0Price
{-# INLINE uniswapV3PoolDayDataDTOToken0PriceL #-}

-- | 'uniswapV3PoolDayDataDTOToken1Price' Lens
uniswapV3PoolDayDataDTOToken1PriceL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOToken1PriceL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOToken1Price -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOToken1Price, ..} ) <$> f uniswapV3PoolDayDataDTOToken1Price
{-# INLINE uniswapV3PoolDayDataDTOToken1PriceL #-}

-- | 'uniswapV3PoolDayDataDTOTick' Lens
uniswapV3PoolDayDataDTOTickL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOTickL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOTick -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOTick, ..} ) <$> f uniswapV3PoolDayDataDTOTick
{-# INLINE uniswapV3PoolDayDataDTOTickL #-}

-- | 'uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128' Lens
uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128L :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128L f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128 -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128, ..} ) <$> f uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128
{-# INLINE uniswapV3PoolDayDataDTOFeeGrowthGlobal0x128L #-}

-- | 'uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128' Lens
uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128L :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128L f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128 -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128, ..} ) <$> f uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128
{-# INLINE uniswapV3PoolDayDataDTOFeeGrowthGlobal1x128L #-}

-- | 'uniswapV3PoolDayDataDTOTvlUsd' Lens
uniswapV3PoolDayDataDTOTvlUsdL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOTvlUsdL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOTvlUsd -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOTvlUsd, ..} ) <$> f uniswapV3PoolDayDataDTOTvlUsd
{-# INLINE uniswapV3PoolDayDataDTOTvlUsdL #-}

-- | 'uniswapV3PoolDayDataDTOVolumeToken0' Lens
uniswapV3PoolDayDataDTOVolumeToken0L :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOVolumeToken0L f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOVolumeToken0 -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOVolumeToken0, ..} ) <$> f uniswapV3PoolDayDataDTOVolumeToken0
{-# INLINE uniswapV3PoolDayDataDTOVolumeToken0L #-}

-- | 'uniswapV3PoolDayDataDTOVolumeToken1' Lens
uniswapV3PoolDayDataDTOVolumeToken1L :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOVolumeToken1L f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOVolumeToken1 -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOVolumeToken1, ..} ) <$> f uniswapV3PoolDayDataDTOVolumeToken1
{-# INLINE uniswapV3PoolDayDataDTOVolumeToken1L #-}

-- | 'uniswapV3PoolDayDataDTOVolumeUsd' Lens
uniswapV3PoolDayDataDTOVolumeUsdL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOVolumeUsdL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOVolumeUsd -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOVolumeUsd, ..} ) <$> f uniswapV3PoolDayDataDTOVolumeUsd
{-# INLINE uniswapV3PoolDayDataDTOVolumeUsdL #-}

-- | 'uniswapV3PoolDayDataDTOFeesUsd' Lens
uniswapV3PoolDayDataDTOFeesUsdL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOFeesUsdL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOFeesUsd -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOFeesUsd, ..} ) <$> f uniswapV3PoolDayDataDTOFeesUsd
{-# INLINE uniswapV3PoolDayDataDTOFeesUsdL #-}

-- | 'uniswapV3PoolDayDataDTOTxCount' Lens
uniswapV3PoolDayDataDTOTxCountL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOTxCountL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOTxCount -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOTxCount, ..} ) <$> f uniswapV3PoolDayDataDTOTxCount
{-# INLINE uniswapV3PoolDayDataDTOTxCountL #-}

-- | 'uniswapV3PoolDayDataDTOOpen' Lens
uniswapV3PoolDayDataDTOOpenL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOOpenL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOOpen -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOOpen, ..} ) <$> f uniswapV3PoolDayDataDTOOpen
{-# INLINE uniswapV3PoolDayDataDTOOpenL #-}

-- | 'uniswapV3PoolDayDataDTOHigh' Lens
uniswapV3PoolDayDataDTOHighL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOHighL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOHigh -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOHigh, ..} ) <$> f uniswapV3PoolDayDataDTOHigh
{-# INLINE uniswapV3PoolDayDataDTOHighL #-}

-- | 'uniswapV3PoolDayDataDTOLow' Lens
uniswapV3PoolDayDataDTOLowL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOLowL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOLow -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOLow, ..} ) <$> f uniswapV3PoolDayDataDTOLow
{-# INLINE uniswapV3PoolDayDataDTOLowL #-}

-- | 'uniswapV3PoolDayDataDTOClose' Lens
uniswapV3PoolDayDataDTOCloseL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Text)
uniswapV3PoolDayDataDTOCloseL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOClose -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOClose, ..} ) <$> f uniswapV3PoolDayDataDTOClose
{-# INLINE uniswapV3PoolDayDataDTOCloseL #-}

-- | 'uniswapV3PoolDayDataDTOVid' Lens
uniswapV3PoolDayDataDTOVidL :: Lens_' UniswapV3PoolDayDataDTO (Maybe Integer)
uniswapV3PoolDayDataDTOVidL f UniswapV3PoolDayDataDTO{..} = (\uniswapV3PoolDayDataDTOVid -> UniswapV3PoolDayDataDTO { uniswapV3PoolDayDataDTOVid, ..} ) <$> f uniswapV3PoolDayDataDTOVid
{-# INLINE uniswapV3PoolDayDataDTOVidL #-}



-- * UniswapV3PoolHourDataDTO

-- | 'uniswapV3PoolHourDataDTOEntryTime' Lens
uniswapV3PoolHourDataDTOEntryTimeL :: Lens_' UniswapV3PoolHourDataDTO (Maybe DateTime)
uniswapV3PoolHourDataDTOEntryTimeL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOEntryTime -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOEntryTime, ..} ) <$> f uniswapV3PoolHourDataDTOEntryTime
{-# INLINE uniswapV3PoolHourDataDTOEntryTimeL #-}

-- | 'uniswapV3PoolHourDataDTORecvTime' Lens
uniswapV3PoolHourDataDTORecvTimeL :: Lens_' UniswapV3PoolHourDataDTO (Maybe DateTime)
uniswapV3PoolHourDataDTORecvTimeL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTORecvTime -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTORecvTime, ..} ) <$> f uniswapV3PoolHourDataDTORecvTime
{-# INLINE uniswapV3PoolHourDataDTORecvTimeL #-}

-- | 'uniswapV3PoolHourDataDTOBlockNumber' Lens
uniswapV3PoolHourDataDTOBlockNumberL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Integer)
uniswapV3PoolHourDataDTOBlockNumberL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOBlockNumber -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOBlockNumber, ..} ) <$> f uniswapV3PoolHourDataDTOBlockNumber
{-# INLINE uniswapV3PoolHourDataDTOBlockNumberL #-}

-- | 'uniswapV3PoolHourDataDTOId' Lens
uniswapV3PoolHourDataDTOIdL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOIdL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOId -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOId, ..} ) <$> f uniswapV3PoolHourDataDTOId
{-# INLINE uniswapV3PoolHourDataDTOIdL #-}

-- | 'uniswapV3PoolHourDataDTOPeriodStartUnix' Lens
uniswapV3PoolHourDataDTOPeriodStartUnixL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Int)
uniswapV3PoolHourDataDTOPeriodStartUnixL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOPeriodStartUnix -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOPeriodStartUnix, ..} ) <$> f uniswapV3PoolHourDataDTOPeriodStartUnix
{-# INLINE uniswapV3PoolHourDataDTOPeriodStartUnixL #-}

-- | 'uniswapV3PoolHourDataDTOPool' Lens
uniswapV3PoolHourDataDTOPoolL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOPoolL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOPool -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOPool, ..} ) <$> f uniswapV3PoolHourDataDTOPool
{-# INLINE uniswapV3PoolHourDataDTOPoolL #-}

-- | 'uniswapV3PoolHourDataDTOLiquidity' Lens
uniswapV3PoolHourDataDTOLiquidityL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOLiquidityL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOLiquidity -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOLiquidity, ..} ) <$> f uniswapV3PoolHourDataDTOLiquidity
{-# INLINE uniswapV3PoolHourDataDTOLiquidityL #-}

-- | 'uniswapV3PoolHourDataDTOSqrtPrice' Lens
uniswapV3PoolHourDataDTOSqrtPriceL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOSqrtPriceL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOSqrtPrice -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOSqrtPrice, ..} ) <$> f uniswapV3PoolHourDataDTOSqrtPrice
{-# INLINE uniswapV3PoolHourDataDTOSqrtPriceL #-}

-- | 'uniswapV3PoolHourDataDTOToken0Price' Lens
uniswapV3PoolHourDataDTOToken0PriceL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOToken0PriceL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOToken0Price -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOToken0Price, ..} ) <$> f uniswapV3PoolHourDataDTOToken0Price
{-# INLINE uniswapV3PoolHourDataDTOToken0PriceL #-}

-- | 'uniswapV3PoolHourDataDTOToken1Price' Lens
uniswapV3PoolHourDataDTOToken1PriceL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOToken1PriceL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOToken1Price -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOToken1Price, ..} ) <$> f uniswapV3PoolHourDataDTOToken1Price
{-# INLINE uniswapV3PoolHourDataDTOToken1PriceL #-}

-- | 'uniswapV3PoolHourDataDTOTick' Lens
uniswapV3PoolHourDataDTOTickL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOTickL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOTick -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOTick, ..} ) <$> f uniswapV3PoolHourDataDTOTick
{-# INLINE uniswapV3PoolHourDataDTOTickL #-}

-- | 'uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128' Lens
uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128L :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128L f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128 -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128, ..} ) <$> f uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128
{-# INLINE uniswapV3PoolHourDataDTOFeeGrowthGlobal0x128L #-}

-- | 'uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128' Lens
uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128L :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128L f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128 -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128, ..} ) <$> f uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128
{-# INLINE uniswapV3PoolHourDataDTOFeeGrowthGlobal1x128L #-}

-- | 'uniswapV3PoolHourDataDTOTvlUsd' Lens
uniswapV3PoolHourDataDTOTvlUsdL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOTvlUsdL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOTvlUsd -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOTvlUsd, ..} ) <$> f uniswapV3PoolHourDataDTOTvlUsd
{-# INLINE uniswapV3PoolHourDataDTOTvlUsdL #-}

-- | 'uniswapV3PoolHourDataDTOVolumeToken0' Lens
uniswapV3PoolHourDataDTOVolumeToken0L :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOVolumeToken0L f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOVolumeToken0 -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOVolumeToken0, ..} ) <$> f uniswapV3PoolHourDataDTOVolumeToken0
{-# INLINE uniswapV3PoolHourDataDTOVolumeToken0L #-}

-- | 'uniswapV3PoolHourDataDTOVolumeToken1' Lens
uniswapV3PoolHourDataDTOVolumeToken1L :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOVolumeToken1L f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOVolumeToken1 -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOVolumeToken1, ..} ) <$> f uniswapV3PoolHourDataDTOVolumeToken1
{-# INLINE uniswapV3PoolHourDataDTOVolumeToken1L #-}

-- | 'uniswapV3PoolHourDataDTOVolumeUsd' Lens
uniswapV3PoolHourDataDTOVolumeUsdL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOVolumeUsdL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOVolumeUsd -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOVolumeUsd, ..} ) <$> f uniswapV3PoolHourDataDTOVolumeUsd
{-# INLINE uniswapV3PoolHourDataDTOVolumeUsdL #-}

-- | 'uniswapV3PoolHourDataDTOFeesUsd' Lens
uniswapV3PoolHourDataDTOFeesUsdL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOFeesUsdL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOFeesUsd -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOFeesUsd, ..} ) <$> f uniswapV3PoolHourDataDTOFeesUsd
{-# INLINE uniswapV3PoolHourDataDTOFeesUsdL #-}

-- | 'uniswapV3PoolHourDataDTOTxCount' Lens
uniswapV3PoolHourDataDTOTxCountL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOTxCountL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOTxCount -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOTxCount, ..} ) <$> f uniswapV3PoolHourDataDTOTxCount
{-# INLINE uniswapV3PoolHourDataDTOTxCountL #-}

-- | 'uniswapV3PoolHourDataDTOOpen' Lens
uniswapV3PoolHourDataDTOOpenL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOOpenL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOOpen -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOOpen, ..} ) <$> f uniswapV3PoolHourDataDTOOpen
{-# INLINE uniswapV3PoolHourDataDTOOpenL #-}

-- | 'uniswapV3PoolHourDataDTOHigh' Lens
uniswapV3PoolHourDataDTOHighL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOHighL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOHigh -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOHigh, ..} ) <$> f uniswapV3PoolHourDataDTOHigh
{-# INLINE uniswapV3PoolHourDataDTOHighL #-}

-- | 'uniswapV3PoolHourDataDTOLow' Lens
uniswapV3PoolHourDataDTOLowL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOLowL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOLow -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOLow, ..} ) <$> f uniswapV3PoolHourDataDTOLow
{-# INLINE uniswapV3PoolHourDataDTOLowL #-}

-- | 'uniswapV3PoolHourDataDTOClose' Lens
uniswapV3PoolHourDataDTOCloseL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Text)
uniswapV3PoolHourDataDTOCloseL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOClose -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOClose, ..} ) <$> f uniswapV3PoolHourDataDTOClose
{-# INLINE uniswapV3PoolHourDataDTOCloseL #-}

-- | 'uniswapV3PoolHourDataDTOVid' Lens
uniswapV3PoolHourDataDTOVidL :: Lens_' UniswapV3PoolHourDataDTO (Maybe Integer)
uniswapV3PoolHourDataDTOVidL f UniswapV3PoolHourDataDTO{..} = (\uniswapV3PoolHourDataDTOVid -> UniswapV3PoolHourDataDTO { uniswapV3PoolHourDataDTOVid, ..} ) <$> f uniswapV3PoolHourDataDTOVid
{-# INLINE uniswapV3PoolHourDataDTOVidL #-}



-- * UniswapV3PositionDTO

-- | 'uniswapV3PositionDTOEntryTime' Lens
uniswapV3PositionDTOEntryTimeL :: Lens_' UniswapV3PositionDTO (Maybe DateTime)
uniswapV3PositionDTOEntryTimeL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOEntryTime -> UniswapV3PositionDTO { uniswapV3PositionDTOEntryTime, ..} ) <$> f uniswapV3PositionDTOEntryTime
{-# INLINE uniswapV3PositionDTOEntryTimeL #-}

-- | 'uniswapV3PositionDTORecvTime' Lens
uniswapV3PositionDTORecvTimeL :: Lens_' UniswapV3PositionDTO (Maybe DateTime)
uniswapV3PositionDTORecvTimeL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTORecvTime -> UniswapV3PositionDTO { uniswapV3PositionDTORecvTime, ..} ) <$> f uniswapV3PositionDTORecvTime
{-# INLINE uniswapV3PositionDTORecvTimeL #-}

-- | 'uniswapV3PositionDTOBlockNumber' Lens
uniswapV3PositionDTOBlockNumberL :: Lens_' UniswapV3PositionDTO (Maybe Integer)
uniswapV3PositionDTOBlockNumberL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOBlockNumber -> UniswapV3PositionDTO { uniswapV3PositionDTOBlockNumber, ..} ) <$> f uniswapV3PositionDTOBlockNumber
{-# INLINE uniswapV3PositionDTOBlockNumberL #-}

-- | 'uniswapV3PositionDTOId' Lens
uniswapV3PositionDTOIdL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOIdL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOId -> UniswapV3PositionDTO { uniswapV3PositionDTOId, ..} ) <$> f uniswapV3PositionDTOId
{-# INLINE uniswapV3PositionDTOIdL #-}

-- | 'uniswapV3PositionDTOOwner' Lens
uniswapV3PositionDTOOwnerL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOOwnerL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOOwner -> UniswapV3PositionDTO { uniswapV3PositionDTOOwner, ..} ) <$> f uniswapV3PositionDTOOwner
{-# INLINE uniswapV3PositionDTOOwnerL #-}

-- | 'uniswapV3PositionDTOPool' Lens
uniswapV3PositionDTOPoolL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOPoolL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOPool -> UniswapV3PositionDTO { uniswapV3PositionDTOPool, ..} ) <$> f uniswapV3PositionDTOPool
{-# INLINE uniswapV3PositionDTOPoolL #-}

-- | 'uniswapV3PositionDTOToken0' Lens
uniswapV3PositionDTOToken0L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOToken0L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOToken0 -> UniswapV3PositionDTO { uniswapV3PositionDTOToken0, ..} ) <$> f uniswapV3PositionDTOToken0
{-# INLINE uniswapV3PositionDTOToken0L #-}

-- | 'uniswapV3PositionDTOToken1' Lens
uniswapV3PositionDTOToken1L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOToken1L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOToken1 -> UniswapV3PositionDTO { uniswapV3PositionDTOToken1, ..} ) <$> f uniswapV3PositionDTOToken1
{-# INLINE uniswapV3PositionDTOToken1L #-}

-- | 'uniswapV3PositionDTOTickLower' Lens
uniswapV3PositionDTOTickLowerL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOTickLowerL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOTickLower -> UniswapV3PositionDTO { uniswapV3PositionDTOTickLower, ..} ) <$> f uniswapV3PositionDTOTickLower
{-# INLINE uniswapV3PositionDTOTickLowerL #-}

-- | 'uniswapV3PositionDTOTickUpper' Lens
uniswapV3PositionDTOTickUpperL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOTickUpperL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOTickUpper -> UniswapV3PositionDTO { uniswapV3PositionDTOTickUpper, ..} ) <$> f uniswapV3PositionDTOTickUpper
{-# INLINE uniswapV3PositionDTOTickUpperL #-}

-- | 'uniswapV3PositionDTOLiquidity' Lens
uniswapV3PositionDTOLiquidityL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOLiquidityL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOLiquidity -> UniswapV3PositionDTO { uniswapV3PositionDTOLiquidity, ..} ) <$> f uniswapV3PositionDTOLiquidity
{-# INLINE uniswapV3PositionDTOLiquidityL #-}

-- | 'uniswapV3PositionDTODepositedToken0' Lens
uniswapV3PositionDTODepositedToken0L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTODepositedToken0L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTODepositedToken0 -> UniswapV3PositionDTO { uniswapV3PositionDTODepositedToken0, ..} ) <$> f uniswapV3PositionDTODepositedToken0
{-# INLINE uniswapV3PositionDTODepositedToken0L #-}

-- | 'uniswapV3PositionDTODepositedToken1' Lens
uniswapV3PositionDTODepositedToken1L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTODepositedToken1L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTODepositedToken1 -> UniswapV3PositionDTO { uniswapV3PositionDTODepositedToken1, ..} ) <$> f uniswapV3PositionDTODepositedToken1
{-# INLINE uniswapV3PositionDTODepositedToken1L #-}

-- | 'uniswapV3PositionDTOWithdrawnToken0' Lens
uniswapV3PositionDTOWithdrawnToken0L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOWithdrawnToken0L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOWithdrawnToken0 -> UniswapV3PositionDTO { uniswapV3PositionDTOWithdrawnToken0, ..} ) <$> f uniswapV3PositionDTOWithdrawnToken0
{-# INLINE uniswapV3PositionDTOWithdrawnToken0L #-}

-- | 'uniswapV3PositionDTOWithdrawnToken1' Lens
uniswapV3PositionDTOWithdrawnToken1L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOWithdrawnToken1L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOWithdrawnToken1 -> UniswapV3PositionDTO { uniswapV3PositionDTOWithdrawnToken1, ..} ) <$> f uniswapV3PositionDTOWithdrawnToken1
{-# INLINE uniswapV3PositionDTOWithdrawnToken1L #-}

-- | 'uniswapV3PositionDTOCollectedFeesToken0' Lens
uniswapV3PositionDTOCollectedFeesToken0L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOCollectedFeesToken0L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOCollectedFeesToken0 -> UniswapV3PositionDTO { uniswapV3PositionDTOCollectedFeesToken0, ..} ) <$> f uniswapV3PositionDTOCollectedFeesToken0
{-# INLINE uniswapV3PositionDTOCollectedFeesToken0L #-}

-- | 'uniswapV3PositionDTOCollectedFeesToken1' Lens
uniswapV3PositionDTOCollectedFeesToken1L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOCollectedFeesToken1L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOCollectedFeesToken1 -> UniswapV3PositionDTO { uniswapV3PositionDTOCollectedFeesToken1, ..} ) <$> f uniswapV3PositionDTOCollectedFeesToken1
{-# INLINE uniswapV3PositionDTOCollectedFeesToken1L #-}

-- | 'uniswapV3PositionDTOTransaction' Lens
uniswapV3PositionDTOTransactionL :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOTransactionL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOTransaction -> UniswapV3PositionDTO { uniswapV3PositionDTOTransaction, ..} ) <$> f uniswapV3PositionDTOTransaction
{-# INLINE uniswapV3PositionDTOTransactionL #-}

-- | 'uniswapV3PositionDTOFeeGrowthInside0LastX128' Lens
uniswapV3PositionDTOFeeGrowthInside0LastX128L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOFeeGrowthInside0LastX128L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOFeeGrowthInside0LastX128 -> UniswapV3PositionDTO { uniswapV3PositionDTOFeeGrowthInside0LastX128, ..} ) <$> f uniswapV3PositionDTOFeeGrowthInside0LastX128
{-# INLINE uniswapV3PositionDTOFeeGrowthInside0LastX128L #-}

-- | 'uniswapV3PositionDTOFeeGrowthInside1LastX128' Lens
uniswapV3PositionDTOFeeGrowthInside1LastX128L :: Lens_' UniswapV3PositionDTO (Maybe Text)
uniswapV3PositionDTOFeeGrowthInside1LastX128L f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOFeeGrowthInside1LastX128 -> UniswapV3PositionDTO { uniswapV3PositionDTOFeeGrowthInside1LastX128, ..} ) <$> f uniswapV3PositionDTOFeeGrowthInside1LastX128
{-# INLINE uniswapV3PositionDTOFeeGrowthInside1LastX128L #-}

-- | 'uniswapV3PositionDTOVid' Lens
uniswapV3PositionDTOVidL :: Lens_' UniswapV3PositionDTO (Maybe Integer)
uniswapV3PositionDTOVidL f UniswapV3PositionDTO{..} = (\uniswapV3PositionDTOVid -> UniswapV3PositionDTO { uniswapV3PositionDTOVid, ..} ) <$> f uniswapV3PositionDTOVid
{-# INLINE uniswapV3PositionDTOVidL #-}



-- * UniswapV3PositionSnapshotDTO

-- | 'uniswapV3PositionSnapshotDTOEntryTime' Lens
uniswapV3PositionSnapshotDTOEntryTimeL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe DateTime)
uniswapV3PositionSnapshotDTOEntryTimeL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOEntryTime -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOEntryTime, ..} ) <$> f uniswapV3PositionSnapshotDTOEntryTime
{-# INLINE uniswapV3PositionSnapshotDTOEntryTimeL #-}

-- | 'uniswapV3PositionSnapshotDTORecvTime' Lens
uniswapV3PositionSnapshotDTORecvTimeL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe DateTime)
uniswapV3PositionSnapshotDTORecvTimeL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTORecvTime -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTORecvTime, ..} ) <$> f uniswapV3PositionSnapshotDTORecvTime
{-# INLINE uniswapV3PositionSnapshotDTORecvTimeL #-}

-- | 'uniswapV3PositionSnapshotDTOBlockNumber' Lens
uniswapV3PositionSnapshotDTOBlockNumberL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Integer)
uniswapV3PositionSnapshotDTOBlockNumberL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOBlockNumber -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOBlockNumber, ..} ) <$> f uniswapV3PositionSnapshotDTOBlockNumber
{-# INLINE uniswapV3PositionSnapshotDTOBlockNumberL #-}

-- | 'uniswapV3PositionSnapshotDTOId' Lens
uniswapV3PositionSnapshotDTOIdL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOIdL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOId -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOId, ..} ) <$> f uniswapV3PositionSnapshotDTOId
{-# INLINE uniswapV3PositionSnapshotDTOIdL #-}

-- | 'uniswapV3PositionSnapshotDTOOwner' Lens
uniswapV3PositionSnapshotDTOOwnerL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOOwnerL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOOwner -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOOwner, ..} ) <$> f uniswapV3PositionSnapshotDTOOwner
{-# INLINE uniswapV3PositionSnapshotDTOOwnerL #-}

-- | 'uniswapV3PositionSnapshotDTOPool' Lens
uniswapV3PositionSnapshotDTOPoolL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOPoolL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOPool -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOPool, ..} ) <$> f uniswapV3PositionSnapshotDTOPool
{-# INLINE uniswapV3PositionSnapshotDTOPoolL #-}

-- | 'uniswapV3PositionSnapshotDTOPosition' Lens
uniswapV3PositionSnapshotDTOPositionL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOPositionL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOPosition -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOPosition, ..} ) <$> f uniswapV3PositionSnapshotDTOPosition
{-# INLINE uniswapV3PositionSnapshotDTOPositionL #-}

-- | 'uniswapV3PositionSnapshotDTOTimestamp' Lens
uniswapV3PositionSnapshotDTOTimestampL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOTimestampL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOTimestamp -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOTimestamp, ..} ) <$> f uniswapV3PositionSnapshotDTOTimestamp
{-# INLINE uniswapV3PositionSnapshotDTOTimestampL #-}

-- | 'uniswapV3PositionSnapshotDTOLiquidity' Lens
uniswapV3PositionSnapshotDTOLiquidityL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOLiquidityL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOLiquidity -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOLiquidity, ..} ) <$> f uniswapV3PositionSnapshotDTOLiquidity
{-# INLINE uniswapV3PositionSnapshotDTOLiquidityL #-}

-- | 'uniswapV3PositionSnapshotDTODepositedToken0' Lens
uniswapV3PositionSnapshotDTODepositedToken0L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTODepositedToken0L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTODepositedToken0 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTODepositedToken0, ..} ) <$> f uniswapV3PositionSnapshotDTODepositedToken0
{-# INLINE uniswapV3PositionSnapshotDTODepositedToken0L #-}

-- | 'uniswapV3PositionSnapshotDTODepositedToken1' Lens
uniswapV3PositionSnapshotDTODepositedToken1L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTODepositedToken1L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTODepositedToken1 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTODepositedToken1, ..} ) <$> f uniswapV3PositionSnapshotDTODepositedToken1
{-# INLINE uniswapV3PositionSnapshotDTODepositedToken1L #-}

-- | 'uniswapV3PositionSnapshotDTOWithdrawnToken0' Lens
uniswapV3PositionSnapshotDTOWithdrawnToken0L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOWithdrawnToken0L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOWithdrawnToken0 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOWithdrawnToken0, ..} ) <$> f uniswapV3PositionSnapshotDTOWithdrawnToken0
{-# INLINE uniswapV3PositionSnapshotDTOWithdrawnToken0L #-}

-- | 'uniswapV3PositionSnapshotDTOWithdrawnToken1' Lens
uniswapV3PositionSnapshotDTOWithdrawnToken1L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOWithdrawnToken1L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOWithdrawnToken1 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOWithdrawnToken1, ..} ) <$> f uniswapV3PositionSnapshotDTOWithdrawnToken1
{-# INLINE uniswapV3PositionSnapshotDTOWithdrawnToken1L #-}

-- | 'uniswapV3PositionSnapshotDTOCollectedFeesToken0' Lens
uniswapV3PositionSnapshotDTOCollectedFeesToken0L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOCollectedFeesToken0L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOCollectedFeesToken0 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOCollectedFeesToken0, ..} ) <$> f uniswapV3PositionSnapshotDTOCollectedFeesToken0
{-# INLINE uniswapV3PositionSnapshotDTOCollectedFeesToken0L #-}

-- | 'uniswapV3PositionSnapshotDTOCollectedFeesToken1' Lens
uniswapV3PositionSnapshotDTOCollectedFeesToken1L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOCollectedFeesToken1L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOCollectedFeesToken1 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOCollectedFeesToken1, ..} ) <$> f uniswapV3PositionSnapshotDTOCollectedFeesToken1
{-# INLINE uniswapV3PositionSnapshotDTOCollectedFeesToken1L #-}

-- | 'uniswapV3PositionSnapshotDTOTransaction' Lens
uniswapV3PositionSnapshotDTOTransactionL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOTransactionL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOTransaction -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOTransaction, ..} ) <$> f uniswapV3PositionSnapshotDTOTransaction
{-# INLINE uniswapV3PositionSnapshotDTOTransactionL #-}

-- | 'uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128' Lens
uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128, ..} ) <$> f uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128
{-# INLINE uniswapV3PositionSnapshotDTOFeeGrowthInside0LastX128L #-}

-- | 'uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128' Lens
uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128L :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Text)
uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128L f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128 -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128, ..} ) <$> f uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128
{-# INLINE uniswapV3PositionSnapshotDTOFeeGrowthInside1LastX128L #-}

-- | 'uniswapV3PositionSnapshotDTOVid' Lens
uniswapV3PositionSnapshotDTOVidL :: Lens_' UniswapV3PositionSnapshotDTO (Maybe Integer)
uniswapV3PositionSnapshotDTOVidL f UniswapV3PositionSnapshotDTO{..} = (\uniswapV3PositionSnapshotDTOVid -> UniswapV3PositionSnapshotDTO { uniswapV3PositionSnapshotDTOVid, ..} ) <$> f uniswapV3PositionSnapshotDTOVid
{-# INLINE uniswapV3PositionSnapshotDTOVidL #-}



-- * UniswapV3SwapDTO

-- | 'uniswapV3SwapDTOEntryTime' Lens
uniswapV3SwapDTOEntryTimeL :: Lens_' UniswapV3SwapDTO (Maybe DateTime)
uniswapV3SwapDTOEntryTimeL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOEntryTime -> UniswapV3SwapDTO { uniswapV3SwapDTOEntryTime, ..} ) <$> f uniswapV3SwapDTOEntryTime
{-# INLINE uniswapV3SwapDTOEntryTimeL #-}

-- | 'uniswapV3SwapDTORecvTime' Lens
uniswapV3SwapDTORecvTimeL :: Lens_' UniswapV3SwapDTO (Maybe DateTime)
uniswapV3SwapDTORecvTimeL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTORecvTime -> UniswapV3SwapDTO { uniswapV3SwapDTORecvTime, ..} ) <$> f uniswapV3SwapDTORecvTime
{-# INLINE uniswapV3SwapDTORecvTimeL #-}

-- | 'uniswapV3SwapDTOBlockNumber' Lens
uniswapV3SwapDTOBlockNumberL :: Lens_' UniswapV3SwapDTO (Maybe Integer)
uniswapV3SwapDTOBlockNumberL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOBlockNumber -> UniswapV3SwapDTO { uniswapV3SwapDTOBlockNumber, ..} ) <$> f uniswapV3SwapDTOBlockNumber
{-# INLINE uniswapV3SwapDTOBlockNumberL #-}

-- | 'uniswapV3SwapDTOVid' Lens
uniswapV3SwapDTOVidL :: Lens_' UniswapV3SwapDTO (Maybe Integer)
uniswapV3SwapDTOVidL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOVid -> UniswapV3SwapDTO { uniswapV3SwapDTOVid, ..} ) <$> f uniswapV3SwapDTOVid
{-# INLINE uniswapV3SwapDTOVidL #-}

-- | 'uniswapV3SwapDTOId' Lens
uniswapV3SwapDTOIdL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOIdL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOId -> UniswapV3SwapDTO { uniswapV3SwapDTOId, ..} ) <$> f uniswapV3SwapDTOId
{-# INLINE uniswapV3SwapDTOIdL #-}

-- | 'uniswapV3SwapDTOTransaction' Lens
uniswapV3SwapDTOTransactionL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOTransactionL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOTransaction -> UniswapV3SwapDTO { uniswapV3SwapDTOTransaction, ..} ) <$> f uniswapV3SwapDTOTransaction
{-# INLINE uniswapV3SwapDTOTransactionL #-}

-- | 'uniswapV3SwapDTOTimestamp' Lens
uniswapV3SwapDTOTimestampL :: Lens_' UniswapV3SwapDTO (Maybe DateTime)
uniswapV3SwapDTOTimestampL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOTimestamp -> UniswapV3SwapDTO { uniswapV3SwapDTOTimestamp, ..} ) <$> f uniswapV3SwapDTOTimestamp
{-# INLINE uniswapV3SwapDTOTimestampL #-}

-- | 'uniswapV3SwapDTOPool' Lens
uniswapV3SwapDTOPoolL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOPoolL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOPool -> UniswapV3SwapDTO { uniswapV3SwapDTOPool, ..} ) <$> f uniswapV3SwapDTOPool
{-# INLINE uniswapV3SwapDTOPoolL #-}

-- | 'uniswapV3SwapDTOToken0' Lens
uniswapV3SwapDTOToken0L :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOToken0L f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOToken0 -> UniswapV3SwapDTO { uniswapV3SwapDTOToken0, ..} ) <$> f uniswapV3SwapDTOToken0
{-# INLINE uniswapV3SwapDTOToken0L #-}

-- | 'uniswapV3SwapDTOToken1' Lens
uniswapV3SwapDTOToken1L :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOToken1L f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOToken1 -> UniswapV3SwapDTO { uniswapV3SwapDTOToken1, ..} ) <$> f uniswapV3SwapDTOToken1
{-# INLINE uniswapV3SwapDTOToken1L #-}

-- | 'uniswapV3SwapDTOSender' Lens
uniswapV3SwapDTOSenderL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOSenderL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOSender -> UniswapV3SwapDTO { uniswapV3SwapDTOSender, ..} ) <$> f uniswapV3SwapDTOSender
{-# INLINE uniswapV3SwapDTOSenderL #-}

-- | 'uniswapV3SwapDTORecipient' Lens
uniswapV3SwapDTORecipientL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTORecipientL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTORecipient -> UniswapV3SwapDTO { uniswapV3SwapDTORecipient, ..} ) <$> f uniswapV3SwapDTORecipient
{-# INLINE uniswapV3SwapDTORecipientL #-}

-- | 'uniswapV3SwapDTOOrigin' Lens
uniswapV3SwapDTOOriginL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOOriginL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOOrigin -> UniswapV3SwapDTO { uniswapV3SwapDTOOrigin, ..} ) <$> f uniswapV3SwapDTOOrigin
{-# INLINE uniswapV3SwapDTOOriginL #-}

-- | 'uniswapV3SwapDTOAmount0' Lens
uniswapV3SwapDTOAmount0L :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOAmount0L f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOAmount0 -> UniswapV3SwapDTO { uniswapV3SwapDTOAmount0, ..} ) <$> f uniswapV3SwapDTOAmount0
{-# INLINE uniswapV3SwapDTOAmount0L #-}

-- | 'uniswapV3SwapDTOAmount1' Lens
uniswapV3SwapDTOAmount1L :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOAmount1L f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOAmount1 -> UniswapV3SwapDTO { uniswapV3SwapDTOAmount1, ..} ) <$> f uniswapV3SwapDTOAmount1
{-# INLINE uniswapV3SwapDTOAmount1L #-}

-- | 'uniswapV3SwapDTOAmountUsd' Lens
uniswapV3SwapDTOAmountUsdL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOAmountUsdL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOAmountUsd -> UniswapV3SwapDTO { uniswapV3SwapDTOAmountUsd, ..} ) <$> f uniswapV3SwapDTOAmountUsd
{-# INLINE uniswapV3SwapDTOAmountUsdL #-}

-- | 'uniswapV3SwapDTOSqrtPriceX96' Lens
uniswapV3SwapDTOSqrtPriceX96L :: Lens_' UniswapV3SwapDTO (Maybe NumericsBigInteger)
uniswapV3SwapDTOSqrtPriceX96L f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOSqrtPriceX96 -> UniswapV3SwapDTO { uniswapV3SwapDTOSqrtPriceX96, ..} ) <$> f uniswapV3SwapDTOSqrtPriceX96
{-# INLINE uniswapV3SwapDTOSqrtPriceX96L #-}

-- | 'uniswapV3SwapDTOTick' Lens
uniswapV3SwapDTOTickL :: Lens_' UniswapV3SwapDTO (Maybe NumericsBigInteger)
uniswapV3SwapDTOTickL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOTick -> UniswapV3SwapDTO { uniswapV3SwapDTOTick, ..} ) <$> f uniswapV3SwapDTOTick
{-# INLINE uniswapV3SwapDTOTickL #-}

-- | 'uniswapV3SwapDTOLogIndex' Lens
uniswapV3SwapDTOLogIndexL :: Lens_' UniswapV3SwapDTO (Maybe NumericsBigInteger)
uniswapV3SwapDTOLogIndexL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOLogIndex -> UniswapV3SwapDTO { uniswapV3SwapDTOLogIndex, ..} ) <$> f uniswapV3SwapDTOLogIndex
{-# INLINE uniswapV3SwapDTOLogIndexL #-}

-- | 'uniswapV3SwapDTOEvaluatedPrice' Lens
uniswapV3SwapDTOEvaluatedPriceL :: Lens_' UniswapV3SwapDTO (Maybe Double)
uniswapV3SwapDTOEvaluatedPriceL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOEvaluatedPrice -> UniswapV3SwapDTO { uniswapV3SwapDTOEvaluatedPrice, ..} ) <$> f uniswapV3SwapDTOEvaluatedPrice
{-# INLINE uniswapV3SwapDTOEvaluatedPriceL #-}

-- | 'uniswapV3SwapDTOEvaluatedAmount' Lens
uniswapV3SwapDTOEvaluatedAmountL :: Lens_' UniswapV3SwapDTO (Maybe Double)
uniswapV3SwapDTOEvaluatedAmountL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOEvaluatedAmount -> UniswapV3SwapDTO { uniswapV3SwapDTOEvaluatedAmount, ..} ) <$> f uniswapV3SwapDTOEvaluatedAmount
{-# INLINE uniswapV3SwapDTOEvaluatedAmountL #-}

-- | 'uniswapV3SwapDTOEvaluatedAggressor' Lens
uniswapV3SwapDTOEvaluatedAggressorL :: Lens_' UniswapV3SwapDTO (Maybe TransactionsETradeAggressiveSide)
uniswapV3SwapDTOEvaluatedAggressorL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOEvaluatedAggressor -> UniswapV3SwapDTO { uniswapV3SwapDTOEvaluatedAggressor, ..} ) <$> f uniswapV3SwapDTOEvaluatedAggressor
{-# INLINE uniswapV3SwapDTOEvaluatedAggressorL #-}

-- | 'uniswapV3SwapDTOPoolId' Lens
uniswapV3SwapDTOPoolIdL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOPoolIdL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOPoolId -> UniswapV3SwapDTO { uniswapV3SwapDTOPoolId, ..} ) <$> f uniswapV3SwapDTOPoolId
{-# INLINE uniswapV3SwapDTOPoolIdL #-}

-- | 'uniswapV3SwapDTOTransactionId' Lens
uniswapV3SwapDTOTransactionIdL :: Lens_' UniswapV3SwapDTO (Maybe Text)
uniswapV3SwapDTOTransactionIdL f UniswapV3SwapDTO{..} = (\uniswapV3SwapDTOTransactionId -> UniswapV3SwapDTO { uniswapV3SwapDTOTransactionId, ..} ) <$> f uniswapV3SwapDTOTransactionId
{-# INLINE uniswapV3SwapDTOTransactionIdL #-}



-- * UniswapV3TickDTO

-- | 'uniswapV3TickDTOEntryTime' Lens
uniswapV3TickDTOEntryTimeL :: Lens_' UniswapV3TickDTO (Maybe DateTime)
uniswapV3TickDTOEntryTimeL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOEntryTime -> UniswapV3TickDTO { uniswapV3TickDTOEntryTime, ..} ) <$> f uniswapV3TickDTOEntryTime
{-# INLINE uniswapV3TickDTOEntryTimeL #-}

-- | 'uniswapV3TickDTORecvTime' Lens
uniswapV3TickDTORecvTimeL :: Lens_' UniswapV3TickDTO (Maybe DateTime)
uniswapV3TickDTORecvTimeL f UniswapV3TickDTO{..} = (\uniswapV3TickDTORecvTime -> UniswapV3TickDTO { uniswapV3TickDTORecvTime, ..} ) <$> f uniswapV3TickDTORecvTime
{-# INLINE uniswapV3TickDTORecvTimeL #-}

-- | 'uniswapV3TickDTOBlockNumber' Lens
uniswapV3TickDTOBlockNumberL :: Lens_' UniswapV3TickDTO (Maybe Integer)
uniswapV3TickDTOBlockNumberL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOBlockNumber -> UniswapV3TickDTO { uniswapV3TickDTOBlockNumber, ..} ) <$> f uniswapV3TickDTOBlockNumber
{-# INLINE uniswapV3TickDTOBlockNumberL #-}

-- | 'uniswapV3TickDTOVid' Lens
uniswapV3TickDTOVidL :: Lens_' UniswapV3TickDTO (Maybe Integer)
uniswapV3TickDTOVidL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOVid -> UniswapV3TickDTO { uniswapV3TickDTOVid, ..} ) <$> f uniswapV3TickDTOVid
{-# INLINE uniswapV3TickDTOVidL #-}

-- | 'uniswapV3TickDTOId' Lens
uniswapV3TickDTOIdL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOIdL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOId -> UniswapV3TickDTO { uniswapV3TickDTOId, ..} ) <$> f uniswapV3TickDTOId
{-# INLINE uniswapV3TickDTOIdL #-}

-- | 'uniswapV3TickDTOPoolAddress' Lens
uniswapV3TickDTOPoolAddressL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOPoolAddressL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOPoolAddress -> UniswapV3TickDTO { uniswapV3TickDTOPoolAddress, ..} ) <$> f uniswapV3TickDTOPoolAddress
{-# INLINE uniswapV3TickDTOPoolAddressL #-}

-- | 'uniswapV3TickDTOTickIdx' Lens
uniswapV3TickDTOTickIdxL :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOTickIdxL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOTickIdx -> UniswapV3TickDTO { uniswapV3TickDTOTickIdx, ..} ) <$> f uniswapV3TickDTOTickIdx
{-# INLINE uniswapV3TickDTOTickIdxL #-}

-- | 'uniswapV3TickDTOPool' Lens
uniswapV3TickDTOPoolL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOPoolL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOPool -> UniswapV3TickDTO { uniswapV3TickDTOPool, ..} ) <$> f uniswapV3TickDTOPool
{-# INLINE uniswapV3TickDTOPoolL #-}

-- | 'uniswapV3TickDTOLiquidityGross' Lens
uniswapV3TickDTOLiquidityGrossL :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOLiquidityGrossL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOLiquidityGross -> UniswapV3TickDTO { uniswapV3TickDTOLiquidityGross, ..} ) <$> f uniswapV3TickDTOLiquidityGross
{-# INLINE uniswapV3TickDTOLiquidityGrossL #-}

-- | 'uniswapV3TickDTOLiquidityNet' Lens
uniswapV3TickDTOLiquidityNetL :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOLiquidityNetL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOLiquidityNet -> UniswapV3TickDTO { uniswapV3TickDTOLiquidityNet, ..} ) <$> f uniswapV3TickDTOLiquidityNet
{-# INLINE uniswapV3TickDTOLiquidityNetL #-}

-- | 'uniswapV3TickDTOPrice0' Lens
uniswapV3TickDTOPrice0L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOPrice0L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOPrice0 -> UniswapV3TickDTO { uniswapV3TickDTOPrice0, ..} ) <$> f uniswapV3TickDTOPrice0
{-# INLINE uniswapV3TickDTOPrice0L #-}

-- | 'uniswapV3TickDTOPrice1' Lens
uniswapV3TickDTOPrice1L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOPrice1L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOPrice1 -> UniswapV3TickDTO { uniswapV3TickDTOPrice1, ..} ) <$> f uniswapV3TickDTOPrice1
{-# INLINE uniswapV3TickDTOPrice1L #-}

-- | 'uniswapV3TickDTOVolumeToken0' Lens
uniswapV3TickDTOVolumeToken0L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOVolumeToken0L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOVolumeToken0 -> UniswapV3TickDTO { uniswapV3TickDTOVolumeToken0, ..} ) <$> f uniswapV3TickDTOVolumeToken0
{-# INLINE uniswapV3TickDTOVolumeToken0L #-}

-- | 'uniswapV3TickDTOVolumeToken1' Lens
uniswapV3TickDTOVolumeToken1L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOVolumeToken1L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOVolumeToken1 -> UniswapV3TickDTO { uniswapV3TickDTOVolumeToken1, ..} ) <$> f uniswapV3TickDTOVolumeToken1
{-# INLINE uniswapV3TickDTOVolumeToken1L #-}

-- | 'uniswapV3TickDTOVolumeUsd' Lens
uniswapV3TickDTOVolumeUsdL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOVolumeUsdL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOVolumeUsd -> UniswapV3TickDTO { uniswapV3TickDTOVolumeUsd, ..} ) <$> f uniswapV3TickDTOVolumeUsd
{-# INLINE uniswapV3TickDTOVolumeUsdL #-}

-- | 'uniswapV3TickDTOUntrackedVolumeUsd' Lens
uniswapV3TickDTOUntrackedVolumeUsdL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOUntrackedVolumeUsdL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOUntrackedVolumeUsd -> UniswapV3TickDTO { uniswapV3TickDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3TickDTOUntrackedVolumeUsd
{-# INLINE uniswapV3TickDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3TickDTOFeesUsd' Lens
uniswapV3TickDTOFeesUsdL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOFeesUsdL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOFeesUsd -> UniswapV3TickDTO { uniswapV3TickDTOFeesUsd, ..} ) <$> f uniswapV3TickDTOFeesUsd
{-# INLINE uniswapV3TickDTOFeesUsdL #-}

-- | 'uniswapV3TickDTOCollectedFeesToken0' Lens
uniswapV3TickDTOCollectedFeesToken0L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOCollectedFeesToken0L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOCollectedFeesToken0 -> UniswapV3TickDTO { uniswapV3TickDTOCollectedFeesToken0, ..} ) <$> f uniswapV3TickDTOCollectedFeesToken0
{-# INLINE uniswapV3TickDTOCollectedFeesToken0L #-}

-- | 'uniswapV3TickDTOCollectedFeesToken1' Lens
uniswapV3TickDTOCollectedFeesToken1L :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOCollectedFeesToken1L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOCollectedFeesToken1 -> UniswapV3TickDTO { uniswapV3TickDTOCollectedFeesToken1, ..} ) <$> f uniswapV3TickDTOCollectedFeesToken1
{-# INLINE uniswapV3TickDTOCollectedFeesToken1L #-}

-- | 'uniswapV3TickDTOCollectedFeesUsd' Lens
uniswapV3TickDTOCollectedFeesUsdL :: Lens_' UniswapV3TickDTO (Maybe Text)
uniswapV3TickDTOCollectedFeesUsdL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOCollectedFeesUsd -> UniswapV3TickDTO { uniswapV3TickDTOCollectedFeesUsd, ..} ) <$> f uniswapV3TickDTOCollectedFeesUsd
{-# INLINE uniswapV3TickDTOCollectedFeesUsdL #-}

-- | 'uniswapV3TickDTOCreatedAtTimestamp' Lens
uniswapV3TickDTOCreatedAtTimestampL :: Lens_' UniswapV3TickDTO (Maybe DateTime)
uniswapV3TickDTOCreatedAtTimestampL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOCreatedAtTimestamp -> UniswapV3TickDTO { uniswapV3TickDTOCreatedAtTimestamp, ..} ) <$> f uniswapV3TickDTOCreatedAtTimestamp
{-# INLINE uniswapV3TickDTOCreatedAtTimestampL #-}

-- | 'uniswapV3TickDTOLiquidityProviderCount' Lens
uniswapV3TickDTOLiquidityProviderCountL :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOLiquidityProviderCountL f UniswapV3TickDTO{..} = (\uniswapV3TickDTOLiquidityProviderCount -> UniswapV3TickDTO { uniswapV3TickDTOLiquidityProviderCount, ..} ) <$> f uniswapV3TickDTOLiquidityProviderCount
{-# INLINE uniswapV3TickDTOLiquidityProviderCountL #-}

-- | 'uniswapV3TickDTOFeeGrowthOutside0x128' Lens
uniswapV3TickDTOFeeGrowthOutside0x128L :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOFeeGrowthOutside0x128L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOFeeGrowthOutside0x128 -> UniswapV3TickDTO { uniswapV3TickDTOFeeGrowthOutside0x128, ..} ) <$> f uniswapV3TickDTOFeeGrowthOutside0x128
{-# INLINE uniswapV3TickDTOFeeGrowthOutside0x128L #-}

-- | 'uniswapV3TickDTOFeeGrowthOutside1x128' Lens
uniswapV3TickDTOFeeGrowthOutside1x128L :: Lens_' UniswapV3TickDTO (Maybe NumericsBigInteger)
uniswapV3TickDTOFeeGrowthOutside1x128L f UniswapV3TickDTO{..} = (\uniswapV3TickDTOFeeGrowthOutside1x128 -> UniswapV3TickDTO { uniswapV3TickDTOFeeGrowthOutside1x128, ..} ) <$> f uniswapV3TickDTOFeeGrowthOutside1x128
{-# INLINE uniswapV3TickDTOFeeGrowthOutside1x128L #-}



-- * UniswapV3TickDayDataDTO

-- | 'uniswapV3TickDayDataDTOEntryTime' Lens
uniswapV3TickDayDataDTOEntryTimeL :: Lens_' UniswapV3TickDayDataDTO (Maybe DateTime)
uniswapV3TickDayDataDTOEntryTimeL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOEntryTime -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOEntryTime, ..} ) <$> f uniswapV3TickDayDataDTOEntryTime
{-# INLINE uniswapV3TickDayDataDTOEntryTimeL #-}

-- | 'uniswapV3TickDayDataDTORecvTime' Lens
uniswapV3TickDayDataDTORecvTimeL :: Lens_' UniswapV3TickDayDataDTO (Maybe DateTime)
uniswapV3TickDayDataDTORecvTimeL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTORecvTime -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTORecvTime, ..} ) <$> f uniswapV3TickDayDataDTORecvTime
{-# INLINE uniswapV3TickDayDataDTORecvTimeL #-}

-- | 'uniswapV3TickDayDataDTOBlockNumber' Lens
uniswapV3TickDayDataDTOBlockNumberL :: Lens_' UniswapV3TickDayDataDTO (Maybe Integer)
uniswapV3TickDayDataDTOBlockNumberL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOBlockNumber -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOBlockNumber, ..} ) <$> f uniswapV3TickDayDataDTOBlockNumber
{-# INLINE uniswapV3TickDayDataDTOBlockNumberL #-}

-- | 'uniswapV3TickDayDataDTOId' Lens
uniswapV3TickDayDataDTOIdL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOIdL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOId -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOId, ..} ) <$> f uniswapV3TickDayDataDTOId
{-# INLINE uniswapV3TickDayDataDTOIdL #-}

-- | 'uniswapV3TickDayDataDTODate' Lens
uniswapV3TickDayDataDTODateL :: Lens_' UniswapV3TickDayDataDTO (Maybe Int)
uniswapV3TickDayDataDTODateL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTODate -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTODate, ..} ) <$> f uniswapV3TickDayDataDTODate
{-# INLINE uniswapV3TickDayDataDTODateL #-}

-- | 'uniswapV3TickDayDataDTOPool' Lens
uniswapV3TickDayDataDTOPoolL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOPoolL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOPool -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOPool, ..} ) <$> f uniswapV3TickDayDataDTOPool
{-# INLINE uniswapV3TickDayDataDTOPoolL #-}

-- | 'uniswapV3TickDayDataDTOTick' Lens
uniswapV3TickDayDataDTOTickL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOTickL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOTick -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOTick, ..} ) <$> f uniswapV3TickDayDataDTOTick
{-# INLINE uniswapV3TickDayDataDTOTickL #-}

-- | 'uniswapV3TickDayDataDTOLiquidityGross' Lens
uniswapV3TickDayDataDTOLiquidityGrossL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOLiquidityGrossL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOLiquidityGross -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOLiquidityGross, ..} ) <$> f uniswapV3TickDayDataDTOLiquidityGross
{-# INLINE uniswapV3TickDayDataDTOLiquidityGrossL #-}

-- | 'uniswapV3TickDayDataDTOLiquidityNet' Lens
uniswapV3TickDayDataDTOLiquidityNetL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOLiquidityNetL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOLiquidityNet -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOLiquidityNet, ..} ) <$> f uniswapV3TickDayDataDTOLiquidityNet
{-# INLINE uniswapV3TickDayDataDTOLiquidityNetL #-}

-- | 'uniswapV3TickDayDataDTOVolumeToken0' Lens
uniswapV3TickDayDataDTOVolumeToken0L :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOVolumeToken0L f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOVolumeToken0 -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOVolumeToken0, ..} ) <$> f uniswapV3TickDayDataDTOVolumeToken0
{-# INLINE uniswapV3TickDayDataDTOVolumeToken0L #-}

-- | 'uniswapV3TickDayDataDTOVolumeToken1' Lens
uniswapV3TickDayDataDTOVolumeToken1L :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOVolumeToken1L f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOVolumeToken1 -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOVolumeToken1, ..} ) <$> f uniswapV3TickDayDataDTOVolumeToken1
{-# INLINE uniswapV3TickDayDataDTOVolumeToken1L #-}

-- | 'uniswapV3TickDayDataDTOVolumeUsd' Lens
uniswapV3TickDayDataDTOVolumeUsdL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOVolumeUsdL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOVolumeUsd -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOVolumeUsd, ..} ) <$> f uniswapV3TickDayDataDTOVolumeUsd
{-# INLINE uniswapV3TickDayDataDTOVolumeUsdL #-}

-- | 'uniswapV3TickDayDataDTOFeesUsd' Lens
uniswapV3TickDayDataDTOFeesUsdL :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOFeesUsdL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOFeesUsd -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOFeesUsd, ..} ) <$> f uniswapV3TickDayDataDTOFeesUsd
{-# INLINE uniswapV3TickDayDataDTOFeesUsdL #-}

-- | 'uniswapV3TickDayDataDTOFeeGrowthOutside0x128' Lens
uniswapV3TickDayDataDTOFeeGrowthOutside0x128L :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOFeeGrowthOutside0x128L f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOFeeGrowthOutside0x128 -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOFeeGrowthOutside0x128, ..} ) <$> f uniswapV3TickDayDataDTOFeeGrowthOutside0x128
{-# INLINE uniswapV3TickDayDataDTOFeeGrowthOutside0x128L #-}

-- | 'uniswapV3TickDayDataDTOFeeGrowthOutside1x128' Lens
uniswapV3TickDayDataDTOFeeGrowthOutside1x128L :: Lens_' UniswapV3TickDayDataDTO (Maybe Text)
uniswapV3TickDayDataDTOFeeGrowthOutside1x128L f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOFeeGrowthOutside1x128 -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOFeeGrowthOutside1x128, ..} ) <$> f uniswapV3TickDayDataDTOFeeGrowthOutside1x128
{-# INLINE uniswapV3TickDayDataDTOFeeGrowthOutside1x128L #-}

-- | 'uniswapV3TickDayDataDTOVid' Lens
uniswapV3TickDayDataDTOVidL :: Lens_' UniswapV3TickDayDataDTO (Maybe Integer)
uniswapV3TickDayDataDTOVidL f UniswapV3TickDayDataDTO{..} = (\uniswapV3TickDayDataDTOVid -> UniswapV3TickDayDataDTO { uniswapV3TickDayDataDTOVid, ..} ) <$> f uniswapV3TickDayDataDTOVid
{-# INLINE uniswapV3TickDayDataDTOVidL #-}



-- * UniswapV3TokenDTO

-- | 'uniswapV3TokenDTOEntryTime' Lens
uniswapV3TokenDTOEntryTimeL :: Lens_' UniswapV3TokenDTO (Maybe DateTime)
uniswapV3TokenDTOEntryTimeL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOEntryTime -> UniswapV3TokenDTO { uniswapV3TokenDTOEntryTime, ..} ) <$> f uniswapV3TokenDTOEntryTime
{-# INLINE uniswapV3TokenDTOEntryTimeL #-}

-- | 'uniswapV3TokenDTORecvTime' Lens
uniswapV3TokenDTORecvTimeL :: Lens_' UniswapV3TokenDTO (Maybe DateTime)
uniswapV3TokenDTORecvTimeL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTORecvTime -> UniswapV3TokenDTO { uniswapV3TokenDTORecvTime, ..} ) <$> f uniswapV3TokenDTORecvTime
{-# INLINE uniswapV3TokenDTORecvTimeL #-}

-- | 'uniswapV3TokenDTOBlockNumber' Lens
uniswapV3TokenDTOBlockNumberL :: Lens_' UniswapV3TokenDTO (Maybe Integer)
uniswapV3TokenDTOBlockNumberL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOBlockNumber -> UniswapV3TokenDTO { uniswapV3TokenDTOBlockNumber, ..} ) <$> f uniswapV3TokenDTOBlockNumber
{-# INLINE uniswapV3TokenDTOBlockNumberL #-}

-- | 'uniswapV3TokenDTOVid' Lens
uniswapV3TokenDTOVidL :: Lens_' UniswapV3TokenDTO (Maybe Integer)
uniswapV3TokenDTOVidL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOVid -> UniswapV3TokenDTO { uniswapV3TokenDTOVid, ..} ) <$> f uniswapV3TokenDTOVid
{-# INLINE uniswapV3TokenDTOVidL #-}

-- | 'uniswapV3TokenDTOId' Lens
uniswapV3TokenDTOIdL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOIdL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOId -> UniswapV3TokenDTO { uniswapV3TokenDTOId, ..} ) <$> f uniswapV3TokenDTOId
{-# INLINE uniswapV3TokenDTOIdL #-}

-- | 'uniswapV3TokenDTOSymbol' Lens
uniswapV3TokenDTOSymbolL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOSymbolL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOSymbol -> UniswapV3TokenDTO { uniswapV3TokenDTOSymbol, ..} ) <$> f uniswapV3TokenDTOSymbol
{-# INLINE uniswapV3TokenDTOSymbolL #-}

-- | 'uniswapV3TokenDTOName' Lens
uniswapV3TokenDTONameL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTONameL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOName -> UniswapV3TokenDTO { uniswapV3TokenDTOName, ..} ) <$> f uniswapV3TokenDTOName
{-# INLINE uniswapV3TokenDTONameL #-}

-- | 'uniswapV3TokenDTODecimals' Lens
uniswapV3TokenDTODecimalsL :: Lens_' UniswapV3TokenDTO (Maybe Int)
uniswapV3TokenDTODecimalsL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTODecimals -> UniswapV3TokenDTO { uniswapV3TokenDTODecimals, ..} ) <$> f uniswapV3TokenDTODecimals
{-# INLINE uniswapV3TokenDTODecimalsL #-}

-- | 'uniswapV3TokenDTOTotalSupply' Lens
uniswapV3TokenDTOTotalSupplyL :: Lens_' UniswapV3TokenDTO (Maybe NumericsBigInteger)
uniswapV3TokenDTOTotalSupplyL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTotalSupply -> UniswapV3TokenDTO { uniswapV3TokenDTOTotalSupply, ..} ) <$> f uniswapV3TokenDTOTotalSupply
{-# INLINE uniswapV3TokenDTOTotalSupplyL #-}

-- | 'uniswapV3TokenDTOVolume' Lens
uniswapV3TokenDTOVolumeL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOVolumeL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOVolume -> UniswapV3TokenDTO { uniswapV3TokenDTOVolume, ..} ) <$> f uniswapV3TokenDTOVolume
{-# INLINE uniswapV3TokenDTOVolumeL #-}

-- | 'uniswapV3TokenDTOVolumeUsd' Lens
uniswapV3TokenDTOVolumeUsdL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOVolumeUsdL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOVolumeUsd -> UniswapV3TokenDTO { uniswapV3TokenDTOVolumeUsd, ..} ) <$> f uniswapV3TokenDTOVolumeUsd
{-# INLINE uniswapV3TokenDTOVolumeUsdL #-}

-- | 'uniswapV3TokenDTOUntrackedVolumeUsd' Lens
uniswapV3TokenDTOUntrackedVolumeUsdL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOUntrackedVolumeUsdL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOUntrackedVolumeUsd -> UniswapV3TokenDTO { uniswapV3TokenDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3TokenDTOUntrackedVolumeUsd
{-# INLINE uniswapV3TokenDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3TokenDTOFeesUsd' Lens
uniswapV3TokenDTOFeesUsdL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOFeesUsdL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOFeesUsd -> UniswapV3TokenDTO { uniswapV3TokenDTOFeesUsd, ..} ) <$> f uniswapV3TokenDTOFeesUsd
{-# INLINE uniswapV3TokenDTOFeesUsdL #-}

-- | 'uniswapV3TokenDTOTxCount' Lens
uniswapV3TokenDTOTxCountL :: Lens_' UniswapV3TokenDTO (Maybe NumericsBigInteger)
uniswapV3TokenDTOTxCountL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTxCount -> UniswapV3TokenDTO { uniswapV3TokenDTOTxCount, ..} ) <$> f uniswapV3TokenDTOTxCount
{-# INLINE uniswapV3TokenDTOTxCountL #-}

-- | 'uniswapV3TokenDTOPoolCount' Lens
uniswapV3TokenDTOPoolCountL :: Lens_' UniswapV3TokenDTO (Maybe NumericsBigInteger)
uniswapV3TokenDTOPoolCountL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOPoolCount -> UniswapV3TokenDTO { uniswapV3TokenDTOPoolCount, ..} ) <$> f uniswapV3TokenDTOPoolCount
{-# INLINE uniswapV3TokenDTOPoolCountL #-}

-- | 'uniswapV3TokenDTOTotalValueLocked' Lens
uniswapV3TokenDTOTotalValueLockedL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOTotalValueLockedL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTotalValueLocked -> UniswapV3TokenDTO { uniswapV3TokenDTOTotalValueLocked, ..} ) <$> f uniswapV3TokenDTOTotalValueLocked
{-# INLINE uniswapV3TokenDTOTotalValueLockedL #-}

-- | 'uniswapV3TokenDTOTotalValueLockedUsd' Lens
uniswapV3TokenDTOTotalValueLockedUsdL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOTotalValueLockedUsdL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTotalValueLockedUsd -> UniswapV3TokenDTO { uniswapV3TokenDTOTotalValueLockedUsd, ..} ) <$> f uniswapV3TokenDTOTotalValueLockedUsd
{-# INLINE uniswapV3TokenDTOTotalValueLockedUsdL #-}

-- | 'uniswapV3TokenDTOTotalValueLockedUsdUntracked' Lens
uniswapV3TokenDTOTotalValueLockedUsdUntrackedL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOTotalValueLockedUsdUntrackedL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTotalValueLockedUsdUntracked -> UniswapV3TokenDTO { uniswapV3TokenDTOTotalValueLockedUsdUntracked, ..} ) <$> f uniswapV3TokenDTOTotalValueLockedUsdUntracked
{-# INLINE uniswapV3TokenDTOTotalValueLockedUsdUntrackedL #-}

-- | 'uniswapV3TokenDTODerivedEth' Lens
uniswapV3TokenDTODerivedEthL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTODerivedEthL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTODerivedEth -> UniswapV3TokenDTO { uniswapV3TokenDTODerivedEth, ..} ) <$> f uniswapV3TokenDTODerivedEth
{-# INLINE uniswapV3TokenDTODerivedEthL #-}

-- | 'uniswapV3TokenDTOWhitelistPools' Lens
uniswapV3TokenDTOWhitelistPoolsL :: Lens_' UniswapV3TokenDTO (Maybe [Text])
uniswapV3TokenDTOWhitelistPoolsL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOWhitelistPools -> UniswapV3TokenDTO { uniswapV3TokenDTOWhitelistPools, ..} ) <$> f uniswapV3TokenDTOWhitelistPools
{-# INLINE uniswapV3TokenDTOWhitelistPoolsL #-}

-- | 'uniswapV3TokenDTOTokenSymbol' Lens
uniswapV3TokenDTOTokenSymbolL :: Lens_' UniswapV3TokenDTO (Maybe Text)
uniswapV3TokenDTOTokenSymbolL f UniswapV3TokenDTO{..} = (\uniswapV3TokenDTOTokenSymbol -> UniswapV3TokenDTO { uniswapV3TokenDTOTokenSymbol, ..} ) <$> f uniswapV3TokenDTOTokenSymbol
{-# INLINE uniswapV3TokenDTOTokenSymbolL #-}



-- * UniswapV3TokenHourDataDTO

-- | 'uniswapV3TokenHourDataDTOEntryTime' Lens
uniswapV3TokenHourDataDTOEntryTimeL :: Lens_' UniswapV3TokenHourDataDTO (Maybe DateTime)
uniswapV3TokenHourDataDTOEntryTimeL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOEntryTime -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOEntryTime, ..} ) <$> f uniswapV3TokenHourDataDTOEntryTime
{-# INLINE uniswapV3TokenHourDataDTOEntryTimeL #-}

-- | 'uniswapV3TokenHourDataDTORecvTime' Lens
uniswapV3TokenHourDataDTORecvTimeL :: Lens_' UniswapV3TokenHourDataDTO (Maybe DateTime)
uniswapV3TokenHourDataDTORecvTimeL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTORecvTime -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTORecvTime, ..} ) <$> f uniswapV3TokenHourDataDTORecvTime
{-# INLINE uniswapV3TokenHourDataDTORecvTimeL #-}

-- | 'uniswapV3TokenHourDataDTOBlockNumber' Lens
uniswapV3TokenHourDataDTOBlockNumberL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Integer)
uniswapV3TokenHourDataDTOBlockNumberL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOBlockNumber -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOBlockNumber, ..} ) <$> f uniswapV3TokenHourDataDTOBlockNumber
{-# INLINE uniswapV3TokenHourDataDTOBlockNumberL #-}

-- | 'uniswapV3TokenHourDataDTOId' Lens
uniswapV3TokenHourDataDTOIdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOIdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOId -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOId, ..} ) <$> f uniswapV3TokenHourDataDTOId
{-# INLINE uniswapV3TokenHourDataDTOIdL #-}

-- | 'uniswapV3TokenHourDataDTOPeriodStartUnix' Lens
uniswapV3TokenHourDataDTOPeriodStartUnixL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Int)
uniswapV3TokenHourDataDTOPeriodStartUnixL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOPeriodStartUnix -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOPeriodStartUnix, ..} ) <$> f uniswapV3TokenHourDataDTOPeriodStartUnix
{-# INLINE uniswapV3TokenHourDataDTOPeriodStartUnixL #-}

-- | 'uniswapV3TokenHourDataDTOToken' Lens
uniswapV3TokenHourDataDTOTokenL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOTokenL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOToken -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOToken, ..} ) <$> f uniswapV3TokenHourDataDTOToken
{-# INLINE uniswapV3TokenHourDataDTOTokenL #-}

-- | 'uniswapV3TokenHourDataDTOVolume' Lens
uniswapV3TokenHourDataDTOVolumeL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOVolumeL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOVolume -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOVolume, ..} ) <$> f uniswapV3TokenHourDataDTOVolume
{-# INLINE uniswapV3TokenHourDataDTOVolumeL #-}

-- | 'uniswapV3TokenHourDataDTOVolumeUsd' Lens
uniswapV3TokenHourDataDTOVolumeUsdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOVolumeUsdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOVolumeUsd -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOVolumeUsd, ..} ) <$> f uniswapV3TokenHourDataDTOVolumeUsd
{-# INLINE uniswapV3TokenHourDataDTOVolumeUsdL #-}

-- | 'uniswapV3TokenHourDataDTOUntrackedVolumeUsd' Lens
uniswapV3TokenHourDataDTOUntrackedVolumeUsdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOUntrackedVolumeUsdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOUntrackedVolumeUsd -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3TokenHourDataDTOUntrackedVolumeUsd
{-# INLINE uniswapV3TokenHourDataDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3TokenHourDataDTOTotalValueLocked' Lens
uniswapV3TokenHourDataDTOTotalValueLockedL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOTotalValueLockedL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOTotalValueLocked -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOTotalValueLocked, ..} ) <$> f uniswapV3TokenHourDataDTOTotalValueLocked
{-# INLINE uniswapV3TokenHourDataDTOTotalValueLockedL #-}

-- | 'uniswapV3TokenHourDataDTOTotalValueLockedUsd' Lens
uniswapV3TokenHourDataDTOTotalValueLockedUsdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOTotalValueLockedUsdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOTotalValueLockedUsd -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOTotalValueLockedUsd, ..} ) <$> f uniswapV3TokenHourDataDTOTotalValueLockedUsd
{-# INLINE uniswapV3TokenHourDataDTOTotalValueLockedUsdL #-}

-- | 'uniswapV3TokenHourDataDTOPriceUsd' Lens
uniswapV3TokenHourDataDTOPriceUsdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOPriceUsdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOPriceUsd -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOPriceUsd, ..} ) <$> f uniswapV3TokenHourDataDTOPriceUsd
{-# INLINE uniswapV3TokenHourDataDTOPriceUsdL #-}

-- | 'uniswapV3TokenHourDataDTOFeesUsd' Lens
uniswapV3TokenHourDataDTOFeesUsdL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOFeesUsdL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOFeesUsd -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOFeesUsd, ..} ) <$> f uniswapV3TokenHourDataDTOFeesUsd
{-# INLINE uniswapV3TokenHourDataDTOFeesUsdL #-}

-- | 'uniswapV3TokenHourDataDTOOpen' Lens
uniswapV3TokenHourDataDTOOpenL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOOpenL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOOpen -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOOpen, ..} ) <$> f uniswapV3TokenHourDataDTOOpen
{-# INLINE uniswapV3TokenHourDataDTOOpenL #-}

-- | 'uniswapV3TokenHourDataDTOHigh' Lens
uniswapV3TokenHourDataDTOHighL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOHighL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOHigh -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOHigh, ..} ) <$> f uniswapV3TokenHourDataDTOHigh
{-# INLINE uniswapV3TokenHourDataDTOHighL #-}

-- | 'uniswapV3TokenHourDataDTOLow' Lens
uniswapV3TokenHourDataDTOLowL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOLowL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOLow -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOLow, ..} ) <$> f uniswapV3TokenHourDataDTOLow
{-# INLINE uniswapV3TokenHourDataDTOLowL #-}

-- | 'uniswapV3TokenHourDataDTOClose' Lens
uniswapV3TokenHourDataDTOCloseL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Text)
uniswapV3TokenHourDataDTOCloseL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOClose -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOClose, ..} ) <$> f uniswapV3TokenHourDataDTOClose
{-# INLINE uniswapV3TokenHourDataDTOCloseL #-}

-- | 'uniswapV3TokenHourDataDTOVid' Lens
uniswapV3TokenHourDataDTOVidL :: Lens_' UniswapV3TokenHourDataDTO (Maybe Integer)
uniswapV3TokenHourDataDTOVidL f UniswapV3TokenHourDataDTO{..} = (\uniswapV3TokenHourDataDTOVid -> UniswapV3TokenHourDataDTO { uniswapV3TokenHourDataDTOVid, ..} ) <$> f uniswapV3TokenHourDataDTOVid
{-# INLINE uniswapV3TokenHourDataDTOVidL #-}



-- * UniswapV3TokenV3DayDataDTO

-- | 'uniswapV3TokenV3DayDataDTOEntryTime' Lens
uniswapV3TokenV3DayDataDTOEntryTimeL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe DateTime)
uniswapV3TokenV3DayDataDTOEntryTimeL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOEntryTime -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOEntryTime, ..} ) <$> f uniswapV3TokenV3DayDataDTOEntryTime
{-# INLINE uniswapV3TokenV3DayDataDTOEntryTimeL #-}

-- | 'uniswapV3TokenV3DayDataDTORecvTime' Lens
uniswapV3TokenV3DayDataDTORecvTimeL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe DateTime)
uniswapV3TokenV3DayDataDTORecvTimeL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTORecvTime -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTORecvTime, ..} ) <$> f uniswapV3TokenV3DayDataDTORecvTime
{-# INLINE uniswapV3TokenV3DayDataDTORecvTimeL #-}

-- | 'uniswapV3TokenV3DayDataDTOBlockNumber' Lens
uniswapV3TokenV3DayDataDTOBlockNumberL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Integer)
uniswapV3TokenV3DayDataDTOBlockNumberL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOBlockNumber -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOBlockNumber, ..} ) <$> f uniswapV3TokenV3DayDataDTOBlockNumber
{-# INLINE uniswapV3TokenV3DayDataDTOBlockNumberL #-}

-- | 'uniswapV3TokenV3DayDataDTOVid' Lens
uniswapV3TokenV3DayDataDTOVidL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Integer)
uniswapV3TokenV3DayDataDTOVidL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOVid -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOVid, ..} ) <$> f uniswapV3TokenV3DayDataDTOVid
{-# INLINE uniswapV3TokenV3DayDataDTOVidL #-}

-- | 'uniswapV3TokenV3DayDataDTOId' Lens
uniswapV3TokenV3DayDataDTOIdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOIdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOId -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOId, ..} ) <$> f uniswapV3TokenV3DayDataDTOId
{-# INLINE uniswapV3TokenV3DayDataDTOIdL #-}

-- | 'uniswapV3TokenV3DayDataDTODate' Lens
uniswapV3TokenV3DayDataDTODateL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Int)
uniswapV3TokenV3DayDataDTODateL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTODate -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTODate, ..} ) <$> f uniswapV3TokenV3DayDataDTODate
{-# INLINE uniswapV3TokenV3DayDataDTODateL #-}

-- | 'uniswapV3TokenV3DayDataDTOToken' Lens
uniswapV3TokenV3DayDataDTOTokenL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOTokenL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOToken -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOToken, ..} ) <$> f uniswapV3TokenV3DayDataDTOToken
{-# INLINE uniswapV3TokenV3DayDataDTOTokenL #-}

-- | 'uniswapV3TokenV3DayDataDTOVolume' Lens
uniswapV3TokenV3DayDataDTOVolumeL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOVolumeL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOVolume -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOVolume, ..} ) <$> f uniswapV3TokenV3DayDataDTOVolume
{-# INLINE uniswapV3TokenV3DayDataDTOVolumeL #-}

-- | 'uniswapV3TokenV3DayDataDTOVolumeUsd' Lens
uniswapV3TokenV3DayDataDTOVolumeUsdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOVolumeUsdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOVolumeUsd -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOVolumeUsd, ..} ) <$> f uniswapV3TokenV3DayDataDTOVolumeUsd
{-# INLINE uniswapV3TokenV3DayDataDTOVolumeUsdL #-}

-- | 'uniswapV3TokenV3DayDataDTOUntrackedVolumeUsd' Lens
uniswapV3TokenV3DayDataDTOUntrackedVolumeUsdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOUntrackedVolumeUsdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOUntrackedVolumeUsd -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOUntrackedVolumeUsd, ..} ) <$> f uniswapV3TokenV3DayDataDTOUntrackedVolumeUsd
{-# INLINE uniswapV3TokenV3DayDataDTOUntrackedVolumeUsdL #-}

-- | 'uniswapV3TokenV3DayDataDTOTotalValueLocked' Lens
uniswapV3TokenV3DayDataDTOTotalValueLockedL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOTotalValueLockedL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOTotalValueLocked -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOTotalValueLocked, ..} ) <$> f uniswapV3TokenV3DayDataDTOTotalValueLocked
{-# INLINE uniswapV3TokenV3DayDataDTOTotalValueLockedL #-}

-- | 'uniswapV3TokenV3DayDataDTOTotalValueLockedUsd' Lens
uniswapV3TokenV3DayDataDTOTotalValueLockedUsdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOTotalValueLockedUsdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOTotalValueLockedUsd -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOTotalValueLockedUsd, ..} ) <$> f uniswapV3TokenV3DayDataDTOTotalValueLockedUsd
{-# INLINE uniswapV3TokenV3DayDataDTOTotalValueLockedUsdL #-}

-- | 'uniswapV3TokenV3DayDataDTOPriceUsd' Lens
uniswapV3TokenV3DayDataDTOPriceUsdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOPriceUsdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOPriceUsd -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOPriceUsd, ..} ) <$> f uniswapV3TokenV3DayDataDTOPriceUsd
{-# INLINE uniswapV3TokenV3DayDataDTOPriceUsdL #-}

-- | 'uniswapV3TokenV3DayDataDTOFeesUsd' Lens
uniswapV3TokenV3DayDataDTOFeesUsdL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOFeesUsdL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOFeesUsd -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOFeesUsd, ..} ) <$> f uniswapV3TokenV3DayDataDTOFeesUsd
{-# INLINE uniswapV3TokenV3DayDataDTOFeesUsdL #-}

-- | 'uniswapV3TokenV3DayDataDTOOpen' Lens
uniswapV3TokenV3DayDataDTOOpenL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOOpenL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOOpen -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOOpen, ..} ) <$> f uniswapV3TokenV3DayDataDTOOpen
{-# INLINE uniswapV3TokenV3DayDataDTOOpenL #-}

-- | 'uniswapV3TokenV3DayDataDTOHigh' Lens
uniswapV3TokenV3DayDataDTOHighL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOHighL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOHigh -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOHigh, ..} ) <$> f uniswapV3TokenV3DayDataDTOHigh
{-# INLINE uniswapV3TokenV3DayDataDTOHighL #-}

-- | 'uniswapV3TokenV3DayDataDTOLow' Lens
uniswapV3TokenV3DayDataDTOLowL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOLowL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOLow -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOLow, ..} ) <$> f uniswapV3TokenV3DayDataDTOLow
{-# INLINE uniswapV3TokenV3DayDataDTOLowL #-}

-- | 'uniswapV3TokenV3DayDataDTOClose' Lens
uniswapV3TokenV3DayDataDTOCloseL :: Lens_' UniswapV3TokenV3DayDataDTO (Maybe Text)
uniswapV3TokenV3DayDataDTOCloseL f UniswapV3TokenV3DayDataDTO{..} = (\uniswapV3TokenV3DayDataDTOClose -> UniswapV3TokenV3DayDataDTO { uniswapV3TokenV3DayDataDTOClose, ..} ) <$> f uniswapV3TokenV3DayDataDTOClose
{-# INLINE uniswapV3TokenV3DayDataDTOCloseL #-}



-- * UniswapV3TransactionDTO

-- | 'uniswapV3TransactionDTOEntryTime' Lens
uniswapV3TransactionDTOEntryTimeL :: Lens_' UniswapV3TransactionDTO (Maybe DateTime)
uniswapV3TransactionDTOEntryTimeL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOEntryTime -> UniswapV3TransactionDTO { uniswapV3TransactionDTOEntryTime, ..} ) <$> f uniswapV3TransactionDTOEntryTime
{-# INLINE uniswapV3TransactionDTOEntryTimeL #-}

-- | 'uniswapV3TransactionDTORecvTime' Lens
uniswapV3TransactionDTORecvTimeL :: Lens_' UniswapV3TransactionDTO (Maybe DateTime)
uniswapV3TransactionDTORecvTimeL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTORecvTime -> UniswapV3TransactionDTO { uniswapV3TransactionDTORecvTime, ..} ) <$> f uniswapV3TransactionDTORecvTime
{-# INLINE uniswapV3TransactionDTORecvTimeL #-}

-- | 'uniswapV3TransactionDTOBlockNumber' Lens
uniswapV3TransactionDTOBlockNumberL :: Lens_' UniswapV3TransactionDTO (Maybe Integer)
uniswapV3TransactionDTOBlockNumberL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOBlockNumber -> UniswapV3TransactionDTO { uniswapV3TransactionDTOBlockNumber, ..} ) <$> f uniswapV3TransactionDTOBlockNumber
{-# INLINE uniswapV3TransactionDTOBlockNumberL #-}

-- | 'uniswapV3TransactionDTOId' Lens
uniswapV3TransactionDTOIdL :: Lens_' UniswapV3TransactionDTO (Maybe Text)
uniswapV3TransactionDTOIdL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOId -> UniswapV3TransactionDTO { uniswapV3TransactionDTOId, ..} ) <$> f uniswapV3TransactionDTOId
{-# INLINE uniswapV3TransactionDTOIdL #-}

-- | 'uniswapV3TransactionDTOTimestamp' Lens
uniswapV3TransactionDTOTimestampL :: Lens_' UniswapV3TransactionDTO (Maybe Text)
uniswapV3TransactionDTOTimestampL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOTimestamp -> UniswapV3TransactionDTO { uniswapV3TransactionDTOTimestamp, ..} ) <$> f uniswapV3TransactionDTOTimestamp
{-# INLINE uniswapV3TransactionDTOTimestampL #-}

-- | 'uniswapV3TransactionDTOGasUsed' Lens
uniswapV3TransactionDTOGasUsedL :: Lens_' UniswapV3TransactionDTO (Maybe Text)
uniswapV3TransactionDTOGasUsedL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOGasUsed -> UniswapV3TransactionDTO { uniswapV3TransactionDTOGasUsed, ..} ) <$> f uniswapV3TransactionDTOGasUsed
{-# INLINE uniswapV3TransactionDTOGasUsedL #-}

-- | 'uniswapV3TransactionDTOGasPrice' Lens
uniswapV3TransactionDTOGasPriceL :: Lens_' UniswapV3TransactionDTO (Maybe Text)
uniswapV3TransactionDTOGasPriceL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOGasPrice -> UniswapV3TransactionDTO { uniswapV3TransactionDTOGasPrice, ..} ) <$> f uniswapV3TransactionDTOGasPrice
{-# INLINE uniswapV3TransactionDTOGasPriceL #-}

-- | 'uniswapV3TransactionDTOVid' Lens
uniswapV3TransactionDTOVidL :: Lens_' UniswapV3TransactionDTO (Maybe Integer)
uniswapV3TransactionDTOVidL f UniswapV3TransactionDTO{..} = (\uniswapV3TransactionDTOVid -> UniswapV3TransactionDTO { uniswapV3TransactionDTOVid, ..} ) <$> f uniswapV3TransactionDTOVid
{-# INLINE uniswapV3TransactionDTOVidL #-}



-- * UniswapV3UniswapDayDataDTO

-- | 'uniswapV3UniswapDayDataDTOEntryTime' Lens
uniswapV3UniswapDayDataDTOEntryTimeL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe DateTime)
uniswapV3UniswapDayDataDTOEntryTimeL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOEntryTime -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOEntryTime, ..} ) <$> f uniswapV3UniswapDayDataDTOEntryTime
{-# INLINE uniswapV3UniswapDayDataDTOEntryTimeL #-}

-- | 'uniswapV3UniswapDayDataDTORecvTime' Lens
uniswapV3UniswapDayDataDTORecvTimeL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe DateTime)
uniswapV3UniswapDayDataDTORecvTimeL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTORecvTime -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTORecvTime, ..} ) <$> f uniswapV3UniswapDayDataDTORecvTime
{-# INLINE uniswapV3UniswapDayDataDTORecvTimeL #-}

-- | 'uniswapV3UniswapDayDataDTOBlockNumber' Lens
uniswapV3UniswapDayDataDTOBlockNumberL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Integer)
uniswapV3UniswapDayDataDTOBlockNumberL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOBlockNumber -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOBlockNumber, ..} ) <$> f uniswapV3UniswapDayDataDTOBlockNumber
{-# INLINE uniswapV3UniswapDayDataDTOBlockNumberL #-}

-- | 'uniswapV3UniswapDayDataDTOVid' Lens
uniswapV3UniswapDayDataDTOVidL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Integer)
uniswapV3UniswapDayDataDTOVidL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOVid -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOVid, ..} ) <$> f uniswapV3UniswapDayDataDTOVid
{-# INLINE uniswapV3UniswapDayDataDTOVidL #-}

-- | 'uniswapV3UniswapDayDataDTOId' Lens
uniswapV3UniswapDayDataDTOIdL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOIdL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOId -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOId, ..} ) <$> f uniswapV3UniswapDayDataDTOId
{-# INLINE uniswapV3UniswapDayDataDTOIdL #-}

-- | 'uniswapV3UniswapDayDataDTODate' Lens
uniswapV3UniswapDayDataDTODateL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Int)
uniswapV3UniswapDayDataDTODateL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTODate -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTODate, ..} ) <$> f uniswapV3UniswapDayDataDTODate
{-# INLINE uniswapV3UniswapDayDataDTODateL #-}

-- | 'uniswapV3UniswapDayDataDTOVolumeEth' Lens
uniswapV3UniswapDayDataDTOVolumeEthL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOVolumeEthL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOVolumeEth -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOVolumeEth, ..} ) <$> f uniswapV3UniswapDayDataDTOVolumeEth
{-# INLINE uniswapV3UniswapDayDataDTOVolumeEthL #-}

-- | 'uniswapV3UniswapDayDataDTOVolumeUsd' Lens
uniswapV3UniswapDayDataDTOVolumeUsdL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOVolumeUsdL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOVolumeUsd -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOVolumeUsd, ..} ) <$> f uniswapV3UniswapDayDataDTOVolumeUsd
{-# INLINE uniswapV3UniswapDayDataDTOVolumeUsdL #-}

-- | 'uniswapV3UniswapDayDataDTOVolumeUsdUntracked' Lens
uniswapV3UniswapDayDataDTOVolumeUsdUntrackedL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOVolumeUsdUntrackedL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOVolumeUsdUntracked -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOVolumeUsdUntracked, ..} ) <$> f uniswapV3UniswapDayDataDTOVolumeUsdUntracked
{-# INLINE uniswapV3UniswapDayDataDTOVolumeUsdUntrackedL #-}

-- | 'uniswapV3UniswapDayDataDTOFeesUsd' Lens
uniswapV3UniswapDayDataDTOFeesUsdL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOFeesUsdL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOFeesUsd -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOFeesUsd, ..} ) <$> f uniswapV3UniswapDayDataDTOFeesUsd
{-# INLINE uniswapV3UniswapDayDataDTOFeesUsdL #-}

-- | 'uniswapV3UniswapDayDataDTOTxCount' Lens
uniswapV3UniswapDayDataDTOTxCountL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe NumericsBigInteger)
uniswapV3UniswapDayDataDTOTxCountL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOTxCount -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOTxCount, ..} ) <$> f uniswapV3UniswapDayDataDTOTxCount
{-# INLINE uniswapV3UniswapDayDataDTOTxCountL #-}

-- | 'uniswapV3UniswapDayDataDTOTvlUsd' Lens
uniswapV3UniswapDayDataDTOTvlUsdL :: Lens_' UniswapV3UniswapDayDataDTO (Maybe Text)
uniswapV3UniswapDayDataDTOTvlUsdL f UniswapV3UniswapDayDataDTO{..} = (\uniswapV3UniswapDayDataDTOTvlUsd -> UniswapV3UniswapDayDataDTO { uniswapV3UniswapDayDataDTOTvlUsd, ..} ) <$> f uniswapV3UniswapDayDataDTOTvlUsd
{-# INLINE uniswapV3UniswapDayDataDTOTvlUsdL #-}


