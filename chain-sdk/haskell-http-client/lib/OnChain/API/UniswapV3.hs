{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV3 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** uniswapV3BundlesCurrent

-- | @GET \/dapps\/uniswapv3\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV3BundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3BundlesCurrent MimeNoContent [UniswapV3BundleDTO] accept
uniswapV3BundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/current"]

data UniswapV3BundlesCurrent  
-- | @application/json@
instance Produces UniswapV3BundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BundlesCurrent MimePlainText


-- *** uniswapV3BurnsCurrent

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV3BurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3BurnsCurrent MimeNoContent [UniswapV3BurnDTO] accept
uniswapV3BurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data UniswapV3BurnsCurrent  
-- | @application/json@
instance Produces UniswapV3BurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BurnsCurrent MimePlainText


-- *** uniswapV3FactorysCurrent

-- | @GET \/dapps\/uniswapv3\/factorys\/current@
-- 
-- Factorys (current)
-- 
-- Gets factorys.
-- 
uniswapV3FactorysCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3FactorysCurrent MimeNoContent [UniswapV3FactoryDTO] accept
uniswapV3FactorysCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factorys/current"]

data UniswapV3FactorysCurrent  
-- | @application/json@
instance Produces UniswapV3FactorysCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3FactorysCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3FactorysCurrent MimePlainText


-- *** uniswapV3GetBundlesHistorical

-- | @GET \/dapps\/uniswapv3\/bundles\/historical@
-- 
-- Bundles (historical) ðŸ”¥
-- 
-- Gets bundles.
-- 
uniswapV3GetBundlesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBundlesHistorical MimeNoContent [UniswapV3BundleDTO] accept
uniswapV3GetBundlesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/historical"]

data UniswapV3GetBundlesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetBundlesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetBundlesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetBundlesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetBundlesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBundlesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBundlesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBundlesHistorical MimePlainText


-- *** uniswapV3GetBurnsHistorical

-- | @GET \/dapps\/uniswapv3\/burns\/historical@
-- 
-- Burns (historical) ðŸ”¥
-- 
-- Gets burns.
-- 
uniswapV3GetBurnsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBurnsHistorical MimeNoContent [UniswapV3BurnDTO] accept
uniswapV3GetBurnsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/historical"]

data UniswapV3GetBurnsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetBurnsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetBurnsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetBurnsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetBurnsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash + '#' + index in mints Transaction array.
instance HasOptionalParam UniswapV3GetBurnsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool position is within.
instance HasOptionalParam UniswapV3GetBurnsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetBurnsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetBurnsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBurnsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBurnsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBurnsHistorical MimePlainText


-- *** uniswapV3GetFactorysHistorical

-- | @GET \/dapps\/uniswapv3\/factorys\/historical@
-- 
-- Factorys (historical) ðŸ”¥
-- 
-- Gets factorys.
-- 
uniswapV3GetFactorysHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetFactorysHistorical MimeNoContent [UniswapV3FactoryDTO] accept
uniswapV3GetFactorysHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factorys/historical"]

data UniswapV3GetFactorysHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetFactorysHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetFactorysHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetFactorysHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetFactorysHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Factory address.
instance HasOptionalParam UniswapV3GetFactorysHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetFactorysHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetFactorysHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetFactorysHistorical MimePlainText


-- *** uniswapV3GetMintsHistorical

-- | @GET \/dapps\/uniswapv3\/mints\/historical@
-- 
-- Mints (historical) ðŸ”¥
-- 
-- Gets mints.
-- 
uniswapV3GetMintsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetMintsHistorical MimeNoContent [UniswapV3MintDTO] accept
uniswapV3GetMintsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/historical"]

data UniswapV3GetMintsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetMintsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetMintsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetMintsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetMintsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash + '#' + index in mints Transaction array.
instance HasOptionalParam UniswapV3GetMintsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool address.
instance HasOptionalParam UniswapV3GetMintsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetMintsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetMintsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetMintsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetMintsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetMintsHistorical MimePlainText


-- *** uniswapV3GetPoolDayDatasHistorical

-- | @GET \/dapps\/uniswapv3\/poolDayDatas\/historical@
-- 
-- PoolDayDatas (historical) ðŸ”¥
-- 
-- Gets poolDayDatas.
-- 
uniswapV3GetPoolDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolDayDatasHistorical MimeNoContent [UniswapV3PoolDayDataDTO] accept
uniswapV3GetPoolDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayDatas/historical"]

data UniswapV3GetPoolDayDatasHistorical  
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV3GetPoolDayDatasHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolDayDatasHistorical MimePlainText


-- *** uniswapV3GetPoolHourDatasHistorical

-- | @GET \/dapps\/uniswapv3\/poolHourDatas\/historical@
-- 
-- PoolHourDatas (historical) ðŸ”¥
-- 
-- Gets poolHourDatas.
-- 
uniswapV3GetPoolHourDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolHourDatasHistorical MimeNoContent [UniswapV3PoolHourDataDTO] accept
uniswapV3GetPoolHourDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourDatas/historical"]

data UniswapV3GetPoolHourDatasHistorical  
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV3GetPoolHourDatasHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolHourDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolHourDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolHourDatasHistorical MimePlainText


-- *** uniswapV3GetPoolsHistorical

-- | @GET \/dapps\/uniswapv3\/pools\/historical@
-- 
-- Pools (historical) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV3GetPoolsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsHistorical MimeNoContent [UniswapV3PoolDTO] accept
uniswapV3GetPoolsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/historical"]

data UniswapV3GetPoolsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPoolsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPoolsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPoolsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPoolsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam UniswapV3GetPoolsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pool contract.
instance HasOptionalParam UniswapV3GetPoolsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pool contract.
instance HasOptionalParam UniswapV3GetPoolsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHistorical MimePlainText


-- *** uniswapV3GetPositionSnapshotsHistorical

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/historical@
-- 
-- PositionSnapshots (historical) ðŸ”¥
-- 
-- Gets positionSnapshots.
-- 
uniswapV3GetPositionSnapshotsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionSnapshotsHistorical MimeNoContent [UniswapV3PositionSnapshotDTO] accept
uniswapV3GetPositionSnapshotsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/historical"]

data UniswapV3GetPositionSnapshotsHistorical  
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV3GetPositionSnapshotsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionSnapshotsHistorical MimePlainText


-- *** uniswapV3GetPositionsHistorical

-- | @GET \/dapps\/uniswapv3\/positions\/historical@
-- 
-- Positions (historical) ðŸ”¥
-- 
-- Gets positions.
-- 
uniswapV3GetPositionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsHistorical MimeNoContent [UniswapV3PositionDTO] accept
uniswapV3GetPositionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/historical"]

data UniswapV3GetPositionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetPositionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetPositionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetPositionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetPositionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - NFT token identifier.
instance HasOptionalParam UniswapV3GetPositionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool position is within.
instance HasOptionalParam UniswapV3GetPositionsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pair contract.
instance HasOptionalParam UniswapV3GetPositionsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pair contract.
instance HasOptionalParam UniswapV3GetPositionsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsHistorical MimePlainText


-- *** uniswapV3GetSwapsHistorical

-- | @GET \/dapps\/uniswapv3\/swaps\/historical@
-- 
-- Swaps (historical) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV3GetSwapsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetSwapsHistorical MimeNoContent [UniswapV3SwapDTO] accept
uniswapV3GetSwapsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/historical"]

data UniswapV3GetSwapsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetSwapsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetSwapsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetSwapsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetSwapsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Identifier, format: transaction hash + \"#\" + index in swaps Transaction array.
instance HasOptionalParam UniswapV3GetSwapsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - Pool swap occured within.
instance HasOptionalParam UniswapV3GetSwapsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pair contract.
instance HasOptionalParam UniswapV3GetSwapsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pair contract.
instance HasOptionalParam UniswapV3GetSwapsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV3GetSwapsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetSwapsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetSwapsHistorical MimePlainText


-- *** uniswapV3GetTickDayDatasHistorical

-- | @GET \/dapps\/uniswapv3\/tickDayDatas\/historical@
-- 
-- TickDayDatas (historical) ðŸ”¥
-- 
-- Gets tickDayDatas.
-- 
uniswapV3GetTickDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTickDayDatasHistorical MimeNoContent [UniswapV3TickDayDataDTO] accept
uniswapV3GetTickDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayDatas/historical"]

data UniswapV3GetTickDayDatasHistorical  
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV3GetTickDayDatasHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTickDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTickDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTickDayDatasHistorical MimePlainText


-- *** uniswapV3GetTicksHistorical

-- | @GET \/dapps\/uniswapv3\/ticks\/historical@
-- 
-- Ticks (historical) ðŸ”¥
-- 
-- Gets ticks.
-- 
uniswapV3GetTicksHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksHistorical MimeNoContent [UniswapV3TickDTO] accept
uniswapV3GetTicksHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/historical"]

data UniswapV3GetTicksHistorical  
instance HasOptionalParam UniswapV3GetTicksHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV3GetTicksHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV3GetTicksHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV3GetTicksHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV3GetTicksHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV3GetTicksHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksHistorical MimePlainText


-- *** uniswapV3GetTokenHourDatasHistorical

-- | @GET \/dapps\/uniswapv3\/tokenHourDatas\/historical@
-- 
-- TokenHourDatas (historical) ðŸ”¥
-- 
-- Gets tokenHourDatas.
-- 
uniswapV3GetTokenHourDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokenHourDatasHistorical MimeNoContent [UniswapV3TokenHourDataDTO] accept
uniswapV3GetTokenHourDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourDatas/historical"]

data UniswapV3GetTokenHourDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokenHourDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokenHourDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokenHourDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokenHourDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address concatendated with date.
instance HasOptionalParam UniswapV3GetTokenHourDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokenHourDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokenHourDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokenHourDatasHistorical MimePlainText


-- *** uniswapV3GetTokenV3DayDatasHistorical

-- | @GET \/dapps\/uniswapv3\/tokenV3DayDatas\/historical@
-- 
-- TokenV3DayDatas (historical) ðŸ”¥
-- 
-- Gets tokenV3DayDatas.
-- 
uniswapV3GetTokenV3DayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokenV3DayDatasHistorical MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3GetTokenV3DayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenV3DayDatas/historical"]

data UniswapV3GetTokenV3DayDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokenV3DayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokenV3DayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokenV3DayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokenV3DayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address concatendated with date.
instance HasOptionalParam UniswapV3GetTokenV3DayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokenV3DayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokenV3DayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokenV3DayDatasHistorical MimePlainText


-- *** uniswapV3GetTokensHistorical

-- | @GET \/dapps\/uniswapv3\/tokens\/historical@
-- 
-- Tokens (historical) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV3GetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensHistorical MimeNoContent [UniswapV3TokenDTO] accept
uniswapV3GetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/historical"]

data UniswapV3GetTokensHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address.
instance HasOptionalParam UniswapV3GetTokensHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "symbol" - Token symbol.
instance HasOptionalParam UniswapV3GetTokensHistorical Symbol where
  applyOptionalParam req (Symbol xs) =
    req `addQuery` toQuery ("symbol", Just xs)

-- | /Optional Param/ "name" - Token name.
instance HasOptionalParam UniswapV3GetTokensHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHistorical MimePlainText


-- *** uniswapV3GetTransactionsHistorical

-- | @GET \/dapps\/uniswapv3\/transactions\/historical@
-- 
-- Transactions (historical) ðŸ”¥
-- 
-- Gets transactions.
-- 
uniswapV3GetTransactionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTransactionsHistorical MimeNoContent [UniswapV3TransactionDTO] accept
uniswapV3GetTransactionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/historical"]

data UniswapV3GetTransactionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash.
instance HasOptionalParam UniswapV3GetTransactionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTransactionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTransactionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTransactionsHistorical MimePlainText


-- *** uniswapV3GetUniswapDayDatasHistorical

-- | @GET \/dapps\/uniswapv3\/uniswapDayDatas\/historical@
-- 
-- UniswapDayDatas (historical) ðŸ”¥
-- 
-- Gets uniswapDayDatas.
-- 
uniswapV3GetUniswapDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetUniswapDayDatasHistorical MimeNoContent [UniswapV3UniswapDayDataDTO] accept
uniswapV3GetUniswapDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayDatas/historical"]

data UniswapV3GetUniswapDayDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV3GetUniswapDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV3GetUniswapDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV3GetUniswapDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV3GetUniswapDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Timestamp rounded to current day by dividing by 86400.
instance HasOptionalParam UniswapV3GetUniswapDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetUniswapDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetUniswapDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetUniswapDayDatasHistorical MimePlainText


-- *** uniswapV3MintsCurrent

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV3MintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3MintsCurrent MimeNoContent [UniswapV3MintDTO] accept
uniswapV3MintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data UniswapV3MintsCurrent  
-- | @application/json@
instance Produces UniswapV3MintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3MintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3MintsCurrent MimePlainText


-- *** uniswapV3PoolDayDatasCurrent

-- | @GET \/dapps\/uniswapv3\/poolDayDatas\/current@
-- 
-- PoolDayDatas (current)
-- 
-- Gets poolDayDatas.
-- 
uniswapV3PoolDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3PoolDayDatasCurrent MimeNoContent [UniswapV3PoolDayDataDTO] accept
uniswapV3PoolDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayDatas/current"]

data UniswapV3PoolDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV3PoolDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolDayDatasCurrent MimePlainText


-- *** uniswapV3PoolHourDatasCurrent

-- | @GET \/dapps\/uniswapv3\/poolHourDatas\/current@
-- 
-- PoolHourDatas (current)
-- 
-- Gets poolHourDatas.
-- 
uniswapV3PoolHourDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3PoolHourDatasCurrent MimeNoContent [UniswapV3PoolHourDataDTO] accept
uniswapV3PoolHourDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourDatas/current"]

data UniswapV3PoolHourDatasCurrent  
-- | @application/json@
instance Produces UniswapV3PoolHourDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolHourDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolHourDatasCurrent MimePlainText


-- *** uniswapV3PoolsCurrent

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- Pools (current)
-- 
-- Gets pools.
-- 
uniswapV3PoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3PoolsCurrent MimeNoContent [UniswapV3PoolDTO] accept
uniswapV3PoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data UniswapV3PoolsCurrent  

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam UniswapV3PoolsCurrent Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3PoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolsCurrent MimePlainText


-- *** uniswapV3PositionSnapshotsCurrent

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- PositionSnapshots (current)
-- 
-- Gets positionSnapshots.
-- 
uniswapV3PositionSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3PositionSnapshotsCurrent MimeNoContent [UniswapV3PositionSnapshotDTO] accept
uniswapV3PositionSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data UniswapV3PositionSnapshotsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionSnapshotsCurrent MimePlainText


-- *** uniswapV3PositionsCurrent

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- Positions (current)
-- 
-- Gets positions.
-- 
uniswapV3PositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3PositionsCurrent MimeNoContent [UniswapV3PositionDTO] accept
uniswapV3PositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data UniswapV3PositionsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionsCurrent MimePlainText


-- *** uniswapV3SwapsCurrent

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- Swaps (current)
-- 
-- Gets swaps.
-- 
uniswapV3SwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3SwapsCurrent MimeNoContent [UniswapV3SwapDTO] accept
uniswapV3SwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data UniswapV3SwapsCurrent  

-- | /Optional Param/ "pool" - Pool swap occured within.
instance HasOptionalParam UniswapV3SwapsCurrent Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3SwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3SwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3SwapsCurrent MimePlainText


-- *** uniswapV3TickDayDatasCurrent

-- | @GET \/dapps\/uniswapv3\/tickDayDatas\/current@
-- 
-- TickDayDatas (current)
-- 
-- Gets tickDayDatas.
-- 
uniswapV3TickDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TickDayDatasCurrent MimeNoContent [UniswapV3TickDayDataDTO] accept
uniswapV3TickDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayDatas/current"]

data UniswapV3TickDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV3TickDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TickDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TickDayDatasCurrent MimePlainText


-- *** uniswapV3TicksCurrent

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- Ticks (current)
-- 
-- Gets ticks.
-- 
uniswapV3TicksCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TicksCurrent MimeNoContent [UniswapV3TickDTO] accept
uniswapV3TicksCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data UniswapV3TicksCurrent  
-- | @application/json@
instance Produces UniswapV3TicksCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TicksCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TicksCurrent MimePlainText


-- *** uniswapV3TokenHourDatasCurrent

-- | @GET \/dapps\/uniswapv3\/tokenHourDatas\/current@
-- 
-- TokenHourDatas (current)
-- 
-- Gets tokenHourDatas.
-- 
uniswapV3TokenHourDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TokenHourDatasCurrent MimeNoContent [UniswapV3TokenHourDataDTO] accept
uniswapV3TokenHourDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourDatas/current"]

data UniswapV3TokenHourDatasCurrent  
-- | @application/json@
instance Produces UniswapV3TokenHourDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenHourDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenHourDatasCurrent MimePlainText


-- *** uniswapV3TokenV3DayDatasCurrent

-- | @GET \/dapps\/uniswapv3\/tokenV3DayDatas\/current@
-- 
-- TokenV3DayDatas (current)
-- 
-- Gets tokenV3DayDatas.
-- 
uniswapV3TokenV3DayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TokenV3DayDatasCurrent MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3TokenV3DayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenV3DayDatas/current"]

data UniswapV3TokenV3DayDatasCurrent  
-- | @application/json@
instance Produces UniswapV3TokenV3DayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenV3DayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenV3DayDatasCurrent MimePlainText


-- *** uniswapV3TokensCurrent

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
uniswapV3TokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TokensCurrent MimeNoContent [UniswapV3TokenDTO] accept
uniswapV3TokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data UniswapV3TokensCurrent  
-- | @application/json@
instance Produces UniswapV3TokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokensCurrent MimePlainText


-- *** uniswapV3TransactionsCurrent

-- | @GET \/dapps\/uniswapv3\/transactions\/current@
-- 
-- Transactions (current)
-- 
-- Gets transactions.
-- 
uniswapV3TransactionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3TransactionsCurrent MimeNoContent [UniswapV3TransactionDTO] accept
uniswapV3TransactionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/current"]

data UniswapV3TransactionsCurrent  
-- | @application/json@
instance Produces UniswapV3TransactionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TransactionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TransactionsCurrent MimePlainText


-- *** uniswapV3UniswapDayDatasCurrent

-- | @GET \/dapps\/uniswapv3\/uniswapDayDatas\/current@
-- 
-- UniswapDayDatas (current)
-- 
-- Gets uniswapDayDatas.
-- 
uniswapV3UniswapDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3UniswapDayDatasCurrent MimeNoContent [UniswapV3UniswapDayDataDTO] accept
uniswapV3UniswapDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayDatas/current"]

data UniswapV3UniswapDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV3UniswapDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3UniswapDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3UniswapDayDatasCurrent MimePlainText

