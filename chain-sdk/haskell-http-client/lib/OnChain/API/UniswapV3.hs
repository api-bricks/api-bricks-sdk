{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV3 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** uniswapV3GetBundlesCurrent

-- | @GET \/dapps\/uniswapv3\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV3GetBundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBundlesCurrent MimeNoContent [UniswapV3BundleV3DTO] accept
uniswapV3GetBundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/current"]

data UniswapV3GetBundlesCurrent  
-- | @application/json@
instance Produces UniswapV3GetBundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBundlesCurrent MimePlainText


-- *** uniswapV3GetBurnsCurrent

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV3GetBurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBurnsCurrent MimeNoContent [UniswapV3BurnV3DTO] accept
uniswapV3GetBurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data UniswapV3GetBurnsCurrent  
instance HasOptionalParam UniswapV3GetBurnsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBurnsCurrent MimePlainText


-- *** uniswapV3GetDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/dayData\/current@
-- 
-- DayData (current)
-- 
-- Gets uniswapv3 day data.
-- 
uniswapV3GetDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetDayDataCurrent MimeNoContent [UniswapV3UniswapDayDataV3DTO] accept
uniswapV3GetDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/dayData/current"]

data UniswapV3GetDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3GetDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetDayDataCurrent MimePlainText


-- *** uniswapV3GetFactoryCurrent

-- | @GET \/dapps\/uniswapv3\/factory\/current@
-- 
-- Factory (current)
-- 
-- Gets factory.
-- 
uniswapV3GetFactoryCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetFactoryCurrent MimeNoContent [UniswapV3FactoryV3DTO] accept
uniswapV3GetFactoryCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factory/current"]

data UniswapV3GetFactoryCurrent  
-- | @application/json@
instance Produces UniswapV3GetFactoryCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetFactoryCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetFactoryCurrent MimePlainText


-- *** uniswapV3GetMintsCurrent

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV3GetMintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetMintsCurrent MimeNoContent [UniswapV3MintV3DTO] accept
uniswapV3GetMintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data UniswapV3GetMintsCurrent  
instance HasOptionalParam UniswapV3GetMintsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetMintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetMintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetMintsCurrent MimePlainText


-- *** uniswapV3GetPoolsCurrent

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- Pools (current) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV3GetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsCurrent MimeNoContent [UniswapV3PoolV3DTO] accept
uniswapV3GetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data UniswapV3GetPoolsCurrent  
instance HasOptionalParam UniswapV3GetPoolsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsCurrent MimePlainText


-- *** uniswapV3GetPoolsDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolsDayData\/current@
-- 
-- PoolsDayData (current)
-- 
-- Gets pools day data.
-- 
uniswapV3GetPoolsDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsDayDataCurrent MimeNoContent [UniswapV3PoolDayDataV3DTO] accept
uniswapV3GetPoolsDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsDayData/current"]

data UniswapV3GetPoolsDayDataCurrent  
instance HasOptionalParam UniswapV3GetPoolsDayDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsDayDataCurrent MimePlainText


-- *** uniswapV3GetPoolsHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolsHourData\/current@
-- 
-- PoolsHourData (current)
-- 
-- Gets pools hour data.
-- 
uniswapV3GetPoolsHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsHourDataCurrent MimeNoContent [UniswapV3PoolHourDataV3DTO] accept
uniswapV3GetPoolsHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsHourData/current"]

data UniswapV3GetPoolsHourDataCurrent  
instance HasOptionalParam UniswapV3GetPoolsHourDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHourDataCurrent MimePlainText


-- *** uniswapV3GetPositionsCurrent

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- Positions (current)
-- 
-- Gets positions.
-- 
uniswapV3GetPositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsCurrent MimeNoContent [UniswapV3PositionV3DTO] accept
uniswapV3GetPositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data UniswapV3GetPositionsCurrent  
instance HasOptionalParam UniswapV3GetPositionsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsCurrent MimePlainText


-- *** uniswapV3GetPositionsSnapshotsCurrent

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- PositionsSnapshots (current)
-- 
-- Gets positions snapshots.
-- 
uniswapV3GetPositionsSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsSnapshotsCurrent MimeNoContent [UniswapV3PositionSnapshotV3DTO] accept
uniswapV3GetPositionsSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data UniswapV3GetPositionsSnapshotsCurrent  
instance HasOptionalParam UniswapV3GetPositionsSnapshotsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimePlainText


-- *** uniswapV3GetSwapsCurrent

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- Swaps (current) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV3GetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetSwapsCurrent MimeNoContent [UniswapV3SwapV3DTO] accept
uniswapV3GetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data UniswapV3GetSwapsCurrent  
instance HasOptionalParam UniswapV3GetSwapsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetSwapsCurrent MimePlainText


-- *** uniswapV3GetTicksCurrent

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- Ticks (current)
-- 
-- Gets ticks.
-- 
uniswapV3GetTicksCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksCurrent MimeNoContent [UniswapV3TickV3DTO] accept
uniswapV3GetTicksCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data UniswapV3GetTicksCurrent  
instance HasOptionalParam UniswapV3GetTicksCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksCurrent MimePlainText


-- *** uniswapV3GetTicksDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/ticksDayData\/current@
-- 
-- TicksDayData (current)
-- 
-- Gets ticks day data.
-- 
uniswapV3GetTicksDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksDayDataCurrent MimeNoContent [UniswapV3TickDayDataV3DTO] accept
uniswapV3GetTicksDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticksDayData/current"]

data UniswapV3GetTicksDayDataCurrent  
instance HasOptionalParam UniswapV3GetTicksDayDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksDayDataCurrent MimePlainText


-- *** uniswapV3GetTokensCurrent

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- Tokens (current) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV3GetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensCurrent MimeNoContent [UniswapV3TokenV3DTO] accept
uniswapV3GetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data UniswapV3GetTokensCurrent  
instance HasOptionalParam UniswapV3GetTokensCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensCurrent MimePlainText


-- *** uniswapV3GetTokensDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokensDayData\/current@
-- 
-- TokensDayData (current)
-- 
-- Gets tokens day data.
-- 
uniswapV3GetTokensDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensDayDataCurrent MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3GetTokensDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensDayData/current"]

data UniswapV3GetTokensDayDataCurrent  
instance HasOptionalParam UniswapV3GetTokensDayDataCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensDayDataCurrent MimePlainText


-- *** uniswapV3GetTokensHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokensHourData\/current@
-- 
-- TokensHourData (current)
-- 
-- Gets tokens hour data.
-- 
uniswapV3GetTokensHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensHourDataCurrent MimeNoContent [UniswapV3TokenHourDataV3DTO] accept
uniswapV3GetTokensHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensHourData/current"]

data UniswapV3GetTokensHourDataCurrent  
instance HasOptionalParam UniswapV3GetTokensHourDataCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHourDataCurrent MimePlainText

