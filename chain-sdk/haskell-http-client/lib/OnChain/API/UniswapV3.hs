{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV3 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** dappsUniswapv3BundleCurrentGet

-- | @GET \/dapps\/uniswapv3\/bundle\/current@
-- 
-- GetBundles
-- 
dappsUniswapv3BundleCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3BundleCurrentGet MimeNoContent [UniswapV3BundleV3DTO] accept
dappsUniswapv3BundleCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundle/current"]

data DappsUniswapv3BundleCurrentGet  
-- | @application/json@
instance Produces DappsUniswapv3BundleCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3BundleCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3BundleCurrentGet MimePlainText


-- *** dappsUniswapv3BundlesHistoricalGet

-- | @GET \/dapps\/uniswapv3\/bundles\/historical@
-- 
dappsUniswapv3BundlesHistoricalGet
  :: OnChainRequest DappsUniswapv3BundlesHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3BundlesHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/historical"]

data DappsUniswapv3BundlesHistoricalGet  
instance HasOptionalParam DappsUniswapv3BundlesHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3BundlesHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3BundlesHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3BundlesHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsUniswapv3BundlesHistoricalGet MimeNoContent


-- *** dappsUniswapv3BurnsCurrentGet

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- GetBurns
-- 
dappsUniswapv3BurnsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3BurnsCurrentGet MimeNoContent [UniswapV3BurnV3DTO] accept
dappsUniswapv3BurnsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data DappsUniswapv3BurnsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3BurnsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3BurnsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3BurnsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3BurnsCurrentGet MimePlainText


-- *** dappsUniswapv3BurnsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/burns\/historical@
-- 
dappsUniswapv3BurnsHistoricalGet
  :: OnChainRequest DappsUniswapv3BurnsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3BurnsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/historical"]

data DappsUniswapv3BurnsHistoricalGet  
instance HasOptionalParam DappsUniswapv3BurnsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3BurnsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3BurnsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3BurnsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3BurnsHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3BurnsHistoricalGet MimeNoContent


-- *** dappsUniswapv3DayDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/dayData\/historical@
-- 
dappsUniswapv3DayDataHistoricalGet
  :: OnChainRequest DappsUniswapv3DayDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3DayDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/dayData/historical"]

data DappsUniswapv3DayDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3DayDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3DayDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3DayDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3DayDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsUniswapv3DayDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3FactoryCurrentGet

-- | @GET \/dapps\/uniswapv3\/factory\/current@
-- 
-- GetFactory
-- 
dappsUniswapv3FactoryCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> ChainId -- ^ "chainId"
  -> OnChainRequest DappsUniswapv3FactoryCurrentGet MimeNoContent [UniswapV3FactoryV3DTO] accept
dappsUniswapv3FactoryCurrentGet  _ (ChainId chainId) =
  _mkRequest "GET" ["/dapps/uniswapv3/factory/current"]

data DappsUniswapv3FactoryCurrentGet  
-- | @application/json@
instance Produces DappsUniswapv3FactoryCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3FactoryCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3FactoryCurrentGet MimePlainText


-- *** dappsUniswapv3FactoryHistoricalGet

-- | @GET \/dapps\/uniswapv3\/factory\/historical@
-- 
dappsUniswapv3FactoryHistoricalGet
  :: OnChainRequest DappsUniswapv3FactoryHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3FactoryHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/factory/historical"]

data DappsUniswapv3FactoryHistoricalGet  
instance HasOptionalParam DappsUniswapv3FactoryHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3FactoryHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3FactoryHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3FactoryHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsUniswapv3FactoryHistoricalGet MimeNoContent


-- *** dappsUniswapv3MintsCurrentGet

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- GetMints
-- 
dappsUniswapv3MintsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3MintsCurrentGet MimeNoContent [UniswapV3MintV3DTO] accept
dappsUniswapv3MintsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data DappsUniswapv3MintsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3MintsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3MintsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3MintsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3MintsCurrentGet MimePlainText


-- *** dappsUniswapv3MintsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/mints\/historical@
-- 
dappsUniswapv3MintsHistoricalGet
  :: OnChainRequest DappsUniswapv3MintsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3MintsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/historical"]

data DappsUniswapv3MintsHistoricalGet  
instance HasOptionalParam DappsUniswapv3MintsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3MintsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3MintsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3MintsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3MintsHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3MintsHistoricalGet MimeNoContent


-- *** dappsUniswapv3PoolDayDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/poolDayData\/historical@
-- 
dappsUniswapv3PoolDayDataHistoricalGet
  :: OnChainRequest DappsUniswapv3PoolDayDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3PoolDayDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayData/historical"]

data DappsUniswapv3PoolDayDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3PoolDayDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolDayDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolDayDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolDayDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolDayDataHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3PoolDayDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3PoolHourDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/poolHourData\/historical@
-- 
dappsUniswapv3PoolHourDataHistoricalGet
  :: OnChainRequest DappsUniswapv3PoolHourDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3PoolHourDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourData/historical"]

data DappsUniswapv3PoolHourDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3PoolHourDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolHourDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolHourDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolHourDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolHourDataHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3PoolHourDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3PoolsCurrentGet

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- GetPools
-- 
dappsUniswapv3PoolsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3PoolsCurrentGet MimeNoContent [UniswapV3PoolV3DTO] accept
dappsUniswapv3PoolsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data DappsUniswapv3PoolsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3PoolsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3PoolsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3PoolsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3PoolsCurrentGet MimePlainText


-- *** dappsUniswapv3PoolsDayDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/poolsDayData\/current@
-- 
-- GetPoolsDayData
-- 
dappsUniswapv3PoolsDayDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3PoolsDayDataCurrentGet MimeNoContent [UniswapV3PoolDayDataV3DTO] accept
dappsUniswapv3PoolsDayDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsDayData/current"]

data DappsUniswapv3PoolsDayDataCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3PoolsDayDataCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3PoolsDayDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3PoolsDayDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3PoolsDayDataCurrentGet MimePlainText


-- *** dappsUniswapv3PoolsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/pools\/historical@
-- 
dappsUniswapv3PoolsHistoricalGet
  :: OnChainRequest DappsUniswapv3PoolsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3PoolsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/historical"]

data DappsUniswapv3PoolsHistoricalGet  
instance HasOptionalParam DappsUniswapv3PoolsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PoolsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3PoolsHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3PoolsHistoricalGet MimeNoContent


-- *** dappsUniswapv3PoolsHourDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/poolsHourData\/current@
-- 
-- GetPoolsHourData
-- 
dappsUniswapv3PoolsHourDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3PoolsHourDataCurrentGet MimeNoContent [UniswapV3PoolHourDataV3DTO] accept
dappsUniswapv3PoolsHourDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsHourData/current"]

data DappsUniswapv3PoolsHourDataCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3PoolsHourDataCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3PoolsHourDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3PoolsHourDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3PoolsHourDataCurrentGet MimePlainText


-- *** dappsUniswapv3PositionSnapshotHistoricalGet

-- | @GET \/dapps\/uniswapv3\/positionSnapshot\/historical@
-- 
dappsUniswapv3PositionSnapshotHistoricalGet
  :: OnChainRequest DappsUniswapv3PositionSnapshotHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3PositionSnapshotHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshot/historical"]

data DappsUniswapv3PositionSnapshotHistoricalGet  
instance HasOptionalParam DappsUniswapv3PositionSnapshotHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PositionSnapshotHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PositionSnapshotHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3PositionSnapshotHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3PositionSnapshotHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3PositionSnapshotHistoricalGet MimeNoContent


-- *** dappsUniswapv3PositionSnapshotsCurrentGet

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- GetPositionSnapshot
-- 
dappsUniswapv3PositionSnapshotsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3PositionSnapshotsCurrentGet MimeNoContent [UniswapV3PositionSnapshotV3DTO] accept
dappsUniswapv3PositionSnapshotsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data DappsUniswapv3PositionSnapshotsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3PositionSnapshotsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3PositionSnapshotsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3PositionSnapshotsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3PositionSnapshotsCurrentGet MimePlainText


-- *** dappsUniswapv3PositionsCurrentGet

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- GetPositions
-- 
dappsUniswapv3PositionsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3PositionsCurrentGet MimeNoContent [UniswapV3PositionV3DTO] accept
dappsUniswapv3PositionsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data DappsUniswapv3PositionsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3PositionsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3PositionsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3PositionsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3PositionsCurrentGet MimePlainText


-- *** dappsUniswapv3PositionsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/positions\/historical@
-- 
dappsUniswapv3PositionsHistoricalGet
  :: OnChainRequest DappsUniswapv3PositionsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3PositionsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/historical"]

data DappsUniswapv3PositionsHistoricalGet  
instance HasOptionalParam DappsUniswapv3PositionsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PositionsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3PositionsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3PositionsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3PositionsHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3PositionsHistoricalGet MimeNoContent


-- *** dappsUniswapv3SwapsCurrentGet

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- GetSwaps
-- 
dappsUniswapv3SwapsCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3SwapsCurrentGet MimeNoContent [UniswapV3SwapV3DTO] accept
dappsUniswapv3SwapsCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data DappsUniswapv3SwapsCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3SwapsCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3SwapsCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3SwapsCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3SwapsCurrentGet MimePlainText


-- *** dappsUniswapv3SwapsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/swaps\/historical@
-- 
dappsUniswapv3SwapsHistoricalGet
  :: OnChainRequest DappsUniswapv3SwapsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3SwapsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/historical"]

data DappsUniswapv3SwapsHistoricalGet  
instance HasOptionalParam DappsUniswapv3SwapsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3SwapsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3SwapsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3SwapsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3SwapsHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3SwapsHistoricalGet MimeNoContent


-- *** dappsUniswapv3TickDayDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/tickDayData\/historical@
-- 
dappsUniswapv3TickDayDataHistoricalGet
  :: OnChainRequest DappsUniswapv3TickDayDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TickDayDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayData/historical"]

data DappsUniswapv3TickDayDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3TickDayDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TickDayDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TickDayDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TickDayDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3TickDayDataHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3TickDayDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3TicksCurrentGet

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- GetTicks
-- 
dappsUniswapv3TicksCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3TicksCurrentGet MimeNoContent [UniswapV3TickV3DTO] accept
dappsUniswapv3TicksCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data DappsUniswapv3TicksCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3TicksCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3TicksCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3TicksCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3TicksCurrentGet MimePlainText


-- *** dappsUniswapv3TicksDayDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/ticksDayData\/current@
-- 
-- GetTicksDayData
-- 
dappsUniswapv3TicksDayDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3TicksDayDataCurrentGet MimeNoContent [UniswapV3TickDayDataV3DTO] accept
dappsUniswapv3TicksDayDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticksDayData/current"]

data DappsUniswapv3TicksDayDataCurrentGet  

-- | /Optional Param/ "filter_pool_id" - Filter pool id
instance HasOptionalParam DappsUniswapv3TicksDayDataCurrentGet FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3TicksDayDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3TicksDayDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3TicksDayDataCurrentGet MimePlainText


-- *** dappsUniswapv3TicksHistoricalGet

-- | @GET \/dapps\/uniswapv3\/ticks\/historical@
-- 
dappsUniswapv3TicksHistoricalGet
  :: OnChainRequest DappsUniswapv3TicksHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TicksHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/historical"]

data DappsUniswapv3TicksHistoricalGet  
instance HasOptionalParam DappsUniswapv3TicksHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TicksHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TicksHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TicksHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3TicksHistoricalGet PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
instance Produces DappsUniswapv3TicksHistoricalGet MimeNoContent


-- *** dappsUniswapv3TokenDayDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/tokenDayData\/historical@
-- 
dappsUniswapv3TokenDayDataHistoricalGet
  :: OnChainRequest DappsUniswapv3TokenDayDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TokenDayDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenDayData/historical"]

data DappsUniswapv3TokenDayDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3TokenDayDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokenDayDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokenDayDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokenDayDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokenDayDataHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsUniswapv3TokenDayDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3TokenHourDataHistoricalGet

-- | @GET \/dapps\/uniswapv3\/tokenHourData\/historical@
-- 
dappsUniswapv3TokenHourDataHistoricalGet
  :: OnChainRequest DappsUniswapv3TokenHourDataHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TokenHourDataHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourData/historical"]

data DappsUniswapv3TokenHourDataHistoricalGet  
instance HasOptionalParam DappsUniswapv3TokenHourDataHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokenHourDataHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokenHourDataHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokenHourDataHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokenHourDataHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsUniswapv3TokenHourDataHistoricalGet MimeNoContent


-- *** dappsUniswapv3TokensCurrentGet

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- GetTokens
-- 
dappsUniswapv3TokensCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3TokensCurrentGet MimeNoContent [UniswapV3TokenV3DTO] accept
dappsUniswapv3TokensCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data DappsUniswapv3TokensCurrentGet  
instance HasOptionalParam DappsUniswapv3TokensCurrentGet FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3TokensCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3TokensCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3TokensCurrentGet MimePlainText


-- *** dappsUniswapv3TokensDayDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/tokensDayData\/current@
-- 
-- GetTokensDayData
-- 
dappsUniswapv3TokensDayDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3TokensDayDataCurrentGet MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
dappsUniswapv3TokensDayDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensDayData/current"]

data DappsUniswapv3TokensDayDataCurrentGet  
instance HasOptionalParam DappsUniswapv3TokensDayDataCurrentGet FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3TokensDayDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3TokensDayDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3TokensDayDataCurrentGet MimePlainText


-- *** dappsUniswapv3TokensHistoricalGet

-- | @GET \/dapps\/uniswapv3\/tokens\/historical@
-- 
dappsUniswapv3TokensHistoricalGet
  :: OnChainRequest DappsUniswapv3TokensHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TokensHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/historical"]

data DappsUniswapv3TokensHistoricalGet  
instance HasOptionalParam DappsUniswapv3TokensHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokensHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TokensHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokensHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsUniswapv3TokensHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsUniswapv3TokensHistoricalGet MimeNoContent


-- *** dappsUniswapv3TokensHourDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/tokensHourData\/current@
-- 
-- GetTokensHourData
-- 
dappsUniswapv3TokensHourDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3TokensHourDataCurrentGet MimeNoContent [UniswapV3TokenHourDataV3DTO] accept
dappsUniswapv3TokensHourDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensHourData/current"]

data DappsUniswapv3TokensHourDataCurrentGet  
instance HasOptionalParam DappsUniswapv3TokensHourDataCurrentGet FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces DappsUniswapv3TokensHourDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3TokensHourDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3TokensHourDataCurrentGet MimePlainText


-- *** dappsUniswapv3TransactionsHistoricalGet

-- | @GET \/dapps\/uniswapv3\/transactions\/historical@
-- 
dappsUniswapv3TransactionsHistoricalGet
  :: OnChainRequest DappsUniswapv3TransactionsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsUniswapv3TransactionsHistoricalGet =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/historical"]

data DappsUniswapv3TransactionsHistoricalGet  
instance HasOptionalParam DappsUniswapv3TransactionsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TransactionsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsUniswapv3TransactionsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsUniswapv3TransactionsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsUniswapv3TransactionsHistoricalGet MimeNoContent


-- *** dappsUniswapv3UniswapDayDataCurrentGet

-- | @GET \/dapps\/uniswapv3\/uniswapDayData\/current@
-- 
-- GetUniswapDayData
-- 
dappsUniswapv3UniswapDayDataCurrentGet
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DappsUniswapv3UniswapDayDataCurrentGet MimeNoContent [UniswapV3UniswapDayDataV3DTO] accept
dappsUniswapv3UniswapDayDataCurrentGet  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayData/current"]

data DappsUniswapv3UniswapDayDataCurrentGet  
-- | @application/json@
instance Produces DappsUniswapv3UniswapDayDataCurrentGet MimeJSON
-- | @text/json@
instance Produces DappsUniswapv3UniswapDayDataCurrentGet MimeTextJson
-- | @text/plain@
instance Produces DappsUniswapv3UniswapDayDataCurrentGet MimePlainText

