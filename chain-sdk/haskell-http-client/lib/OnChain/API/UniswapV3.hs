{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV3 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** uniswapV3GetBundlesCurrent

-- | @GET \/dapps\/uniswapv3\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV3GetBundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBundlesCurrent MimeNoContent [UniswapV3BundleV3DTO] accept
uniswapV3GetBundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/current"]

data UniswapV3GetBundlesCurrent  
-- | @application/json@
instance Produces UniswapV3GetBundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBundlesCurrent MimePlainText


-- *** uniswapV3GetBundlesHistorical

-- | @GET \/dapps\/uniswapv3\/bundles\/historical@
-- 
-- Bundles (historical)
-- 
-- Gets bundles.
-- 
uniswapV3GetBundlesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBundlesHistorical MimeNoContent [UniswapV3BundleV3DTO] accept
uniswapV3GetBundlesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/historical"]

data UniswapV3GetBundlesHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetBundlesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBundlesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBundlesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBundlesHistorical MimePlainText


-- *** uniswapV3GetBurnsCurrent

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV3GetBurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBurnsCurrent MimeNoContent [UniswapV3BurnV3DTO] accept
uniswapV3GetBurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data UniswapV3GetBurnsCurrent  
instance HasOptionalParam UniswapV3GetBurnsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBurnsCurrent MimePlainText


-- *** uniswapV3GetBurnsHistorical

-- | @GET \/dapps\/uniswapv3\/burns\/historical@
-- 
-- Burns (historical)
-- 
-- Gets burns.
-- 
uniswapV3GetBurnsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetBurnsHistorical MimeNoContent [UniswapV3BurnV3DTO] accept
uniswapV3GetBurnsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/historical"]

data UniswapV3GetBurnsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetBurnsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetBurnsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetBurnsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetBurnsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetBurnsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetBurnsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetBurnsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetBurnsHistorical MimePlainText


-- *** uniswapV3GetDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/dayData\/current@
-- 
-- DayData (current)
-- 
-- Gets uniswapv3 day data.
-- 
uniswapV3GetDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetDayDataCurrent MimeNoContent [UniswapV3UniswapDayDataV3DTO] accept
uniswapV3GetDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/dayData/current"]

data UniswapV3GetDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3GetDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetDayDataCurrent MimePlainText


-- *** uniswapV3GetDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/dayData\/historical@
-- 
-- DayData (historical)
-- 
-- Gets uniswapv3 day data.
-- 
uniswapV3GetDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetDayDataHistorical MimeNoContent [UniswapV3UniswapDayDataV3DTO] accept
uniswapV3GetDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/dayData/historical"]

data UniswapV3GetDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV3GetDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetDayDataHistorical MimePlainText


-- *** uniswapV3GetFactoryCurrent

-- | @GET \/dapps\/uniswapv3\/factory\/current@
-- 
-- Factory (current)
-- 
-- Gets factory.
-- 
uniswapV3GetFactoryCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetFactoryCurrent MimeNoContent [UniswapV3FactoryV3DTO] accept
uniswapV3GetFactoryCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factory/current"]

data UniswapV3GetFactoryCurrent  
-- | @application/json@
instance Produces UniswapV3GetFactoryCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetFactoryCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetFactoryCurrent MimePlainText


-- *** uniswapV3GetFactoryHistorical

-- | @GET \/dapps\/uniswapv3\/factory\/historical@
-- 
-- Factory (historical)
-- 
-- Gets factory.
-- 
uniswapV3GetFactoryHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetFactoryHistorical MimeNoContent [UniswapV3FactoryV3DTO] accept
uniswapV3GetFactoryHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factory/historical"]

data UniswapV3GetFactoryHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetFactoryHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetFactoryHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetFactoryHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetFactoryHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV3GetFactoryHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetFactoryHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetFactoryHistorical MimePlainText


-- *** uniswapV3GetMintsCurrent

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV3GetMintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetMintsCurrent MimeNoContent [UniswapV3MintV3DTO] accept
uniswapV3GetMintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data UniswapV3GetMintsCurrent  
instance HasOptionalParam UniswapV3GetMintsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetMintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetMintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetMintsCurrent MimePlainText


-- *** uniswapV3GetMintsHistorical

-- | @GET \/dapps\/uniswapv3\/mints\/historical@
-- 
-- Mints (historical)
-- 
-- Gets mints.
-- 
uniswapV3GetMintsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetMintsHistorical MimeNoContent [UniswapV3MintV3DTO] accept
uniswapV3GetMintsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/historical"]

data UniswapV3GetMintsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetMintsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetMintsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetMintsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetMintsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetMintsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetMintsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetMintsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetMintsHistorical MimePlainText


-- *** uniswapV3GetPoolsCurrent

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- Pools (current) 🔥
-- 
-- Gets pools.
-- 
uniswapV3GetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsCurrent MimeNoContent [UniswapV3PoolV3DTO] accept
uniswapV3GetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data UniswapV3GetPoolsCurrent  
instance HasOptionalParam UniswapV3GetPoolsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsCurrent MimePlainText


-- *** uniswapV3GetPoolsDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolsDayData\/current@
-- 
-- PoolsDayData (current)
-- 
-- Gets pools day data.
-- 
uniswapV3GetPoolsDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsDayDataCurrent MimeNoContent [UniswapV3PoolDayDataV3DTO] accept
uniswapV3GetPoolsDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsDayData/current"]

data UniswapV3GetPoolsDayDataCurrent  
instance HasOptionalParam UniswapV3GetPoolsDayDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsDayDataCurrent MimePlainText


-- *** uniswapV3GetPoolsDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/poolsDayData\/historical@
-- 
-- PoolsDayData (historical)
-- 
-- Gets pools day data.
-- 
uniswapV3GetPoolsDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsDayDataHistorical MimeNoContent [UniswapV3PoolDayDataV3DTO] accept
uniswapV3GetPoolsDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsDayData/historical"]

data UniswapV3GetPoolsDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetPoolsDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetPoolsDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetPoolsDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetPoolsDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetPoolsDayDataHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsDayDataHistorical MimePlainText


-- *** uniswapV3GetPoolsHistorical

-- | @GET \/dapps\/uniswapv3\/pools\/historical@
-- 
-- Pools (historical) 🔥
-- 
-- Gets pools.
-- 
uniswapV3GetPoolsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsHistorical MimeNoContent [UniswapV3PoolV3DTO] accept
uniswapV3GetPoolsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/historical"]

data UniswapV3GetPoolsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetPoolsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetPoolsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetPoolsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetPoolsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetPoolsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHistorical MimePlainText


-- *** uniswapV3GetPoolsHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolsHourData\/current@
-- 
-- PoolsHourData (current)
-- 
-- Gets pools hour data.
-- 
uniswapV3GetPoolsHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsHourDataCurrent MimeNoContent [UniswapV3PoolHourDataV3DTO] accept
uniswapV3GetPoolsHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsHourData/current"]

data UniswapV3GetPoolsHourDataCurrent  
instance HasOptionalParam UniswapV3GetPoolsHourDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHourDataCurrent MimePlainText


-- *** uniswapV3GetPoolsHourDataHistorical

-- | @GET \/dapps\/uniswapv3\/poolsHourData\/historical@
-- 
-- PoolsHourData (historical)
-- 
-- Gets pools hour data.
-- 
uniswapV3GetPoolsHourDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPoolsHourDataHistorical MimeNoContent [UniswapV3PoolHourDataV3DTO] accept
uniswapV3GetPoolsHourDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolsHourData/historical"]

data UniswapV3GetPoolsHourDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetPoolsHourDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetPoolsHourDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetPoolsHourDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetPoolsHourDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetPoolsHourDataHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPoolsHourDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPoolsHourDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPoolsHourDataHistorical MimePlainText


-- *** uniswapV3GetPositionsCurrent

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- Positions (current)
-- 
-- Gets positions.
-- 
uniswapV3GetPositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsCurrent MimeNoContent [UniswapV3PositionV3DTO] accept
uniswapV3GetPositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data UniswapV3GetPositionsCurrent  
instance HasOptionalParam UniswapV3GetPositionsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsCurrent MimePlainText


-- *** uniswapV3GetPositionsHistorical

-- | @GET \/dapps\/uniswapv3\/positions\/historical@
-- 
-- Positions (historical)
-- 
-- Gets positions.
-- 
uniswapV3GetPositionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsHistorical MimeNoContent [UniswapV3PositionV3DTO] accept
uniswapV3GetPositionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/historical"]

data UniswapV3GetPositionsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetPositionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetPositionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetPositionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetPositionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetPositionsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsHistorical MimePlainText


-- *** uniswapV3GetPositionsSnaphotsHistorical

-- | @GET \/dapps\/uniswapv3\/positionsSnapshots\/historical@
-- 
-- PositionsSnaphots (historical)
-- 
-- Gets positions snapshots.
-- 
uniswapV3GetPositionsSnaphotsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsSnaphotsHistorical MimeNoContent [UniswapV3PositionSnapshotV3DTO] accept
uniswapV3GetPositionsSnaphotsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionsSnapshots/historical"]

data UniswapV3GetPositionsSnaphotsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetPositionsSnaphotsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetPositionsSnaphotsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetPositionsSnaphotsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetPositionsSnaphotsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetPositionsSnaphotsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsSnaphotsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsSnaphotsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsSnaphotsHistorical MimePlainText


-- *** uniswapV3GetPositionsSnapshotsCurrent

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- PositionsSnapshots (current)
-- 
-- Gets positions snapshots.
-- 
uniswapV3GetPositionsSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetPositionsSnapshotsCurrent MimeNoContent [UniswapV3PositionSnapshotV3DTO] accept
uniswapV3GetPositionsSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data UniswapV3GetPositionsSnapshotsCurrent  
instance HasOptionalParam UniswapV3GetPositionsSnapshotsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetPositionsSnapshotsCurrent MimePlainText


-- *** uniswapV3GetSwapsCurrent

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- Swaps (current) 🔥
-- 
-- Gets swaps.
-- 
uniswapV3GetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetSwapsCurrent MimeNoContent [UniswapV3SwapV3DTO] accept
uniswapV3GetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data UniswapV3GetSwapsCurrent  
instance HasOptionalParam UniswapV3GetSwapsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetSwapsCurrent MimePlainText


-- *** uniswapV3GetSwapsHistorical

-- | @GET \/dapps\/uniswapv3\/swaps\/historical@
-- 
-- Swaps (historical) 🔥
-- 
-- Gets swaps.
-- 
uniswapV3GetSwapsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetSwapsHistorical MimeNoContent [UniswapV3SwapV3DTO] accept
uniswapV3GetSwapsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/historical"]

data UniswapV3GetSwapsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetSwapsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetSwapsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetSwapsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetSwapsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetSwapsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetSwapsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetSwapsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetSwapsHistorical MimePlainText


-- *** uniswapV3GetTicksCurrent

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- Ticks (current)
-- 
-- Gets ticks.
-- 
uniswapV3GetTicksCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksCurrent MimeNoContent [UniswapV3TickV3DTO] accept
uniswapV3GetTicksCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data UniswapV3GetTicksCurrent  
instance HasOptionalParam UniswapV3GetTicksCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksCurrent MimePlainText


-- *** uniswapV3GetTicksDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/ticksDayData\/current@
-- 
-- TicksDayData (current)
-- 
-- Gets ticks day data.
-- 
uniswapV3GetTicksDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksDayDataCurrent MimeNoContent [UniswapV3TickDayDataV3DTO] accept
uniswapV3GetTicksDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticksDayData/current"]

data UniswapV3GetTicksDayDataCurrent  
instance HasOptionalParam UniswapV3GetTicksDayDataCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksDayDataCurrent MimePlainText


-- *** uniswapV3GetTicksDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/ticksDayData\/historical@
-- 
-- TicksDayData (historical)
-- 
-- Gets ticks day data.
-- 
uniswapV3GetTicksDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksDayDataHistorical MimeNoContent [UniswapV3TickDayDataV3DTO] accept
uniswapV3GetTicksDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticksDayData/historical"]

data UniswapV3GetTicksDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTicksDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTicksDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTicksDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTicksDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetTicksDayDataHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksDayDataHistorical MimePlainText


-- *** uniswapV3GetTicksHistorical

-- | @GET \/dapps\/uniswapv3\/ticks\/historical@
-- 
-- Ticks (historical)
-- 
-- Gets ticks.
-- 
uniswapV3GetTicksHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTicksHistorical MimeNoContent [UniswapV3TickV3DTO] accept
uniswapV3GetTicksHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/historical"]

data UniswapV3GetTicksHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTicksHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTicksHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTicksHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTicksHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV3GetTicksHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTicksHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTicksHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTicksHistorical MimePlainText


-- *** uniswapV3GetTokensCurrent

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- Tokens (current) 🔥
-- 
-- Gets tokens.
-- 
uniswapV3GetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensCurrent MimeNoContent [UniswapV3TokenV3DTO] accept
uniswapV3GetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data UniswapV3GetTokensCurrent  
instance HasOptionalParam UniswapV3GetTokensCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensCurrent MimePlainText


-- *** uniswapV3GetTokensDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokensDayData\/current@
-- 
-- TokensDayData (current)
-- 
-- Gets tokens day data.
-- 
uniswapV3GetTokensDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensDayDataCurrent MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3GetTokensDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensDayData/current"]

data UniswapV3GetTokensDayDataCurrent  
instance HasOptionalParam UniswapV3GetTokensDayDataCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensDayDataCurrent MimePlainText


-- *** uniswapV3GetTokensDayDataHistorical

-- | @GET \/dapps\/uniswapv3\/tokensDayData\/historical@
-- 
-- TokensDayData (historical)
-- 
-- Gets tokens day data.
-- 
uniswapV3GetTokensDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensDayDataHistorical MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3GetTokensDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensDayData/historical"]

data UniswapV3GetTokensDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTokensDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTokensDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTokensDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTokensDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam UniswapV3GetTokensDayDataHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensDayDataHistorical MimePlainText


-- *** uniswapV3GetTokensHistorical

-- | @GET \/dapps\/uniswapv3\/tokens\/historical@
-- 
-- Tokens (historical) 🔥
-- 
-- Gets tokens.
-- 
uniswapV3GetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensHistorical MimeNoContent [UniswapV3TokenV3DTO] accept
uniswapV3GetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/historical"]

data UniswapV3GetTokensHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam UniswapV3GetTokensHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHistorical MimePlainText


-- *** uniswapV3GetTokensHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokensHourData\/current@
-- 
-- TokensHourData (current)
-- 
-- Gets tokens hour data.
-- 
uniswapV3GetTokensHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensHourDataCurrent MimeNoContent [UniswapV3TokenHourDataV3DTO] accept
uniswapV3GetTokensHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensHourData/current"]

data UniswapV3GetTokensHourDataCurrent  
instance HasOptionalParam UniswapV3GetTokensHourDataCurrent FilterTokenId where
  applyOptionalParam req (FilterTokenId xs) =
    req `addQuery` toQuery ("filter_token_id", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHourDataCurrent MimePlainText


-- *** uniswapV3GetTokensHourDataHistorical

-- | @GET \/dapps\/uniswapv3\/tokensHourData\/historical@
-- 
-- TokensHourData (historical)
-- 
-- Gets tokens hour data.
-- 
uniswapV3GetTokensHourDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTokensHourDataHistorical MimeNoContent [UniswapV3TokenHourDataV3DTO] accept
uniswapV3GetTokensHourDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokensHourData/historical"]

data UniswapV3GetTokensHourDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTokensHourDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTokensHourDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTokensHourDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTokensHourDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam UniswapV3GetTokensHourDataHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTokensHourDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTokensHourDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTokensHourDataHistorical MimePlainText


-- *** uniswapV3GetTransactionsHistorical

-- | @GET \/dapps\/uniswapv3\/transactions\/historical@
-- 
-- Transactions (historical)
-- 
-- Gets transactions.
-- 
uniswapV3GetTransactionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV3GetTransactionsHistorical MimeNoContent [UniswapV3TransactionV3DTO] accept
uniswapV3GetTransactionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/historical"]

data UniswapV3GetTransactionsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV3GetTransactionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV3GetTransactionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV3GetTransactionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV3GetTransactionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV3GetTransactionsHistorical MimePlainText

