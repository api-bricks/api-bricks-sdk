{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.Dex
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.Dex where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Dex

-- *** dappsDexBatchHistoricalGet

-- | @GET \/dapps\/dex\/batch\/historical@
-- 
dappsDexBatchHistoricalGet
  :: OnChainRequest DappsDexBatchHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexBatchHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/batch/historical"]

data DappsDexBatchHistoricalGet  
instance HasOptionalParam DappsDexBatchHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexBatchHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexBatchHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexBatchHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsDexBatchHistoricalGet MimeNoContent


-- *** dappsDexOrdersHistoricalGet

-- | @GET \/dapps\/dex\/orders\/historical@
-- 
dappsDexOrdersHistoricalGet
  :: OnChainRequest DappsDexOrdersHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexOrdersHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/orders/historical"]

data DappsDexOrdersHistoricalGet  
instance HasOptionalParam DappsDexOrdersHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexOrdersHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexOrdersHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexOrdersHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexOrdersHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexOrdersHistoricalGet MimeNoContent


-- *** dappsDexPoiHistoricalGet

-- | @GET \/dapps\/dex\/poi\/historical@
-- 
dappsDexPoiHistoricalGet
  :: OnChainRequest DappsDexPoiHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexPoiHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/poi/historical"]

data DappsDexPoiHistoricalGet  
instance HasOptionalParam DappsDexPoiHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexPoiHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexPoiHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexPoiHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsDexPoiHistoricalGet MimeNoContent


-- *** dappsDexPricesHistoricalGet

-- | @GET \/dapps\/dex\/prices\/historical@
-- 
dappsDexPricesHistoricalGet
  :: OnChainRequest DappsDexPricesHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexPricesHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/prices/historical"]

data DappsDexPricesHistoricalGet  
instance HasOptionalParam DappsDexPricesHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexPricesHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexPricesHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexPricesHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexPricesHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexPricesHistoricalGet MimeNoContent


-- *** dappsDexSolutionHistoricalGet

-- | @GET \/dapps\/dex\/solution\/historical@
-- 
dappsDexSolutionHistoricalGet
  :: OnChainRequest DappsDexSolutionHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexSolutionHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/solution/historical"]

data DappsDexSolutionHistoricalGet  
instance HasOptionalParam DappsDexSolutionHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexSolutionHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexSolutionHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexSolutionHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexSolutionHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexSolutionHistoricalGet MimeNoContent


-- *** dappsDexStatsHistoricalGet

-- | @GET \/dapps\/dex\/stats\/historical@
-- 
dappsDexStatsHistoricalGet
  :: OnChainRequest DappsDexStatsHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexStatsHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/stats/historical"]

data DappsDexStatsHistoricalGet  
instance HasOptionalParam DappsDexStatsHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexStatsHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexStatsHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexStatsHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsDexStatsHistoricalGet MimeNoContent


-- *** dappsDexTokensHistoricalGet

-- | @GET \/dapps\/dex\/tokens\/historical@
-- 
dappsDexTokensHistoricalGet
  :: OnChainRequest DappsDexTokensHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexTokensHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/tokens/historical"]

data DappsDexTokensHistoricalGet  
instance HasOptionalParam DappsDexTokensHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexTokensHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexTokensHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexTokensHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexTokensHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexTokensHistoricalGet MimeNoContent


-- *** dappsDexTradesHistoricalGet

-- | @GET \/dapps\/dex\/trades\/historical@
-- 
dappsDexTradesHistoricalGet
  :: OnChainRequest DappsDexTradesHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexTradesHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/trades/historical"]

data DappsDexTradesHistoricalGet  
instance HasOptionalParam DappsDexTradesHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexTradesHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexTradesHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexTradesHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsDexTradesHistoricalGet MimeNoContent


-- *** dappsDexUsersHistoricalGet

-- | @GET \/dapps\/dex\/users\/historical@
-- 
dappsDexUsersHistoricalGet
  :: OnChainRequest DappsDexUsersHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexUsersHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/users/historical"]

data DappsDexUsersHistoricalGet  
instance HasOptionalParam DappsDexUsersHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexUsersHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexUsersHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexUsersHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance Produces DappsDexUsersHistoricalGet MimeNoContent


-- *** dappsDexWithdrawHistoricalGet

-- | @GET \/dapps\/dex\/withdraw\/historical@
-- 
dappsDexWithdrawHistoricalGet
  :: OnChainRequest DappsDexWithdrawHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexWithdrawHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/withdraw/historical"]

data DappsDexWithdrawHistoricalGet  
instance HasOptionalParam DappsDexWithdrawHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexWithdrawHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexWithdrawHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexWithdrawHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexWithdrawHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexWithdrawHistoricalGet MimeNoContent


-- *** dappsDexWithdrawRequestHistoricalGet

-- | @GET \/dapps\/dex\/withdrawRequest\/historical@
-- 
dappsDexWithdrawRequestHistoricalGet
  :: OnChainRequest DappsDexWithdrawRequestHistoricalGet MimeNoContent NoContent MimeNoContent
dappsDexWithdrawRequestHistoricalGet =
  _mkRequest "GET" ["/dapps/dex/withdrawRequest/historical"]

data DappsDexWithdrawRequestHistoricalGet  
instance HasOptionalParam DappsDexWithdrawRequestHistoricalGet StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam DappsDexWithdrawRequestHistoricalGet EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam DappsDexWithdrawRequestHistoricalGet StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam DappsDexWithdrawRequestHistoricalGet EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam DappsDexWithdrawRequestHistoricalGet TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
instance Produces DappsDexWithdrawRequestHistoricalGet MimeNoContent

