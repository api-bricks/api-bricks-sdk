{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.Dex
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.Dex where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Dex

-- *** dexGetBatchDTOsHistorical

-- | @GET \/dapps\/dex\/BatchDTOs\/historical@
-- 
-- BatchDTOs (historical) ðŸ”¥
-- 
-- Gets BatchDTOs.
-- 
dexGetBatchDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetBatchDTOsHistorical MimeNoContent [DexBatchDTO] accept
dexGetBatchDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/BatchDTOs/historical"]

data DexGetBatchDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetBatchDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetBatchDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetBatchDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetBatchDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetBatchDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetBatchDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetBatchDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetBatchDTOsHistorical MimePlainText


-- *** dexGetBatchesHistorical

-- | @GET \/dapps\/dex\/batches\/historical@
-- 
-- Batches (historical)
-- 
-- Gets batches.
-- 
dexGetBatchesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetBatchesHistorical MimeNoContent [DexBatchDTO] accept
dexGetBatchesHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/batches/historical"]

data DexGetBatchesHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetBatchesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetBatchesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetBatchesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetBatchesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces DexGetBatchesHistorical MimeJSON
-- | @text/json@
instance Produces DexGetBatchesHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetBatchesHistorical MimePlainText


-- *** dexGetDepositDTOsHistorical

-- | @GET \/dapps\/dex\/DepositDTOs\/historical@
-- 
-- DepositDTOs (historical) ðŸ”¥
-- 
-- Gets DepositDTOs.
-- 
dexGetDepositDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetDepositDTOsHistorical MimeNoContent [DexDepositDTO] accept
dexGetDepositDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/DepositDTOs/historical"]

data DexGetDepositDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetDepositDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetDepositDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetDepositDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetDepositDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetDepositDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetDepositDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetDepositDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetDepositDTOsHistorical MimePlainText


-- *** dexGetDepositsHistorical

-- | @GET \/dapps\/dex\/deposits\/historical@
-- 
-- Deposits (historical)
-- 
-- Gets deposits.
-- 
dexGetDepositsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetDepositsHistorical MimeNoContent [DexDepositDTO] accept
dexGetDepositsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/deposits/historical"]

data DexGetDepositsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetDepositsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetDepositsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetDepositsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetDepositsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetDepositsHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetDepositsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetDepositsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetDepositsHistorical MimePlainText


-- *** dexGetOrderDTOsHistorical

-- | @GET \/dapps\/dex\/OrderDTOs\/historical@
-- 
-- OrderDTOs (historical) ðŸ”¥
-- 
-- Gets OrderDTOs.
-- 
dexGetOrderDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetOrderDTOsHistorical MimeNoContent [DexOrderDTO] accept
dexGetOrderDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/OrderDTOs/historical"]

data DexGetOrderDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetOrderDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetOrderDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetOrderDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetOrderDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetOrderDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetOrderDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetOrderDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetOrderDTOsHistorical MimePlainText


-- *** dexGetOrdersHistorical

-- | @GET \/dapps\/dex\/orders\/historical@
-- 
-- Orders (historical)
-- 
-- Gets orders.
-- 
dexGetOrdersHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetOrdersHistorical MimeNoContent [DexOrderDTO] accept
dexGetOrdersHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/orders/historical"]

data DexGetOrdersHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetOrdersHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetOrdersHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetOrdersHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetOrdersHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetOrdersHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetOrdersHistorical MimeJSON
-- | @text/json@
instance Produces DexGetOrdersHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetOrdersHistorical MimePlainText


-- *** dexGetPriceDTOsHistorical

-- | @GET \/dapps\/dex\/PriceDTOs\/historical@
-- 
-- PriceDTOs (historical) ðŸ”¥
-- 
-- Gets PriceDTOs.
-- 
dexGetPriceDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetPriceDTOsHistorical MimeNoContent [DexPriceDTO] accept
dexGetPriceDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/PriceDTOs/historical"]

data DexGetPriceDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetPriceDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetPriceDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetPriceDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetPriceDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetPriceDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetPriceDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetPriceDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetPriceDTOsHistorical MimePlainText


-- *** dexGetPricesHistorical

-- | @GET \/dapps\/dex\/prices\/historical@
-- 
-- Prices (historical)
-- 
-- Gets prices.
-- 
dexGetPricesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetPricesHistorical MimeNoContent [DexPriceDTO] accept
dexGetPricesHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/prices/historical"]

data DexGetPricesHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetPricesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetPricesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetPricesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetPricesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetPricesHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetPricesHistorical MimeJSON
-- | @text/json@
instance Produces DexGetPricesHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetPricesHistorical MimePlainText


-- *** dexGetSolutionDTOsHistorical

-- | @GET \/dapps\/dex\/SolutionDTOs\/historical@
-- 
-- SolutionDTOs (historical) ðŸ”¥
-- 
-- Gets SolutionDTOs.
-- 
dexGetSolutionDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetSolutionDTOsHistorical MimeNoContent [DexSolutionDTO] accept
dexGetSolutionDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/SolutionDTOs/historical"]

data DexGetSolutionDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetSolutionDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetSolutionDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetSolutionDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetSolutionDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetSolutionDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetSolutionDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetSolutionDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetSolutionDTOsHistorical MimePlainText


-- *** dexGetSolutionsHistorical

-- | @GET \/dapps\/dex\/solutions\/historical@
-- 
-- Solutions (historical)
-- 
-- Gets solutions.
-- 
dexGetSolutionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetSolutionsHistorical MimeNoContent [DexSolutionDTO] accept
dexGetSolutionsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/solutions/historical"]

data DexGetSolutionsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetSolutionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetSolutionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetSolutionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetSolutionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetSolutionsHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetSolutionsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetSolutionsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetSolutionsHistorical MimePlainText


-- *** dexGetStatsDTOsHistorical

-- | @GET \/dapps\/dex\/StatsDTOs\/historical@
-- 
-- StatsDTOs (historical) ðŸ”¥
-- 
-- Gets StatsDTOs.
-- 
dexGetStatsDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetStatsDTOsHistorical MimeNoContent [DexStatsDTO] accept
dexGetStatsDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/StatsDTOs/historical"]

data DexGetStatsDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetStatsDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetStatsDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetStatsDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetStatsDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetStatsDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetStatsDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetStatsDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetStatsDTOsHistorical MimePlainText


-- *** dexGetStatsHistorical

-- | @GET \/dapps\/dex\/stats\/historical@
-- 
-- Stats (historical)
-- 
-- Gets stats.
-- 
dexGetStatsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetStatsHistorical MimeNoContent [DexStatsDTO] accept
dexGetStatsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/stats/historical"]

data DexGetStatsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetStatsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetStatsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetStatsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetStatsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces DexGetStatsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetStatsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetStatsHistorical MimePlainText


-- *** dexGetTokenDTOsHistorical

-- | @GET \/dapps\/dex\/TokenDTOs\/historical@
-- 
-- TokenDTOs (historical) ðŸ”¥
-- 
-- Gets TokenDTOs.
-- 
dexGetTokenDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetTokenDTOsHistorical MimeNoContent [DexTokenDTO] accept
dexGetTokenDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/TokenDTOs/historical"]

data DexGetTokenDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetTokenDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetTokenDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetTokenDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetTokenDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetTokenDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetTokenDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetTokenDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetTokenDTOsHistorical MimePlainText


-- *** dexGetTokensHistorical

-- | @GET \/dapps\/dex\/tokens\/historical@
-- 
-- Tokens (historical) ðŸ”¥
-- 
-- Gets tokens.
-- 
dexGetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetTokensHistorical MimeNoContent [DexTokenDTO] accept
dexGetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/tokens/historical"]

data DexGetTokensHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetTokensHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetTokensHistorical MimeJSON
-- | @text/json@
instance Produces DexGetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetTokensHistorical MimePlainText


-- *** dexGetTradeDTOsHistorical

-- | @GET \/dapps\/dex\/TradeDTOs\/historical@
-- 
-- TradeDTOs (historical) ðŸ”¥
-- 
-- Gets TradeDTOs.
-- 
dexGetTradeDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetTradeDTOsHistorical MimeNoContent [DexTradeDTO] accept
dexGetTradeDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/TradeDTOs/historical"]

data DexGetTradeDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetTradeDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetTradeDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetTradeDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetTradeDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetTradeDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetTradeDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetTradeDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetTradeDTOsHistorical MimePlainText


-- *** dexGetTradesHistorical

-- | @GET \/dapps\/dex\/trades\/historical@
-- 
-- Trades (historical) ðŸ”¥
-- 
-- Gets trades.
-- 
dexGetTradesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetTradesHistorical MimeNoContent [DexTradeDTO] accept
dexGetTradesHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/trades/historical"]

data DexGetTradesHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetTradesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetTradesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetTradesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetTradesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces DexGetTradesHistorical MimeJSON
-- | @text/json@
instance Produces DexGetTradesHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetTradesHistorical MimePlainText


-- *** dexGetUserDTOsHistorical

-- | @GET \/dapps\/dex\/UserDTOs\/historical@
-- 
-- UserDTOs (historical) ðŸ”¥
-- 
-- Gets UserDTOs.
-- 
dexGetUserDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetUserDTOsHistorical MimeNoContent [DexUserDTO] accept
dexGetUserDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/UserDTOs/historical"]

data DexGetUserDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetUserDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetUserDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetUserDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetUserDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetUserDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetUserDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetUserDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetUserDTOsHistorical MimePlainText


-- *** dexGetUsersHistorical

-- | @GET \/dapps\/dex\/users\/historical@
-- 
-- Users (historical)
-- 
-- Gets users.
-- 
dexGetUsersHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetUsersHistorical MimeNoContent [DexUserDTO] accept
dexGetUsersHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/users/historical"]

data DexGetUsersHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetUsersHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetUsersHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetUsersHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetUsersHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces DexGetUsersHistorical MimeJSON
-- | @text/json@
instance Produces DexGetUsersHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetUsersHistorical MimePlainText


-- *** dexGetWithdrawDTOsHistorical

-- | @GET \/dapps\/dex\/WithdrawDTOs\/historical@
-- 
-- WithdrawDTOs (historical) ðŸ”¥
-- 
-- Gets WithdrawDTOs.
-- 
dexGetWithdrawDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetWithdrawDTOsHistorical MimeNoContent [DexWithdrawDTO] accept
dexGetWithdrawDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/WithdrawDTOs/historical"]

data DexGetWithdrawDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetWithdrawDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetWithdrawDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetWithdrawDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetWithdrawDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetWithdrawDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetWithdrawDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetWithdrawDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetWithdrawDTOsHistorical MimePlainText


-- *** dexGetWithdrawRequestDTOsHistorical

-- | @GET \/dapps\/dex\/WithdrawRequestDTOs\/historical@
-- 
-- WithdrawRequestDTOs (historical) ðŸ”¥
-- 
-- Gets WithdrawRequestDTOs.
-- 
dexGetWithdrawRequestDTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetWithdrawRequestDTOsHistorical MimeNoContent [DexWithdrawRequestDTO] accept
dexGetWithdrawRequestDTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/WithdrawRequestDTOs/historical"]

data DexGetWithdrawRequestDTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetWithdrawRequestDTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetWithdrawRequestDTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetWithdrawRequestDTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetWithdrawRequestDTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam DexGetWithdrawRequestDTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces DexGetWithdrawRequestDTOsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetWithdrawRequestDTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetWithdrawRequestDTOsHistorical MimePlainText


-- *** dexGetWithdrawsHistorical

-- | @GET \/dapps\/dex\/withdraws\/historical@
-- 
-- Withdraws (historical)
-- 
-- Gets withdraws.
-- 
dexGetWithdrawsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetWithdrawsHistorical MimeNoContent [DexWithdrawDTO] accept
dexGetWithdrawsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/withdraws/historical"]

data DexGetWithdrawsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetWithdrawsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetWithdrawsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetWithdrawsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetWithdrawsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetWithdrawsHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetWithdrawsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetWithdrawsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetWithdrawsHistorical MimePlainText


-- *** dexGetWithdrawsRequestsHistorical

-- | @GET \/dapps\/dex\/withdrawsRequests\/historical@
-- 
-- WithdrawsRequests (historical)
-- 
-- Gets withdraws requests.
-- 
dexGetWithdrawsRequestsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetWithdrawsRequestsHistorical MimeNoContent [DexWithdrawRequestDTO] accept
dexGetWithdrawsRequestsHistorical  _ =
  _mkRequest "GET" ["/dapps/dex/withdrawsRequests/historical"]

data DexGetWithdrawsRequestsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam DexGetWithdrawsRequestsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam DexGetWithdrawsRequestsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam DexGetWithdrawsRequestsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam DexGetWithdrawsRequestsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam DexGetWithdrawsRequestsHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces DexGetWithdrawsRequestsHistorical MimeJSON
-- | @text/json@
instance Produces DexGetWithdrawsRequestsHistorical MimeTextJson
-- | @text/plain@
instance Produces DexGetWithdrawsRequestsHistorical MimePlainText

