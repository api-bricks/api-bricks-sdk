{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.Sushiswap
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.Sushiswap where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Sushiswap

-- *** curveGetExchangesCurrent

-- | @GET \/dapps\/sushiswap\/exchanges\/current@
-- 
-- Exchanges (current) ðŸ”¥
-- 
-- Gets exchanges.
-- 
curveGetExchangesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetExchangesCurrent MimeNoContent [CurveExchangeDTO] accept
curveGetExchangesCurrent  _ =
  _mkRequest "GET" ["/dapps/sushiswap/exchanges/current"]

data CurveGetExchangesCurrent  
-- | @application/json@
instance Produces CurveGetExchangesCurrent MimeJSON
-- | @text/json@
instance Produces CurveGetExchangesCurrent MimeTextJson
-- | @text/plain@
instance Produces CurveGetExchangesCurrent MimePlainText


-- *** dexGetTradesCurrent

-- | @GET \/dapps\/sushiswap\/trades\/current@
-- 
-- Trades (current) ðŸ”¥
-- 
-- Gets trades.
-- 
dexGetTradesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest DexGetTradesCurrent MimeNoContent [DexTradeDTO] accept
dexGetTradesCurrent  _ =
  _mkRequest "GET" ["/dapps/sushiswap/trades/current"]

data DexGetTradesCurrent  
-- | @application/json@
instance Produces DexGetTradesCurrent MimeJSON
-- | @text/json@
instance Produces DexGetTradesCurrent MimeTextJson
-- | @text/plain@
instance Produces DexGetTradesCurrent MimePlainText


-- *** sushiswapGetPoolsCurrent

-- | @GET \/dapps\/sushiswap\/pools\/current@
-- 
-- Pools (current) ðŸ”¥
-- 
-- Gets pools.
-- 
sushiswapGetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest SushiswapGetPoolsCurrent MimeNoContent [SushiswapPairDTO] accept
sushiswapGetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/sushiswap/pools/current"]

data SushiswapGetPoolsCurrent  
-- | @application/json@
instance Produces SushiswapGetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces SushiswapGetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces SushiswapGetPoolsCurrent MimePlainText


-- *** sushiswapGetSwapsCurrent

-- | @GET \/dapps\/sushiswap\/swaps\/current@
-- 
-- Swaps (current) ðŸ”¥
-- 
-- Gets swaps.
-- 
sushiswapGetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest SushiswapGetSwapsCurrent MimeNoContent [SushiswapSwapDTO] accept
sushiswapGetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/sushiswap/swaps/current"]

data SushiswapGetSwapsCurrent  
-- | @application/json@
instance Produces SushiswapGetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces SushiswapGetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces SushiswapGetSwapsCurrent MimePlainText


-- *** sushiswapGetTokensCurrent

-- | @GET \/dapps\/sushiswap\/tokens\/current@
-- 
-- Tokens (current) ðŸ”¥
-- 
-- Gets tokens.
-- 
sushiswapGetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest SushiswapGetTokensCurrent MimeNoContent [SushiswapTokenDTO] accept
sushiswapGetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/sushiswap/tokens/current"]

data SushiswapGetTokensCurrent  
-- | @application/json@
instance Produces SushiswapGetTokensCurrent MimeJSON
-- | @text/json@
instance Produces SushiswapGetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces SushiswapGetTokensCurrent MimePlainText

