{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV2
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV2 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV2

-- *** uniswapV2BundlesCurrent

-- | @GET \/dapps\/uniswapv2\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV2BundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2BundlesCurrent MimeNoContent [UniswapV2BundleDTO] accept
uniswapV2BundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/bundles/current"]

data UniswapV2BundlesCurrent  
-- | @application/json@
instance Produces UniswapV2BundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2BundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2BundlesCurrent MimePlainText


-- *** uniswapV2BurnsCurrent

-- | @GET \/dapps\/uniswapv2\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV2BurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2BurnsCurrent MimeNoContent [UniswapV2BurnDTO] accept
uniswapV2BurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/burns/current"]

data UniswapV2BurnsCurrent  
-- | @application/json@
instance Produces UniswapV2BurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2BurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2BurnsCurrent MimePlainText


-- *** uniswapV2GetBundlesHistorical

-- | @GET \/dapps\/uniswapv2\/bundles\/historical@
-- 
-- Bundles (historical) ðŸ”¥
-- 
-- Gets bundles.
-- 
uniswapV2GetBundlesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBundlesHistorical MimeNoContent [UniswapV2BundleDTO] accept
uniswapV2GetBundlesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/bundles/historical"]

data UniswapV2GetBundlesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetBundlesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetBundlesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetBundlesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetBundlesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Constant 1.
instance HasOptionalParam UniswapV2GetBundlesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBundlesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBundlesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBundlesHistorical MimePlainText


-- *** uniswapV2GetBurnsHistorical

-- | @GET \/dapps\/uniswapv2\/burns\/historical@
-- 
-- Burns (historical) ðŸ”¥
-- 
-- Gets burns.
-- 
uniswapV2GetBurnsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBurnsHistorical MimeNoContent [UniswapV2BurnDTO] accept
uniswapV2GetBurnsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/burns/historical"]

data UniswapV2GetBurnsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetBurnsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetBurnsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetBurnsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetBurnsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash plus index in the transaction burn array
instance HasOptionalParam UniswapV2GetBurnsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pair" - Reference to pair.
instance HasOptionalParam UniswapV2GetBurnsHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBurnsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBurnsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBurnsHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionSnapshotsHistorical

-- | @GET \/dapps\/uniswapv2\/liquidityPositionSnapshots\/historical@
-- 
-- LiquidityPositionSnapshots (historical) ðŸ”¥
-- 
-- Gets liquidityPositionSnapshots.
-- 
uniswapV2GetLiquidityPositionSnapshotsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionSnapshotsHistorical MimeNoContent [UniswapV2LiquidityPositionSnapshotDTO] accept
uniswapV2GetLiquidityPositionSnapshotsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositionSnapshots/historical"]

data UniswapV2GetLiquidityPositionSnapshotsHistorical  
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical User where
  applyOptionalParam req (User xs) =
    req `addQuery` toQuery ("user", Just xs)
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotsHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionSnapshotsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionSnapshotsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionSnapshotsHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionsHistorical

-- | @GET \/dapps\/uniswapv2\/liquidityPositions\/historical@
-- 
-- LiquidityPositions (historical) ðŸ”¥
-- 
-- Gets liquidityPositions.
-- 
uniswapV2GetLiquidityPositionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionsHistorical MimeNoContent [UniswapV2LiquidityPositionDTO] accept
uniswapV2GetLiquidityPositionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositions/historical"]

data UniswapV2GetLiquidityPositionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - User address and pair address concatenated with a dash.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "user" - Reference to user.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical User where
  applyOptionalParam req (User xs) =
    req `addQuery` toQuery ("user", Just xs)

-- | /Optional Param/ "pair" - Reference to the pair liquidity is being provided on.
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimePlainText


-- *** uniswapV2GetMintsHistorical

-- | @GET \/dapps\/uniswapv2\/mints\/historical@
-- 
-- Mints (historical) ðŸ”¥
-- 
-- Gets mints.
-- 
uniswapV2GetMintsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetMintsHistorical MimeNoContent [UniswapV2MintDTO] accept
uniswapV2GetMintsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/mints/historical"]

data UniswapV2GetMintsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetMintsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetMintsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetMintsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetMintsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash plus index in the transaction mint array.
instance HasOptionalParam UniswapV2GetMintsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pair" - Reference to pair.
instance HasOptionalParam UniswapV2GetMintsHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetMintsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetMintsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetMintsHistorical MimePlainText


-- *** uniswapV2GetPairDayDatasHistorical

-- | @GET \/dapps\/uniswapv2\/pairDayDatas\/historical@
-- 
-- PairDayDatas (historical) ðŸ”¥
-- 
-- Gets pairDayDatas.
-- 
uniswapV2GetPairDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairDayDatasHistorical MimeNoContent [UniswapV2PairDayDataDTO] accept
uniswapV2GetPairDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairDayDatas/historical"]

data UniswapV2GetPairDayDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0.
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1.
instance HasOptionalParam UniswapV2GetPairDayDatasHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairDayDatasHistorical MimePlainText


-- *** uniswapV2GetPairHourDatasHistorical

-- | @GET \/dapps\/uniswapv2\/pairHourDatas\/historical@
-- 
-- PairHourDatas (historical) ðŸ”¥
-- 
-- Gets pairHourDatas.
-- 
uniswapV2GetPairHourDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairHourDatasHistorical MimeNoContent [UniswapV2PairHourDataDTO] accept
uniswapV2GetPairHourDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairHourDatas/historical"]

data UniswapV2GetPairHourDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pair" - Address for pair contract.
instance HasOptionalParam UniswapV2GetPairHourDatasHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairHourDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairHourDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairHourDatasHistorical MimePlainText


-- *** uniswapV2GetPairsHistorical

-- | @GET \/dapps\/uniswapv2\/pairs\/historical@
-- 
-- Pairs (historical) ðŸ”¥
-- 
-- Gets pairs.
-- 
uniswapV2GetPairsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairsHistorical MimeNoContent [UniswapV2PairDTO] accept
uniswapV2GetPairsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairs/historical"]

data UniswapV2GetPairsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetPairsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetPairsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetPairsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetPairsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Pair contract address.
instance HasOptionalParam UniswapV2GetPairsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "token_0" - Reference to token0 as stored in pair contract.
instance HasOptionalParam UniswapV2GetPairsHistorical Token0 where
  applyOptionalParam req (Token0 xs) =
    req `addQuery` toQuery ("token_0", Just xs)

-- | /Optional Param/ "token_1" - Reference to token1 as stored in pair contract.
instance HasOptionalParam UniswapV2GetPairsHistorical Token1 where
  applyOptionalParam req (Token1 xs) =
    req `addQuery` toQuery ("token_1", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairsHistorical MimePlainText


-- *** uniswapV2GetPoolsCurrent

-- | @GET \/dapps\/uniswapv2\/pools\/current@
-- 
-- Pools (current) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV2GetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsCurrent MimeNoContent [UniswapV2PairDTO] accept
uniswapV2GetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pools/current"]

data UniswapV2GetPoolsCurrent  
instance HasOptionalParam UniswapV2GetPoolsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsCurrent MimePlainText


-- *** uniswapV2GetSwapsCurrent

-- | @GET \/dapps\/uniswapv2\/swaps\/current@
-- 
-- Swaps (current) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV2GetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapsCurrent MimeNoContent [UniswapV2SwapDTO] accept
uniswapV2GetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/current"]

data UniswapV2GetSwapsCurrent  
-- | @application/json@
instance Produces UniswapV2GetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapsCurrent MimePlainText


-- *** uniswapV2GetSwapsHistorical

-- | @GET \/dapps\/uniswapv2\/swaps\/historical@
-- 
-- Swaps (historical) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV2GetSwapsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapsHistorical MimeNoContent [UniswapV2SwapDTO] accept
uniswapV2GetSwapsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/historical"]

data UniswapV2GetSwapsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetSwapsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetSwapsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetSwapsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetSwapsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Transaction hash plus index in Transaction swap array.
instance HasOptionalParam UniswapV2GetSwapsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pair" - Reference to pair.
instance HasOptionalParam UniswapV2GetSwapsHistorical Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2GetSwapsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapsHistorical MimePlainText


-- *** uniswapV2GetTokenDayDatasHistorical

-- | @GET \/dapps\/uniswapv2\/tokenDayDatas\/historical@
-- 
-- TokenDayDatas (historical) ðŸ”¥
-- 
-- Gets tokenDayDatas.
-- 
uniswapV2GetTokenDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokenDayDatasHistorical MimeNoContent [UniswapV2TokenDayDataDTO] accept
uniswapV2GetTokenDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokenDayDatas/historical"]

data UniswapV2GetTokenDayDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetTokenDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetTokenDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetTokenDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetTokenDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address and day id (day start timestamp in unix / 86400) concatenated with a dash.
instance HasOptionalParam UniswapV2GetTokenDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokenDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokenDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokenDayDatasHistorical MimePlainText


-- *** uniswapV2GetTokensCurrent

-- | @GET \/dapps\/uniswapv2\/tokens\/current@
-- 
-- Tokens (current) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV2GetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensCurrent MimeNoContent [UniswapV2TokenDTO] accept
uniswapV2GetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/current"]

data UniswapV2GetTokensCurrent  
-- | @application/json@
instance Produces UniswapV2GetTokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensCurrent MimePlainText


-- *** uniswapV2GetTokensHistorical

-- | @GET \/dapps\/uniswapv2\/tokens\/historical@
-- 
-- Tokens (historical) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV2GetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensHistorical MimeNoContent [UniswapV2TokenDTO] accept
uniswapV2GetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/historical"]

data UniswapV2GetTokensHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Token address.
instance HasOptionalParam UniswapV2GetTokensHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "symbol" - Token symbol.
instance HasOptionalParam UniswapV2GetTokensHistorical Symbol where
  applyOptionalParam req (Symbol xs) =
    req `addQuery` toQuery ("symbol", Just xs)

-- | /Optional Param/ "name" - Token name.
instance HasOptionalParam UniswapV2GetTokensHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokensHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensHistorical MimePlainText


-- *** uniswapV2GetTransactionsHistorical

-- | @GET \/dapps\/uniswapv2\/transactions\/historical@
-- 
-- Transactions (historical) ðŸ”¥
-- 
-- Gets transactions.
-- 
uniswapV2GetTransactionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTransactionsHistorical MimeNoContent [UniswapV2TransactionDTO] accept
uniswapV2GetTransactionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/transactions/historical"]

data UniswapV2GetTransactionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetTransactionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetTransactionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetTransactionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetTransactionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Ethereum transaction hash.
instance HasOptionalParam UniswapV2GetTransactionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTransactionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTransactionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTransactionsHistorical MimePlainText


-- *** uniswapV2GetUniswapDayDatasHistorical

-- | @GET \/dapps\/uniswapv2\/uniswapDayDatas\/historical@
-- 
-- UniswapDayDatas (historical) ðŸ”¥
-- 
-- Gets uniswapDayDatas.
-- 
uniswapV2GetUniswapDayDatasHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUniswapDayDatasHistorical MimeNoContent [UniswapV2UniswapDayDataDTO] accept
uniswapV2GetUniswapDayDatasHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapDayDatas/historical"]

data UniswapV2GetUniswapDayDatasHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetUniswapDayDatasHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetUniswapDayDatasHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetUniswapDayDatasHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetUniswapDayDatasHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Unix timestamp for start of day / 86400 giving a unique day index.
instance HasOptionalParam UniswapV2GetUniswapDayDatasHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUniswapDayDatasHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUniswapDayDatasHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUniswapDayDatasHistorical MimePlainText


-- *** uniswapV2GetUniswapFactorysHistorical

-- | @GET \/dapps\/uniswapv2\/uniswapFactorys\/historical@
-- 
-- UniswapFactorys (historical) ðŸ”¥
-- 
-- Gets uniswapFactorys.
-- 
uniswapV2GetUniswapFactorysHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUniswapFactorysHistorical MimeNoContent [UniswapV2UniswapFactoryDTO] accept
uniswapV2GetUniswapFactorysHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapFactorys/historical"]

data UniswapV2GetUniswapFactorysHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetUniswapFactorysHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetUniswapFactorysHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetUniswapFactorysHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetUniswapFactorysHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Factory address.
instance HasOptionalParam UniswapV2GetUniswapFactorysHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUniswapFactorysHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUniswapFactorysHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUniswapFactorysHistorical MimePlainText


-- *** uniswapV2GetUsersHistorical

-- | @GET \/dapps\/uniswapv2\/users\/historical@
-- 
-- Users (historical) ðŸ”¥
-- 
-- Gets users.
-- 
uniswapV2GetUsersHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUsersHistorical MimeNoContent [UniswapV2UserDTO] accept
uniswapV2GetUsersHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/users/historical"]

data UniswapV2GetUsersHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam UniswapV2GetUsersHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam UniswapV2GetUsersHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam UniswapV2GetUsersHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam UniswapV2GetUsersHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - User address.
instance HasOptionalParam UniswapV2GetUsersHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUsersHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUsersHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUsersHistorical MimePlainText


-- *** uniswapV2LiquidityPositionSnapshotsCurrent

-- | @GET \/dapps\/uniswapv2\/liquidityPositionSnapshots\/current@
-- 
-- LiquidityPositionSnapshots (current)
-- 
-- Gets liquidityPositionSnapshots.
-- 
uniswapV2LiquidityPositionSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2LiquidityPositionSnapshotsCurrent MimeNoContent [UniswapV2LiquidityPositionSnapshotDTO] accept
uniswapV2LiquidityPositionSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositionSnapshots/current"]

data UniswapV2LiquidityPositionSnapshotsCurrent  
-- | @application/json@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimePlainText


-- *** uniswapV2LiquidityPositionsCurrent

-- | @GET \/dapps\/uniswapv2\/liquidityPositions\/current@
-- 
-- LiquidityPositions (current)
-- 
-- Gets liquidityPositions.
-- 
uniswapV2LiquidityPositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2LiquidityPositionsCurrent MimeNoContent [UniswapV2LiquidityPositionDTO] accept
uniswapV2LiquidityPositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositions/current"]

data UniswapV2LiquidityPositionsCurrent  
-- | @application/json@
instance Produces UniswapV2LiquidityPositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2LiquidityPositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2LiquidityPositionsCurrent MimePlainText


-- *** uniswapV2MintsCurrent

-- | @GET \/dapps\/uniswapv2\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV2MintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2MintsCurrent MimeNoContent [UniswapV2MintDTO] accept
uniswapV2MintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/mints/current"]

data UniswapV2MintsCurrent  
-- | @application/json@
instance Produces UniswapV2MintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2MintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2MintsCurrent MimePlainText


-- *** uniswapV2PairDayDatasCurrent

-- | @GET \/dapps\/uniswapv2\/pairDayDatas\/current@
-- 
-- PairDayDatas (current)
-- 
-- Gets pairDayDatas.
-- 
uniswapV2PairDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2PairDayDatasCurrent MimeNoContent [UniswapV2PairDayDataDTO] accept
uniswapV2PairDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairDayDatas/current"]

data UniswapV2PairDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV2PairDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairDayDatasCurrent MimePlainText


-- *** uniswapV2PairHourDatasCurrent

-- | @GET \/dapps\/uniswapv2\/pairHourDatas\/current@
-- 
-- PairHourDatas (current)
-- 
-- Gets pairHourDatas.
-- 
uniswapV2PairHourDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2PairHourDatasCurrent MimeNoContent [UniswapV2PairHourDataDTO] accept
uniswapV2PairHourDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairHourDatas/current"]

data UniswapV2PairHourDatasCurrent  
-- | @application/json@
instance Produces UniswapV2PairHourDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairHourDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairHourDatasCurrent MimePlainText


-- *** uniswapV2PairsCurrent

-- | @GET \/dapps\/uniswapv2\/pairs\/current@
-- 
-- Pairs (current)
-- 
-- Gets pairs.
-- 
uniswapV2PairsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2PairsCurrent MimeNoContent [UniswapV2PairDTO] accept
uniswapV2PairsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairs/current"]

data UniswapV2PairsCurrent  

-- | /Optional Param/ "id" - Pair contract address.
instance HasOptionalParam UniswapV2PairsCurrent Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2PairsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairsCurrent MimePlainText


-- *** uniswapV2TokenDayDatasCurrent

-- | @GET \/dapps\/uniswapv2\/tokenDayDatas\/current@
-- 
-- TokenDayDatas (current)
-- 
-- Gets tokenDayDatas.
-- 
uniswapV2TokenDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2TokenDayDatasCurrent MimeNoContent [UniswapV2TokenDayDataDTO] accept
uniswapV2TokenDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokenDayDatas/current"]

data UniswapV2TokenDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV2TokenDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2TokenDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2TokenDayDatasCurrent MimePlainText


-- *** uniswapV2TransactionsCurrent

-- | @GET \/dapps\/uniswapv2\/transactions\/current@
-- 
-- Transactions (current)
-- 
-- Gets transactions.
-- 
uniswapV2TransactionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2TransactionsCurrent MimeNoContent [UniswapV2TransactionDTO] accept
uniswapV2TransactionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/transactions/current"]

data UniswapV2TransactionsCurrent  
-- | @application/json@
instance Produces UniswapV2TransactionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2TransactionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2TransactionsCurrent MimePlainText


-- *** uniswapV2UniswapDayDatasCurrent

-- | @GET \/dapps\/uniswapv2\/uniswapDayDatas\/current@
-- 
-- UniswapDayDatas (current)
-- 
-- Gets uniswapDayDatas.
-- 
uniswapV2UniswapDayDatasCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2UniswapDayDatasCurrent MimeNoContent [UniswapV2UniswapDayDataDTO] accept
uniswapV2UniswapDayDatasCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapDayDatas/current"]

data UniswapV2UniswapDayDatasCurrent  
-- | @application/json@
instance Produces UniswapV2UniswapDayDatasCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UniswapDayDatasCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UniswapDayDatasCurrent MimePlainText


-- *** uniswapV2UniswapFactorysCurrent

-- | @GET \/dapps\/uniswapv2\/uniswapFactorys\/current@
-- 
-- UniswapFactorys (current)
-- 
-- Gets uniswapFactorys.
-- 
uniswapV2UniswapFactorysCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2UniswapFactorysCurrent MimeNoContent [UniswapV2UniswapFactoryDTO] accept
uniswapV2UniswapFactorysCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapFactorys/current"]

data UniswapV2UniswapFactorysCurrent  
-- | @application/json@
instance Produces UniswapV2UniswapFactorysCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UniswapFactorysCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UniswapFactorysCurrent MimePlainText


-- *** uniswapV2UsersCurrent

-- | @GET \/dapps\/uniswapv2\/users\/current@
-- 
-- Users (current)
-- 
-- Gets users.
-- 
uniswapV2UsersCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2UsersCurrent MimeNoContent [UniswapV2UserDTO] accept
uniswapV2UsersCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/users/current"]

data UniswapV2UsersCurrent  
-- | @application/json@
instance Produces UniswapV2UsersCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UsersCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UsersCurrent MimePlainText

