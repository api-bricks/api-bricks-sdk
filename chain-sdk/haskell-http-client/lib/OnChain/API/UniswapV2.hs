{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV2
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV2 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV2

-- *** uniswapV2GetPoolsCurrent

-- | @GET \/dapps\/uniswapv2\/pools\/current@
-- 
-- Pools (current) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV2GetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsCurrent MimeNoContent [UniswapV2PairV2DTO] accept
uniswapV2GetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pools/current"]

data UniswapV2GetPoolsCurrent  
instance HasOptionalParam UniswapV2GetPoolsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsCurrent MimePlainText


-- *** uniswapV2GetSwapsCurrent

-- | @GET \/dapps\/uniswapv2\/swaps\/current@
-- 
-- Swaps (current) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV2GetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapsCurrent MimeNoContent [UniswapV2SwapV2DTO] accept
uniswapV2GetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/current"]

data UniswapV2GetSwapsCurrent  
-- | @application/json@
instance Produces UniswapV2GetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapsCurrent MimePlainText


-- *** uniswapV2GetTokensCurrent

-- | @GET \/dapps\/uniswapv2\/tokens\/current@
-- 
-- Tokens (current) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV2GetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensCurrent MimeNoContent [UniswapV2TokenV2DTO] accept
uniswapV2GetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/current"]

data UniswapV2GetTokensCurrent  
-- | @application/json@
instance Produces UniswapV2GetTokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensCurrent MimePlainText

