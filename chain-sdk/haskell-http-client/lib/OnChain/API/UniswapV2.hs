{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.UniswapV2
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.UniswapV2 where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV2

-- *** uniswapV2GetBundleV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/BundleV2DTOs\/historical@
-- 
-- BundleV2DTOs (historical) ðŸ”¥
-- 
-- Gets BundleV2DTOs.
-- 
uniswapV2GetBundleV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBundleV2DTOsHistorical MimeNoContent [UniswapV2BundleV2DTO] accept
uniswapV2GetBundleV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/BundleV2DTOs/historical"]

data UniswapV2GetBundleV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetBundleV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetBundleV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetBundleV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetBundleV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetBundleV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBundleV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBundleV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBundleV2DTOsHistorical MimePlainText


-- *** uniswapV2GetBundlesHistorical

-- | @GET \/dapps\/uniswapv2\/bundles\/historical@
-- 
-- Bundles (historical)
-- 
-- Gets bundles.
-- 
uniswapV2GetBundlesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBundlesHistorical MimeNoContent [UniswapV2BundleV2DTO] accept
uniswapV2GetBundlesHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/bundles/historical"]

data UniswapV2GetBundlesHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetBundlesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetBundlesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetBundlesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetBundlesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBundlesHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBundlesHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBundlesHistorical MimePlainText


-- *** uniswapV2GetBurnV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/BurnV2DTOs\/historical@
-- 
-- BurnV2DTOs (historical) ðŸ”¥
-- 
-- Gets BurnV2DTOs.
-- 
uniswapV2GetBurnV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBurnV2DTOsHistorical MimeNoContent [UniswapV2BurnV2DTO] accept
uniswapV2GetBurnV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/BurnV2DTOs/historical"]

data UniswapV2GetBurnV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetBurnV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetBurnV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetBurnV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetBurnV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetBurnV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBurnV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBurnV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBurnV2DTOsHistorical MimePlainText


-- *** uniswapV2GetBurnsHistorical

-- | @GET \/dapps\/uniswapv2\/burns\/historical@
-- 
-- Burns (historical)
-- 
-- Gets burns.
-- 
uniswapV2GetBurnsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetBurnsHistorical MimeNoContent [UniswapV2BurnV2DTO] accept
uniswapV2GetBurnsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/burns/historical"]

data UniswapV2GetBurnsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetBurnsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetBurnsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetBurnsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetBurnsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetBurnsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetBurnsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetBurnsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetBurnsHistorical MimePlainText


-- *** uniswapV2GetDayDataHistorical

-- | @GET \/dapps\/uniswapv2\/dayData\/historical@
-- 
-- DayData (historical)
-- 
-- Gets uniswapv2 day data.
-- 
uniswapV2GetDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetDayDataHistorical MimeNoContent [UniswapV2UniswapDayDataV2DTO] accept
uniswapV2GetDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/dayData/historical"]

data UniswapV2GetDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV2GetDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetDayDataHistorical MimePlainText


-- *** uniswapV2GetFactoryHistorical

-- | @GET \/dapps\/uniswapv2\/factory\/historical@
-- 
-- Factory (historical)
-- 
-- Gets factory.
-- 
uniswapV2GetFactoryHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetFactoryHistorical MimeNoContent [UniswapV2UniswapFactoryV2DTO] accept
uniswapV2GetFactoryHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/factory/historical"]

data UniswapV2GetFactoryHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetFactoryHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetFactoryHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetFactoryHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetFactoryHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV2GetFactoryHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetFactoryHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetFactoryHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/LiquidityPositionSnapshotV2DTOs\/historical@
-- 
-- LiquidityPositionSnapshotV2DTOs (historical) ðŸ”¥
-- 
-- Gets LiquidityPositionSnapshotV2DTOs.
-- 
uniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical MimeNoContent [UniswapV2LiquidityPositionSnapshotV2DTO] accept
uniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/LiquidityPositionSnapshotV2DTOs/historical"]

data UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/LiquidityPositionV2DTOs\/historical@
-- 
-- LiquidityPositionV2DTOs (historical) ðŸ”¥
-- 
-- Gets LiquidityPositionV2DTOs.
-- 
uniswapV2GetLiquidityPositionV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionV2DTOsHistorical MimeNoContent [UniswapV2LiquidityPositionV2DTO] accept
uniswapV2GetLiquidityPositionV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/LiquidityPositionV2DTOs/historical"]

data UniswapV2GetLiquidityPositionV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionV2DTOsHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionsHistorical

-- | @GET \/dapps\/uniswapv2\/liquidityPositions\/historical@
-- 
-- LiquidityPositions (historical)
-- 
-- Gets liquidity positions.
-- 
uniswapV2GetLiquidityPositionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionsHistorical MimeNoContent [UniswapV2LiquidityPositionV2DTO] accept
uniswapV2GetLiquidityPositionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositions/historical"]

data UniswapV2GetLiquidityPositionsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionsHistorical MimePlainText


-- *** uniswapV2GetLiquidityPositionsSnapshotsHistorical

-- | @GET \/dapps\/uniswapv2\/liquidityPositionsSnapshots\/historical@
-- 
-- LiquidityPositionsSnapshots (historical)
-- 
-- Gets liquidity positions snapshots.
-- 
uniswapV2GetLiquidityPositionsSnapshotsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetLiquidityPositionsSnapshotsHistorical MimeNoContent [UniswapV2LiquidityPositionSnapshotV2DTO] accept
uniswapV2GetLiquidityPositionsSnapshotsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositionsSnapshots/historical"]

data UniswapV2GetLiquidityPositionsSnapshotsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsSnapshotsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsSnapshotsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsSnapshotsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsSnapshotsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetLiquidityPositionsSnapshotsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetLiquidityPositionsSnapshotsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetLiquidityPositionsSnapshotsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetLiquidityPositionsSnapshotsHistorical MimePlainText


-- *** uniswapV2GetMintV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/MintV2DTOs\/historical@
-- 
-- MintV2DTOs (historical) ðŸ”¥
-- 
-- Gets MintV2DTOs.
-- 
uniswapV2GetMintV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetMintV2DTOsHistorical MimeNoContent [UniswapV2MintV2DTO] accept
uniswapV2GetMintV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/MintV2DTOs/historical"]

data UniswapV2GetMintV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetMintV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetMintV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetMintV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetMintV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetMintV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetMintV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetMintV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetMintV2DTOsHistorical MimePlainText


-- *** uniswapV2GetMintsHistorical

-- | @GET \/dapps\/uniswapv2\/mints\/historical@
-- 
-- Mints (historical)
-- 
-- Gets mints.
-- 
uniswapV2GetMintsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetMintsHistorical MimeNoContent [UniswapV2MintV2DTO] accept
uniswapV2GetMintsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/mints/historical"]

data UniswapV2GetMintsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetMintsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetMintsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetMintsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetMintsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetMintsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetMintsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetMintsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetMintsHistorical MimePlainText


-- *** uniswapV2GetPairDayDataV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/PairDayDataV2DTOs\/historical@
-- 
-- PairDayDataV2DTOs (historical) ðŸ”¥
-- 
-- Gets PairDayDataV2DTOs.
-- 
uniswapV2GetPairDayDataV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairDayDataV2DTOsHistorical MimeNoContent [UniswapV2PairDayDataV2DTO] accept
uniswapV2GetPairDayDataV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/PairDayDataV2DTOs/historical"]

data UniswapV2GetPairDayDataV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPairDayDataV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPairDayDataV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPairDayDataV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPairDayDataV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPairDayDataV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairDayDataV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairDayDataV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairDayDataV2DTOsHistorical MimePlainText


-- *** uniswapV2GetPairHourDataV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/PairHourDataV2DTOs\/historical@
-- 
-- PairHourDataV2DTOs (historical) ðŸ”¥
-- 
-- Gets PairHourDataV2DTOs.
-- 
uniswapV2GetPairHourDataV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairHourDataV2DTOsHistorical MimeNoContent [UniswapV2PairHourDataV2DTO] accept
uniswapV2GetPairHourDataV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/PairHourDataV2DTOs/historical"]

data UniswapV2GetPairHourDataV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPairHourDataV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPairHourDataV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPairHourDataV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPairHourDataV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPairHourDataV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairHourDataV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairHourDataV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairHourDataV2DTOsHistorical MimePlainText


-- *** uniswapV2GetPairV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/PairV2DTOs\/historical@
-- 
-- PairV2DTOs (historical) ðŸ”¥
-- 
-- Gets PairV2DTOs.
-- 
uniswapV2GetPairV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPairV2DTOsHistorical MimeNoContent [UniswapV2PairV2DTO] accept
uniswapV2GetPairV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/PairV2DTOs/historical"]

data UniswapV2GetPairV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPairV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPairV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPairV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPairV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPairV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPairV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPairV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPairV2DTOsHistorical MimePlainText


-- *** uniswapV2GetPoolsCurrent

-- | @GET \/dapps\/uniswapv2\/pools\/current@
-- 
-- Pools (current) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV2GetPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsCurrent MimeNoContent [UniswapV2PairV2DTO] accept
uniswapV2GetPoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pools/current"]

data UniswapV2GetPoolsCurrent  
instance HasOptionalParam UniswapV2GetPoolsCurrent FilterPoolId where
  applyOptionalParam req (FilterPoolId xs) =
    req `addQuery` toQuery ("filter_pool_id", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsCurrent MimePlainText


-- *** uniswapV2GetPoolsDayDataHistorical

-- | @GET \/dapps\/uniswapv2\/poolsDayData\/historical@
-- 
-- PoolsDayData (historical)
-- 
-- Gets pools day data.
-- 
uniswapV2GetPoolsDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsDayDataHistorical MimeNoContent [UniswapV2PairDayDataV2DTO] accept
uniswapV2GetPoolsDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/poolsDayData/historical"]

data UniswapV2GetPoolsDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPoolsDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPoolsDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPoolsDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPoolsDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPoolsDayDataHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsDayDataHistorical MimePlainText


-- *** uniswapV2GetPoolsHistorical

-- | @GET \/dapps\/uniswapv2\/pools\/historical@
-- 
-- Pools (historical) ðŸ”¥
-- 
-- Gets pools.
-- 
uniswapV2GetPoolsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsHistorical MimeNoContent [UniswapV2PairV2DTO] accept
uniswapV2GetPoolsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pools/historical"]

data UniswapV2GetPoolsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPoolsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPoolsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPoolsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPoolsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPoolsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsHistorical MimePlainText


-- *** uniswapV2GetPoolsHourDataHistorical

-- | @GET \/dapps\/uniswapv2\/poolsHourData\/historical@
-- 
-- PoolsHourData (historical)
-- 
-- Gets pools tracked each our.
-- 
uniswapV2GetPoolsHourDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetPoolsHourDataHistorical MimeNoContent [UniswapV2PairHourDataV2DTO] accept
uniswapV2GetPoolsHourDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/poolsHourData/historical"]

data UniswapV2GetPoolsHourDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetPoolsHourDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetPoolsHourDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetPoolsHourDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetPoolsHourDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetPoolsHourDataHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetPoolsHourDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetPoolsHourDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetPoolsHourDataHistorical MimePlainText


-- *** uniswapV2GetSwapV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/SwapV2DTOs\/historical@
-- 
-- SwapV2DTOs (historical) ðŸ”¥
-- 
-- Gets SwapV2DTOs.
-- 
uniswapV2GetSwapV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapV2DTOsHistorical MimeNoContent [UniswapV2SwapV2DTO] accept
uniswapV2GetSwapV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/SwapV2DTOs/historical"]

data UniswapV2GetSwapV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetSwapV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetSwapV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetSwapV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetSwapV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetSwapV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetSwapV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapV2DTOsHistorical MimePlainText


-- *** uniswapV2GetSwapsCurrent

-- | @GET \/dapps\/uniswapv2\/swaps\/current@
-- 
-- Swaps (current) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV2GetSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapsCurrent MimeNoContent [UniswapV2SwapV2DTO] accept
uniswapV2GetSwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/current"]

data UniswapV2GetSwapsCurrent  
-- | @application/json@
instance Produces UniswapV2GetSwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapsCurrent MimePlainText


-- *** uniswapV2GetSwapsHistorical

-- | @GET \/dapps\/uniswapv2\/swaps\/historical@
-- 
-- Swaps (historical) ðŸ”¥
-- 
-- Gets swaps.
-- 
uniswapV2GetSwapsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetSwapsHistorical MimeNoContent [UniswapV2SwapV2DTO] accept
uniswapV2GetSwapsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/historical"]

data UniswapV2GetSwapsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetSwapsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetSwapsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetSwapsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetSwapsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetSwapsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetSwapsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetSwapsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetSwapsHistorical MimePlainText


-- *** uniswapV2GetTokenDayDataV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/TokenDayDataV2DTOs\/historical@
-- 
-- TokenDayDataV2DTOs (historical) ðŸ”¥
-- 
-- Gets TokenDayDataV2DTOs.
-- 
uniswapV2GetTokenDayDataV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokenDayDataV2DTOsHistorical MimeNoContent [UniswapV2TokenDayDataV2DTO] accept
uniswapV2GetTokenDayDataV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/TokenDayDataV2DTOs/historical"]

data UniswapV2GetTokenDayDataV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTokenDayDataV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTokenDayDataV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTokenDayDataV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTokenDayDataV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetTokenDayDataV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokenDayDataV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokenDayDataV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokenDayDataV2DTOsHistorical MimePlainText


-- *** uniswapV2GetTokenV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/TokenV2DTOs\/historical@
-- 
-- TokenV2DTOs (historical) ðŸ”¥
-- 
-- Gets TokenV2DTOs.
-- 
uniswapV2GetTokenV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokenV2DTOsHistorical MimeNoContent [UniswapV2TokenV2DTO] accept
uniswapV2GetTokenV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/TokenV2DTOs/historical"]

data UniswapV2GetTokenV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTokenV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTokenV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTokenV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTokenV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetTokenV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokenV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokenV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokenV2DTOsHistorical MimePlainText


-- *** uniswapV2GetTokensCurrent

-- | @GET \/dapps\/uniswapv2\/tokens\/current@
-- 
-- Tokens (current) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV2GetTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensCurrent MimeNoContent [UniswapV2TokenV2DTO] accept
uniswapV2GetTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/current"]

data UniswapV2GetTokensCurrent  
-- | @application/json@
instance Produces UniswapV2GetTokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensCurrent MimePlainText


-- *** uniswapV2GetTokensDayDataHistorical

-- | @GET \/dapps\/uniswapv2\/tokensDayData\/historical@
-- 
-- TokensDayData (historical)
-- 
-- Gets tokens day data.
-- 
uniswapV2GetTokensDayDataHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensDayDataHistorical MimeNoContent [UniswapV2TokenDayDataV2DTO] accept
uniswapV2GetTokensDayDataHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokensDayData/historical"]

data UniswapV2GetTokensDayDataHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTokensDayDataHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTokensDayDataHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTokensDayDataHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTokensDayDataHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam UniswapV2GetTokensDayDataHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokensDayDataHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensDayDataHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensDayDataHistorical MimePlainText


-- *** uniswapV2GetTokensHistorical

-- | @GET \/dapps\/uniswapv2\/tokens\/historical@
-- 
-- Tokens (historical) ðŸ”¥
-- 
-- Gets tokens.
-- 
uniswapV2GetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTokensHistorical MimeNoContent [UniswapV2TokenV2DTO] accept
uniswapV2GetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/historical"]

data UniswapV2GetTokensHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "tokenId" - 
instance HasOptionalParam UniswapV2GetTokensHistorical TokenId where
  applyOptionalParam req (TokenId xs) =
    req `addQuery` toQuery ("tokenId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTokensHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTokensHistorical MimePlainText


-- *** uniswapV2GetTransactionV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/TransactionV2DTOs\/historical@
-- 
-- TransactionV2DTOs (historical) ðŸ”¥
-- 
-- Gets TransactionV2DTOs.
-- 
uniswapV2GetTransactionV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTransactionV2DTOsHistorical MimeNoContent [UniswapV2TransactionV2DTO] accept
uniswapV2GetTransactionV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/TransactionV2DTOs/historical"]

data UniswapV2GetTransactionV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTransactionV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTransactionV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTransactionV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTransactionV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetTransactionV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTransactionV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTransactionV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTransactionV2DTOsHistorical MimePlainText


-- *** uniswapV2GetTransactionsHistorical

-- | @GET \/dapps\/uniswapv2\/transactions\/historical@
-- 
-- Transactions (historical)
-- 
-- Gets transactions.
-- 
uniswapV2GetTransactionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetTransactionsHistorical MimeNoContent [UniswapV2TransactionV2DTO] accept
uniswapV2GetTransactionsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/transactions/historical"]

data UniswapV2GetTransactionsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetTransactionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetTransactionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetTransactionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetTransactionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV2GetTransactionsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetTransactionsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetTransactionsHistorical MimePlainText


-- *** uniswapV2GetUniswapDayDataV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/UniswapDayDataV2DTOs\/historical@
-- 
-- UniswapDayDataV2DTOs (historical) ðŸ”¥
-- 
-- Gets UniswapDayDataV2DTOs.
-- 
uniswapV2GetUniswapDayDataV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUniswapDayDataV2DTOsHistorical MimeNoContent [UniswapV2UniswapDayDataV2DTO] accept
uniswapV2GetUniswapDayDataV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/UniswapDayDataV2DTOs/historical"]

data UniswapV2GetUniswapDayDataV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetUniswapDayDataV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetUniswapDayDataV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetUniswapDayDataV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetUniswapDayDataV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetUniswapDayDataV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUniswapDayDataV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUniswapDayDataV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUniswapDayDataV2DTOsHistorical MimePlainText


-- *** uniswapV2GetUniswapFactoryV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/UniswapFactoryV2DTOs\/historical@
-- 
-- UniswapFactoryV2DTOs (historical) ðŸ”¥
-- 
-- Gets UniswapFactoryV2DTOs.
-- 
uniswapV2GetUniswapFactoryV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUniswapFactoryV2DTOsHistorical MimeNoContent [UniswapV2UniswapFactoryV2DTO] accept
uniswapV2GetUniswapFactoryV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/UniswapFactoryV2DTOs/historical"]

data UniswapV2GetUniswapFactoryV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetUniswapFactoryV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetUniswapFactoryV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetUniswapFactoryV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetUniswapFactoryV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetUniswapFactoryV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUniswapFactoryV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUniswapFactoryV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUniswapFactoryV2DTOsHistorical MimePlainText


-- *** uniswapV2GetUserV2DTOsHistorical

-- | @GET \/dapps\/uniswapv2\/UserV2DTOs\/historical@
-- 
-- UserV2DTOs (historical) ðŸ”¥
-- 
-- Gets UserV2DTOs.
-- 
uniswapV2GetUserV2DTOsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUserV2DTOsHistorical MimeNoContent [UniswapV2UserV2DTO] accept
uniswapV2GetUserV2DTOsHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/UserV2DTOs/historical"]

data UniswapV2GetUserV2DTOsHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetUserV2DTOsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetUserV2DTOsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetUserV2DTOsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetUserV2DTOsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "poolId" - 
instance HasOptionalParam UniswapV2GetUserV2DTOsHistorical PoolId where
  applyOptionalParam req (PoolId xs) =
    req `addQuery` toQuery ("poolId", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUserV2DTOsHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUserV2DTOsHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUserV2DTOsHistorical MimePlainText


-- *** uniswapV2GetUsersHistorical

-- | @GET \/dapps\/uniswapv2\/users\/historical@
-- 
-- Users (historical)
-- 
-- Gets users.
-- 
uniswapV2GetUsersHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest UniswapV2GetUsersHistorical MimeNoContent [UniswapV2UserV2DTO] accept
uniswapV2GetUsersHistorical  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/users/historical"]

data UniswapV2GetUsersHistorical  

-- | /Optional Param/ "startBlock" - 
instance HasOptionalParam UniswapV2GetUsersHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - 
instance HasOptionalParam UniswapV2GetUsersHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - 
instance HasOptionalParam UniswapV2GetUsersHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - 
instance HasOptionalParam UniswapV2GetUsersHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
-- | @application/json@
instance Produces UniswapV2GetUsersHistorical MimeJSON
-- | @text/json@
instance Produces UniswapV2GetUsersHistorical MimeTextJson
-- | @text/plain@
instance Produces UniswapV2GetUsersHistorical MimePlainText

