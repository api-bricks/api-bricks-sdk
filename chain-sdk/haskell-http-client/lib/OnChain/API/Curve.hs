{-
   OnChain API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   OnChain API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChain.API.Curve
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChain.API.Curve where

import OnChain.Core
import OnChain.MimeTypes
import OnChain.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Curve

-- *** curveGetAccountsHistorical

-- | @GET \/dapps\/curve\/accounts\/historical@
-- 
-- Accounts (historical) ðŸ”¥
-- 
-- Gets accounts.
-- 
curveGetAccountsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetAccountsHistorical MimeNoContent [CurveAccountDTO] accept
curveGetAccountsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/accounts/historical"]

data CurveGetAccountsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetAccountsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetAccountsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetAccountsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetAccountsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetAccountsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetAccountsHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)
-- | @application/json@
instance Produces CurveGetAccountsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetAccountsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetAccountsHistorical MimePlainText


-- *** curveGetAddLiquidityEventsHistorical

-- | @GET \/dapps\/curve\/addliquidityevents\/historical@
-- 
-- AddLiquidityEvents (historical) ðŸ”¥
-- 
-- Gets addliquidityevents.
-- 
curveGetAddLiquidityEventsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetAddLiquidityEventsHistorical MimeNoContent [CurveAddLiquidityEventDTO] accept
curveGetAddLiquidityEventsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/addliquidityevents/historical"]

data CurveGetAddLiquidityEventsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetAddLiquidityEventsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetAddLiquidityEventsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetAddLiquidityEventsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetAddLiquidityEventsHistorical MimePlainText


-- *** curveGetAdminFeeChangeLogsHistorical

-- | @GET \/dapps\/curve\/adminfeechangelogs\/historical@
-- 
-- AdminFeeChangeLogs (historical) ðŸ”¥
-- 
-- Gets adminfeechangelogs.
-- 
curveGetAdminFeeChangeLogsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetAdminFeeChangeLogsHistorical MimeNoContent [CurveAdminFeeChangeLogDTO] accept
curveGetAdminFeeChangeLogsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/adminfeechangelogs/historical"]

data CurveGetAdminFeeChangeLogsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetAdminFeeChangeLogsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetAdminFeeChangeLogsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetAdminFeeChangeLogsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetAdminFeeChangeLogsHistorical MimePlainText


-- *** curveGetAmplificationCoeffChangeLogsHistorical

-- | @GET \/dapps\/curve\/amplificationcoeffchangelogs\/historical@
-- 
-- AmplificationCoeffChangeLogs (historical) ðŸ”¥
-- 
-- Gets amplificationcoeffchangelogs.
-- 
curveGetAmplificationCoeffChangeLogsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetAmplificationCoeffChangeLogsHistorical MimeNoContent [CurveAmplificationCoeffChangeLogDTO] accept
curveGetAmplificationCoeffChangeLogsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/amplificationcoeffchangelogs/historical"]

data CurveGetAmplificationCoeffChangeLogsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetAmplificationCoeffChangeLogsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetAmplificationCoeffChangeLogsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetAmplificationCoeffChangeLogsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetAmplificationCoeffChangeLogsHistorical MimePlainText


-- *** curveGetCoinsHistorical

-- | @GET \/dapps\/curve\/coins\/historical@
-- 
-- Coins (historical) ðŸ”¥
-- 
-- Gets coins.
-- 
curveGetCoinsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetCoinsHistorical MimeNoContent [CurveCoinDTO] accept
curveGetCoinsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/coins/historical"]

data CurveGetCoinsHistorical  
instance HasOptionalParam CurveGetCoinsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam CurveGetCoinsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam CurveGetCoinsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam CurveGetCoinsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam CurveGetCoinsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam CurveGetCoinsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetCoinsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetCoinsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetCoinsHistorical MimePlainText


-- *** curveGetContractVersionsHistorical

-- | @GET \/dapps\/curve\/contractversions\/historical@
-- 
-- ContractVersions (historical) ðŸ”¥
-- 
-- Gets contractversions.
-- 
curveGetContractVersionsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetContractVersionsHistorical MimeNoContent [CurveContractVersionDTO] accept
curveGetContractVersionsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/contractversions/historical"]

data CurveGetContractVersionsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetContractVersionsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetContractVersionsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetContractVersionsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetContractVersionsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetContractVersionsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetContractVersionsHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)
-- | @application/json@
instance Produces CurveGetContractVersionsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetContractVersionsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetContractVersionsHistorical MimePlainText


-- *** curveGetContractsHistorical

-- | @GET \/dapps\/curve\/contracts\/historical@
-- 
-- Contracts (historical) ðŸ”¥
-- 
-- Gets contracts.
-- 
curveGetContractsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetContractsHistorical MimeNoContent [CurveContractDTO] accept
curveGetContractsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/contracts/historical"]

data CurveGetContractsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetContractsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetContractsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetContractsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetContractsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetContractsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetContractsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetContractsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetContractsHistorical MimePlainText


-- *** curveGetDailyVolumesHistorical

-- | @GET \/dapps\/curve\/dailyvolumes\/historical@
-- 
-- DailyVolumes (historical) ðŸ”¥
-- 
-- Gets dailyvolumes.
-- 
curveGetDailyVolumesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetDailyVolumesHistorical MimeNoContent [CurveDailyVolumeDTO] accept
curveGetDailyVolumesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/dailyvolumes/historical"]

data CurveGetDailyVolumesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetDailyVolumesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetDailyVolumesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetDailyVolumesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetDailyVolumesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetDailyVolumesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetDailyVolumesHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetDailyVolumesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetDailyVolumesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetDailyVolumesHistorical MimePlainText


-- *** curveGetExchangesHistorical

-- | @GET \/dapps\/curve\/exchanges\/historical@
-- 
-- Exchanges (historical) ðŸ”¥
-- 
-- Gets exchanges.
-- 
curveGetExchangesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetExchangesHistorical MimeNoContent [CurveExchangeDTO] accept
curveGetExchangesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/exchanges/historical"]

data CurveGetExchangesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetExchangesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetExchangesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetExchangesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetExchangesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetExchangesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetExchangesHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetExchangesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetExchangesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetExchangesHistorical MimePlainText


-- *** curveGetFeeChangeLogsHistorical

-- | @GET \/dapps\/curve\/feechangelogs\/historical@
-- 
-- FeeChangeLogs (historical) ðŸ”¥
-- 
-- Gets feechangelogs.
-- 
curveGetFeeChangeLogsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetFeeChangeLogsHistorical MimeNoContent [CurveFeeChangeLogDTO] accept
curveGetFeeChangeLogsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/feechangelogs/historical"]

data CurveGetFeeChangeLogsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetFeeChangeLogsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetFeeChangeLogsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetFeeChangeLogsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetFeeChangeLogsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetFeeChangeLogsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetFeeChangeLogsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetFeeChangeLogsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetFeeChangeLogsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetFeeChangeLogsHistorical MimePlainText


-- *** curveGetGaugeDepositsHistorical

-- | @GET \/dapps\/curve\/gaugedeposits\/historical@
-- 
-- GaugeDeposits (historical) ðŸ”¥
-- 
-- Gets gaugedeposits.
-- 
curveGetGaugeDepositsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeDepositsHistorical MimeNoContent [CurveGaugeDepositDTO] accept
curveGetGaugeDepositsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugedeposits/historical"]

data CurveGetGaugeDepositsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeDepositsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeDepositsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeDepositsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeDepositsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeDepositsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeDepositsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeDepositsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeDepositsHistorical MimePlainText


-- *** curveGetGaugeLiquiditysHistorical

-- | @GET \/dapps\/curve\/gaugeliquiditys\/historical@
-- 
-- GaugeLiquiditys (historical) ðŸ”¥
-- 
-- Gets gaugeliquiditys.
-- 
curveGetGaugeLiquiditysHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeLiquiditysHistorical MimeNoContent [CurveGaugeLiquidityDTO] accept
curveGetGaugeLiquiditysHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugeliquiditys/historical"]

data CurveGetGaugeLiquiditysHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "user" - 
instance HasOptionalParam CurveGetGaugeLiquiditysHistorical User where
  applyOptionalParam req (User xs) =
    req `addQuery` toQuery ("user", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeLiquiditysHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeLiquiditysHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeLiquiditysHistorical MimePlainText


-- *** curveGetGaugeTotalWeightsHistorical

-- | @GET \/dapps\/curve\/gaugetotalweights\/historical@
-- 
-- GaugeTotalWeights (historical) ðŸ”¥
-- 
-- Gets gaugetotalweights.
-- 
curveGetGaugeTotalWeightsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeTotalWeightsHistorical MimeNoContent [CurveGaugeTotalWeightDTO] accept
curveGetGaugeTotalWeightsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugetotalweights/historical"]

data CurveGetGaugeTotalWeightsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeTotalWeightsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeTotalWeightsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeTotalWeightsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeTotalWeightsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeTotalWeightsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeTotalWeightsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeTotalWeightsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeTotalWeightsHistorical MimePlainText


-- *** curveGetGaugeTypeWeightsHistorical

-- | @GET \/dapps\/curve\/gaugetypeweights\/historical@
-- 
-- GaugeTypeWeights (historical) ðŸ”¥
-- 
-- Gets gaugetypeweights.
-- 
curveGetGaugeTypeWeightsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeTypeWeightsHistorical MimeNoContent [CurveGaugeTypeWeightDTO] accept
curveGetGaugeTypeWeightsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugetypeweights/historical"]

data CurveGetGaugeTypeWeightsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeTypeWeightsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeTypeWeightsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeTypeWeightsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeTypeWeightsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeTypeWeightsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeTypeWeightsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeTypeWeightsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeTypeWeightsHistorical MimePlainText


-- *** curveGetGaugeTypesHistorical

-- | @GET \/dapps\/curve\/gaugetypes\/historical@
-- 
-- GaugeTypes (historical) ðŸ”¥
-- 
-- Gets gaugetypes.
-- 
curveGetGaugeTypesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeTypesHistorical MimeNoContent [CurveGaugeTypeDTO] accept
curveGetGaugeTypesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugetypes/historical"]

data CurveGetGaugeTypesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeTypesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeTypesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeTypesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeTypesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeTypesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "name" - 
instance HasOptionalParam CurveGetGaugeTypesHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeTypesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeTypesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeTypesHistorical MimePlainText


-- *** curveGetGaugeWeightVotesHistorical

-- | @GET \/dapps\/curve\/gaugeweightvotes\/historical@
-- 
-- GaugeWeightVotes (historical) ðŸ”¥
-- 
-- Gets gaugeweightvotes.
-- 
curveGetGaugeWeightVotesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeWeightVotesHistorical MimeNoContent [CurveGaugeWeightVoteDTO] accept
curveGetGaugeWeightVotesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugeweightvotes/historical"]

data CurveGetGaugeWeightVotesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "user" - 
instance HasOptionalParam CurveGetGaugeWeightVotesHistorical User where
  applyOptionalParam req (User xs) =
    req `addQuery` toQuery ("user", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeWeightVotesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeWeightVotesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeWeightVotesHistorical MimePlainText


-- *** curveGetGaugeWeightsHistorical

-- | @GET \/dapps\/curve\/gaugeweights\/historical@
-- 
-- GaugeWeights (historical) ðŸ”¥
-- 
-- Gets gaugeweights.
-- 
curveGetGaugeWeightsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeWeightsHistorical MimeNoContent [CurveGaugeWeightDTO] accept
curveGetGaugeWeightsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugeweights/historical"]

data CurveGetGaugeWeightsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeWeightsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeWeightsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeWeightsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeWeightsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeWeightsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeWeightsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeWeightsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeWeightsHistorical MimePlainText


-- *** curveGetGaugeWithdrawsHistorical

-- | @GET \/dapps\/curve\/gaugewithdraws\/historical@
-- 
-- GaugeWithdraws (historical) ðŸ”¥
-- 
-- Gets gaugewithdraws.
-- 
curveGetGaugeWithdrawsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugeWithdrawsHistorical MimeNoContent [CurveGaugeWithdrawDTO] accept
curveGetGaugeWithdrawsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gaugewithdraws/historical"]

data CurveGetGaugeWithdrawsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugeWithdrawsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugeWithdrawsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugeWithdrawsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugeWithdrawsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugeWithdrawsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetGaugeWithdrawsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugeWithdrawsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugeWithdrawsHistorical MimePlainText


-- *** curveGetGaugesHistorical

-- | @GET \/dapps\/curve\/gauges\/historical@
-- 
-- Gauges (historical) ðŸ”¥
-- 
-- Gets gauges.
-- 
curveGetGaugesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetGaugesHistorical MimeNoContent [CurveGaugeDTO] accept
curveGetGaugesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/gauges/historical"]

data CurveGetGaugesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetGaugesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetGaugesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetGaugesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetGaugesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetGaugesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetGaugesHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetGaugesHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetGaugesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetGaugesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetGaugesHistorical MimePlainText


-- *** curveGetHourlyVolumesHistorical

-- | @GET \/dapps\/curve\/hourlyvolumes\/historical@
-- 
-- HourlyVolumes (historical) ðŸ”¥
-- 
-- Gets hourlyvolumes.
-- 
curveGetHourlyVolumesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetHourlyVolumesHistorical MimeNoContent [CurveHourlyVolumeDTO] accept
curveGetHourlyVolumesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/hourlyvolumes/historical"]

data CurveGetHourlyVolumesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetHourlyVolumesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetHourlyVolumesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetHourlyVolumesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetHourlyVolumesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetHourlyVolumesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetHourlyVolumesHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetHourlyVolumesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetHourlyVolumesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetHourlyVolumesHistorical MimePlainText


-- *** curveGetLpTokensHistorical

-- | @GET \/dapps\/curve\/lptokens\/historical@
-- 
-- LpTokens (historical) ðŸ”¥
-- 
-- Gets lptokens.
-- 
curveGetLpTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetLpTokensHistorical MimeNoContent [CurveLpTokenDTO] accept
curveGetLpTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/lptokens/historical"]

data CurveGetLpTokensHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetLpTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetLpTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetLpTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetLpTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetLpTokensHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetLpTokensHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)

-- | /Optional Param/ "name" - 
instance HasOptionalParam CurveGetLpTokensHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)

-- | /Optional Param/ "symbol" - 
instance HasOptionalParam CurveGetLpTokensHistorical Symbol where
  applyOptionalParam req (Symbol xs) =
    req `addQuery` toQuery ("symbol", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetLpTokensHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetLpTokensHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetLpTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetLpTokensHistorical MimePlainText


-- *** curveGetPoolsHistorical

-- | @GET \/dapps\/curve\/pools\/historical@
-- 
-- Pools (historical) ðŸ”¥
-- 
-- Gets pools.
-- 
curveGetPoolsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetPoolsHistorical MimeNoContent [CurvePoolDTO] accept
curveGetPoolsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/pools/historical"]

data CurveGetPoolsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetPoolsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetPoolsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetPoolsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetPoolsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam CurveGetPoolsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "name" - Pool's human-readable name.
instance HasOptionalParam CurveGetPoolsHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)
-- | @application/json@
instance Produces CurveGetPoolsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetPoolsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetPoolsHistorical MimePlainText


-- *** curveGetProposalVotesHistorical

-- | @GET \/dapps\/curve\/proposalvotes\/historical@
-- 
-- ProposalVotes (historical) ðŸ”¥
-- 
-- Gets proposalvotes.
-- 
curveGetProposalVotesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetProposalVotesHistorical MimeNoContent [CurveProposalVoteDTO] accept
curveGetProposalVotesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/proposalvotes/historical"]

data CurveGetProposalVotesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetProposalVotesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetProposalVotesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetProposalVotesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetProposalVotesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetProposalVotesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetProposalVotesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetProposalVotesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetProposalVotesHistorical MimePlainText


-- *** curveGetProposalsHistorical

-- | @GET \/dapps\/curve\/proposals\/historical@
-- 
-- Proposals (historical) ðŸ”¥
-- 
-- Gets proposals.
-- 
curveGetProposalsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetProposalsHistorical MimeNoContent [CurveProposalDTO] accept
curveGetProposalsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/proposals/historical"]

data CurveGetProposalsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetProposalsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetProposalsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetProposalsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetProposalsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetProposalsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetProposalsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetProposalsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetProposalsHistorical MimePlainText


-- *** curveGetRemoveLiquidityEventsHistorical

-- | @GET \/dapps\/curve\/removeliquidityevents\/historical@
-- 
-- RemoveLiquidityEvents (historical) ðŸ”¥
-- 
-- Gets removeliquidityevents.
-- 
curveGetRemoveLiquidityEventsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetRemoveLiquidityEventsHistorical MimeNoContent [CurveRemoveLiquidityEventDTO] accept
curveGetRemoveLiquidityEventsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/removeliquidityevents/historical"]

data CurveGetRemoveLiquidityEventsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetRemoveLiquidityEventsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetRemoveLiquidityEventsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetRemoveLiquidityEventsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetRemoveLiquidityEventsHistorical MimePlainText


-- *** curveGetRemoveLiquidityOneEventsHistorical

-- | @GET \/dapps\/curve\/removeliquidityoneevents\/historical@
-- 
-- RemoveLiquidityOneEvents (historical) ðŸ”¥
-- 
-- Gets removeliquidityoneevents.
-- 
curveGetRemoveLiquidityOneEventsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetRemoveLiquidityOneEventsHistorical MimeNoContent [CurveRemoveLiquidityOneEventDTO] accept
curveGetRemoveLiquidityOneEventsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/removeliquidityoneevents/historical"]

data CurveGetRemoveLiquidityOneEventsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetRemoveLiquidityOneEventsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetRemoveLiquidityOneEventsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetRemoveLiquidityOneEventsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetRemoveLiquidityOneEventsHistorical MimePlainText


-- *** curveGetSystemStatesHistorical

-- | @GET \/dapps\/curve\/systemstates\/historical@
-- 
-- SystemStates (historical) ðŸ”¥
-- 
-- Gets systemstates.
-- 
curveGetSystemStatesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetSystemStatesHistorical MimeNoContent [CurveSystemStateDTO] accept
curveGetSystemStatesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/systemstates/historical"]

data CurveGetSystemStatesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetSystemStatesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetSystemStatesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetSystemStatesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetSystemStatesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - Singleton ID, equals to 'current'.
instance HasOptionalParam CurveGetSystemStatesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces CurveGetSystemStatesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetSystemStatesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetSystemStatesHistorical MimePlainText


-- *** curveGetTokensHistorical

-- | @GET \/dapps\/curve\/tokens\/historical@
-- 
-- Tokens (historical) ðŸ”¥
-- 
-- Gets tokens.
-- 
curveGetTokensHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetTokensHistorical MimeNoContent [CurveTokenDTO] accept
curveGetTokensHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/tokens/historical"]

data CurveGetTokensHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetTokensHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetTokensHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetTokensHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetTokensHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetTokensHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetTokensHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)

-- | /Optional Param/ "name" - 
instance HasOptionalParam CurveGetTokensHistorical Name where
  applyOptionalParam req (Name xs) =
    req `addQuery` toQuery ("name", Just xs)

-- | /Optional Param/ "symbol" - 
instance HasOptionalParam CurveGetTokensHistorical Symbol where
  applyOptionalParam req (Symbol xs) =
    req `addQuery` toQuery ("symbol", Just xs)
-- | @application/json@
instance Produces CurveGetTokensHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetTokensHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetTokensHistorical MimePlainText


-- *** curveGetTransferOwnershipEventsHistorical

-- | @GET \/dapps\/curve\/transferownershipevents\/historical@
-- 
-- TransferOwnershipEvents (historical) ðŸ”¥
-- 
-- Gets transferownershipevents.
-- 
curveGetTransferOwnershipEventsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetTransferOwnershipEventsHistorical MimeNoContent [CurveTransferOwnershipEventDTO] accept
curveGetTransferOwnershipEventsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/transferownershipevents/historical"]

data CurveGetTransferOwnershipEventsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetTransferOwnershipEventsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetTransferOwnershipEventsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetTransferOwnershipEventsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetTransferOwnershipEventsHistorical MimePlainText


-- *** curveGetUnderlyingCoinsHistorical

-- | @GET \/dapps\/curve\/underlyingcoins\/historical@
-- 
-- UnderlyingCoins (historical) ðŸ”¥
-- 
-- Gets underlyingcoins.
-- 
curveGetUnderlyingCoinsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetUnderlyingCoinsHistorical MimeNoContent [CurveUnderlyingCoinDTO] accept
curveGetUnderlyingCoinsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/underlyingcoins/historical"]

data CurveGetUnderlyingCoinsHistorical  
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
instance HasOptionalParam CurveGetUnderlyingCoinsHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetUnderlyingCoinsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetUnderlyingCoinsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetUnderlyingCoinsHistorical MimePlainText


-- *** curveGetVotingAppsHistorical

-- | @GET \/dapps\/curve\/votingapps\/historical@
-- 
-- VotingApps (historical) ðŸ”¥
-- 
-- Gets votingapps.
-- 
curveGetVotingAppsHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetVotingAppsHistorical MimeNoContent [CurveVotingAppDTO] accept
curveGetVotingAppsHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/votingapps/historical"]

data CurveGetVotingAppsHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetVotingAppsHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetVotingAppsHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetVotingAppsHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetVotingAppsHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - App address.
instance HasOptionalParam CurveGetVotingAppsHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "address" - 
instance HasOptionalParam CurveGetVotingAppsHistorical Address where
  applyOptionalParam req (Address xs) =
    req `addQuery` toQuery ("address", Just xs)
-- | @application/json@
instance Produces CurveGetVotingAppsHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetVotingAppsHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetVotingAppsHistorical MimePlainText


-- *** curveGetWeeklyVolumesHistorical

-- | @GET \/dapps\/curve\/weeklyvolumes\/historical@
-- 
-- WeeklyVolumes (historical) ðŸ”¥
-- 
-- Gets weeklyvolumes.
-- 
curveGetWeeklyVolumesHistorical
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainRequest CurveGetWeeklyVolumesHistorical MimeNoContent [CurveWeeklyVolumeDTO] accept
curveGetWeeklyVolumesHistorical  _ =
  _mkRequest "GET" ["/dapps/curve/weeklyvolumes/historical"]

data CurveGetWeeklyVolumesHistorical  

-- | /Optional Param/ "startBlock" - The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
instance HasOptionalParam CurveGetWeeklyVolumesHistorical StartBlock where
  applyOptionalParam req (StartBlock xs) =
    req `addQuery` toQuery ("startBlock", Just xs)

-- | /Optional Param/ "endBlock" - The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
instance HasOptionalParam CurveGetWeeklyVolumesHistorical EndBlock where
  applyOptionalParam req (EndBlock xs) =
    req `addQuery` toQuery ("endBlock", Just xs)

-- | /Optional Param/ "startDate" - The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
instance HasOptionalParam CurveGetWeeklyVolumesHistorical StartDate where
  applyOptionalParam req (StartDate xs) =
    req `addQuery` toQuery ("startDate", Just xs)

-- | /Optional Param/ "endDate" - The end date of timeframe.
instance HasOptionalParam CurveGetWeeklyVolumesHistorical EndDate where
  applyOptionalParam req (EndDate xs) =
    req `addQuery` toQuery ("endDate", Just xs)

-- | /Optional Param/ "id" - 
instance HasOptionalParam CurveGetWeeklyVolumesHistorical Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)

-- | /Optional Param/ "pool" - 
instance HasOptionalParam CurveGetWeeklyVolumesHistorical Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces CurveGetWeeklyVolumesHistorical MimeJSON
-- | @text/json@
instance Produces CurveGetWeeklyVolumesHistorical MimeTextJson
-- | @text/plain@
instance Produces CurveGetWeeklyVolumesHistorical MimePlainText

