// tslint:disable
/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    SushiswapPairDTO,
    SushiswapSwapDTO,
    SushiswapTokenDTO,
} from '../models';

export interface DappsSushiswapBundlesHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface DappsSushiswapBurnsHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapDayDataHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface DappsSushiswapFactoryHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface DappsSushiswapHourDataHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface DappsSushiswapLiquidityPositionHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapLiquidityPositionSnapshotsHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapMintsHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapPoolDayDataHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapPoolHourDataHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface DappsSushiswapTokenDayDataHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    tokenId?: string;
}

export interface DappsSushiswapTransactionsHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface DappsSushiswapUsersHistoricalGetRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
}

export interface SushiswapGetPoolsHistoricalRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface SushiswapGetSwapsHistoricalRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    poolId?: string;
}

export interface SushiswapGetTokensHistoricalRequest {
    startBlock?: number;
    endBlock?: number;
    startDate?: string;
    endDate?: string;
    tokenId?: string;
}

/**
 * no description
 */
export class SushiswapApi extends BaseAPI {

    /**
     */
    dappsSushiswapBundlesHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapBundlesHistoricalGetRequest): Observable<void>
    dappsSushiswapBundlesHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapBundlesHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapBundlesHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapBundlesHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/bundles/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapBurnsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapBurnsHistoricalGetRequest): Observable<void>
    dappsSushiswapBurnsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapBurnsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapBurnsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapBurnsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/burns/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapDayDataHistoricalGetRequest): Observable<void>
    dappsSushiswapDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/dayData/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapFactoryHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapFactoryHistoricalGetRequest): Observable<void>
    dappsSushiswapFactoryHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapFactoryHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapFactoryHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapFactoryHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/factory/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapHourDataHistoricalGetRequest): Observable<void>
    dappsSushiswapHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapHourDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapHourDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/hourData/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapLiquidityPositionHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionHistoricalGetRequest): Observable<void>
    dappsSushiswapLiquidityPositionHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapLiquidityPositionHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/liquidityPosition/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapLiquidityPositionSnapshotsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionSnapshotsHistoricalGetRequest): Observable<void>
    dappsSushiswapLiquidityPositionSnapshotsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionSnapshotsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapLiquidityPositionSnapshotsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapLiquidityPositionSnapshotsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/liquidityPositionSnapshots/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapMintsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapMintsHistoricalGetRequest): Observable<void>
    dappsSushiswapMintsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapMintsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapMintsHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapMintsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/mints/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapPoolDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolDayDataHistoricalGetRequest): Observable<void>
    dappsSushiswapPoolDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapPoolDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/poolDayData/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapPoolHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolHourDataHistoricalGetRequest): Observable<void>
    dappsSushiswapPoolHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolHourDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapPoolHourDataHistoricalGet({ startBlock, endBlock, startDate, endDate, poolId }: DappsSushiswapPoolHourDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<void>({
            url: '/dapps/sushiswap/poolHourData/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapTokenDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, tokenId }: DappsSushiswapTokenDayDataHistoricalGetRequest): Observable<void>
    dappsSushiswapTokenDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, tokenId }: DappsSushiswapTokenDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapTokenDayDataHistoricalGet({ startBlock, endBlock, startDate, endDate, tokenId }: DappsSushiswapTokenDayDataHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (tokenId != null) { query['tokenId'] = tokenId; }

        return this.request<void>({
            url: '/dapps/sushiswap/tokenDayData/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapTransactionsHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapTransactionsHistoricalGetRequest): Observable<void>
    dappsSushiswapTransactionsHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapTransactionsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapTransactionsHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapTransactionsHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/transactions/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    dappsSushiswapUsersHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapUsersHistoricalGetRequest): Observable<void>
    dappsSushiswapUsersHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapUsersHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    dappsSushiswapUsersHistoricalGet({ startBlock, endBlock, startDate, endDate }: DappsSushiswapUsersHistoricalGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }

        return this.request<void>({
            url: '/dapps/sushiswap/users/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Gets pools.
     * GetPools (current)
     */
    sushiswapGetPoolsCurrent(): Observable<Array<SushiswapPairDTO>>
    sushiswapGetPoolsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<SushiswapPairDTO>>>
    sushiswapGetPoolsCurrent(opts?: OperationOpts): Observable<Array<SushiswapPairDTO> | AjaxResponse<Array<SushiswapPairDTO>>> {
        return this.request<Array<SushiswapPairDTO>>({
            url: '/dapps/sushiswap/pools/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets list of pools for given filters.
     * GetPools (historical)
     */
    sushiswapGetPoolsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetPoolsHistoricalRequest): Observable<Array<SushiswapPairDTO>>
    sushiswapGetPoolsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetPoolsHistoricalRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<SushiswapPairDTO>>>
    sushiswapGetPoolsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetPoolsHistoricalRequest, opts?: OperationOpts): Observable<Array<SushiswapPairDTO> | AjaxResponse<Array<SushiswapPairDTO>>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<Array<SushiswapPairDTO>>({
            url: '/dapps/sushiswap/pools/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Gets swaps.
     * GetSwaps (current)
     */
    sushiswapGetSwapsCurrent(): Observable<SushiswapSwapDTO>
    sushiswapGetSwapsCurrent(opts?: OperationOpts): Observable<AjaxResponse<SushiswapSwapDTO>>
    sushiswapGetSwapsCurrent(opts?: OperationOpts): Observable<SushiswapSwapDTO | AjaxResponse<SushiswapSwapDTO>> {
        return this.request<SushiswapSwapDTO>({
            url: '/dapps/sushiswap/swaps/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets list of swaps for given filters.
     * GetSwaps (historical)
     */
    sushiswapGetSwapsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetSwapsHistoricalRequest): Observable<Array<SushiswapSwapDTO>>
    sushiswapGetSwapsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetSwapsHistoricalRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<SushiswapSwapDTO>>>
    sushiswapGetSwapsHistorical({ startBlock, endBlock, startDate, endDate, poolId }: SushiswapGetSwapsHistoricalRequest, opts?: OperationOpts): Observable<Array<SushiswapSwapDTO> | AjaxResponse<Array<SushiswapSwapDTO>>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (poolId != null) { query['poolId'] = poolId; }

        return this.request<Array<SushiswapSwapDTO>>({
            url: '/dapps/sushiswap/swaps/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Gets tokens.
     * GetTokens (current)
     */
    sushiswapGetTokensCurrent(): Observable<SushiswapTokenDTO>
    sushiswapGetTokensCurrent(opts?: OperationOpts): Observable<AjaxResponse<SushiswapTokenDTO>>
    sushiswapGetTokensCurrent(opts?: OperationOpts): Observable<SushiswapTokenDTO | AjaxResponse<SushiswapTokenDTO>> {
        return this.request<SushiswapTokenDTO>({
            url: '/dapps/sushiswap/tokens/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets list of tokens for given filters.
     * GetTokens (historical)
     */
    sushiswapGetTokensHistorical({ startBlock, endBlock, startDate, endDate, tokenId }: SushiswapGetTokensHistoricalRequest): Observable<Array<SushiswapTokenDTO>>
    sushiswapGetTokensHistorical({ startBlock, endBlock, startDate, endDate, tokenId }: SushiswapGetTokensHistoricalRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<SushiswapTokenDTO>>>
    sushiswapGetTokensHistorical({ startBlock, endBlock, startDate, endDate, tokenId }: SushiswapGetTokensHistoricalRequest, opts?: OperationOpts): Observable<Array<SushiswapTokenDTO> | AjaxResponse<Array<SushiswapTokenDTO>>> {

        const query: HttpQuery = {};

        if (startBlock != null) { query['startBlock'] = startBlock; }
        if (endBlock != null) { query['endBlock'] = endBlock; }
        if (startDate != null) { query['startDate'] = (startDate as any).toISOString(); }
        if (endDate != null) { query['endDate'] = (endDate as any).toISOString(); }
        if (tokenId != null) { query['tokenId'] = tokenId; }

        return this.request<Array<SushiswapTokenDTO>>({
            url: '/dapps/sushiswap/tokens/historical',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
