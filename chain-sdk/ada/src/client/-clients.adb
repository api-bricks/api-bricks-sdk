--  OnChain API
--   This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
--
--  The version of the OpenAPI document: v1
--  Contact: support@coinapi.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.2.1.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  OrderDTOs (historical) ðŸ”¥
   --  Gets OrderDTOs.
   procedure Cow_Get_Order_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/cow/OrderDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Order_DTOs__historical;

   --  Orders (historical)
   --  Gets orders.
   procedure Cow_Get_Orders__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/orders/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Orders__historical;

   --  SettlementDTOs (historical) ðŸ”¥
   --  Gets SettlementDTOs.
   procedure Cow_Get_Settlement_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowSettlementDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/cow/SettlementDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Settlement_DTOs__historical;

   --  Settlements (historical)
   --  Gets settlements.
   procedure Cow_Get_Settlements__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowSettlementDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/settlements/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Settlements__historical;

   --  TokenDTOs (historical) ðŸ”¥
   --  Gets TokenDTOs.
   procedure Cow_Get_Token_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/cow/TokenDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Token_DTOs__historical;

   --  Tokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Cow_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/cow/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Tokens__historical;

   --  TradeDTOs (historical) ðŸ”¥
   --  Gets TradeDTOs.
   procedure Cow_Get_Trade_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/cow/TradeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Trade_DTOs__historical;

   --  Trades (historical) ðŸ”¥
   --  Gets trades.
   procedure Cow_Get_Trades__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/trades/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Trades__historical;

   --  UserDTOs (historical) ðŸ”¥
   --  Gets UserDTOs.
   procedure Cow_Get_User_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/cow/UserDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_User_DTOs__historical;

   --  Users (historical)
   --  Gets users.
   procedure Cow_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Users__historical;

   --  AccountDTOs (historical) ðŸ”¥
   --  Gets AccountDTOs.
   procedure Curve_Get_Account_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAccountDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/AccountDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Account_DTOs__historical;

   --  Accounts (historical)
   --  Gets accounts.
   procedure Curve_Get_Accounts__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveAccountDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/accounts/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Accounts__historical;

   --  AddLiquidityEventDTOs (historical) ðŸ”¥
   --  Gets AddLiquidityEventDTOs.
   procedure Curve_Get_Add_Liquidity_Event_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAddLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/AddLiquidityEventDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Add_Liquidity_Event_DTOs__historical;

   --  AddLiquidityEvents (historical)
   --  Gets add liquidity events.
   procedure Curve_Get_Add_Liquidity_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAddLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/addLiquidityEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Add_Liquidity_Events__historical;

   --  AdminFeeChangeLogDTOs (historical) ðŸ”¥
   --  Gets AdminFeeChangeLogDTOs.
   procedure Curve_Get_Admin_Fee_Change_Log_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAdminFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/AdminFeeChangeLogDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Admin_Fee_Change_Log_DTOs__historical;

   --  AdminFeeChangeLogs (historical)
   --  Gets admin fee change logs.
   procedure Curve_Get_Admin_Fee_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAdminFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/adminFeeChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Admin_Fee_Change_Logs__historical;

   --  AmplificationCoeffChangeLogDTOs (historical) ðŸ”¥
   --  Gets AmplificationCoeffChangeLogDTOs.
   procedure Curve_Get_Amplification_Coeff_Change_Log_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAmplificationCoeffChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/AmplificationCoeffChangeLogDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Amplification_Coeff_Change_Log_DTOs__historical;

   --  AmplificationCoeffChangeLogs (historical)
   --  Gets amplification coeff change logs.
   procedure Curve_Get_Amplification_Coeff_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAmplificationCoeffChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/amplificationCoeffChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Amplification_Coeff_Change_Logs__historical;

   --  CoinDTOs (historical) ðŸ”¥
   --  Gets CoinDTOs.
   procedure Curve_Get_Coin_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/CoinDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Coin_DTOs__historical;

   --  Coins (historical)
   --  Gets coins.
   procedure Curve_Get_Coins__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/coins/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Coins__historical;

   --  ContractDTOs (historical) ðŸ”¥
   --  Gets ContractDTOs.
   procedure Curve_Get_Contract_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/ContractDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contract_DTOs__historical;

   --  ContractVersionDTOs (historical) ðŸ”¥
   --  Gets ContractVersionDTOs.
   procedure Curve_Get_Contract_Version_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractVersionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/ContractVersionDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contract_Version_DTOs__historical;

   --  ContractsVersions (historical)
   --  Gets contracts versions.
   procedure Curve_Get_Contracts_Versions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractVersionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/contractsVersions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contracts_Versions__historical;

   --  Contracts (historical)
   --  Gets contracts.
   procedure Curve_Get_Contracts__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/contracts/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contracts__historical;

   --  DailyVolumeDTOs (historical) ðŸ”¥
   --  Gets DailyVolumeDTOs.
   procedure Curve_Get_Daily_Volume_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveDailyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/DailyVolumeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Daily_Volume_DTOs__historical;

   --  DailyVolumes (historical)
   --  Gets daily volumes.
   procedure Curve_Get_Daily_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveDailyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/dailyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Daily_Volumes__historical;

   --  ExchangeDTOs (historical) ðŸ”¥
   --  Gets ExchangeDTOs.
   procedure Curve_Get_Exchange_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveExchangeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/ExchangeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Exchange_DTOs__historical;

   --  Exchanges (historical) ðŸ”¥
   --  Gets exchanges.
   procedure Curve_Get_Exchanges__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveExchangeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/exchanges/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Exchanges__historical;

   --  FeeChangeLogDTOs (historical) ðŸ”¥
   --  Gets FeeChangeLogDTOs.
   procedure Curve_Get_Fee_Change_Log_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/FeeChangeLogDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Fee_Change_Log_DTOs__historical;

   --  FeeChangeLogs (historical)
   --  Gets fee change logs.
   procedure Curve_Get_Fee_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/feeChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Fee_Change_Logs__historical;

   --  GaugeDTOs (historical) ðŸ”¥
   --  Gets GaugeDTOs.
   procedure Curve_Get_Gauge_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_DTOs__historical;

   --  GaugeDepositDTOs (historical) ðŸ”¥
   --  Gets GaugeDepositDTOs.
   procedure Curve_Get_Gauge_Deposit_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeDepositDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Deposit_DTOs__historical;

   --  GaugeLiquidityDTOs (historical) ðŸ”¥
   --  Gets GaugeLiquidityDTOs.
   procedure Curve_Get_Gauge_Liquidity_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeLiquidityDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeLiquidityDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Liquidity_DTOs__historical;

   --  GaugeTotalWeightDTOs (historical) ðŸ”¥
   --  Gets GaugeTotalWeightDTOs.
   procedure Curve_Get_Gauge_Total_Weight_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeTotalWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeTotalWeightDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Total_Weight_DTOs__historical;

   --  GaugeTypeDTOs (historical) ðŸ”¥
   --  Gets GaugeTypeDTOs.
   procedure Curve_Get_Gauge_Type_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeTypeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeTypeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Type_DTOs__historical;

   --  GaugeTypeWeightDTOs (historical) ðŸ”¥
   --  Gets GaugeTypeWeightDTOs.
   procedure Curve_Get_Gauge_Type_Weight_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeTypeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeTypeWeightDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Type_Weight_DTOs__historical;

   --  GaugeWeightDTOs (historical) ðŸ”¥
   --  Gets GaugeWeightDTOs.
   procedure Curve_Get_Gauge_Weight_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeWeightDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Weight_DTOs__historical;

   --  GaugeWeightVoteDTOs (historical) ðŸ”¥
   --  Gets GaugeWeightVoteDTOs.
   procedure Curve_Get_Gauge_Weight_Vote_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeWeightVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeWeightVoteDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Weight_Vote_DTOs__historical;

   --  GaugeWithdrawDTOs (historical) ðŸ”¥
   --  Gets GaugeWithdrawDTOs.
   procedure Curve_Get_Gauge_Withdraw_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/GaugeWithdrawDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauge_Withdraw_DTOs__historical;

   --  GaugesDeposits (historical)
   --  Gets gauges deposits.
   procedure Curve_Get_Gauges_Deposits__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesDeposits/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Deposits__historical;

   --  GaugesLiquidity (historical)
   --  Gets gauges liquidity.
   procedure Curve_Get_Gauges_Liquidity__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeLiquidityDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesLiquidity/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Liquidity__historical;

   --  GaugesTotalWeights (historical)
   --  Gets gauges total weights.
   procedure Curve_Get_Gauges_Total_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTotalWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTotalWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Total_Weights__historical;

   --  GaugesTypesWeights (historical)
   --  Gets gauges types weights.
   procedure Curve_Get_Gauges_Types_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTypeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTypesWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Types_Weights__historical;

   --  GaugesTypes (historical)
   --  Gets gauges types.
   procedure Curve_Get_Gauges_Types__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTypeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTypes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Types__historical;

   --  GaugesWeightsVotes (historical)
   --  Gets gauges weights votes.
   procedure Curve_Get_Gauges_Weights_Votes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWeightVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWeightsVotes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Weights_Votes__historical;

   --  GaugesWeights (historical)
   --  Gets gauges weights.
   procedure Curve_Get_Gauges_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Weights__historical;

   --  GaugesWithdraw (historical)
   --  Gets gauges withdraws.
   procedure Curve_Get_Gauges_Withdraw__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWithdraws/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Withdraw__historical;

   --  Gauges (historical)
   --  Gets gauges.
   procedure Curve_Get_Gauges__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/gauges/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges__historical;

   --  HourlyVolumeDTOs (historical) ðŸ”¥
   --  Gets HourlyVolumeDTOs.
   procedure Curve_Get_Hourly_Volume_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveHourlyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/HourlyVolumeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Hourly_Volume_DTOs__historical;

   --  HourlyVolumes (historical)
   --  Gets hourly volumes.
   procedure Curve_Get_Hourly_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveHourlyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/hourlyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Hourly_Volumes__historical;

   --  LpTokenDTOs (historical) ðŸ”¥
   --  Gets LpTokenDTOs.
   procedure Curve_Get_Lp_Token_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveLpTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/LpTokenDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Lp_Token_DTOs__historical;

   --  LpTokens (historical)
   --  Gets lp tokens.
   procedure Curve_Get_Lp_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveLpTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/lpTokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Lp_Tokens__historical;

   --  PoolDTOs (historical) ðŸ”¥
   --  Gets PoolDTOs.
   procedure Curve_Get_Pool_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurvePoolDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/PoolDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Pool_DTOs__historical;

   --  Pools (historical) ðŸ”¥
   --  Gets pools.
   procedure Curve_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurvePoolDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Pools__historical;

   --  ProposalDTOs (historical) ðŸ”¥
   --  Gets ProposalDTOs.
   procedure Curve_Get_Proposal_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveProposalDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/ProposalDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposal_DTOs__historical;

   --  ProposalVoteDTOs (historical) ðŸ”¥
   --  Gets ProposalVoteDTOs.
   procedure Curve_Get_Proposal_Vote_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveProposalVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/ProposalVoteDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposal_Vote_DTOs__historical;

   --  ProposalsVotes (historical)
   --  Gets proposals votes.
   procedure Curve_Get_Proposals_Votes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveProposalVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/proposalsVotes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposals_Votes__historical;

   --  Proposals (historical)
   --  Gets proposals.
   procedure Curve_Get_Proposals__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveProposalDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/proposals/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposals__historical;

   --  RemoveLiquidityEventDTOs (historical) ðŸ”¥
   --  Gets RemoveLiquidityEventDTOs.
   procedure Curve_Get_Remove_Liquidity_Event_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/RemoveLiquidityEventDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_Event_DTOs__historical;

   --  RemoveLiquidityEvents (historical)
   --  Gets remove liquidity events.
   procedure Curve_Get_Remove_Liquidity_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/removeLiquidityEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_Events__historical;

   --  RemoveLiquidityOneEventDTOs (historical) ðŸ”¥
   --  Gets RemoveLiquidityOneEventDTOs.
   procedure Curve_Get_Remove_Liquidity_One_Event_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityOneEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/RemoveLiquidityOneEventDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_One_Event_DTOs__historical;

   --  RemoveLiquidityOneEvents (historical)
   --  Gets remove liquidity one events.
   procedure Curve_Get_Remove_Liquidity_One_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityOneEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/removeLiquidityOneEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_One_Events__historical;

   --  SystemStateDTOs (historical) ðŸ”¥
   --  Gets SystemStateDTOs.
   procedure Curve_Get_System_State_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveSystemStateDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/SystemStateDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_System_State_DTOs__historical;

   --  SystemStates (historical)
   --  Gets system states.
   procedure Curve_Get_System_States__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveSystemStateDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/systemStates/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_System_States__historical;

   --  TokenDTOs (historical) ðŸ”¥
   --  Gets TokenDTOs.
   procedure Curve_Get_Token_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/TokenDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Token_DTOs__historical;

   --  Tokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Curve_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/curve/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Tokens__historical;

   --  TransferOwnershipEventDTOs (historical) ðŸ”¥
   --  Gets TransferOwnershipEventDTOs.
   procedure Curve_Get_Transfer_Ownership_Event_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTransferOwnershipEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/TransferOwnershipEventDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Transfer_Ownership_Event_DTOs__historical;

   --  TransferOwnershipEvents (historical)
   --  Gets transfer ownership events.
   procedure Curve_Get_Transfer_Ownership_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTransferOwnershipEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/transferOwnershipEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Transfer_Ownership_Events__historical;

   --  UnderlyingCoinDTOs (historical) ðŸ”¥
   --  Gets UnderlyingCoinDTOs.
   procedure Curve_Get_Underlying_Coin_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveUnderlyingCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/UnderlyingCoinDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Underlying_Coin_DTOs__historical;

   --  UnderlyingCoins (historical)
   --  Gets underlying coins.
   procedure Curve_Get_Underlying_Coins__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveUnderlyingCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/underlyingCoins/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Underlying_Coins__historical;

   --  VotingAppDTOs (historical) ðŸ”¥
   --  Gets VotingAppDTOs.
   procedure Curve_Get_Voting_App_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveVotingAppDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/VotingAppDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Voting_App_DTOs__historical;

   --  VotingApps (historical)
   --  Gets voting apps.
   procedure Curve_Get_Voting_Apps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveVotingAppDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/votingApps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Voting_Apps__historical;

   --  WeeklyVolumeDTOs (historical) ðŸ”¥
   --  Gets WeeklyVolumeDTOs.
   procedure Curve_Get_Weekly_Volume_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveWeeklyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/WeeklyVolumeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Weekly_Volume_DTOs__historical;

   --  WeeklyVolumes (historical)
   --  Gets weekly volumes.
   procedure Curve_Get_Weekly_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveWeeklyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/weeklyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Weekly_Volumes__historical;

   --  BatchDTOs (historical) ðŸ”¥
   --  Gets BatchDTOs.
   procedure Dex_Get_Batch_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexBatchDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/BatchDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Batch_DTOs__historical;

   --  Batches (historical)
   --  Gets batches.
   procedure Dex_Get_Batches__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexBatchDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/batches/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Batches__historical;

   --  DepositDTOs (historical) ðŸ”¥
   --  Gets DepositDTOs.
   procedure Dex_Get_Deposit_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/DepositDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Deposit_DTOs__historical;

   --  Deposits (historical)
   --  Gets deposits.
   procedure Dex_Get_Deposits__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/deposits/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Deposits__historical;

   --  OrderDTOs (historical) ðŸ”¥
   --  Gets OrderDTOs.
   procedure Dex_Get_Order_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/OrderDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Order_DTOs__historical;

   --  Orders (historical)
   --  Gets orders.
   procedure Dex_Get_Orders__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/orders/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Orders__historical;

   --  PriceDTOs (historical) ðŸ”¥
   --  Gets PriceDTOs.
   procedure Dex_Get_Price_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexPriceDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/PriceDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Price_DTOs__historical;

   --  Prices (historical)
   --  Gets prices.
   procedure Dex_Get_Prices__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexPriceDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/prices/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Prices__historical;

   --  SolutionDTOs (historical) ðŸ”¥
   --  Gets SolutionDTOs.
   procedure Dex_Get_Solution_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexSolutionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/SolutionDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Solution_DTOs__historical;

   --  Solutions (historical)
   --  Gets solutions.
   procedure Dex_Get_Solutions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexSolutionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/solutions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Solutions__historical;

   --  StatsDTOs (historical) ðŸ”¥
   --  Gets StatsDTOs.
   procedure Dex_Get_Stats_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexStatsDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/StatsDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Stats_DTOs__historical;

   --  Stats (historical)
   --  Gets stats.
   procedure Dex_Get_Stats__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexStatsDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/stats/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Stats__historical;

   --  TokenDTOs (historical) ðŸ”¥
   --  Gets TokenDTOs.
   procedure Dex_Get_Token_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/TokenDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Token_DTOs__historical;

   --  Tokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Dex_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Tokens__historical;

   --  TradeDTOs (historical) ðŸ”¥
   --  Gets TradeDTOs.
   procedure Dex_Get_Trade_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/TradeDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Trade_DTOs__historical;

   --  Trades (historical) ðŸ”¥
   --  Gets trades.
   procedure Dex_Get_Trades__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/trades/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Trades__historical;

   --  UserDTOs (historical) ðŸ”¥
   --  Gets UserDTOs.
   procedure Dex_Get_User_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/UserDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_User_DTOs__historical;

   --  Users (historical)
   --  Gets users.
   procedure Dex_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Users__historical;

   --  WithdrawDTOs (historical) ðŸ”¥
   --  Gets WithdrawDTOs.
   procedure Dex_Get_Withdraw_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/WithdrawDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraw_DTOs__historical;

   --  WithdrawRequestDTOs (historical) ðŸ”¥
   --  Gets WithdrawRequestDTOs.
   procedure Dex_Get_Withdraw_Request_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawRequestDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/dex/WithdrawRequestDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraw_Request_DTOs__historical;

   --  WithdrawsRequests (historical)
   --  Gets withdraws requests.
   procedure Dex_Get_Withdraws_Requests__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawRequestDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/withdrawsRequests/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraws_Requests__historical;

   --  Withdraws (historical)
   --  Gets withdraws.
   procedure Dex_Get_Withdraws__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/withdraws/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraws__historical;

   --  Exchanges (current) ðŸ”¥
   --  Gets exchanges.
   procedure Curve_Get_Exchanges__current
      (Client : in out Client_Type;
       Result : out .Models.CurveExchangeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/exchanges/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Exchanges__current;

   --  Trades (current) ðŸ”¥
   --  Gets trades.
   procedure Dex_Get_Trades__current
      (Client : in out Client_Type;
       Result : out .Models.DexTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/trades/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Trades__current;

   --  BundleDTOs (historical) ðŸ”¥
   --  Gets BundleDTOs.
   procedure Sushiswap_Get_Bundle_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapBundleDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/BundleDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Bundle_DTOs__historical;

   --  Bundles (historical)
   --  Gets bundles.
   procedure Sushiswap_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapBundleDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Bundles__historical;

   --  BurnDTOs (historical) ðŸ”¥
   --  Gets BurnDTOs.
   procedure Sushiswap_Get_Burn_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapBurnDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/BurnDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Burn_DTOs__historical;

   --  Burns (historical)
   --  Gets burns.
   procedure Sushiswap_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapBurnDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Burns__historical;

   --  DayDataDTOs (historical) ðŸ”¥
   --  Gets DayDataDTOs.
   procedure Sushiswap_Get_Day_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/DayDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Day_Data_DTOs__historical;

   --  DayData (historical)
   --  Gets day data.
   procedure Sushiswap_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Day_Data__historical;

   --  FactoryDTOs (historical) ðŸ”¥
   --  Gets FactoryDTOs.
   procedure Sushiswap_Get_Factory_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapFactoryDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/FactoryDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Factory_DTOs__historical;

   --  Factory (historical)
   --  Gets factory.
   procedure Sushiswap_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapFactoryDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Factory__historical;

   --  HourDataDTOs (historical) ðŸ”¥
   --  Gets HourDataDTOs.
   procedure Sushiswap_Get_Hour_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/HourDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Hour_Data_DTOs__historical;

   --  HourData (historical)
   --  Gets hour data.
   procedure Sushiswap_Get_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/hourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Hour_Data__historical;

   --  LiquidityPositionDTOs (historical) ðŸ”¥
   --  Gets LiquidityPositionDTOs.
   procedure Sushiswap_Get_Liquidity_Position_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/LiquidityPositionDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position_DTOs__historical;

   --  LiquidityPositionSnapshotDTOs (historical) ðŸ”¥
   --  Gets LiquidityPositionSnapshotDTOs.
   procedure Sushiswap_Get_Liquidity_Position_Snapshot_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionSnapshotDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/LiquidityPositionSnapshotDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position_Snapshot_DTOs__historical;

   --  LiquidityPositionSnapshot (historical)
   --  Gets liquidity position snapshot.
   procedure Sushiswap_Get_Liquidity_Position_Snapshot__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionSnapshotDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/liquidityPositionSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position_Snapshot__historical;

   --  LiquidityPosition (historical)
   --  Gets liquidity position.
   procedure Sushiswap_Get_Liquidity_Position__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/liquidityPosition/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position__historical;

   --  MintDTOs (historical) ðŸ”¥
   --  Gets MintDTOs.
   procedure Sushiswap_Get_Mint_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapMintDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/MintDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Mint_DTOs__historical;

   --  Mints (historical)
   --  Gets mints.
   procedure Sushiswap_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapMintDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Mints__historical;

   --  PairDTOs (historical) ðŸ”¥
   --  Gets PairDTOs.
   procedure Sushiswap_Get_Pair_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/PairDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pair_DTOs__historical;

   --  PairDayDataDTOs (historical) ðŸ”¥
   --  Gets PairDayDataDTOs.
   procedure Sushiswap_Get_Pair_Day_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/PairDayDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pair_Day_Data_DTOs__historical;

   --  PairHourDataDTOs (historical) ðŸ”¥
   --  Gets PairHourDataDTOs.
   procedure Sushiswap_Get_Pair_Hour_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/PairHourDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pair_Hour_Data_DTOs__historical;

   --  PoolsDayData (historical)
   --  Gets pools day data.
   procedure Sushiswap_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools_Day_Data__historical;

   --  PoolsHourData (historical)
   --  Gets pools tracked each our.
   procedure Sushiswap_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools_Hour_Data__historical;

   --  Pools (current) ðŸ”¥
   --  Gets pools.
   procedure Sushiswap_Get_Pools__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapPairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools__current;

   --  Pools (historical) ðŸ”¥
   --  Gets list of pools for given filters.
   procedure Sushiswap_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools__historical;

   --  SwapDTOs (historical) ðŸ”¥
   --  Gets SwapDTOs.
   procedure Sushiswap_Get_Swap_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapSwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/SwapDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Swap_DTOs__historical;

   --  Swaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Sushiswap_Get_Swaps__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapSwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Swaps__current;

   --  Swaps (historical) ðŸ”¥
   --  Gets list of swaps for given filters.
   procedure Sushiswap_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapSwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Swaps__historical;

   --  TokenDTOs (historical) ðŸ”¥
   --  Gets TokenDTOs.
   procedure Sushiswap_Get_Token_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/TokenDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Token_DTOs__historical;

   --  TokenDayDataDTOs (historical) ðŸ”¥
   --  Gets TokenDayDataDTOs.
   procedure Sushiswap_Get_Token_Day_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/TokenDayDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Token_Day_Data_DTOs__historical;

   --  TokensDayData (historical)
   --  Gets tokens day data.
   procedure Sushiswap_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/sushiswap/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens_Day_Data__historical;

   --  Tokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Sushiswap_Get_Tokens__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens__current;

   --  Tokens (historical) ðŸ”¥
   --  Gets list of tokens for given filters.
   procedure Sushiswap_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/sushiswap/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens__historical;

   --  TransactionDTOs (historical) ðŸ”¥
   --  Gets TransactionDTOs.
   procedure Sushiswap_Get_Transaction_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTransactionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/TransactionDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Transaction_DTOs__historical;

   --  Transactions (historical)
   --  Gets transactions.
   procedure Sushiswap_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapTransactionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Transactions__historical;

   --  UserDTOs (historical) ðŸ”¥
   --  Gets UserDTOs.
   procedure Sushiswap_Get_User_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/UserDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_User_DTOs__historical;

   --  Users (historical)
   --  Gets users.
   procedure Sushiswap_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Users__historical;

   --  BundleV2DTOs (historical) ðŸ”¥
   --  Gets BundleV2DTOs.
   procedure Uniswap_V2_Get_Bundle_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2BundleV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/BundleV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Bundle_V2DTOs__historical;

   --  Bundles (historical)
   --  Gets bundles.
   procedure Uniswap_V2_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2BundleV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Bundles__historical;

   --  BurnV2DTOs (historical) ðŸ”¥
   --  Gets BurnV2DTOs.
   procedure Uniswap_V2_Get_Burn_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2BurnV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/BurnV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Burn_V2DTOs__historical;

   --  Burns (historical)
   --  Gets burns.
   procedure Uniswap_V2_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2BurnV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Burns__historical;

   --  DayData (historical)
   --  Gets uniswapv2 day data.
   procedure Uniswap_V2_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UniswapDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Day_Data__historical;

   --  Factory (historical)
   --  Gets factory.
   procedure Uniswap_V2_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UniswapFactoryV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Factory__historical;

   --  LiquidityPositionSnapshotV2DTOs (historical) ðŸ”¥
   --  Gets LiquidityPositionSnapshotV2DTOs.
   procedure Uniswap_V2_Get_Liquidity_Position_Snapshot_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionSnapshotV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/LiquidityPositionSnapshotV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Position_Snapshot_V2DTOs__historical;

   --  LiquidityPositionV2DTOs (historical) ðŸ”¥
   --  Gets LiquidityPositionV2DTOs.
   procedure Uniswap_V2_Get_Liquidity_Position_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/LiquidityPositionV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Position_V2DTOs__historical;

   --  LiquidityPositionsSnapshots (historical)
   --  Gets liquidity positions snapshots.
   procedure Uniswap_V2_Get_Liquidity_Positions_Snapshots__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionSnapshotV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/liquidityPositionsSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Positions_Snapshots__historical;

   --  LiquidityPositions (historical)
   --  Gets liquidity positions.
   procedure Uniswap_V2_Get_Liquidity_Positions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/liquidityPositions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Positions__historical;

   --  MintV2DTOs (historical) ðŸ”¥
   --  Gets MintV2DTOs.
   procedure Uniswap_V2_Get_Mint_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2MintV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/MintV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Mint_V2DTOs__historical;

   --  Mints (historical)
   --  Gets mints.
   procedure Uniswap_V2_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2MintV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Mints__historical;

   --  PairDayDataV2DTOs (historical) ðŸ”¥
   --  Gets PairDayDataV2DTOs.
   procedure Uniswap_V2_Get_Pair_Day_Data_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/PairDayDataV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pair_Day_Data_V2DTOs__historical;

   --  PairHourDataV2DTOs (historical) ðŸ”¥
   --  Gets PairHourDataV2DTOs.
   procedure Uniswap_V2_Get_Pair_Hour_Data_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairHourDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/PairHourDataV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pair_Hour_Data_V2DTOs__historical;

   --  PairV2DTOs (historical) ðŸ”¥
   --  Gets PairV2DTOs.
   procedure Uniswap_V2_Get_Pair_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/PairV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pair_V2DTOs__historical;

   --  PoolsDayData (historical)
   --  Gets pools day data.
   procedure Uniswap_V2_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools_Day_Data__historical;

   --  PoolsHourData (historical)
   --  Gets pools tracked each our.
   procedure Uniswap_V2_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairHourDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools_Hour_Data__historical;

   --  Pools (current) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V2_Get_Pools__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools__current;

   --  Pools (historical) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V2_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools__historical;

   --  SwapV2DTOs (historical) ðŸ”¥
   --  Gets SwapV2DTOs.
   procedure Uniswap_V2_Get_Swap_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/SwapV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Swap_V2DTOs__historical;

   --  Swaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V2_Get_Swaps__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV2SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv2/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Swaps__current;

   --  Swaps (historical) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V2_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Swaps__historical;

   --  TokenDayDataV2DTOs (historical) ðŸ”¥
   --  Gets TokenDayDataV2DTOs.
   procedure Uniswap_V2_Get_Token_Day_Data_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/TokenDayDataV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Token_Day_Data_V2DTOs__historical;

   --  TokenV2DTOs (historical) ðŸ”¥
   --  Gets TokenV2DTOs.
   procedure Uniswap_V2_Get_Token_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/TokenV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Token_V2DTOs__historical;

   --  TokensDayData (historical)
   --  Gets tokens day data.
   procedure Uniswap_V2_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv2/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens_Day_Data__historical;

   --  Tokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V2_Get_Tokens__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV2TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv2/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens__current;

   --  Tokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V2_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv2/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens__historical;

   --  TransactionV2DTOs (historical) ðŸ”¥
   --  Gets TransactionV2DTOs.
   procedure Uniswap_V2_Get_Transaction_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TransactionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/TransactionV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Transaction_V2DTOs__historical;

   --  Transactions (historical)
   --  Gets transactions.
   procedure Uniswap_V2_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2TransactionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Transactions__historical;

   --  UniswapDayDataV2DTOs (historical) ðŸ”¥
   --  Gets UniswapDayDataV2DTOs.
   procedure Uniswap_V2_Get_Uniswap_Day_Data_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2UniswapDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/UniswapDayDataV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Uniswap_Day_Data_V2DTOs__historical;

   --  UniswapFactoryV2DTOs (historical) ðŸ”¥
   --  Gets UniswapFactoryV2DTOs.
   procedure Uniswap_V2_Get_Uniswap_Factory_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2UniswapFactoryV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/UniswapFactoryV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Uniswap_Factory_V2DTOs__historical;

   --  UserV2DTOs (historical) ðŸ”¥
   --  Gets UserV2DTOs.
   procedure Uniswap_V2_Get_User_V2DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2UserV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/UserV2DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_User_V2DTOs__historical;

   --  Users (historical)
   --  Gets users.
   procedure Uniswap_V2_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UserV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Users__historical;

   --  BundleV3DTOs (historical) ðŸ”¥
   --  Gets BundleV3DTOs.
   procedure Uniswap_V3_Get_Bundle_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/BundleV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Bundle_V3DTOs__historical;

   --  Bundles (current)
   --  Gets bundles.
   procedure Uniswap_V3_Get_Bundles__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/bundles/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Bundles__current;

   --  Bundles (historical)
   --  Gets bundles.
   procedure Uniswap_V3_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Bundles__historical;

   --  BurnV3DTOs (historical) ðŸ”¥
   --  Gets BurnV3DTOs.
   procedure Uniswap_V3_Get_Burn_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/BurnV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Burn_V3DTOs__historical;

   --  Burns (current)
   --  Gets burns.
   procedure Uniswap_V3_Get_Burns__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/burns/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Burns__current;

   --  Burns (historical)
   --  Gets burns.
   procedure Uniswap_V3_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Burns__historical;

   --  DayData (current)
   --  Gets uniswapv3 day data.
   procedure Uniswap_V3_Get_Day_Data__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/dayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Day_Data__current;

   --  DayData (historical)
   --  Gets uniswapv3 day data.
   procedure Uniswap_V3_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Day_Data__historical;

   --  FactoryV3DTOs (historical) ðŸ”¥
   --  Gets FactoryV3DTOs.
   procedure Uniswap_V3_Get_Factory_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/FactoryV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Factory_V3DTOs__historical;

   --  Factory (current)
   --  Gets factory.
   procedure Uniswap_V3_Get_Factory__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/factory/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Factory__current;

   --  Factory (historical)
   --  Gets factory.
   procedure Uniswap_V3_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Factory__historical;

   --  MintV3DTOs (historical) ðŸ”¥
   --  Gets MintV3DTOs.
   procedure Uniswap_V3_Get_Mint_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/MintV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Mint_V3DTOs__historical;

   --  Mints (current)
   --  Gets mints.
   procedure Uniswap_V3_Get_Mints__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/mints/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Mints__current;

   --  Mints (historical)
   --  Gets mints.
   procedure Uniswap_V3_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Mints__historical;

   --  PoolDayDataV3DTOs (historical) ðŸ”¥
   --  Gets PoolDayDataV3DTOs.
   procedure Uniswap_V3_Get_Pool_Day_Data_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/PoolDayDataV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pool_Day_Data_V3DTOs__historical;

   --  PoolHourDataV3DTOs (historical) ðŸ”¥
   --  Gets PoolHourDataV3DTOs.
   procedure Uniswap_V3_Get_Pool_Hour_Data_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/PoolHourDataV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pool_Hour_Data_V3DTOs__historical;

   --  PoolV3DTOs (historical) ðŸ”¥
   --  Gets PoolV3DTOs.
   procedure Uniswap_V3_Get_Pool_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/PoolV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pool_V3DTOs__historical;

   --  PoolsDayData (current)
   --  Gets pools day data.
   procedure Uniswap_V3_Get_Pools_Day_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Day_Data__current;

   --  PoolsDayData (historical)
   --  Gets pools day data.
   procedure Uniswap_V3_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Day_Data__historical;

   --  PoolsHourData (current)
   --  Gets pools hour data.
   procedure Uniswap_V3_Get_Pools_Hour_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsHourData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Hour_Data__current;

   --  PoolsHourData (historical)
   --  Gets pools hour data.
   procedure Uniswap_V3_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Hour_Data__historical;

   --  Pools (current) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V3_Get_Pools__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools__current;

   --  Pools (historical) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V3_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools__historical;

   --  PositionSnapshotV3DTOs (historical) ðŸ”¥
   --  Gets PositionSnapshotV3DTOs.
   procedure Uniswap_V3_Get_Position_Snapshot_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/PositionSnapshotV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Position_Snapshot_V3DTOs__historical;

   --  PositionV3DTOs (historical) ðŸ”¥
   --  Gets PositionV3DTOs.
   procedure Uniswap_V3_Get_Position_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/PositionV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Position_V3DTOs__historical;

   --  PositionsSnaphots (historical)
   --  Gets positions snapshots.
   procedure Uniswap_V3_Get_Positions_Snaphots__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positionsSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions_Snaphots__historical;

   --  PositionsSnapshots (current)
   --  Gets positions snapshots.
   procedure Uniswap_V3_Get_Positions_Snapshots__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positionSnapshots/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions_Snapshots__current;

   --  Positions (current)
   --  Gets positions.
   procedure Uniswap_V3_Get_Positions__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positions/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions__current;

   --  Positions (historical)
   --  Gets positions.
   procedure Uniswap_V3_Get_Positions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions__historical;

   --  SwapV3DTOs (historical) ðŸ”¥
   --  Gets SwapV3DTOs.
   procedure Uniswap_V3_Get_Swap_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/SwapV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Swap_V3DTOs__historical;

   --  Swaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V3_Get_Swaps__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Swaps__current;

   --  Swaps (historical) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V3_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Swaps__historical;

   --  TickDayDataV3DTOs (historical) ðŸ”¥
   --  Gets TickDayDataV3DTOs.
   procedure Uniswap_V3_Get_Tick_Day_Data_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TickDayDataV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tick_Day_Data_V3DTOs__historical;

   --  TickV3DTOs (historical) ðŸ”¥
   --  Gets TickV3DTOs.
   procedure Uniswap_V3_Get_Tick_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TickV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tick_V3DTOs__historical;

   --  TicksDayData (current)
   --  Gets ticks day data.
   procedure Uniswap_V3_Get_Ticks_Day_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticksDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks_Day_Data__current;

   --  TicksDayData (historical)
   --  Gets ticks day data.
   procedure Uniswap_V3_Get_Ticks_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticksDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks_Day_Data__historical;

   --  Ticks (current)
   --  Gets ticks.
   procedure Uniswap_V3_Get_Ticks__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticks/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks__current;

   --  Ticks (historical)
   --  Gets ticks.
   procedure Uniswap_V3_Get_Ticks__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticks/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks__historical;

   --  TokenHourDataV3DTOs (historical) ðŸ”¥
   --  Gets TokenHourDataV3DTOs.
   procedure Uniswap_V3_Get_Token_Hour_Data_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TokenHourDataV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Token_Hour_Data_V3DTOs__historical;

   --  TokenV3DTOs (historical) ðŸ”¥
   --  Gets TokenV3DTOs.
   procedure Uniswap_V3_Get_Token_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TokenV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Token_V3DTOs__historical;

   --  TokenV3DayDataDTOs (historical) ðŸ”¥
   --  Gets TokenV3DayDataDTOs.
   procedure Uniswap_V3_Get_Token_V3Day_Data_DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TokenV3DayDataDTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Token_V3Day_Data_DTOs__historical;

   --  TokensDayData (current)
   --  Gets tokens day data.
   procedure Uniswap_V3_Get_Tokens_Day_Data__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Day_Data__current;

   --  TokensDayData (historical)
   --  Gets tokens day data.
   procedure Uniswap_V3_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Day_Data__historical;

   --  TokensHourData (current)
   --  Gets tokens hour data.
   procedure Uniswap_V3_Get_Tokens_Hour_Data__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensHourData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Hour_Data__current;

   --  TokensHourData (historical)
   --  Gets tokens hour data.
   procedure Uniswap_V3_Get_Tokens_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Hour_Data__historical;

   --  Tokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V3_Get_Tokens__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens__current;

   --  Tokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V3_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens__historical;

   --  TransactionV3DTOs (historical) ðŸ”¥
   --  Gets TransactionV3DTOs.
   procedure Uniswap_V3_Get_Transaction_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TransactionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/TransactionV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Transaction_V3DTOs__historical;

   --  Transactions (historical)
   --  Gets transactions.
   procedure Uniswap_V3_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3TransactionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Transactions__historical;

   --  UniswapDayDataV3DTOs (historical) ðŸ”¥
   --  Gets UniswapDayDataV3DTOs.
   procedure Uniswap_V3_Get_Uniswap_Day_Data_V3DTOs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/UniswapDayDataV3DTOs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Uniswap_Day_Data_V3DTOs__historical;
end .Clients;
