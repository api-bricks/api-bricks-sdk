--  OnChain API
--   This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
--
--  The version of the OpenAPI document: v1
--  Contact: support@coinapi.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.2.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Bundles_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/bundles/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Bundles_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Burns_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/burns/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Burns_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Factory_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/factory/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Factory_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Mints_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/mints/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Mints_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Poi_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/poi/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Poi_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pool_Day_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/poolDayData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pool_Day_Data_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pool_Hour_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/poolHourData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pool_Hour_Data_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Curve_Pools_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/curve/pools/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Curve_Pools_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Sushiswap_Pools_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/pools/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Sushiswap_Pools_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Pools_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/pools/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_2Pools_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pools_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/pools/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pools_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Position_Snapshot_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/positionSnapshot/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Position_Snapshot_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Positions_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/positions/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Positions_Historical_Get;

   --  GetPools
   --  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.
   procedure Chains_Chain_Id_Dapps_Sushiswap_Pools_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.PairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/pools/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Sushiswap_Pools_Current_Get;

   --  GetSwaps
   procedure Chains_Chain_Id_Dapps_Sushiswap_Swaps_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.SwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/swaps/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Sushiswap_Swaps_Current_Get;

   --  GetTokens
   procedure Chains_Chain_Id_Dapps_Sushiswap_Tokens_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.TokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/tokens/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Sushiswap_Tokens_Current_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Curve_Swaps_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/curve/swaps/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Curve_Swaps_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Sushiswap_Swaps_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/swaps/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Sushiswap_Swaps_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Swaps_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/swaps/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_2Swaps_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Swaps_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/swaps/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Swaps_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Tick_Day_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tickDayData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Tick_Day_Data_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/ticks/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Token_Day_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokenDayData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Token_Day_Data_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Token_Hour_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokenHourData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Token_Hour_Data_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Cow_Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/cow/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Cow_Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Curve_Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/curve/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Curve_Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Dex_Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/dex/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Dex_Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Sushiswap_Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/sushiswap/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Sushiswap_Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_2Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokens/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Cow_Trades_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/cow/trades/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Cow_Trades_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Dex_Trades_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/dex/trades/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Dex_Trades_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Transactions_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/transactions/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Transactions_Historical_Get;

   --  
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Uniswap_Day_Data_Historical_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date) is
      URI   : Swagger.Clients.URI_Type;
   begin


      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/uniswapDayData/historical");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI);
   end Chains_Chain_Id_Dapps_Uniswapv_3Uniswap_Day_Data_Historical_Get;

   --  GetPools
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Pools_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/pools/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_2Pools_Current_Get;

   --  GetSwaps
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Swaps_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/swaps/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_2Swaps_Current_Get;

   --  GetTokens
   procedure Chains_Chain_Id_Dapps_Uniswapv_2Tokens_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv2/tokens/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_2Tokens_Current_Get;

   --  GetBundles
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Bundle_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/bundle/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Bundle_Current_Get;

   --  GetBurns
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Burns_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/burns/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Burns_Current_Get;

   --  GetFactory
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Factory_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/factory/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Factory_Current_Get;

   --  GetMints
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Mints_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/mints/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Mints_Current_Get;

   --  GetPools
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pools_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/pools/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pools_Current_Get;

   --  GetPoolsDayData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pools_Day_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/poolsDayData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pools_Day_Data_Current_Get;

   --  GetPoolsHourData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Pools_Hour_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/poolsHourData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Pools_Hour_Data_Current_Get;

   --  GetPositionSnapshot
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Position_Snapshots_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/positionSnapshots/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Position_Snapshots_Current_Get;

   --  GetPositions
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Positions_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/positions/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Positions_Current_Get;

   --  GetSwaps
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Swaps_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/swaps/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Swaps_Current_Get;

   --  GetTicks
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/ticks/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Current_Get;

   --  GetTicksDayData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Day_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/ticksDayData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Ticks_Day_Data_Current_Get;

   --  GetTokens
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokens/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Current_Get;

   --  GetTokensDayData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Day_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokensDayData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Day_Data_Current_Get;

   --  GetTokensHourData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Hour_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/tokensHourData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Tokens_Hour_Data_Current_Get;

   --  GetUniswapDayData
   procedure Chains_Chain_Id_Dapps_Uniswapv_3Uniswap_Day_Data_Current_Get
      (Client : in out Client_Type;
       Chain_Id : in Swagger.UString;
       Result : out .Models.UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/chains/{chain_id}/dapps/uniswapv3/uniswapDayData/current");
      URI.Set_Path_Param ("chain_id", Chain_Id);
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Chains_Chain_Id_Dapps_Uniswapv_3Uniswap_Day_Data_Current_Get;
end .Clients;
