--  OnChain API
--   This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
--
--  The version of the OpenAPI document: v1
--  Contact: support@coinapi.io
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.2.1.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  GetOrders (historical)
   --  Gets orders.
   procedure Cow_Get_Orders__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/orders/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Orders__historical;

   --  GetSettlements (historical)
   --  Gets settlements.
   procedure Cow_Get_Settlements__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowSettlementDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/settlements/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Settlements__historical;

   --  GetTokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Cow_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.CowTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/cow/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Tokens__historical;

   --  GetTrades (historical) ðŸ”¥
   --  Gets trades.
   procedure Cow_Get_Trades__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/trades/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Trades__historical;

   --  GetUsers (historical)
   --  Gets users.
   procedure Cow_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CowUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/cow/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Cow_Get_Users__historical;

   --  GetAccounts (historical)
   --  Gets accounts.
   procedure Curve_Get_Accounts__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveAccountDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/accounts/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Accounts__historical;

   --  GetAddLiquidityEvents (historical)
   --  Gets add liquidity events.
   procedure Curve_Get_Add_Liquidity_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAddLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/addLiquidityEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Add_Liquidity_Events__historical;

   --  GetAdminFeeChangeLogs (historical)
   --  Gets admin fee change logs.
   procedure Curve_Get_Admin_Fee_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAdminFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/adminFeeChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Admin_Fee_Change_Logs__historical;

   --  GetAmplificationCoeffChangeLogs (historical)
   --  Gets amplification coeff change logs.
   procedure Curve_Get_Amplification_Coeff_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveAmplificationCoeffChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/amplificationCoeffChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Amplification_Coeff_Change_Logs__historical;

   --  GetCoins (historical)
   --  Gets coins.
   procedure Curve_Get_Coins__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/coins/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Coins__historical;

   --  GetContractsVersions (historical)
   --  Gets contracts versions.
   procedure Curve_Get_Contracts_Versions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractVersionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/contractsVersions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contracts_Versions__historical;

   --  GetContracts (historical)
   --  Gets contracts.
   procedure Curve_Get_Contracts__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveContractDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/contracts/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Contracts__historical;

   --  GetDailyVolumes (historical)
   --  Gets daily volumes.
   procedure Curve_Get_Daily_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveDailyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/dailyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Daily_Volumes__historical;

   --  GetExchanges (historical) ðŸ”¥
   --  Gets exchanges.
   procedure Curve_Get_Exchanges__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveExchangeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/exchanges/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Exchanges__historical;

   --  GetFeeChangeLogs (historical)
   --  Gets fee change logs.
   procedure Curve_Get_Fee_Change_Logs__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveFeeChangeLogDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/feeChangeLogs/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Fee_Change_Logs__historical;

   --  GetGaugesDeposits (historical)
   --  Gets gauges deposits.
   procedure Curve_Get_Gauges_Deposits__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesDeposits/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Deposits__historical;

   --  GetGaugesLiquidity (historical)
   --  Gets gauges liquidity.
   procedure Curve_Get_Gauges_Liquidity__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeLiquidityDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesLiquidity/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Liquidity__historical;

   --  GetGaugesTotalWeights (historical)
   --  Gets gauges total weights.
   procedure Curve_Get_Gauges_Total_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTotalWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTotalWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Total_Weights__historical;

   --  GetGaugesTypesWeights (historical)
   --  Gets gauges types weights.
   procedure Curve_Get_Gauges_Types_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTypeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTypesWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Types_Weights__historical;

   --  GetGaugesTypes (historical)
   --  Gets gauges types.
   procedure Curve_Get_Gauges_Types__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeTypeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesTypes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Types__historical;

   --  GetGaugesWeightsVotes (historical)
   --  Gets gauges weights votes.
   procedure Curve_Get_Gauges_Weights_Votes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWeightVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWeightsVotes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Weights_Votes__historical;

   --  GetGaugesWeights (historical)
   --  Gets gauges weights.
   procedure Curve_Get_Gauges_Weights__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWeightDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWeights/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Weights__historical;

   --  GetGaugesWithdraw (historical)
   --  Gets gauges withdraws.
   procedure Curve_Get_Gauges_Withdraw__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveGaugeWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/gaugesWithdraws/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges_Withdraw__historical;

   --  GetGauges (historical)
   --  Gets gauges.
   procedure Curve_Get_Gauges__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveGaugeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/gauges/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Gauges__historical;

   --  GetHourlyVolumes (historical)
   --  Gets hourly volumes.
   procedure Curve_Get_Hourly_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveHourlyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/hourlyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Hourly_Volumes__historical;

   --  GetLpTokens (historical)
   --  Gets lp tokens.
   procedure Curve_Get_Lp_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveLpTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/lpTokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Lp_Tokens__historical;

   --  GetPools (historical) ðŸ”¥
   --  Gets pools.
   procedure Curve_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurvePoolDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Pools__historical;

   --  GetProposalsVotes (historical)
   --  Gets proposals votes.
   procedure Curve_Get_Proposals_Votes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveProposalVoteDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/proposalsVotes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposals_Votes__historical;

   --  GetProposals (historical)
   --  Gets proposals.
   procedure Curve_Get_Proposals__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveProposalDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/proposals/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Proposals__historical;

   --  GetRemoveLiquidityEvents (historical)
   --  Gets remove liquidity events.
   procedure Curve_Get_Remove_Liquidity_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/removeLiquidityEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_Events__historical;

   --  GetRemoveLiquidityOneEvents (historical)
   --  Gets remove liquidity one events.
   procedure Curve_Get_Remove_Liquidity_One_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveRemoveLiquidityOneEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/removeLiquidityOneEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Remove_Liquidity_One_Events__historical;

   --  GetSystemStates (historical)
   --  Gets system states.
   procedure Curve_Get_System_States__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveSystemStateDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/systemStates/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_System_States__historical;

   --  GetTokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Curve_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/curve/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Tokens__historical;

   --  GetTransferOwnershipEvents (historical)
   --  Gets transfer ownership events.
   procedure Curve_Get_Transfer_Ownership_Events__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveTransferOwnershipEventDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/transferOwnershipEvents/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Transfer_Ownership_Events__historical;

   --  GetUnderlyingCoins (historical)
   --  Gets underlying coins.
   procedure Curve_Get_Underlying_Coins__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveUnderlyingCoinDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/underlyingCoins/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Underlying_Coins__historical;

   --  GetVotingApps (historical)
   --  Gets voting apps.
   procedure Curve_Get_Voting_Apps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.CurveVotingAppDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/curve/votingApps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Voting_Apps__historical;

   --  GetWeeklyVolumes (historical)
   --  Gets weekly volumes.
   procedure Curve_Get_Weekly_Volumes__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.CurveWeeklyVolumeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/curve/weeklyVolumes/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Weekly_Volumes__historical;

   --  GetBatches (historical)
   --  Gets batches.
   procedure Dex_Get_Batches__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexBatchDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/batches/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Batches__historical;

   --  GetDeposits (historical)
   --  Gets deposits.
   procedure Dex_Get_Deposits__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexDepositDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/deposits/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Deposits__historical;

   --  GetOrders (historical)
   --  Gets orders.
   procedure Dex_Get_Orders__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexOrderDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/orders/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Orders__historical;

   --  GetPrices (historical)
   --  Gets prices.
   procedure Dex_Get_Prices__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexPriceDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/prices/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Prices__historical;

   --  GetSolutions (historical)
   --  Gets solutions.
   procedure Dex_Get_Solutions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexSolutionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/solutions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Solutions__historical;

   --  GetStats (historical)
   --  Gets stats.
   procedure Dex_Get_Stats__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexStatsDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/stats/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Stats__historical;

   --  GetTokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Dex_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Tokens__historical;

   --  GetTrades (historical) ðŸ”¥
   --  Gets trades.
   procedure Dex_Get_Trades__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/trades/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Trades__historical;

   --  GetUsers (historical)
   --  Gets users.
   procedure Dex_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.DexUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/dex/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Users__historical;

   --  GetWithdrawsRequests (historical)
   --  Gets withdraws requests.
   procedure Dex_Get_Withdraws_Requests__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawRequestDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/withdrawsRequests/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraws_Requests__historical;

   --  GetWithdraws (historical)
   --  Gets withdraws.
   procedure Dex_Get_Withdraws__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.DexWithdrawDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/dex/withdraws/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Withdraws__historical;

   --  GetExchanges (current) ðŸ”¥
   --  Gets exchanges.
   procedure Curve_Get_Exchanges__current
      (Client : in out Client_Type;
       Result : out .Models.CurveExchangeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/exchanges/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Curve_Get_Exchanges__current;

   --  GetTrades (current) ðŸ”¥
   --  Gets trades.
   procedure Dex_Get_Trades__current
      (Client : in out Client_Type;
       Result : out .Models.DexTradeDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/trades/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Dex_Get_Trades__current;

   --  GetBundles (historical)
   --  Gets bundles.
   procedure Sushiswap_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapBundleDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Bundles__historical;

   --  GetBurns (historical)
   --  Gets burns.
   procedure Sushiswap_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapBurnDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Burns__historical;

   --  GetDayData (historical)
   --  Gets day data.
   procedure Sushiswap_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Day_Data__historical;

   --  GetFactory (historical)
   --  Gets factory.
   procedure Sushiswap_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapFactoryDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Factory__historical;

   --  GetHourData (historical)
   --  Gets hour data.
   procedure Sushiswap_Get_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/hourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Hour_Data__historical;

   --  GetLiquidityPositionSnapshot (historical)
   --  Gets liquidity position snapshot.
   procedure Sushiswap_Get_Liquidity_Position_Snapshot__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionSnapshotDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/liquidityPositionSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position_Snapshot__historical;

   --  GetLiquidityPosition (historical)
   --  Gets liquidity position.
   procedure Sushiswap_Get_Liquidity_Position__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapLiquidityPositionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/liquidityPosition/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Liquidity_Position__historical;

   --  GetMints (historical)
   --  Gets mints.
   procedure Sushiswap_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapMintDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Mints__historical;

   --  GetPoolsDayData (historical)
   --  Gets pools day data.
   procedure Sushiswap_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools_Day_Data__historical;

   --  GetPoolsHourData (historical)
   --  Gets pools tracked each our.
   procedure Sushiswap_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairHourDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools_Hour_Data__historical;

   --  GetPools (current) ðŸ”¥
   --  Gets pools.
   procedure Sushiswap_Get_Pools__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapPairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools__current;

   --  GetPools (historical) ðŸ”¥
   --  Gets list of pools for given filters.
   procedure Sushiswap_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapPairDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Pools__historical;

   --  GetSwaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Sushiswap_Get_Swaps__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapSwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Swaps__current;

   --  GetSwaps (historical) ðŸ”¥
   --  Gets list of swaps for given filters.
   procedure Sushiswap_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapSwapDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/sushiswap/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Swaps__historical;

   --  GetTokensDayData (historical)
   --  Gets tokens day data.
   procedure Sushiswap_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/sushiswap/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens_Day_Data__historical;

   --  GetTokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Sushiswap_Get_Tokens__current
      (Client : in out Client_Type;
       Result : out .Models.SushiswapTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/sushiswap/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens__current;

   --  GetTokens (historical) ðŸ”¥
   --  Gets list of tokens for given filters.
   procedure Sushiswap_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.SushiswapTokenDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/sushiswap/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Tokens__historical;

   --  GetTransactions (historical)
   --  Gets transactions.
   procedure Sushiswap_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapTransactionDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Transactions__historical;

   --  GetUsers (historical)
   --  Gets users.
   procedure Sushiswap_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.SushiswapUserDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/sushiswap/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Sushiswap_Get_Users__historical;

   --  GetBundles (historical)
   --  Gets bundles.
   procedure Uniswap_V2_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2BundleV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Bundles__historical;

   --  GetBurns (historical)
   --  Gets burns.
   procedure Uniswap_V2_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2BurnV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Burns__historical;

   --  GetDayData (historical)
   --  Gets uniswapv2 day data.
   procedure Uniswap_V2_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UniswapDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Day_Data__historical;

   --  GetFactory (historical)
   --  Gets factory.
   procedure Uniswap_V2_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UniswapFactoryV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Factory__historical;

   --  GetLiquidityPositionsSnapshots (historical)
   --  Gets liquidity positions snapshots.
   procedure Uniswap_V2_Get_Liquidity_Positions_Snapshots__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionSnapshotV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/liquidityPositionsSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Positions_Snapshots__historical;

   --  GetLiquidityPositions (historical)
   --  Gets liquidity positions.
   procedure Uniswap_V2_Get_Liquidity_Positions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2LiquidityPositionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/liquidityPositions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Liquidity_Positions__historical;

   --  GetMints (historical)
   --  Gets mints.
   procedure Uniswap_V2_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2MintV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Mints__historical;

   --  GetPoolsDayData (historical)
   --  Gets pools day data.
   procedure Uniswap_V2_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools_Day_Data__historical;

   --  GetPoolsHourData (historical)
   --  Gets pools tracked each our.
   procedure Uniswap_V2_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairHourDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools_Hour_Data__historical;

   --  GetPools (current) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V2_Get_Pools__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools__current;

   --  GetPools (historical) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V2_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2PairV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Pools__historical;

   --  GetSwaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V2_Get_Swaps__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV2SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv2/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Swaps__current;

   --  GetSwaps (historical) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V2_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2SwapV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv2/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Swaps__historical;

   --  GetTokensDayData (historical)
   --  Gets tokens day data.
   procedure Uniswap_V2_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenDayDataV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv2/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens_Day_Data__historical;

   --  GetTokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V2_Get_Tokens__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV2TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv2/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens__current;

   --  GetTokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V2_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV2TokenV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv2/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Tokens__historical;

   --  GetTransactions (historical)
   --  Gets transactions.
   procedure Uniswap_V2_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2TransactionV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Transactions__historical;

   --  GetUsers (historical)
   --  Gets users.
   procedure Uniswap_V2_Get_Users__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV2UserV2DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv2/users/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V2_Get_Users__historical;

   --  GetBundles (current)
   --  Gets bundles.
   procedure Uniswap_V3_Get_Bundles__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/bundles/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Bundles__current;

   --  GetBundles (historical)
   --  Gets bundles.
   procedure Uniswap_V3_Get_Bundles__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3BundleV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/bundles/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Bundles__historical;

   --  GetBurns (current)
   --  Gets burns.
   procedure Uniswap_V3_Get_Burns__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/burns/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Burns__current;

   --  GetBurns (historical)
   --  Gets burns.
   procedure Uniswap_V3_Get_Burns__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3BurnV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/burns/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Burns__historical;

   --  GetDayData (current)
   --  Gets uniswapv3 day data.
   procedure Uniswap_V3_Get_Day_Data__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/dayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Day_Data__current;

   --  GetDayData (historical)
   --  Gets uniswapv3 day data.
   procedure Uniswap_V3_Get_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3UniswapDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/dayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Day_Data__historical;

   --  GetFactory (current)
   --  Gets factory.
   procedure Uniswap_V3_Get_Factory__current
      (Client : in out Client_Type;
       Result : out .Models.UniswapV3FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Set_Path ("/dapps/uniswapv3/factory/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Factory__current;

   --  GetFactory (historical)
   --  Gets factory.
   procedure Uniswap_V3_Get_Factory__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3FactoryV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/factory/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Factory__historical;

   --  GetMints (current)
   --  Gets mints.
   procedure Uniswap_V3_Get_Mints__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/mints/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Mints__current;

   --  GetMints (historical)
   --  Gets mints.
   procedure Uniswap_V3_Get_Mints__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3MintV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/mints/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Mints__historical;

   --  GetPoolsDayData (current)
   --  Gets pools day data.
   procedure Uniswap_V3_Get_Pools_Day_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Day_Data__current;

   --  GetPoolsDayData (historical)
   --  Gets pools day data.
   procedure Uniswap_V3_Get_Pools_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Day_Data__historical;

   --  GetPoolsHourData (current)
   --  Gets pools hour data.
   procedure Uniswap_V3_Get_Pools_Hour_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsHourData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Hour_Data__current;

   --  GetPoolsHourData (historical)
   --  Gets pools hour data.
   procedure Uniswap_V3_Get_Pools_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/poolsHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools_Hour_Data__historical;

   --  GetPools (current) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V3_Get_Pools__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/pools/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools__current;

   --  GetPools (historical) ðŸ”¥
   --  Gets pools.
   procedure Uniswap_V3_Get_Pools__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PoolV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/pools/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Pools__historical;

   --  GetPositionsSnaphots (historical)
   --  Gets positions snapshots.
   procedure Uniswap_V3_Get_Positions_Snaphots__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positionsSnapshots/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions_Snaphots__historical;

   --  GetPositionsSnapshots (current)
   --  Gets positions snapshots.
   procedure Uniswap_V3_Get_Positions_Snapshots__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionSnapshotV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positionSnapshots/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions_Snapshots__current;

   --  GetPositions (current)
   --  Gets positions.
   procedure Uniswap_V3_Get_Positions__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positions/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions__current;

   --  GetPositions (historical)
   --  Gets positions.
   procedure Uniswap_V3_Get_Positions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3PositionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/positions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Positions__historical;

   --  GetSwaps (current) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V3_Get_Swaps__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/swaps/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Swaps__current;

   --  GetSwaps (historical) ðŸ”¥
   --  Gets swaps.
   procedure Uniswap_V3_Get_Swaps__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3SwapV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/swaps/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Swaps__historical;

   --  GetTicksDayData (current)
   --  Gets ticks day data.
   procedure Uniswap_V3_Get_Ticks_Day_Data__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticksDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks_Day_Data__current;

   --  GetTicksDayData (historical)
   --  Gets ticks day data.
   procedure Uniswap_V3_Get_Ticks_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickDayDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticksDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks_Day_Data__historical;

   --  GetTicks (current)
   --  Gets ticks.
   procedure Uniswap_V3_Get_Ticks__current
      (Client : in out Client_Type;
       Filter_Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_pool_id", Filter_Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticks/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks__current;

   --  GetTicks (historical)
   --  Gets ticks.
   procedure Uniswap_V3_Get_Ticks__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Pool_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TickV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("poolId", Pool_Id);
      URI.Set_Path ("/dapps/uniswapv3/ticks/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Ticks__historical;

   --  GetTokensDayData (current)
   --  Gets tokens day data.
   procedure Uniswap_V3_Get_Tokens_Day_Data__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensDayData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Day_Data__current;

   --  GetTokensDayData (historical)
   --  Gets tokens day data.
   procedure Uniswap_V3_Get_Tokens_Day_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DayDataDTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensDayData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Day_Data__historical;

   --  GetTokensHourData (current)
   --  Gets tokens hour data.
   procedure Uniswap_V3_Get_Tokens_Hour_Data__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensHourData/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Hour_Data__current;

   --  GetTokensHourData (historical)
   --  Gets tokens hour data.
   procedure Uniswap_V3_Get_Tokens_Hour_Data__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenHourDataV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokensHourData/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens_Hour_Data__historical;

   --  GetTokens (current) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V3_Get_Tokens__current
      (Client : in out Client_Type;
       Filter_Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("filter_token_id", Filter_Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokens/current");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens__current;

   --  GetTokens (historical) ðŸ”¥
   --  Gets tokens.
   procedure Uniswap_V3_Get_Tokens__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Token_Id : in Swagger.Nullable_UString;
       Result : out .Models.UniswapV3TokenV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("tokenId", Token_Id);
      URI.Set_Path ("/dapps/uniswapv3/tokens/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Tokens__historical;

   --  GetTransactions (historical)
   --  Gets transactions.
   procedure Uniswap_V3_Get_Transactions__historical
      (Client : in out Client_Type;
       Start_Block : in Swagger.Nullable_Long;
       End_Block : in Swagger.Nullable_Long;
       Start_Date : in Swagger.Nullable_Date;
       End_Date : in Swagger.Nullable_Date;
       Result : out .Models.UniswapV3TransactionV3DTO_Type_Vectors.Vector) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((Swagger.Clients.TEXT_PLAIN,
                          Swagger.Clients.APPLICATION_JSON,
                          Swagger.Clients.TEXT_JSON));

      URI.Add_Param ("startBlock", Start_Block);
      URI.Add_Param ("endBlock", End_Block);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("startDate", Start_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Add_Param ("endDate", End_Date);
      URI.Set_Path ("/dapps/uniswapv3/transactions/historical");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Uniswap_V3_Get_Transactions__historical;
end .Clients;
