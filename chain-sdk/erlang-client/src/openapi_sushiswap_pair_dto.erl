-module(openapi_sushiswap_pair_dto).

-export([encode/1]).

-export_type([openapi_sushiswap_pair_dto/0]).

-type openapi_sushiswap_pair_dto() ::
    #{ 'entry_time' => openapi_date_time:openapi_date_time(),
       'recv_time' => openapi_date_time:openapi_date_time(),
       'block_number' => integer(),
       'id' => binary(),
       'factory' => binary(),
       'name' => binary(),
       'token_0' => binary(),
       'token_1' => binary(),
       'reserve_0' => binary(),
       'reserve_1' => binary(),
       'total_supply' => binary(),
       'reserve_eth' => binary(),
       'reserve_usd' => binary(),
       'tracked_reserve_eth' => binary(),
       'token_0_price' => binary(),
       'token_1_price' => binary(),
       'volume_token_0' => binary(),
       'volume_token_1' => binary(),
       'volume_usd' => binary(),
       'untracked_volume_usd' => binary(),
       'tx_count' => binary(),
       'liquidity_provider_count' => binary(),
       'timestamp' => binary(),
       'block' => binary(),
       'vid' => integer(),
       'evaluated_ask' => float()
     }.

encode(#{ 'entry_time' := EntryTime,
          'recv_time' := RecvTime,
          'block_number' := BlockNumber,
          'id' := Id,
          'factory' := Factory,
          'name' := Name,
          'token_0' := Token0,
          'token_1' := Token1,
          'reserve_0' := Reserve0,
          'reserve_1' := Reserve1,
          'total_supply' := TotalSupply,
          'reserve_eth' := ReserveEth,
          'reserve_usd' := ReserveUsd,
          'tracked_reserve_eth' := TrackedReserveEth,
          'token_0_price' := Token0Price,
          'token_1_price' := Token1Price,
          'volume_token_0' := VolumeToken0,
          'volume_token_1' := VolumeToken1,
          'volume_usd' := VolumeUsd,
          'untracked_volume_usd' := UntrackedVolumeUsd,
          'tx_count' := TxCount,
          'liquidity_provider_count' := LiquidityProviderCount,
          'timestamp' := Timestamp,
          'block' := Block,
          'vid' := Vid,
          'evaluated_ask' := EvaluatedAsk
        }) ->
    #{ 'entry_time' => EntryTime,
       'recv_time' => RecvTime,
       'block_number' => BlockNumber,
       'id' => Id,
       'factory' => Factory,
       'name' => Name,
       'token_0' => Token0,
       'token_1' => Token1,
       'reserve_0' => Reserve0,
       'reserve_1' => Reserve1,
       'total_supply' => TotalSupply,
       'reserve_eth' => ReserveEth,
       'reserve_usd' => ReserveUsd,
       'tracked_reserve_eth' => TrackedReserveEth,
       'token_0_price' => Token0Price,
       'token_1_price' => Token1Price,
       'volume_token_0' => VolumeToken0,
       'volume_token_1' => VolumeToken1,
       'volume_usd' => VolumeUsd,
       'untracked_volume_usd' => UntrackedVolumeUsd,
       'tx_count' => TxCount,
       'liquidity_provider_count' => LiquidityProviderCount,
       'timestamp' => Timestamp,
       'block' => Block,
       'vid' => Vid,
       'evaluated_ask' => EvaluatedAsk
     }.
