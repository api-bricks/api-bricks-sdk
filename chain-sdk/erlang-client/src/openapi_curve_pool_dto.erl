-module(openapi_curve_pool_dto).

-export([encode/1]).

-export_type([openapi_curve_pool_dto/0]).

-type openapi_curve_pool_dto() ::
    #{ 'entry_time' => openapi_date_time:openapi_date_time(),
       'recv_time' => openapi_date_time:openapi_date_time(),
       'block_number' => integer(),
       'id' => binary(),
       'name' => binary(),
       'is_meta' => boolean(),
       'registry_address' => binary(),
       'swap_address' => binary(),
       'lp_token' => binary(),
       'coin_count' => binary(),
       'underlying_count' => binary(),
       'a' => binary(),
       'fee' => binary(),
       'admin_fee' => binary(),
       'owner' => binary(),
       'virtual_price' => binary(),
       'locked' => binary(),
       'added_at' => openapi_date_time:openapi_date_time(),
       'added_at_block' => binary(),
       'added_at_transaction' => binary(),
       'removed_at' => binary(),
       'removed_at_block' => binary(),
       'removed_at_transaction' => binary(),
       'exchange_count' => binary(),
       'gauge_count' => binary(),
       'vid' => integer(),
       'evaluated_ask' => float()
     }.

encode(#{ 'entry_time' := EntryTime,
          'recv_time' := RecvTime,
          'block_number' := BlockNumber,
          'id' := Id,
          'name' := Name,
          'is_meta' := IsMeta,
          'registry_address' := RegistryAddress,
          'swap_address' := SwapAddress,
          'lp_token' := LpToken,
          'coin_count' := CoinCount,
          'underlying_count' := UnderlyingCount,
          'a' := A,
          'fee' := Fee,
          'admin_fee' := AdminFee,
          'owner' := Owner,
          'virtual_price' := VirtualPrice,
          'locked' := Locked,
          'added_at' := AddedAt,
          'added_at_block' := AddedAtBlock,
          'added_at_transaction' := AddedAtTransaction,
          'removed_at' := RemovedAt,
          'removed_at_block' := RemovedAtBlock,
          'removed_at_transaction' := RemovedAtTransaction,
          'exchange_count' := ExchangeCount,
          'gauge_count' := GaugeCount,
          'vid' := Vid,
          'evaluated_ask' := EvaluatedAsk
        }) ->
    #{ 'entry_time' => EntryTime,
       'recv_time' => RecvTime,
       'block_number' => BlockNumber,
       'id' => Id,
       'name' => Name,
       'is_meta' => IsMeta,
       'registry_address' => RegistryAddress,
       'swap_address' => SwapAddress,
       'lp_token' => LpToken,
       'coin_count' => CoinCount,
       'underlying_count' => UnderlyingCount,
       'a' => A,
       'fee' => Fee,
       'admin_fee' => AdminFee,
       'owner' => Owner,
       'virtual_price' => VirtualPrice,
       'locked' => Locked,
       'added_at' => AddedAt,
       'added_at_block' => AddedAtBlock,
       'added_at_transaction' => AddedAtTransaction,
       'removed_at' => RemovedAt,
       'removed_at_block' => RemovedAtBlock,
       'removed_at_transaction' => RemovedAtTransaction,
       'exchange_count' => ExchangeCount,
       'gauge_count' => GaugeCount,
       'vid' => Vid,
       'evaluated_ask' => EvaluatedAsk
     }.
