note
 description:"[
		On Chain Dapps - REST API
 		 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
  		The version of the OpenAPI document: v1
 	    Contact: support@coinapi.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class UNISWAP_V3_POOL_DTO




feature --Access

    entry_time: detachable DATE_TIME
      
    recv_time: detachable DATE_TIME
      
 	block_number: INTEGER_64
    	 -- Number of block in which entity was recorded.
 	vid: INTEGER_64
    	 -- 
    id: detachable STRING_32
      -- Pool address.
    created_at_timestamp: detachable DATE_TIME
      -- Creation time.
    token_0: detachable STRING_32
      -- Reference to token0 as stored in pool contract.
    token_1: detachable STRING_32
      -- Reference to token1 as stored in pool contract.
    fee_tier: detachable NUMERICS_BIG_INTEGER
      
    liquidity: detachable NUMERICS_BIG_INTEGER
      
    sqrt_price: detachable NUMERICS_BIG_INTEGER
      
    fee_growth_global_0x128: detachable NUMERICS_BIG_INTEGER
      
    fee_growth_global_1x128: detachable NUMERICS_BIG_INTEGER
      
    token_0_price: detachable STRING_32
      -- Token0 per token1.
    token_1_price: detachable STRING_32
      -- Token1 per token0.
    tick: detachable NUMERICS_BIG_INTEGER
      
    observation_index: detachable NUMERICS_BIG_INTEGER
      
    volume_token_0: detachable STRING_32
      -- All time token0 swapped.
    volume_token_1: detachable STRING_32
      -- All time token1 swapped.
    volume_usd: detachable STRING_32
      -- All time USD swapped.
    untracked_volume_usd: detachable STRING_32
      -- All time USD swapped, unfiltered for unreliable USD pools.
    fees_usd: detachable STRING_32
      -- Fees in USD.
    tx_count: detachable NUMERICS_BIG_INTEGER
      
    collected_fees_token_0: detachable STRING_32
      -- All time fees collected token0.
    collected_fees_token_1: detachable STRING_32
      -- All time fees collected token1.
    collected_fees_usd: detachable STRING_32
      -- All time fees collected derived USD.
    total_value_locked_token_0: detachable STRING_32
      -- Total token 0 across all ticks.
    total_value_locked_token_1: detachable STRING_32
      -- 
    total_value_locked_eth: detachable STRING_32
      -- Total token 1 across all ticks.
    total_value_locked_usd: detachable STRING_32
      -- Total value locked USD.
    total_value_locked_usd_untracked: detachable STRING_32
      -- Total value locked derived ETH.
    liquidity_provider_count: detachable STRING_32
      -- Liquidity providers count, used to detect new exchanges.
 	evaluated_ask: REAL_64
    	 

feature -- Change Element

    set_entry_time (a_name: like entry_time)
        -- Set 'entry_time' with 'a_name'.
      do
        entry_time := a_name
      ensure
        entry_time_set: entry_time = a_name
      end

    set_recv_time (a_name: like recv_time)
        -- Set 'recv_time' with 'a_name'.
      do
        recv_time := a_name
      ensure
        recv_time_set: recv_time = a_name
      end

    set_block_number (a_name: like block_number)
        -- Set 'block_number' with 'a_name'.
      do
        block_number := a_name
      ensure
        block_number_set: block_number = a_name
      end

    set_vid (a_name: like vid)
        -- Set 'vid' with 'a_name'.
      do
        vid := a_name
      ensure
        vid_set: vid = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_created_at_timestamp (a_name: like created_at_timestamp)
        -- Set 'created_at_timestamp' with 'a_name'.
      do
        created_at_timestamp := a_name
      ensure
        created_at_timestamp_set: created_at_timestamp = a_name
      end

    set_token_0 (a_name: like token_0)
        -- Set 'token_0' with 'a_name'.
      do
        token_0 := a_name
      ensure
        token_0_set: token_0 = a_name
      end

    set_token_1 (a_name: like token_1)
        -- Set 'token_1' with 'a_name'.
      do
        token_1 := a_name
      ensure
        token_1_set: token_1 = a_name
      end

    set_fee_tier (a_name: like fee_tier)
        -- Set 'fee_tier' with 'a_name'.
      do
        fee_tier := a_name
      ensure
        fee_tier_set: fee_tier = a_name
      end

    set_liquidity (a_name: like liquidity)
        -- Set 'liquidity' with 'a_name'.
      do
        liquidity := a_name
      ensure
        liquidity_set: liquidity = a_name
      end

    set_sqrt_price (a_name: like sqrt_price)
        -- Set 'sqrt_price' with 'a_name'.
      do
        sqrt_price := a_name
      ensure
        sqrt_price_set: sqrt_price = a_name
      end

    set_fee_growth_global_0x128 (a_name: like fee_growth_global_0x128)
        -- Set 'fee_growth_global_0x128' with 'a_name'.
      do
        fee_growth_global_0x128 := a_name
      ensure
        fee_growth_global_0x128_set: fee_growth_global_0x128 = a_name
      end

    set_fee_growth_global_1x128 (a_name: like fee_growth_global_1x128)
        -- Set 'fee_growth_global_1x128' with 'a_name'.
      do
        fee_growth_global_1x128 := a_name
      ensure
        fee_growth_global_1x128_set: fee_growth_global_1x128 = a_name
      end

    set_token_0_price (a_name: like token_0_price)
        -- Set 'token_0_price' with 'a_name'.
      do
        token_0_price := a_name
      ensure
        token_0_price_set: token_0_price = a_name
      end

    set_token_1_price (a_name: like token_1_price)
        -- Set 'token_1_price' with 'a_name'.
      do
        token_1_price := a_name
      ensure
        token_1_price_set: token_1_price = a_name
      end

    set_tick (a_name: like tick)
        -- Set 'tick' with 'a_name'.
      do
        tick := a_name
      ensure
        tick_set: tick = a_name
      end

    set_observation_index (a_name: like observation_index)
        -- Set 'observation_index' with 'a_name'.
      do
        observation_index := a_name
      ensure
        observation_index_set: observation_index = a_name
      end

    set_volume_token_0 (a_name: like volume_token_0)
        -- Set 'volume_token_0' with 'a_name'.
      do
        volume_token_0 := a_name
      ensure
        volume_token_0_set: volume_token_0 = a_name
      end

    set_volume_token_1 (a_name: like volume_token_1)
        -- Set 'volume_token_1' with 'a_name'.
      do
        volume_token_1 := a_name
      ensure
        volume_token_1_set: volume_token_1 = a_name
      end

    set_volume_usd (a_name: like volume_usd)
        -- Set 'volume_usd' with 'a_name'.
      do
        volume_usd := a_name
      ensure
        volume_usd_set: volume_usd = a_name
      end

    set_untracked_volume_usd (a_name: like untracked_volume_usd)
        -- Set 'untracked_volume_usd' with 'a_name'.
      do
        untracked_volume_usd := a_name
      ensure
        untracked_volume_usd_set: untracked_volume_usd = a_name
      end

    set_fees_usd (a_name: like fees_usd)
        -- Set 'fees_usd' with 'a_name'.
      do
        fees_usd := a_name
      ensure
        fees_usd_set: fees_usd = a_name
      end

    set_tx_count (a_name: like tx_count)
        -- Set 'tx_count' with 'a_name'.
      do
        tx_count := a_name
      ensure
        tx_count_set: tx_count = a_name
      end

    set_collected_fees_token_0 (a_name: like collected_fees_token_0)
        -- Set 'collected_fees_token_0' with 'a_name'.
      do
        collected_fees_token_0 := a_name
      ensure
        collected_fees_token_0_set: collected_fees_token_0 = a_name
      end

    set_collected_fees_token_1 (a_name: like collected_fees_token_1)
        -- Set 'collected_fees_token_1' with 'a_name'.
      do
        collected_fees_token_1 := a_name
      ensure
        collected_fees_token_1_set: collected_fees_token_1 = a_name
      end

    set_collected_fees_usd (a_name: like collected_fees_usd)
        -- Set 'collected_fees_usd' with 'a_name'.
      do
        collected_fees_usd := a_name
      ensure
        collected_fees_usd_set: collected_fees_usd = a_name
      end

    set_total_value_locked_token_0 (a_name: like total_value_locked_token_0)
        -- Set 'total_value_locked_token_0' with 'a_name'.
      do
        total_value_locked_token_0 := a_name
      ensure
        total_value_locked_token_0_set: total_value_locked_token_0 = a_name
      end

    set_total_value_locked_token_1 (a_name: like total_value_locked_token_1)
        -- Set 'total_value_locked_token_1' with 'a_name'.
      do
        total_value_locked_token_1 := a_name
      ensure
        total_value_locked_token_1_set: total_value_locked_token_1 = a_name
      end

    set_total_value_locked_eth (a_name: like total_value_locked_eth)
        -- Set 'total_value_locked_eth' with 'a_name'.
      do
        total_value_locked_eth := a_name
      ensure
        total_value_locked_eth_set: total_value_locked_eth = a_name
      end

    set_total_value_locked_usd (a_name: like total_value_locked_usd)
        -- Set 'total_value_locked_usd' with 'a_name'.
      do
        total_value_locked_usd := a_name
      ensure
        total_value_locked_usd_set: total_value_locked_usd = a_name
      end

    set_total_value_locked_usd_untracked (a_name: like total_value_locked_usd_untracked)
        -- Set 'total_value_locked_usd_untracked' with 'a_name'.
      do
        total_value_locked_usd_untracked := a_name
      ensure
        total_value_locked_usd_untracked_set: total_value_locked_usd_untracked = a_name
      end

    set_liquidity_provider_count (a_name: like liquidity_provider_count)
        -- Set 'liquidity_provider_count' with 'a_name'.
      do
        liquidity_provider_count := a_name
      ensure
        liquidity_provider_count_set: liquidity_provider_count = a_name
      end

    set_evaluated_ask (a_name: like evaluated_ask)
        -- Set 'evaluated_ask' with 'a_name'.
      do
        evaluated_ask := a_name
      ensure
        evaluated_ask_set: evaluated_ask = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass UNISWAP_V3_POOL_DTO%N")
        if attached entry_time as l_entry_time then
          Result.append ("%Nentry_time:")
          Result.append (l_entry_time.out)
          Result.append ("%N")
        end
        if attached recv_time as l_recv_time then
          Result.append ("%Nrecv_time:")
          Result.append (l_recv_time.out)
          Result.append ("%N")
        end
        if attached block_number as l_block_number then
          Result.append ("%Nblock_number:")
          Result.append (l_block_number.out)
          Result.append ("%N")
        end
        if attached vid as l_vid then
          Result.append ("%Nvid:")
          Result.append (l_vid.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached created_at_timestamp as l_created_at_timestamp then
          Result.append ("%Ncreated_at_timestamp:")
          Result.append (l_created_at_timestamp.out)
          Result.append ("%N")
        end
        if attached token_0 as l_token_0 then
          Result.append ("%Ntoken_0:")
          Result.append (l_token_0.out)
          Result.append ("%N")
        end
        if attached token_1 as l_token_1 then
          Result.append ("%Ntoken_1:")
          Result.append (l_token_1.out)
          Result.append ("%N")
        end
        if attached fee_tier as l_fee_tier then
          Result.append ("%Nfee_tier:")
          Result.append (l_fee_tier.out)
          Result.append ("%N")
        end
        if attached liquidity as l_liquidity then
          Result.append ("%Nliquidity:")
          Result.append (l_liquidity.out)
          Result.append ("%N")
        end
        if attached sqrt_price as l_sqrt_price then
          Result.append ("%Nsqrt_price:")
          Result.append (l_sqrt_price.out)
          Result.append ("%N")
        end
        if attached fee_growth_global_0x128 as l_fee_growth_global_0x128 then
          Result.append ("%Nfee_growth_global_0x128:")
          Result.append (l_fee_growth_global_0x128.out)
          Result.append ("%N")
        end
        if attached fee_growth_global_1x128 as l_fee_growth_global_1x128 then
          Result.append ("%Nfee_growth_global_1x128:")
          Result.append (l_fee_growth_global_1x128.out)
          Result.append ("%N")
        end
        if attached token_0_price as l_token_0_price then
          Result.append ("%Ntoken_0_price:")
          Result.append (l_token_0_price.out)
          Result.append ("%N")
        end
        if attached token_1_price as l_token_1_price then
          Result.append ("%Ntoken_1_price:")
          Result.append (l_token_1_price.out)
          Result.append ("%N")
        end
        if attached tick as l_tick then
          Result.append ("%Ntick:")
          Result.append (l_tick.out)
          Result.append ("%N")
        end
        if attached observation_index as l_observation_index then
          Result.append ("%Nobservation_index:")
          Result.append (l_observation_index.out)
          Result.append ("%N")
        end
        if attached volume_token_0 as l_volume_token_0 then
          Result.append ("%Nvolume_token_0:")
          Result.append (l_volume_token_0.out)
          Result.append ("%N")
        end
        if attached volume_token_1 as l_volume_token_1 then
          Result.append ("%Nvolume_token_1:")
          Result.append (l_volume_token_1.out)
          Result.append ("%N")
        end
        if attached volume_usd as l_volume_usd then
          Result.append ("%Nvolume_usd:")
          Result.append (l_volume_usd.out)
          Result.append ("%N")
        end
        if attached untracked_volume_usd as l_untracked_volume_usd then
          Result.append ("%Nuntracked_volume_usd:")
          Result.append (l_untracked_volume_usd.out)
          Result.append ("%N")
        end
        if attached fees_usd as l_fees_usd then
          Result.append ("%Nfees_usd:")
          Result.append (l_fees_usd.out)
          Result.append ("%N")
        end
        if attached tx_count as l_tx_count then
          Result.append ("%Ntx_count:")
          Result.append (l_tx_count.out)
          Result.append ("%N")
        end
        if attached collected_fees_token_0 as l_collected_fees_token_0 then
          Result.append ("%Ncollected_fees_token_0:")
          Result.append (l_collected_fees_token_0.out)
          Result.append ("%N")
        end
        if attached collected_fees_token_1 as l_collected_fees_token_1 then
          Result.append ("%Ncollected_fees_token_1:")
          Result.append (l_collected_fees_token_1.out)
          Result.append ("%N")
        end
        if attached collected_fees_usd as l_collected_fees_usd then
          Result.append ("%Ncollected_fees_usd:")
          Result.append (l_collected_fees_usd.out)
          Result.append ("%N")
        end
        if attached total_value_locked_token_0 as l_total_value_locked_token_0 then
          Result.append ("%Ntotal_value_locked_token_0:")
          Result.append (l_total_value_locked_token_0.out)
          Result.append ("%N")
        end
        if attached total_value_locked_token_1 as l_total_value_locked_token_1 then
          Result.append ("%Ntotal_value_locked_token_1:")
          Result.append (l_total_value_locked_token_1.out)
          Result.append ("%N")
        end
        if attached total_value_locked_eth as l_total_value_locked_eth then
          Result.append ("%Ntotal_value_locked_eth:")
          Result.append (l_total_value_locked_eth.out)
          Result.append ("%N")
        end
        if attached total_value_locked_usd as l_total_value_locked_usd then
          Result.append ("%Ntotal_value_locked_usd:")
          Result.append (l_total_value_locked_usd.out)
          Result.append ("%N")
        end
        if attached total_value_locked_usd_untracked as l_total_value_locked_usd_untracked then
          Result.append ("%Ntotal_value_locked_usd_untracked:")
          Result.append (l_total_value_locked_usd_untracked.out)
          Result.append ("%N")
        end
        if attached liquidity_provider_count as l_liquidity_provider_count then
          Result.append ("%Nliquidity_provider_count:")
          Result.append (l_liquidity_provider_count.out)
          Result.append ("%N")
        end
        if attached evaluated_ask as l_evaluated_ask then
          Result.append ("%Nevaluated_ask:")
          Result.append (l_evaluated_ask.out)
          Result.append ("%N")
        end
      end
end

