note
 description:"[
		On Chain Dapps - REST API
 		 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
  		The version of the OpenAPI document: v1
 	    Contact: support@coinapi.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class UNISWAP_V3_TICK_DTO




feature --Access

    entry_time: detachable DATE_TIME
      
    recv_time: detachable DATE_TIME
      
 	block_number: INTEGER_64
    	 -- Number of block in which entity was recorded.
 	vid: INTEGER_64
    	 -- 
    id: detachable STRING_32
      -- Identifier, format: (pool address)#(tick index)
    pool_address: detachable STRING_32
      -- Pool address.
    tick_idx: detachable NUMERICS_BIG_INTEGER
      
    pool: detachable STRING_32
      -- Pool address.
    liquidity_gross: detachable NUMERICS_BIG_INTEGER
      
    liquidity_net: detachable NUMERICS_BIG_INTEGER
      
    price_0: detachable STRING_32
      -- Calculated price of token0 of tick within this pool - constant.
    price_1: detachable STRING_32
      -- Calculated price of token1 of tick within this pool - constant.
    volume_token_0: detachable STRING_32
      -- Lifetime volume of token0 with this tick in range.
    volume_token_1: detachable STRING_32
      -- Lifetime volume of token1 with this tick in range.
    volume_usd: detachable STRING_32
      -- Lifetime volume in derived USD with this tick in range.
    untracked_volume_usd: detachable STRING_32
      -- Lifetime volume in untracked USD with this tick in range.
    fees_usd: detachable STRING_32
      -- Fees in USD.
    collected_fees_token_0: detachable STRING_32
      -- All time collected fees in token0.
    collected_fees_token_1: detachable STRING_32
      -- All time collected fees in token1.
    collected_fees_usd: detachable STRING_32
      -- All time collected fees in USD.
    created_at_timestamp: detachable DATE_TIME
      -- Created time.
    liquidity_provider_count: detachable NUMERICS_BIG_INTEGER
      
    fee_growth_outside_0x128: detachable NUMERICS_BIG_INTEGER
      
    fee_growth_outside_1x128: detachable NUMERICS_BIG_INTEGER
      

feature -- Change Element

    set_entry_time (a_name: like entry_time)
        -- Set 'entry_time' with 'a_name'.
      do
        entry_time := a_name
      ensure
        entry_time_set: entry_time = a_name
      end

    set_recv_time (a_name: like recv_time)
        -- Set 'recv_time' with 'a_name'.
      do
        recv_time := a_name
      ensure
        recv_time_set: recv_time = a_name
      end

    set_block_number (a_name: like block_number)
        -- Set 'block_number' with 'a_name'.
      do
        block_number := a_name
      ensure
        block_number_set: block_number = a_name
      end

    set_vid (a_name: like vid)
        -- Set 'vid' with 'a_name'.
      do
        vid := a_name
      ensure
        vid_set: vid = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_pool_address (a_name: like pool_address)
        -- Set 'pool_address' with 'a_name'.
      do
        pool_address := a_name
      ensure
        pool_address_set: pool_address = a_name
      end

    set_tick_idx (a_name: like tick_idx)
        -- Set 'tick_idx' with 'a_name'.
      do
        tick_idx := a_name
      ensure
        tick_idx_set: tick_idx = a_name
      end

    set_pool (a_name: like pool)
        -- Set 'pool' with 'a_name'.
      do
        pool := a_name
      ensure
        pool_set: pool = a_name
      end

    set_liquidity_gross (a_name: like liquidity_gross)
        -- Set 'liquidity_gross' with 'a_name'.
      do
        liquidity_gross := a_name
      ensure
        liquidity_gross_set: liquidity_gross = a_name
      end

    set_liquidity_net (a_name: like liquidity_net)
        -- Set 'liquidity_net' with 'a_name'.
      do
        liquidity_net := a_name
      ensure
        liquidity_net_set: liquidity_net = a_name
      end

    set_price_0 (a_name: like price_0)
        -- Set 'price_0' with 'a_name'.
      do
        price_0 := a_name
      ensure
        price_0_set: price_0 = a_name
      end

    set_price_1 (a_name: like price_1)
        -- Set 'price_1' with 'a_name'.
      do
        price_1 := a_name
      ensure
        price_1_set: price_1 = a_name
      end

    set_volume_token_0 (a_name: like volume_token_0)
        -- Set 'volume_token_0' with 'a_name'.
      do
        volume_token_0 := a_name
      ensure
        volume_token_0_set: volume_token_0 = a_name
      end

    set_volume_token_1 (a_name: like volume_token_1)
        -- Set 'volume_token_1' with 'a_name'.
      do
        volume_token_1 := a_name
      ensure
        volume_token_1_set: volume_token_1 = a_name
      end

    set_volume_usd (a_name: like volume_usd)
        -- Set 'volume_usd' with 'a_name'.
      do
        volume_usd := a_name
      ensure
        volume_usd_set: volume_usd = a_name
      end

    set_untracked_volume_usd (a_name: like untracked_volume_usd)
        -- Set 'untracked_volume_usd' with 'a_name'.
      do
        untracked_volume_usd := a_name
      ensure
        untracked_volume_usd_set: untracked_volume_usd = a_name
      end

    set_fees_usd (a_name: like fees_usd)
        -- Set 'fees_usd' with 'a_name'.
      do
        fees_usd := a_name
      ensure
        fees_usd_set: fees_usd = a_name
      end

    set_collected_fees_token_0 (a_name: like collected_fees_token_0)
        -- Set 'collected_fees_token_0' with 'a_name'.
      do
        collected_fees_token_0 := a_name
      ensure
        collected_fees_token_0_set: collected_fees_token_0 = a_name
      end

    set_collected_fees_token_1 (a_name: like collected_fees_token_1)
        -- Set 'collected_fees_token_1' with 'a_name'.
      do
        collected_fees_token_1 := a_name
      ensure
        collected_fees_token_1_set: collected_fees_token_1 = a_name
      end

    set_collected_fees_usd (a_name: like collected_fees_usd)
        -- Set 'collected_fees_usd' with 'a_name'.
      do
        collected_fees_usd := a_name
      ensure
        collected_fees_usd_set: collected_fees_usd = a_name
      end

    set_created_at_timestamp (a_name: like created_at_timestamp)
        -- Set 'created_at_timestamp' with 'a_name'.
      do
        created_at_timestamp := a_name
      ensure
        created_at_timestamp_set: created_at_timestamp = a_name
      end

    set_liquidity_provider_count (a_name: like liquidity_provider_count)
        -- Set 'liquidity_provider_count' with 'a_name'.
      do
        liquidity_provider_count := a_name
      ensure
        liquidity_provider_count_set: liquidity_provider_count = a_name
      end

    set_fee_growth_outside_0x128 (a_name: like fee_growth_outside_0x128)
        -- Set 'fee_growth_outside_0x128' with 'a_name'.
      do
        fee_growth_outside_0x128 := a_name
      ensure
        fee_growth_outside_0x128_set: fee_growth_outside_0x128 = a_name
      end

    set_fee_growth_outside_1x128 (a_name: like fee_growth_outside_1x128)
        -- Set 'fee_growth_outside_1x128' with 'a_name'.
      do
        fee_growth_outside_1x128 := a_name
      ensure
        fee_growth_outside_1x128_set: fee_growth_outside_1x128 = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass UNISWAP_V3_TICK_DTO%N")
        if attached entry_time as l_entry_time then
          Result.append ("%Nentry_time:")
          Result.append (l_entry_time.out)
          Result.append ("%N")
        end
        if attached recv_time as l_recv_time then
          Result.append ("%Nrecv_time:")
          Result.append (l_recv_time.out)
          Result.append ("%N")
        end
        if attached block_number as l_block_number then
          Result.append ("%Nblock_number:")
          Result.append (l_block_number.out)
          Result.append ("%N")
        end
        if attached vid as l_vid then
          Result.append ("%Nvid:")
          Result.append (l_vid.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached pool_address as l_pool_address then
          Result.append ("%Npool_address:")
          Result.append (l_pool_address.out)
          Result.append ("%N")
        end
        if attached tick_idx as l_tick_idx then
          Result.append ("%Ntick_idx:")
          Result.append (l_tick_idx.out)
          Result.append ("%N")
        end
        if attached pool as l_pool then
          Result.append ("%Npool:")
          Result.append (l_pool.out)
          Result.append ("%N")
        end
        if attached liquidity_gross as l_liquidity_gross then
          Result.append ("%Nliquidity_gross:")
          Result.append (l_liquidity_gross.out)
          Result.append ("%N")
        end
        if attached liquidity_net as l_liquidity_net then
          Result.append ("%Nliquidity_net:")
          Result.append (l_liquidity_net.out)
          Result.append ("%N")
        end
        if attached price_0 as l_price_0 then
          Result.append ("%Nprice_0:")
          Result.append (l_price_0.out)
          Result.append ("%N")
        end
        if attached price_1 as l_price_1 then
          Result.append ("%Nprice_1:")
          Result.append (l_price_1.out)
          Result.append ("%N")
        end
        if attached volume_token_0 as l_volume_token_0 then
          Result.append ("%Nvolume_token_0:")
          Result.append (l_volume_token_0.out)
          Result.append ("%N")
        end
        if attached volume_token_1 as l_volume_token_1 then
          Result.append ("%Nvolume_token_1:")
          Result.append (l_volume_token_1.out)
          Result.append ("%N")
        end
        if attached volume_usd as l_volume_usd then
          Result.append ("%Nvolume_usd:")
          Result.append (l_volume_usd.out)
          Result.append ("%N")
        end
        if attached untracked_volume_usd as l_untracked_volume_usd then
          Result.append ("%Nuntracked_volume_usd:")
          Result.append (l_untracked_volume_usd.out)
          Result.append ("%N")
        end
        if attached fees_usd as l_fees_usd then
          Result.append ("%Nfees_usd:")
          Result.append (l_fees_usd.out)
          Result.append ("%N")
        end
        if attached collected_fees_token_0 as l_collected_fees_token_0 then
          Result.append ("%Ncollected_fees_token_0:")
          Result.append (l_collected_fees_token_0.out)
          Result.append ("%N")
        end
        if attached collected_fees_token_1 as l_collected_fees_token_1 then
          Result.append ("%Ncollected_fees_token_1:")
          Result.append (l_collected_fees_token_1.out)
          Result.append ("%N")
        end
        if attached collected_fees_usd as l_collected_fees_usd then
          Result.append ("%Ncollected_fees_usd:")
          Result.append (l_collected_fees_usd.out)
          Result.append ("%N")
        end
        if attached created_at_timestamp as l_created_at_timestamp then
          Result.append ("%Ncreated_at_timestamp:")
          Result.append (l_created_at_timestamp.out)
          Result.append ("%N")
        end
        if attached liquidity_provider_count as l_liquidity_provider_count then
          Result.append ("%Nliquidity_provider_count:")
          Result.append (l_liquidity_provider_count.out)
          Result.append ("%N")
        end
        if attached fee_growth_outside_0x128 as l_fee_growth_outside_0x128 then
          Result.append ("%Nfee_growth_outside_0x128:")
          Result.append (l_fee_growth_outside_0x128.out)
          Result.append ("%N")
        end
        if attached fee_growth_outside_1x128 as l_fee_growth_outside_1x128 then
          Result.append ("%Nfee_growth_outside_1x128:")
          Result.append (l_fee_growth_outside_1x128.out)
          Result.append ("%N")
        end
      end
end

