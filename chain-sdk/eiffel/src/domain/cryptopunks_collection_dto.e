note
 description:"[
		On Chain Dapps - REST API
 		 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
  		The version of the OpenAPI document: v1
 	    Contact: support@coinapi.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class CRYPTOPUNKS_COLLECTION_DTO




feature --Access

    entry_time: detachable DATE_TIME
      
    recv_time: detachable DATE_TIME
      
 	block_number: INTEGER_64
    	 -- Number of block in which entity was recorded.
 	vid: INTEGER_64
    	 -- 
    block_range: detachable STRING_32
      -- 
    id: detachable STRING_32
      -- 
    name: detachable STRING_32
      -- 
    symbol: detachable STRING_32
      -- 
    total_supply: detachable STRING_32
      -- 
    royalty_fee: detachable STRING_32
      -- 
    cumulative_trade_volume_eth: detachable STRING_32
      -- 
    marketplace_revenue_eth: detachable STRING_32
      -- 
    creator_revenue_eth: detachable STRING_32
      -- 
    total_revenue_eth: detachable STRING_32
      -- 
 	trade_count: INTEGER_32
    	 -- 
 	buyer_count: INTEGER_32
    	 -- 
 	seller_count: INTEGER_32
    	 -- 

feature -- Change Element

    set_entry_time (a_name: like entry_time)
        -- Set 'entry_time' with 'a_name'.
      do
        entry_time := a_name
      ensure
        entry_time_set: entry_time = a_name
      end

    set_recv_time (a_name: like recv_time)
        -- Set 'recv_time' with 'a_name'.
      do
        recv_time := a_name
      ensure
        recv_time_set: recv_time = a_name
      end

    set_block_number (a_name: like block_number)
        -- Set 'block_number' with 'a_name'.
      do
        block_number := a_name
      ensure
        block_number_set: block_number = a_name
      end

    set_vid (a_name: like vid)
        -- Set 'vid' with 'a_name'.
      do
        vid := a_name
      ensure
        vid_set: vid = a_name
      end

    set_block_range (a_name: like block_range)
        -- Set 'block_range' with 'a_name'.
      do
        block_range := a_name
      ensure
        block_range_set: block_range = a_name
      end

    set_id (a_name: like id)
        -- Set 'id' with 'a_name'.
      do
        id := a_name
      ensure
        id_set: id = a_name
      end

    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name
      end

    set_symbol (a_name: like symbol)
        -- Set 'symbol' with 'a_name'.
      do
        symbol := a_name
      ensure
        symbol_set: symbol = a_name
      end

    set_total_supply (a_name: like total_supply)
        -- Set 'total_supply' with 'a_name'.
      do
        total_supply := a_name
      ensure
        total_supply_set: total_supply = a_name
      end

    set_royalty_fee (a_name: like royalty_fee)
        -- Set 'royalty_fee' with 'a_name'.
      do
        royalty_fee := a_name
      ensure
        royalty_fee_set: royalty_fee = a_name
      end

    set_cumulative_trade_volume_eth (a_name: like cumulative_trade_volume_eth)
        -- Set 'cumulative_trade_volume_eth' with 'a_name'.
      do
        cumulative_trade_volume_eth := a_name
      ensure
        cumulative_trade_volume_eth_set: cumulative_trade_volume_eth = a_name
      end

    set_marketplace_revenue_eth (a_name: like marketplace_revenue_eth)
        -- Set 'marketplace_revenue_eth' with 'a_name'.
      do
        marketplace_revenue_eth := a_name
      ensure
        marketplace_revenue_eth_set: marketplace_revenue_eth = a_name
      end

    set_creator_revenue_eth (a_name: like creator_revenue_eth)
        -- Set 'creator_revenue_eth' with 'a_name'.
      do
        creator_revenue_eth := a_name
      ensure
        creator_revenue_eth_set: creator_revenue_eth = a_name
      end

    set_total_revenue_eth (a_name: like total_revenue_eth)
        -- Set 'total_revenue_eth' with 'a_name'.
      do
        total_revenue_eth := a_name
      ensure
        total_revenue_eth_set: total_revenue_eth = a_name
      end

    set_trade_count (a_name: like trade_count)
        -- Set 'trade_count' with 'a_name'.
      do
        trade_count := a_name
      ensure
        trade_count_set: trade_count = a_name
      end

    set_buyer_count (a_name: like buyer_count)
        -- Set 'buyer_count' with 'a_name'.
      do
        buyer_count := a_name
      ensure
        buyer_count_set: buyer_count = a_name
      end

    set_seller_count (a_name: like seller_count)
        -- Set 'seller_count' with 'a_name'.
      do
        seller_count := a_name
      ensure
        seller_count_set: seller_count = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass CRYPTOPUNKS_COLLECTION_DTO%N")
        if attached entry_time as l_entry_time then
          Result.append ("%Nentry_time:")
          Result.append (l_entry_time.out)
          Result.append ("%N")
        end
        if attached recv_time as l_recv_time then
          Result.append ("%Nrecv_time:")
          Result.append (l_recv_time.out)
          Result.append ("%N")
        end
        if attached block_number as l_block_number then
          Result.append ("%Nblock_number:")
          Result.append (l_block_number.out)
          Result.append ("%N")
        end
        if attached vid as l_vid then
          Result.append ("%Nvid:")
          Result.append (l_vid.out)
          Result.append ("%N")
        end
        if attached block_range as l_block_range then
          Result.append ("%Nblock_range:")
          Result.append (l_block_range.out)
          Result.append ("%N")
        end
        if attached id as l_id then
          Result.append ("%Nid:")
          Result.append (l_id.out)
          Result.append ("%N")
        end
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")
        end
        if attached symbol as l_symbol then
          Result.append ("%Nsymbol:")
          Result.append (l_symbol.out)
          Result.append ("%N")
        end
        if attached total_supply as l_total_supply then
          Result.append ("%Ntotal_supply:")
          Result.append (l_total_supply.out)
          Result.append ("%N")
        end
        if attached royalty_fee as l_royalty_fee then
          Result.append ("%Nroyalty_fee:")
          Result.append (l_royalty_fee.out)
          Result.append ("%N")
        end
        if attached cumulative_trade_volume_eth as l_cumulative_trade_volume_eth then
          Result.append ("%Ncumulative_trade_volume_eth:")
          Result.append (l_cumulative_trade_volume_eth.out)
          Result.append ("%N")
        end
        if attached marketplace_revenue_eth as l_marketplace_revenue_eth then
          Result.append ("%Nmarketplace_revenue_eth:")
          Result.append (l_marketplace_revenue_eth.out)
          Result.append ("%N")
        end
        if attached creator_revenue_eth as l_creator_revenue_eth then
          Result.append ("%Ncreator_revenue_eth:")
          Result.append (l_creator_revenue_eth.out)
          Result.append ("%N")
        end
        if attached total_revenue_eth as l_total_revenue_eth then
          Result.append ("%Ntotal_revenue_eth:")
          Result.append (l_total_revenue_eth.out)
          Result.append ("%N")
        end
        if attached trade_count as l_trade_count then
          Result.append ("%Ntrade_count:")
          Result.append (l_trade_count.out)
          Result.append ("%N")
        end
        if attached buyer_count as l_buyer_count then
          Result.append ("%Nbuyer_count:")
          Result.append (l_buyer_count.out)
          Result.append ("%N")
        end
        if attached seller_count as l_seller_count then
          Result.append ("%Nseller_count:")
          Result.append (l_seller_count.out)
          Result.append ("%N")
        end
      end
end

