/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UniswapV2PairHourDataDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniswapV2PairHourDataDTO{}

// UniswapV2PairHourDataDTO Tracks pair data across each hour.
type UniswapV2PairHourDataDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	Id NullableString `json:"id,omitempty"`
	// Unix timestamp for start of hour.
	HourStartUnix *int32 `json:"hour_start_unix,omitempty"`
	// Address for pair contract.
	Pair NullableString `json:"pair,omitempty"`
	// Reserve of token0 (updated during each transaction on pair).
	Reserve0 NullableString `json:"reserve_0,omitempty"`
	// Reserve of token1 (updated during each transaction on pair).
	Reserve1 NullableString `json:"reserve_1,omitempty"`
	// Total supply of liquidity token distributed to LPs.
	TotalSupply NullableString `json:"total_supply,omitempty"`
	// Reserve of token0 plus token1 stored as a derived USD amount.
	ReserveUsd NullableString `json:"reserve_usd,omitempty"`
	// Total amount of token0 swapped throughout hour.
	HourlyVolumeToken0 NullableString `json:"hourly_volume_token_0,omitempty"`
	// Total amount of token1 swapped throughout hour.
	HourlyVolumeToken1 NullableString `json:"hourly_volume_token_1,omitempty"`
	// Total volume within pair throughout hour.
	HourlyVolumeUsd NullableString `json:"hourly_volume_usd,omitempty"`
	// Amount of transactions on pair throughout hour.
	HourlyTxns NullableString `json:"hourly_txns,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
}

// NewUniswapV2PairHourDataDTO instantiates a new UniswapV2PairHourDataDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniswapV2PairHourDataDTO() *UniswapV2PairHourDataDTO {
	this := UniswapV2PairHourDataDTO{}
	return &this
}

// NewUniswapV2PairHourDataDTOWithDefaults instantiates a new UniswapV2PairHourDataDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniswapV2PairHourDataDTOWithDefaults() *UniswapV2PairHourDataDTO {
	this := UniswapV2PairHourDataDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *UniswapV2PairHourDataDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2PairHourDataDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *UniswapV2PairHourDataDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *UniswapV2PairHourDataDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2PairHourDataDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *UniswapV2PairHourDataDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *UniswapV2PairHourDataDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2PairHourDataDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *UniswapV2PairHourDataDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UniswapV2PairHourDataDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetId() {
	o.Id.Unset()
}

// GetHourStartUnix returns the HourStartUnix field value if set, zero value otherwise.
func (o *UniswapV2PairHourDataDTO) GetHourStartUnix() int32 {
	if o == nil || IsNil(o.HourStartUnix) {
		var ret int32
		return ret
	}
	return *o.HourStartUnix
}

// GetHourStartUnixOk returns a tuple with the HourStartUnix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2PairHourDataDTO) GetHourStartUnixOk() (*int32, bool) {
	if o == nil || IsNil(o.HourStartUnix) {
		return nil, false
	}
	return o.HourStartUnix, true
}

// HasHourStartUnix returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasHourStartUnix() bool {
	if o != nil && !IsNil(o.HourStartUnix) {
		return true
	}

	return false
}

// SetHourStartUnix gets a reference to the given int32 and assigns it to the HourStartUnix field.
func (o *UniswapV2PairHourDataDTO) SetHourStartUnix(v int32) {
	o.HourStartUnix = &v
}

// GetPair returns the Pair field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetPair() string {
	if o == nil || IsNil(o.Pair.Get()) {
		var ret string
		return ret
	}
	return *o.Pair.Get()
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetPairOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pair.Get(), o.Pair.IsSet()
}

// HasPair returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasPair() bool {
	if o != nil && o.Pair.IsSet() {
		return true
	}

	return false
}

// SetPair gets a reference to the given NullableString and assigns it to the Pair field.
func (o *UniswapV2PairHourDataDTO) SetPair(v string) {
	o.Pair.Set(&v)
}
// SetPairNil sets the value for Pair to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetPairNil() {
	o.Pair.Set(nil)
}

// UnsetPair ensures that no value is present for Pair, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetPair() {
	o.Pair.Unset()
}

// GetReserve0 returns the Reserve0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetReserve0() string {
	if o == nil || IsNil(o.Reserve0.Get()) {
		var ret string
		return ret
	}
	return *o.Reserve0.Get()
}

// GetReserve0Ok returns a tuple with the Reserve0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetReserve0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reserve0.Get(), o.Reserve0.IsSet()
}

// HasReserve0 returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasReserve0() bool {
	if o != nil && o.Reserve0.IsSet() {
		return true
	}

	return false
}

// SetReserve0 gets a reference to the given NullableString and assigns it to the Reserve0 field.
func (o *UniswapV2PairHourDataDTO) SetReserve0(v string) {
	o.Reserve0.Set(&v)
}
// SetReserve0Nil sets the value for Reserve0 to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetReserve0Nil() {
	o.Reserve0.Set(nil)
}

// UnsetReserve0 ensures that no value is present for Reserve0, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetReserve0() {
	o.Reserve0.Unset()
}

// GetReserve1 returns the Reserve1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetReserve1() string {
	if o == nil || IsNil(o.Reserve1.Get()) {
		var ret string
		return ret
	}
	return *o.Reserve1.Get()
}

// GetReserve1Ok returns a tuple with the Reserve1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetReserve1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reserve1.Get(), o.Reserve1.IsSet()
}

// HasReserve1 returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasReserve1() bool {
	if o != nil && o.Reserve1.IsSet() {
		return true
	}

	return false
}

// SetReserve1 gets a reference to the given NullableString and assigns it to the Reserve1 field.
func (o *UniswapV2PairHourDataDTO) SetReserve1(v string) {
	o.Reserve1.Set(&v)
}
// SetReserve1Nil sets the value for Reserve1 to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetReserve1Nil() {
	o.Reserve1.Set(nil)
}

// UnsetReserve1 ensures that no value is present for Reserve1, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetReserve1() {
	o.Reserve1.Unset()
}

// GetTotalSupply returns the TotalSupply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetTotalSupply() string {
	if o == nil || IsNil(o.TotalSupply.Get()) {
		var ret string
		return ret
	}
	return *o.TotalSupply.Get()
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetTotalSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalSupply.Get(), o.TotalSupply.IsSet()
}

// HasTotalSupply returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasTotalSupply() bool {
	if o != nil && o.TotalSupply.IsSet() {
		return true
	}

	return false
}

// SetTotalSupply gets a reference to the given NullableString and assigns it to the TotalSupply field.
func (o *UniswapV2PairHourDataDTO) SetTotalSupply(v string) {
	o.TotalSupply.Set(&v)
}
// SetTotalSupplyNil sets the value for TotalSupply to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetTotalSupplyNil() {
	o.TotalSupply.Set(nil)
}

// UnsetTotalSupply ensures that no value is present for TotalSupply, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetTotalSupply() {
	o.TotalSupply.Unset()
}

// GetReserveUsd returns the ReserveUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetReserveUsd() string {
	if o == nil || IsNil(o.ReserveUsd.Get()) {
		var ret string
		return ret
	}
	return *o.ReserveUsd.Get()
}

// GetReserveUsdOk returns a tuple with the ReserveUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetReserveUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReserveUsd.Get(), o.ReserveUsd.IsSet()
}

// HasReserveUsd returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasReserveUsd() bool {
	if o != nil && o.ReserveUsd.IsSet() {
		return true
	}

	return false
}

// SetReserveUsd gets a reference to the given NullableString and assigns it to the ReserveUsd field.
func (o *UniswapV2PairHourDataDTO) SetReserveUsd(v string) {
	o.ReserveUsd.Set(&v)
}
// SetReserveUsdNil sets the value for ReserveUsd to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetReserveUsdNil() {
	o.ReserveUsd.Set(nil)
}

// UnsetReserveUsd ensures that no value is present for ReserveUsd, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetReserveUsd() {
	o.ReserveUsd.Unset()
}

// GetHourlyVolumeToken0 returns the HourlyVolumeToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeToken0() string {
	if o == nil || IsNil(o.HourlyVolumeToken0.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyVolumeToken0.Get()
}

// GetHourlyVolumeToken0Ok returns a tuple with the HourlyVolumeToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyVolumeToken0.Get(), o.HourlyVolumeToken0.IsSet()
}

// HasHourlyVolumeToken0 returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasHourlyVolumeToken0() bool {
	if o != nil && o.HourlyVolumeToken0.IsSet() {
		return true
	}

	return false
}

// SetHourlyVolumeToken0 gets a reference to the given NullableString and assigns it to the HourlyVolumeToken0 field.
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeToken0(v string) {
	o.HourlyVolumeToken0.Set(&v)
}
// SetHourlyVolumeToken0Nil sets the value for HourlyVolumeToken0 to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeToken0Nil() {
	o.HourlyVolumeToken0.Set(nil)
}

// UnsetHourlyVolumeToken0 ensures that no value is present for HourlyVolumeToken0, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetHourlyVolumeToken0() {
	o.HourlyVolumeToken0.Unset()
}

// GetHourlyVolumeToken1 returns the HourlyVolumeToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeToken1() string {
	if o == nil || IsNil(o.HourlyVolumeToken1.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyVolumeToken1.Get()
}

// GetHourlyVolumeToken1Ok returns a tuple with the HourlyVolumeToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyVolumeToken1.Get(), o.HourlyVolumeToken1.IsSet()
}

// HasHourlyVolumeToken1 returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasHourlyVolumeToken1() bool {
	if o != nil && o.HourlyVolumeToken1.IsSet() {
		return true
	}

	return false
}

// SetHourlyVolumeToken1 gets a reference to the given NullableString and assigns it to the HourlyVolumeToken1 field.
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeToken1(v string) {
	o.HourlyVolumeToken1.Set(&v)
}
// SetHourlyVolumeToken1Nil sets the value for HourlyVolumeToken1 to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeToken1Nil() {
	o.HourlyVolumeToken1.Set(nil)
}

// UnsetHourlyVolumeToken1 ensures that no value is present for HourlyVolumeToken1, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetHourlyVolumeToken1() {
	o.HourlyVolumeToken1.Unset()
}

// GetHourlyVolumeUsd returns the HourlyVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeUsd() string {
	if o == nil || IsNil(o.HourlyVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyVolumeUsd.Get()
}

// GetHourlyVolumeUsdOk returns a tuple with the HourlyVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetHourlyVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyVolumeUsd.Get(), o.HourlyVolumeUsd.IsSet()
}

// HasHourlyVolumeUsd returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasHourlyVolumeUsd() bool {
	if o != nil && o.HourlyVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyVolumeUsd gets a reference to the given NullableString and assigns it to the HourlyVolumeUsd field.
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeUsd(v string) {
	o.HourlyVolumeUsd.Set(&v)
}
// SetHourlyVolumeUsdNil sets the value for HourlyVolumeUsd to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetHourlyVolumeUsdNil() {
	o.HourlyVolumeUsd.Set(nil)
}

// UnsetHourlyVolumeUsd ensures that no value is present for HourlyVolumeUsd, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetHourlyVolumeUsd() {
	o.HourlyVolumeUsd.Unset()
}

// GetHourlyTxns returns the HourlyTxns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2PairHourDataDTO) GetHourlyTxns() string {
	if o == nil || IsNil(o.HourlyTxns.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyTxns.Get()
}

// GetHourlyTxnsOk returns a tuple with the HourlyTxns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2PairHourDataDTO) GetHourlyTxnsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyTxns.Get(), o.HourlyTxns.IsSet()
}

// HasHourlyTxns returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasHourlyTxns() bool {
	if o != nil && o.HourlyTxns.IsSet() {
		return true
	}

	return false
}

// SetHourlyTxns gets a reference to the given NullableString and assigns it to the HourlyTxns field.
func (o *UniswapV2PairHourDataDTO) SetHourlyTxns(v string) {
	o.HourlyTxns.Set(&v)
}
// SetHourlyTxnsNil sets the value for HourlyTxns to be an explicit nil
func (o *UniswapV2PairHourDataDTO) SetHourlyTxnsNil() {
	o.HourlyTxns.Set(nil)
}

// UnsetHourlyTxns ensures that no value is present for HourlyTxns, not even an explicit nil
func (o *UniswapV2PairHourDataDTO) UnsetHourlyTxns() {
	o.HourlyTxns.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *UniswapV2PairHourDataDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2PairHourDataDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *UniswapV2PairHourDataDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *UniswapV2PairHourDataDTO) SetVid(v int64) {
	o.Vid = &v
}

func (o UniswapV2PairHourDataDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniswapV2PairHourDataDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.HourStartUnix) {
		toSerialize["hour_start_unix"] = o.HourStartUnix
	}
	if o.Pair.IsSet() {
		toSerialize["pair"] = o.Pair.Get()
	}
	if o.Reserve0.IsSet() {
		toSerialize["reserve_0"] = o.Reserve0.Get()
	}
	if o.Reserve1.IsSet() {
		toSerialize["reserve_1"] = o.Reserve1.Get()
	}
	if o.TotalSupply.IsSet() {
		toSerialize["total_supply"] = o.TotalSupply.Get()
	}
	if o.ReserveUsd.IsSet() {
		toSerialize["reserve_usd"] = o.ReserveUsd.Get()
	}
	if o.HourlyVolumeToken0.IsSet() {
		toSerialize["hourly_volume_token_0"] = o.HourlyVolumeToken0.Get()
	}
	if o.HourlyVolumeToken1.IsSet() {
		toSerialize["hourly_volume_token_1"] = o.HourlyVolumeToken1.Get()
	}
	if o.HourlyVolumeUsd.IsSet() {
		toSerialize["hourly_volume_usd"] = o.HourlyVolumeUsd.Get()
	}
	if o.HourlyTxns.IsSet() {
		toSerialize["hourly_txns"] = o.HourlyTxns.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	return toSerialize, nil
}

type NullableUniswapV2PairHourDataDTO struct {
	value *UniswapV2PairHourDataDTO
	isSet bool
}

func (v NullableUniswapV2PairHourDataDTO) Get() *UniswapV2PairHourDataDTO {
	return v.value
}

func (v *NullableUniswapV2PairHourDataDTO) Set(val *UniswapV2PairHourDataDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUniswapV2PairHourDataDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUniswapV2PairHourDataDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniswapV2PairHourDataDTO(val *UniswapV2PairHourDataDTO) *NullableUniswapV2PairHourDataDTO {
	return &NullableUniswapV2PairHourDataDTO{value: val, isSet: true}
}

func (v NullableUniswapV2PairHourDataDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniswapV2PairHourDataDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


