/*
OnChain API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TickV3DTO struct for TickV3DTO
type TickV3DTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	BlockNumber *int64 `json:"block_number,omitempty"`
	Vid *int64 `json:"vid,omitempty"`
	Id NullableString `json:"id,omitempty"`
	PoolAddress NullableString `json:"pool_address,omitempty"`
	TickIdx *BigInteger `json:"tick_idx,omitempty"`
	Pool NullableString `json:"pool,omitempty"`
	LiquidityGross *BigInteger `json:"liquidity_gross,omitempty"`
	LiquidityNet *BigInteger `json:"liquidity_net,omitempty"`
	Price0 NullableString `json:"price_0,omitempty"`
	Price1 NullableString `json:"price_1,omitempty"`
	VolumeToken0 NullableString `json:"volume_token_0,omitempty"`
	VolumeToken1 NullableString `json:"volume_token_1,omitempty"`
	VolumeUsd NullableString `json:"volume_usd,omitempty"`
	UntrackedVolumeUsd NullableString `json:"untracked_volume_usd,omitempty"`
	FeesUsd NullableString `json:"fees_usd,omitempty"`
	CollectedFeesToken0 NullableString `json:"collected_fees_token_0,omitempty"`
	CollectedFeesToken1 NullableString `json:"collected_fees_token_1,omitempty"`
	CollectedFeesUsd NullableString `json:"collected_fees_usd,omitempty"`
	CreatedAtTimestamp *time.Time `json:"created_at_timestamp,omitempty"`
	LiquidityProviderCount *BigInteger `json:"liquidity_provider_count,omitempty"`
	FeeGrowthOutside0x128 *BigInteger `json:"fee_growth_outside_0x128,omitempty"`
	FeeGrowthOutside1x128 *BigInteger `json:"fee_growth_outside_1x128,omitempty"`
}

// NewTickV3DTO instantiates a new TickV3DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTickV3DTO() *TickV3DTO {
	this := TickV3DTO{}
	return &this
}

// NewTickV3DTOWithDefaults instantiates a new TickV3DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTickV3DTOWithDefaults() *TickV3DTO {
	this := TickV3DTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *TickV3DTO) GetEntryTime() time.Time {
	if o == nil || o.EntryTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || o.EntryTime == nil {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *TickV3DTO) HasEntryTime() bool {
	if o != nil && o.EntryTime != nil {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *TickV3DTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *TickV3DTO) GetRecvTime() time.Time {
	if o == nil || o.RecvTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || o.RecvTime == nil {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *TickV3DTO) HasRecvTime() bool {
	if o != nil && o.RecvTime != nil {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *TickV3DTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *TickV3DTO) GetBlockNumber() int64 {
	if o == nil || o.BlockNumber == nil {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || o.BlockNumber == nil {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *TickV3DTO) HasBlockNumber() bool {
	if o != nil && o.BlockNumber != nil {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *TickV3DTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *TickV3DTO) GetVid() int64 {
	if o == nil || o.Vid == nil {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetVidOk() (*int64, bool) {
	if o == nil || o.Vid == nil {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *TickV3DTO) HasVid() bool {
	if o != nil && o.Vid != nil {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *TickV3DTO) SetVid(v int64) {
	o.Vid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TickV3DTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TickV3DTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TickV3DTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TickV3DTO) UnsetId() {
	o.Id.Unset()
}

// GetPoolAddress returns the PoolAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetPoolAddress() string {
	if o == nil || o.PoolAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.PoolAddress.Get()
}

// GetPoolAddressOk returns a tuple with the PoolAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetPoolAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolAddress.Get(), o.PoolAddress.IsSet()
}

// HasPoolAddress returns a boolean if a field has been set.
func (o *TickV3DTO) HasPoolAddress() bool {
	if o != nil && o.PoolAddress.IsSet() {
		return true
	}

	return false
}

// SetPoolAddress gets a reference to the given NullableString and assigns it to the PoolAddress field.
func (o *TickV3DTO) SetPoolAddress(v string) {
	o.PoolAddress.Set(&v)
}
// SetPoolAddressNil sets the value for PoolAddress to be an explicit nil
func (o *TickV3DTO) SetPoolAddressNil() {
	o.PoolAddress.Set(nil)
}

// UnsetPoolAddress ensures that no value is present for PoolAddress, not even an explicit nil
func (o *TickV3DTO) UnsetPoolAddress() {
	o.PoolAddress.Unset()
}

// GetTickIdx returns the TickIdx field value if set, zero value otherwise.
func (o *TickV3DTO) GetTickIdx() BigInteger {
	if o == nil || o.TickIdx == nil {
		var ret BigInteger
		return ret
	}
	return *o.TickIdx
}

// GetTickIdxOk returns a tuple with the TickIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetTickIdxOk() (*BigInteger, bool) {
	if o == nil || o.TickIdx == nil {
		return nil, false
	}
	return o.TickIdx, true
}

// HasTickIdx returns a boolean if a field has been set.
func (o *TickV3DTO) HasTickIdx() bool {
	if o != nil && o.TickIdx != nil {
		return true
	}

	return false
}

// SetTickIdx gets a reference to the given BigInteger and assigns it to the TickIdx field.
func (o *TickV3DTO) SetTickIdx(v BigInteger) {
	o.TickIdx = &v
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetPool() string {
	if o == nil || o.Pool.Get() == nil {
		var ret string
		return ret
	}
	return *o.Pool.Get()
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pool.Get(), o.Pool.IsSet()
}

// HasPool returns a boolean if a field has been set.
func (o *TickV3DTO) HasPool() bool {
	if o != nil && o.Pool.IsSet() {
		return true
	}

	return false
}

// SetPool gets a reference to the given NullableString and assigns it to the Pool field.
func (o *TickV3DTO) SetPool(v string) {
	o.Pool.Set(&v)
}
// SetPoolNil sets the value for Pool to be an explicit nil
func (o *TickV3DTO) SetPoolNil() {
	o.Pool.Set(nil)
}

// UnsetPool ensures that no value is present for Pool, not even an explicit nil
func (o *TickV3DTO) UnsetPool() {
	o.Pool.Unset()
}

// GetLiquidityGross returns the LiquidityGross field value if set, zero value otherwise.
func (o *TickV3DTO) GetLiquidityGross() BigInteger {
	if o == nil || o.LiquidityGross == nil {
		var ret BigInteger
		return ret
	}
	return *o.LiquidityGross
}

// GetLiquidityGrossOk returns a tuple with the LiquidityGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetLiquidityGrossOk() (*BigInteger, bool) {
	if o == nil || o.LiquidityGross == nil {
		return nil, false
	}
	return o.LiquidityGross, true
}

// HasLiquidityGross returns a boolean if a field has been set.
func (o *TickV3DTO) HasLiquidityGross() bool {
	if o != nil && o.LiquidityGross != nil {
		return true
	}

	return false
}

// SetLiquidityGross gets a reference to the given BigInteger and assigns it to the LiquidityGross field.
func (o *TickV3DTO) SetLiquidityGross(v BigInteger) {
	o.LiquidityGross = &v
}

// GetLiquidityNet returns the LiquidityNet field value if set, zero value otherwise.
func (o *TickV3DTO) GetLiquidityNet() BigInteger {
	if o == nil || o.LiquidityNet == nil {
		var ret BigInteger
		return ret
	}
	return *o.LiquidityNet
}

// GetLiquidityNetOk returns a tuple with the LiquidityNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetLiquidityNetOk() (*BigInteger, bool) {
	if o == nil || o.LiquidityNet == nil {
		return nil, false
	}
	return o.LiquidityNet, true
}

// HasLiquidityNet returns a boolean if a field has been set.
func (o *TickV3DTO) HasLiquidityNet() bool {
	if o != nil && o.LiquidityNet != nil {
		return true
	}

	return false
}

// SetLiquidityNet gets a reference to the given BigInteger and assigns it to the LiquidityNet field.
func (o *TickV3DTO) SetLiquidityNet(v BigInteger) {
	o.LiquidityNet = &v
}

// GetPrice0 returns the Price0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetPrice0() string {
	if o == nil || o.Price0.Get() == nil {
		var ret string
		return ret
	}
	return *o.Price0.Get()
}

// GetPrice0Ok returns a tuple with the Price0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetPrice0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price0.Get(), o.Price0.IsSet()
}

// HasPrice0 returns a boolean if a field has been set.
func (o *TickV3DTO) HasPrice0() bool {
	if o != nil && o.Price0.IsSet() {
		return true
	}

	return false
}

// SetPrice0 gets a reference to the given NullableString and assigns it to the Price0 field.
func (o *TickV3DTO) SetPrice0(v string) {
	o.Price0.Set(&v)
}
// SetPrice0Nil sets the value for Price0 to be an explicit nil
func (o *TickV3DTO) SetPrice0Nil() {
	o.Price0.Set(nil)
}

// UnsetPrice0 ensures that no value is present for Price0, not even an explicit nil
func (o *TickV3DTO) UnsetPrice0() {
	o.Price0.Unset()
}

// GetPrice1 returns the Price1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetPrice1() string {
	if o == nil || o.Price1.Get() == nil {
		var ret string
		return ret
	}
	return *o.Price1.Get()
}

// GetPrice1Ok returns a tuple with the Price1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetPrice1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Price1.Get(), o.Price1.IsSet()
}

// HasPrice1 returns a boolean if a field has been set.
func (o *TickV3DTO) HasPrice1() bool {
	if o != nil && o.Price1.IsSet() {
		return true
	}

	return false
}

// SetPrice1 gets a reference to the given NullableString and assigns it to the Price1 field.
func (o *TickV3DTO) SetPrice1(v string) {
	o.Price1.Set(&v)
}
// SetPrice1Nil sets the value for Price1 to be an explicit nil
func (o *TickV3DTO) SetPrice1Nil() {
	o.Price1.Set(nil)
}

// UnsetPrice1 ensures that no value is present for Price1, not even an explicit nil
func (o *TickV3DTO) UnsetPrice1() {
	o.Price1.Unset()
}

// GetVolumeToken0 returns the VolumeToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetVolumeToken0() string {
	if o == nil || o.VolumeToken0.Get() == nil {
		var ret string
		return ret
	}
	return *o.VolumeToken0.Get()
}

// GetVolumeToken0Ok returns a tuple with the VolumeToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetVolumeToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken0.Get(), o.VolumeToken0.IsSet()
}

// HasVolumeToken0 returns a boolean if a field has been set.
func (o *TickV3DTO) HasVolumeToken0() bool {
	if o != nil && o.VolumeToken0.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken0 gets a reference to the given NullableString and assigns it to the VolumeToken0 field.
func (o *TickV3DTO) SetVolumeToken0(v string) {
	o.VolumeToken0.Set(&v)
}
// SetVolumeToken0Nil sets the value for VolumeToken0 to be an explicit nil
func (o *TickV3DTO) SetVolumeToken0Nil() {
	o.VolumeToken0.Set(nil)
}

// UnsetVolumeToken0 ensures that no value is present for VolumeToken0, not even an explicit nil
func (o *TickV3DTO) UnsetVolumeToken0() {
	o.VolumeToken0.Unset()
}

// GetVolumeToken1 returns the VolumeToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetVolumeToken1() string {
	if o == nil || o.VolumeToken1.Get() == nil {
		var ret string
		return ret
	}
	return *o.VolumeToken1.Get()
}

// GetVolumeToken1Ok returns a tuple with the VolumeToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetVolumeToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken1.Get(), o.VolumeToken1.IsSet()
}

// HasVolumeToken1 returns a boolean if a field has been set.
func (o *TickV3DTO) HasVolumeToken1() bool {
	if o != nil && o.VolumeToken1.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken1 gets a reference to the given NullableString and assigns it to the VolumeToken1 field.
func (o *TickV3DTO) SetVolumeToken1(v string) {
	o.VolumeToken1.Set(&v)
}
// SetVolumeToken1Nil sets the value for VolumeToken1 to be an explicit nil
func (o *TickV3DTO) SetVolumeToken1Nil() {
	o.VolumeToken1.Set(nil)
}

// UnsetVolumeToken1 ensures that no value is present for VolumeToken1, not even an explicit nil
func (o *TickV3DTO) UnsetVolumeToken1() {
	o.VolumeToken1.Unset()
}

// GetVolumeUsd returns the VolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetVolumeUsd() string {
	if o == nil || o.VolumeUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.VolumeUsd.Get()
}

// GetVolumeUsdOk returns a tuple with the VolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeUsd.Get(), o.VolumeUsd.IsSet()
}

// HasVolumeUsd returns a boolean if a field has been set.
func (o *TickV3DTO) HasVolumeUsd() bool {
	if o != nil && o.VolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetVolumeUsd gets a reference to the given NullableString and assigns it to the VolumeUsd field.
func (o *TickV3DTO) SetVolumeUsd(v string) {
	o.VolumeUsd.Set(&v)
}
// SetVolumeUsdNil sets the value for VolumeUsd to be an explicit nil
func (o *TickV3DTO) SetVolumeUsdNil() {
	o.VolumeUsd.Set(nil)
}

// UnsetVolumeUsd ensures that no value is present for VolumeUsd, not even an explicit nil
func (o *TickV3DTO) UnsetVolumeUsd() {
	o.VolumeUsd.Unset()
}

// GetUntrackedVolumeUsd returns the UntrackedVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetUntrackedVolumeUsd() string {
	if o == nil || o.UntrackedVolumeUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.UntrackedVolumeUsd.Get()
}

// GetUntrackedVolumeUsdOk returns a tuple with the UntrackedVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetUntrackedVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UntrackedVolumeUsd.Get(), o.UntrackedVolumeUsd.IsSet()
}

// HasUntrackedVolumeUsd returns a boolean if a field has been set.
func (o *TickV3DTO) HasUntrackedVolumeUsd() bool {
	if o != nil && o.UntrackedVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetUntrackedVolumeUsd gets a reference to the given NullableString and assigns it to the UntrackedVolumeUsd field.
func (o *TickV3DTO) SetUntrackedVolumeUsd(v string) {
	o.UntrackedVolumeUsd.Set(&v)
}
// SetUntrackedVolumeUsdNil sets the value for UntrackedVolumeUsd to be an explicit nil
func (o *TickV3DTO) SetUntrackedVolumeUsdNil() {
	o.UntrackedVolumeUsd.Set(nil)
}

// UnsetUntrackedVolumeUsd ensures that no value is present for UntrackedVolumeUsd, not even an explicit nil
func (o *TickV3DTO) UnsetUntrackedVolumeUsd() {
	o.UntrackedVolumeUsd.Unset()
}

// GetFeesUsd returns the FeesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetFeesUsd() string {
	if o == nil || o.FeesUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.FeesUsd.Get()
}

// GetFeesUsdOk returns a tuple with the FeesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetFeesUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeesUsd.Get(), o.FeesUsd.IsSet()
}

// HasFeesUsd returns a boolean if a field has been set.
func (o *TickV3DTO) HasFeesUsd() bool {
	if o != nil && o.FeesUsd.IsSet() {
		return true
	}

	return false
}

// SetFeesUsd gets a reference to the given NullableString and assigns it to the FeesUsd field.
func (o *TickV3DTO) SetFeesUsd(v string) {
	o.FeesUsd.Set(&v)
}
// SetFeesUsdNil sets the value for FeesUsd to be an explicit nil
func (o *TickV3DTO) SetFeesUsdNil() {
	o.FeesUsd.Set(nil)
}

// UnsetFeesUsd ensures that no value is present for FeesUsd, not even an explicit nil
func (o *TickV3DTO) UnsetFeesUsd() {
	o.FeesUsd.Unset()
}

// GetCollectedFeesToken0 returns the CollectedFeesToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetCollectedFeesToken0() string {
	if o == nil || o.CollectedFeesToken0.Get() == nil {
		var ret string
		return ret
	}
	return *o.CollectedFeesToken0.Get()
}

// GetCollectedFeesToken0Ok returns a tuple with the CollectedFeesToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetCollectedFeesToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesToken0.Get(), o.CollectedFeesToken0.IsSet()
}

// HasCollectedFeesToken0 returns a boolean if a field has been set.
func (o *TickV3DTO) HasCollectedFeesToken0() bool {
	if o != nil && o.CollectedFeesToken0.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesToken0 gets a reference to the given NullableString and assigns it to the CollectedFeesToken0 field.
func (o *TickV3DTO) SetCollectedFeesToken0(v string) {
	o.CollectedFeesToken0.Set(&v)
}
// SetCollectedFeesToken0Nil sets the value for CollectedFeesToken0 to be an explicit nil
func (o *TickV3DTO) SetCollectedFeesToken0Nil() {
	o.CollectedFeesToken0.Set(nil)
}

// UnsetCollectedFeesToken0 ensures that no value is present for CollectedFeesToken0, not even an explicit nil
func (o *TickV3DTO) UnsetCollectedFeesToken0() {
	o.CollectedFeesToken0.Unset()
}

// GetCollectedFeesToken1 returns the CollectedFeesToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetCollectedFeesToken1() string {
	if o == nil || o.CollectedFeesToken1.Get() == nil {
		var ret string
		return ret
	}
	return *o.CollectedFeesToken1.Get()
}

// GetCollectedFeesToken1Ok returns a tuple with the CollectedFeesToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetCollectedFeesToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesToken1.Get(), o.CollectedFeesToken1.IsSet()
}

// HasCollectedFeesToken1 returns a boolean if a field has been set.
func (o *TickV3DTO) HasCollectedFeesToken1() bool {
	if o != nil && o.CollectedFeesToken1.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesToken1 gets a reference to the given NullableString and assigns it to the CollectedFeesToken1 field.
func (o *TickV3DTO) SetCollectedFeesToken1(v string) {
	o.CollectedFeesToken1.Set(&v)
}
// SetCollectedFeesToken1Nil sets the value for CollectedFeesToken1 to be an explicit nil
func (o *TickV3DTO) SetCollectedFeesToken1Nil() {
	o.CollectedFeesToken1.Set(nil)
}

// UnsetCollectedFeesToken1 ensures that no value is present for CollectedFeesToken1, not even an explicit nil
func (o *TickV3DTO) UnsetCollectedFeesToken1() {
	o.CollectedFeesToken1.Unset()
}

// GetCollectedFeesUsd returns the CollectedFeesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TickV3DTO) GetCollectedFeesUsd() string {
	if o == nil || o.CollectedFeesUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.CollectedFeesUsd.Get()
}

// GetCollectedFeesUsdOk returns a tuple with the CollectedFeesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TickV3DTO) GetCollectedFeesUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesUsd.Get(), o.CollectedFeesUsd.IsSet()
}

// HasCollectedFeesUsd returns a boolean if a field has been set.
func (o *TickV3DTO) HasCollectedFeesUsd() bool {
	if o != nil && o.CollectedFeesUsd.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesUsd gets a reference to the given NullableString and assigns it to the CollectedFeesUsd field.
func (o *TickV3DTO) SetCollectedFeesUsd(v string) {
	o.CollectedFeesUsd.Set(&v)
}
// SetCollectedFeesUsdNil sets the value for CollectedFeesUsd to be an explicit nil
func (o *TickV3DTO) SetCollectedFeesUsdNil() {
	o.CollectedFeesUsd.Set(nil)
}

// UnsetCollectedFeesUsd ensures that no value is present for CollectedFeesUsd, not even an explicit nil
func (o *TickV3DTO) UnsetCollectedFeesUsd() {
	o.CollectedFeesUsd.Unset()
}

// GetCreatedAtTimestamp returns the CreatedAtTimestamp field value if set, zero value otherwise.
func (o *TickV3DTO) GetCreatedAtTimestamp() time.Time {
	if o == nil || o.CreatedAtTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtTimestamp
}

// GetCreatedAtTimestampOk returns a tuple with the CreatedAtTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetCreatedAtTimestampOk() (*time.Time, bool) {
	if o == nil || o.CreatedAtTimestamp == nil {
		return nil, false
	}
	return o.CreatedAtTimestamp, true
}

// HasCreatedAtTimestamp returns a boolean if a field has been set.
func (o *TickV3DTO) HasCreatedAtTimestamp() bool {
	if o != nil && o.CreatedAtTimestamp != nil {
		return true
	}

	return false
}

// SetCreatedAtTimestamp gets a reference to the given time.Time and assigns it to the CreatedAtTimestamp field.
func (o *TickV3DTO) SetCreatedAtTimestamp(v time.Time) {
	o.CreatedAtTimestamp = &v
}

// GetLiquidityProviderCount returns the LiquidityProviderCount field value if set, zero value otherwise.
func (o *TickV3DTO) GetLiquidityProviderCount() BigInteger {
	if o == nil || o.LiquidityProviderCount == nil {
		var ret BigInteger
		return ret
	}
	return *o.LiquidityProviderCount
}

// GetLiquidityProviderCountOk returns a tuple with the LiquidityProviderCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetLiquidityProviderCountOk() (*BigInteger, bool) {
	if o == nil || o.LiquidityProviderCount == nil {
		return nil, false
	}
	return o.LiquidityProviderCount, true
}

// HasLiquidityProviderCount returns a boolean if a field has been set.
func (o *TickV3DTO) HasLiquidityProviderCount() bool {
	if o != nil && o.LiquidityProviderCount != nil {
		return true
	}

	return false
}

// SetLiquidityProviderCount gets a reference to the given BigInteger and assigns it to the LiquidityProviderCount field.
func (o *TickV3DTO) SetLiquidityProviderCount(v BigInteger) {
	o.LiquidityProviderCount = &v
}

// GetFeeGrowthOutside0x128 returns the FeeGrowthOutside0x128 field value if set, zero value otherwise.
func (o *TickV3DTO) GetFeeGrowthOutside0x128() BigInteger {
	if o == nil || o.FeeGrowthOutside0x128 == nil {
		var ret BigInteger
		return ret
	}
	return *o.FeeGrowthOutside0x128
}

// GetFeeGrowthOutside0x128Ok returns a tuple with the FeeGrowthOutside0x128 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetFeeGrowthOutside0x128Ok() (*BigInteger, bool) {
	if o == nil || o.FeeGrowthOutside0x128 == nil {
		return nil, false
	}
	return o.FeeGrowthOutside0x128, true
}

// HasFeeGrowthOutside0x128 returns a boolean if a field has been set.
func (o *TickV3DTO) HasFeeGrowthOutside0x128() bool {
	if o != nil && o.FeeGrowthOutside0x128 != nil {
		return true
	}

	return false
}

// SetFeeGrowthOutside0x128 gets a reference to the given BigInteger and assigns it to the FeeGrowthOutside0x128 field.
func (o *TickV3DTO) SetFeeGrowthOutside0x128(v BigInteger) {
	o.FeeGrowthOutside0x128 = &v
}

// GetFeeGrowthOutside1x128 returns the FeeGrowthOutside1x128 field value if set, zero value otherwise.
func (o *TickV3DTO) GetFeeGrowthOutside1x128() BigInteger {
	if o == nil || o.FeeGrowthOutside1x128 == nil {
		var ret BigInteger
		return ret
	}
	return *o.FeeGrowthOutside1x128
}

// GetFeeGrowthOutside1x128Ok returns a tuple with the FeeGrowthOutside1x128 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TickV3DTO) GetFeeGrowthOutside1x128Ok() (*BigInteger, bool) {
	if o == nil || o.FeeGrowthOutside1x128 == nil {
		return nil, false
	}
	return o.FeeGrowthOutside1x128, true
}

// HasFeeGrowthOutside1x128 returns a boolean if a field has been set.
func (o *TickV3DTO) HasFeeGrowthOutside1x128() bool {
	if o != nil && o.FeeGrowthOutside1x128 != nil {
		return true
	}

	return false
}

// SetFeeGrowthOutside1x128 gets a reference to the given BigInteger and assigns it to the FeeGrowthOutside1x128 field.
func (o *TickV3DTO) SetFeeGrowthOutside1x128(v BigInteger) {
	o.FeeGrowthOutside1x128 = &v
}

func (o TickV3DTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryTime != nil {
		toSerialize["entry_time"] = o.EntryTime
	}
	if o.RecvTime != nil {
		toSerialize["recv_time"] = o.RecvTime
	}
	if o.BlockNumber != nil {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Vid != nil {
		toSerialize["vid"] = o.Vid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.PoolAddress.IsSet() {
		toSerialize["pool_address"] = o.PoolAddress.Get()
	}
	if o.TickIdx != nil {
		toSerialize["tick_idx"] = o.TickIdx
	}
	if o.Pool.IsSet() {
		toSerialize["pool"] = o.Pool.Get()
	}
	if o.LiquidityGross != nil {
		toSerialize["liquidity_gross"] = o.LiquidityGross
	}
	if o.LiquidityNet != nil {
		toSerialize["liquidity_net"] = o.LiquidityNet
	}
	if o.Price0.IsSet() {
		toSerialize["price_0"] = o.Price0.Get()
	}
	if o.Price1.IsSet() {
		toSerialize["price_1"] = o.Price1.Get()
	}
	if o.VolumeToken0.IsSet() {
		toSerialize["volume_token_0"] = o.VolumeToken0.Get()
	}
	if o.VolumeToken1.IsSet() {
		toSerialize["volume_token_1"] = o.VolumeToken1.Get()
	}
	if o.VolumeUsd.IsSet() {
		toSerialize["volume_usd"] = o.VolumeUsd.Get()
	}
	if o.UntrackedVolumeUsd.IsSet() {
		toSerialize["untracked_volume_usd"] = o.UntrackedVolumeUsd.Get()
	}
	if o.FeesUsd.IsSet() {
		toSerialize["fees_usd"] = o.FeesUsd.Get()
	}
	if o.CollectedFeesToken0.IsSet() {
		toSerialize["collected_fees_token_0"] = o.CollectedFeesToken0.Get()
	}
	if o.CollectedFeesToken1.IsSet() {
		toSerialize["collected_fees_token_1"] = o.CollectedFeesToken1.Get()
	}
	if o.CollectedFeesUsd.IsSet() {
		toSerialize["collected_fees_usd"] = o.CollectedFeesUsd.Get()
	}
	if o.CreatedAtTimestamp != nil {
		toSerialize["created_at_timestamp"] = o.CreatedAtTimestamp
	}
	if o.LiquidityProviderCount != nil {
		toSerialize["liquidity_provider_count"] = o.LiquidityProviderCount
	}
	if o.FeeGrowthOutside0x128 != nil {
		toSerialize["fee_growth_outside_0x128"] = o.FeeGrowthOutside0x128
	}
	if o.FeeGrowthOutside1x128 != nil {
		toSerialize["fee_growth_outside_1x128"] = o.FeeGrowthOutside1x128
	}
	return json.Marshal(toSerialize)
}

type NullableTickV3DTO struct {
	value *TickV3DTO
	isSet bool
}

func (v NullableTickV3DTO) Get() *TickV3DTO {
	return v.value
}

func (v *NullableTickV3DTO) Set(val *TickV3DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTickV3DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTickV3DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTickV3DTO(val *TickV3DTO) *NullableTickV3DTO {
	return &NullableTickV3DTO{value: val, isSet: true}
}

func (v NullableTickV3DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTickV3DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


