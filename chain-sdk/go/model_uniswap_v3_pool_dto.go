/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UniswapV3PoolDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniswapV3PoolDTO{}

// UniswapV3PoolDTO Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.
type UniswapV3PoolDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
	// Pool address.
	Id NullableString `json:"id,omitempty"`
	// Creation time.
	CreatedAtTimestamp *time.Time `json:"created_at_timestamp,omitempty"`
	// Reference to token0 as stored in pool contract.
	Token0 NullableString `json:"token_0,omitempty"`
	// Reference to token1 as stored in pool contract.
	Token1 NullableString `json:"token_1,omitempty"`
	FeeTier *NumericsBigInteger `json:"fee_tier,omitempty"`
	Liquidity *NumericsBigInteger `json:"liquidity,omitempty"`
	SqrtPrice *NumericsBigInteger `json:"sqrt_price,omitempty"`
	FeeGrowthGlobal0x128 *NumericsBigInteger `json:"fee_growth_global_0x128,omitempty"`
	FeeGrowthGlobal1x128 *NumericsBigInteger `json:"fee_growth_global_1x128,omitempty"`
	// Token0 per token1.
	Token0Price NullableString `json:"token_0_price,omitempty"`
	// Token1 per token0.
	Token1Price NullableString `json:"token_1_price,omitempty"`
	Tick *NumericsBigInteger `json:"tick,omitempty"`
	ObservationIndex *NumericsBigInteger `json:"observation_index,omitempty"`
	// All time token0 swapped.
	VolumeToken0 NullableString `json:"volume_token_0,omitempty"`
	// All time token1 swapped.
	VolumeToken1 NullableString `json:"volume_token_1,omitempty"`
	// All time USD swapped.
	VolumeUsd NullableString `json:"volume_usd,omitempty"`
	// All time USD swapped, unfiltered for unreliable USD pools.
	UntrackedVolumeUsd NullableString `json:"untracked_volume_usd,omitempty"`
	// Fees in USD.
	FeesUsd NullableString `json:"fees_usd,omitempty"`
	TxCount *NumericsBigInteger `json:"tx_count,omitempty"`
	// All time fees collected token0.
	CollectedFeesToken0 NullableString `json:"collected_fees_token_0,omitempty"`
	// All time fees collected token1.
	CollectedFeesToken1 NullableString `json:"collected_fees_token_1,omitempty"`
	// All time fees collected derived USD.
	CollectedFeesUsd NullableString `json:"collected_fees_usd,omitempty"`
	// Total token 0 across all ticks.
	TotalValueLockedToken0 NullableString `json:"total_value_locked_token_0,omitempty"`
	// 
	TotalValueLockedToken1 NullableString `json:"total_value_locked_token_1,omitempty"`
	// Total token 1 across all ticks.
	TotalValueLockedEth NullableString `json:"total_value_locked_eth,omitempty"`
	// Total value locked USD.
	TotalValueLockedUsd NullableString `json:"total_value_locked_usd,omitempty"`
	// Total value locked derived ETH.
	TotalValueLockedUsdUntracked NullableString `json:"total_value_locked_usd_untracked,omitempty"`
	// Liquidity providers count, used to detect new exchanges.
	LiquidityProviderCount NullableString `json:"liquidity_provider_count,omitempty"`
	EvaluatedAsk *float64 `json:"evaluated_ask,omitempty"`
}

// NewUniswapV3PoolDTO instantiates a new UniswapV3PoolDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniswapV3PoolDTO() *UniswapV3PoolDTO {
	this := UniswapV3PoolDTO{}
	return &this
}

// NewUniswapV3PoolDTOWithDefaults instantiates a new UniswapV3PoolDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniswapV3PoolDTOWithDefaults() *UniswapV3PoolDTO {
	this := UniswapV3PoolDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *UniswapV3PoolDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *UniswapV3PoolDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *UniswapV3PoolDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *UniswapV3PoolDTO) SetVid(v int64) {
	o.Vid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UniswapV3PoolDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UniswapV3PoolDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetId() {
	o.Id.Unset()
}

// GetCreatedAtTimestamp returns the CreatedAtTimestamp field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetCreatedAtTimestamp() time.Time {
	if o == nil || IsNil(o.CreatedAtTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtTimestamp
}

// GetCreatedAtTimestampOk returns a tuple with the CreatedAtTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetCreatedAtTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtTimestamp) {
		return nil, false
	}
	return o.CreatedAtTimestamp, true
}

// HasCreatedAtTimestamp returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasCreatedAtTimestamp() bool {
	if o != nil && !IsNil(o.CreatedAtTimestamp) {
		return true
	}

	return false
}

// SetCreatedAtTimestamp gets a reference to the given time.Time and assigns it to the CreatedAtTimestamp field.
func (o *UniswapV3PoolDTO) SetCreatedAtTimestamp(v time.Time) {
	o.CreatedAtTimestamp = &v
}

// GetToken0 returns the Token0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetToken0() string {
	if o == nil || IsNil(o.Token0.Get()) {
		var ret string
		return ret
	}
	return *o.Token0.Get()
}

// GetToken0Ok returns a tuple with the Token0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token0.Get(), o.Token0.IsSet()
}

// HasToken0 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasToken0() bool {
	if o != nil && o.Token0.IsSet() {
		return true
	}

	return false
}

// SetToken0 gets a reference to the given NullableString and assigns it to the Token0 field.
func (o *UniswapV3PoolDTO) SetToken0(v string) {
	o.Token0.Set(&v)
}
// SetToken0Nil sets the value for Token0 to be an explicit nil
func (o *UniswapV3PoolDTO) SetToken0Nil() {
	o.Token0.Set(nil)
}

// UnsetToken0 ensures that no value is present for Token0, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetToken0() {
	o.Token0.Unset()
}

// GetToken1 returns the Token1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetToken1() string {
	if o == nil || IsNil(o.Token1.Get()) {
		var ret string
		return ret
	}
	return *o.Token1.Get()
}

// GetToken1Ok returns a tuple with the Token1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token1.Get(), o.Token1.IsSet()
}

// HasToken1 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasToken1() bool {
	if o != nil && o.Token1.IsSet() {
		return true
	}

	return false
}

// SetToken1 gets a reference to the given NullableString and assigns it to the Token1 field.
func (o *UniswapV3PoolDTO) SetToken1(v string) {
	o.Token1.Set(&v)
}
// SetToken1Nil sets the value for Token1 to be an explicit nil
func (o *UniswapV3PoolDTO) SetToken1Nil() {
	o.Token1.Set(nil)
}

// UnsetToken1 ensures that no value is present for Token1, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetToken1() {
	o.Token1.Unset()
}

// GetFeeTier returns the FeeTier field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetFeeTier() NumericsBigInteger {
	if o == nil || IsNil(o.FeeTier) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.FeeTier
}

// GetFeeTierOk returns a tuple with the FeeTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetFeeTierOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.FeeTier) {
		return nil, false
	}
	return o.FeeTier, true
}

// HasFeeTier returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasFeeTier() bool {
	if o != nil && !IsNil(o.FeeTier) {
		return true
	}

	return false
}

// SetFeeTier gets a reference to the given NumericsBigInteger and assigns it to the FeeTier field.
func (o *UniswapV3PoolDTO) SetFeeTier(v NumericsBigInteger) {
	o.FeeTier = &v
}

// GetLiquidity returns the Liquidity field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetLiquidity() NumericsBigInteger {
	if o == nil || IsNil(o.Liquidity) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.Liquidity
}

// GetLiquidityOk returns a tuple with the Liquidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetLiquidityOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.Liquidity) {
		return nil, false
	}
	return o.Liquidity, true
}

// HasLiquidity returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasLiquidity() bool {
	if o != nil && !IsNil(o.Liquidity) {
		return true
	}

	return false
}

// SetLiquidity gets a reference to the given NumericsBigInteger and assigns it to the Liquidity field.
func (o *UniswapV3PoolDTO) SetLiquidity(v NumericsBigInteger) {
	o.Liquidity = &v
}

// GetSqrtPrice returns the SqrtPrice field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetSqrtPrice() NumericsBigInteger {
	if o == nil || IsNil(o.SqrtPrice) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.SqrtPrice
}

// GetSqrtPriceOk returns a tuple with the SqrtPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetSqrtPriceOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.SqrtPrice) {
		return nil, false
	}
	return o.SqrtPrice, true
}

// HasSqrtPrice returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasSqrtPrice() bool {
	if o != nil && !IsNil(o.SqrtPrice) {
		return true
	}

	return false
}

// SetSqrtPrice gets a reference to the given NumericsBigInteger and assigns it to the SqrtPrice field.
func (o *UniswapV3PoolDTO) SetSqrtPrice(v NumericsBigInteger) {
	o.SqrtPrice = &v
}

// GetFeeGrowthGlobal0x128 returns the FeeGrowthGlobal0x128 field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetFeeGrowthGlobal0x128() NumericsBigInteger {
	if o == nil || IsNil(o.FeeGrowthGlobal0x128) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.FeeGrowthGlobal0x128
}

// GetFeeGrowthGlobal0x128Ok returns a tuple with the FeeGrowthGlobal0x128 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetFeeGrowthGlobal0x128Ok() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.FeeGrowthGlobal0x128) {
		return nil, false
	}
	return o.FeeGrowthGlobal0x128, true
}

// HasFeeGrowthGlobal0x128 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasFeeGrowthGlobal0x128() bool {
	if o != nil && !IsNil(o.FeeGrowthGlobal0x128) {
		return true
	}

	return false
}

// SetFeeGrowthGlobal0x128 gets a reference to the given NumericsBigInteger and assigns it to the FeeGrowthGlobal0x128 field.
func (o *UniswapV3PoolDTO) SetFeeGrowthGlobal0x128(v NumericsBigInteger) {
	o.FeeGrowthGlobal0x128 = &v
}

// GetFeeGrowthGlobal1x128 returns the FeeGrowthGlobal1x128 field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetFeeGrowthGlobal1x128() NumericsBigInteger {
	if o == nil || IsNil(o.FeeGrowthGlobal1x128) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.FeeGrowthGlobal1x128
}

// GetFeeGrowthGlobal1x128Ok returns a tuple with the FeeGrowthGlobal1x128 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetFeeGrowthGlobal1x128Ok() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.FeeGrowthGlobal1x128) {
		return nil, false
	}
	return o.FeeGrowthGlobal1x128, true
}

// HasFeeGrowthGlobal1x128 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasFeeGrowthGlobal1x128() bool {
	if o != nil && !IsNil(o.FeeGrowthGlobal1x128) {
		return true
	}

	return false
}

// SetFeeGrowthGlobal1x128 gets a reference to the given NumericsBigInteger and assigns it to the FeeGrowthGlobal1x128 field.
func (o *UniswapV3PoolDTO) SetFeeGrowthGlobal1x128(v NumericsBigInteger) {
	o.FeeGrowthGlobal1x128 = &v
}

// GetToken0Price returns the Token0Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetToken0Price() string {
	if o == nil || IsNil(o.Token0Price.Get()) {
		var ret string
		return ret
	}
	return *o.Token0Price.Get()
}

// GetToken0PriceOk returns a tuple with the Token0Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetToken0PriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token0Price.Get(), o.Token0Price.IsSet()
}

// HasToken0Price returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasToken0Price() bool {
	if o != nil && o.Token0Price.IsSet() {
		return true
	}

	return false
}

// SetToken0Price gets a reference to the given NullableString and assigns it to the Token0Price field.
func (o *UniswapV3PoolDTO) SetToken0Price(v string) {
	o.Token0Price.Set(&v)
}
// SetToken0PriceNil sets the value for Token0Price to be an explicit nil
func (o *UniswapV3PoolDTO) SetToken0PriceNil() {
	o.Token0Price.Set(nil)
}

// UnsetToken0Price ensures that no value is present for Token0Price, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetToken0Price() {
	o.Token0Price.Unset()
}

// GetToken1Price returns the Token1Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetToken1Price() string {
	if o == nil || IsNil(o.Token1Price.Get()) {
		var ret string
		return ret
	}
	return *o.Token1Price.Get()
}

// GetToken1PriceOk returns a tuple with the Token1Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetToken1PriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token1Price.Get(), o.Token1Price.IsSet()
}

// HasToken1Price returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasToken1Price() bool {
	if o != nil && o.Token1Price.IsSet() {
		return true
	}

	return false
}

// SetToken1Price gets a reference to the given NullableString and assigns it to the Token1Price field.
func (o *UniswapV3PoolDTO) SetToken1Price(v string) {
	o.Token1Price.Set(&v)
}
// SetToken1PriceNil sets the value for Token1Price to be an explicit nil
func (o *UniswapV3PoolDTO) SetToken1PriceNil() {
	o.Token1Price.Set(nil)
}

// UnsetToken1Price ensures that no value is present for Token1Price, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetToken1Price() {
	o.Token1Price.Unset()
}

// GetTick returns the Tick field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetTick() NumericsBigInteger {
	if o == nil || IsNil(o.Tick) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.Tick
}

// GetTickOk returns a tuple with the Tick field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetTickOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.Tick) {
		return nil, false
	}
	return o.Tick, true
}

// HasTick returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTick() bool {
	if o != nil && !IsNil(o.Tick) {
		return true
	}

	return false
}

// SetTick gets a reference to the given NumericsBigInteger and assigns it to the Tick field.
func (o *UniswapV3PoolDTO) SetTick(v NumericsBigInteger) {
	o.Tick = &v
}

// GetObservationIndex returns the ObservationIndex field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetObservationIndex() NumericsBigInteger {
	if o == nil || IsNil(o.ObservationIndex) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.ObservationIndex
}

// GetObservationIndexOk returns a tuple with the ObservationIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetObservationIndexOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.ObservationIndex) {
		return nil, false
	}
	return o.ObservationIndex, true
}

// HasObservationIndex returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasObservationIndex() bool {
	if o != nil && !IsNil(o.ObservationIndex) {
		return true
	}

	return false
}

// SetObservationIndex gets a reference to the given NumericsBigInteger and assigns it to the ObservationIndex field.
func (o *UniswapV3PoolDTO) SetObservationIndex(v NumericsBigInteger) {
	o.ObservationIndex = &v
}

// GetVolumeToken0 returns the VolumeToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetVolumeToken0() string {
	if o == nil || IsNil(o.VolumeToken0.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeToken0.Get()
}

// GetVolumeToken0Ok returns a tuple with the VolumeToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetVolumeToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken0.Get(), o.VolumeToken0.IsSet()
}

// HasVolumeToken0 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasVolumeToken0() bool {
	if o != nil && o.VolumeToken0.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken0 gets a reference to the given NullableString and assigns it to the VolumeToken0 field.
func (o *UniswapV3PoolDTO) SetVolumeToken0(v string) {
	o.VolumeToken0.Set(&v)
}
// SetVolumeToken0Nil sets the value for VolumeToken0 to be an explicit nil
func (o *UniswapV3PoolDTO) SetVolumeToken0Nil() {
	o.VolumeToken0.Set(nil)
}

// UnsetVolumeToken0 ensures that no value is present for VolumeToken0, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetVolumeToken0() {
	o.VolumeToken0.Unset()
}

// GetVolumeToken1 returns the VolumeToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetVolumeToken1() string {
	if o == nil || IsNil(o.VolumeToken1.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeToken1.Get()
}

// GetVolumeToken1Ok returns a tuple with the VolumeToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetVolumeToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken1.Get(), o.VolumeToken1.IsSet()
}

// HasVolumeToken1 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasVolumeToken1() bool {
	if o != nil && o.VolumeToken1.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken1 gets a reference to the given NullableString and assigns it to the VolumeToken1 field.
func (o *UniswapV3PoolDTO) SetVolumeToken1(v string) {
	o.VolumeToken1.Set(&v)
}
// SetVolumeToken1Nil sets the value for VolumeToken1 to be an explicit nil
func (o *UniswapV3PoolDTO) SetVolumeToken1Nil() {
	o.VolumeToken1.Set(nil)
}

// UnsetVolumeToken1 ensures that no value is present for VolumeToken1, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetVolumeToken1() {
	o.VolumeToken1.Unset()
}

// GetVolumeUsd returns the VolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetVolumeUsd() string {
	if o == nil || IsNil(o.VolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeUsd.Get()
}

// GetVolumeUsdOk returns a tuple with the VolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeUsd.Get(), o.VolumeUsd.IsSet()
}

// HasVolumeUsd returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasVolumeUsd() bool {
	if o != nil && o.VolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetVolumeUsd gets a reference to the given NullableString and assigns it to the VolumeUsd field.
func (o *UniswapV3PoolDTO) SetVolumeUsd(v string) {
	o.VolumeUsd.Set(&v)
}
// SetVolumeUsdNil sets the value for VolumeUsd to be an explicit nil
func (o *UniswapV3PoolDTO) SetVolumeUsdNil() {
	o.VolumeUsd.Set(nil)
}

// UnsetVolumeUsd ensures that no value is present for VolumeUsd, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetVolumeUsd() {
	o.VolumeUsd.Unset()
}

// GetUntrackedVolumeUsd returns the UntrackedVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetUntrackedVolumeUsd() string {
	if o == nil || IsNil(o.UntrackedVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.UntrackedVolumeUsd.Get()
}

// GetUntrackedVolumeUsdOk returns a tuple with the UntrackedVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetUntrackedVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UntrackedVolumeUsd.Get(), o.UntrackedVolumeUsd.IsSet()
}

// HasUntrackedVolumeUsd returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasUntrackedVolumeUsd() bool {
	if o != nil && o.UntrackedVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetUntrackedVolumeUsd gets a reference to the given NullableString and assigns it to the UntrackedVolumeUsd field.
func (o *UniswapV3PoolDTO) SetUntrackedVolumeUsd(v string) {
	o.UntrackedVolumeUsd.Set(&v)
}
// SetUntrackedVolumeUsdNil sets the value for UntrackedVolumeUsd to be an explicit nil
func (o *UniswapV3PoolDTO) SetUntrackedVolumeUsdNil() {
	o.UntrackedVolumeUsd.Set(nil)
}

// UnsetUntrackedVolumeUsd ensures that no value is present for UntrackedVolumeUsd, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetUntrackedVolumeUsd() {
	o.UntrackedVolumeUsd.Unset()
}

// GetFeesUsd returns the FeesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetFeesUsd() string {
	if o == nil || IsNil(o.FeesUsd.Get()) {
		var ret string
		return ret
	}
	return *o.FeesUsd.Get()
}

// GetFeesUsdOk returns a tuple with the FeesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetFeesUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeesUsd.Get(), o.FeesUsd.IsSet()
}

// HasFeesUsd returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasFeesUsd() bool {
	if o != nil && o.FeesUsd.IsSet() {
		return true
	}

	return false
}

// SetFeesUsd gets a reference to the given NullableString and assigns it to the FeesUsd field.
func (o *UniswapV3PoolDTO) SetFeesUsd(v string) {
	o.FeesUsd.Set(&v)
}
// SetFeesUsdNil sets the value for FeesUsd to be an explicit nil
func (o *UniswapV3PoolDTO) SetFeesUsdNil() {
	o.FeesUsd.Set(nil)
}

// UnsetFeesUsd ensures that no value is present for FeesUsd, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetFeesUsd() {
	o.FeesUsd.Unset()
}

// GetTxCount returns the TxCount field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetTxCount() NumericsBigInteger {
	if o == nil || IsNil(o.TxCount) {
		var ret NumericsBigInteger
		return ret
	}
	return *o.TxCount
}

// GetTxCountOk returns a tuple with the TxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetTxCountOk() (*NumericsBigInteger, bool) {
	if o == nil || IsNil(o.TxCount) {
		return nil, false
	}
	return o.TxCount, true
}

// HasTxCount returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTxCount() bool {
	if o != nil && !IsNil(o.TxCount) {
		return true
	}

	return false
}

// SetTxCount gets a reference to the given NumericsBigInteger and assigns it to the TxCount field.
func (o *UniswapV3PoolDTO) SetTxCount(v NumericsBigInteger) {
	o.TxCount = &v
}

// GetCollectedFeesToken0 returns the CollectedFeesToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetCollectedFeesToken0() string {
	if o == nil || IsNil(o.CollectedFeesToken0.Get()) {
		var ret string
		return ret
	}
	return *o.CollectedFeesToken0.Get()
}

// GetCollectedFeesToken0Ok returns a tuple with the CollectedFeesToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetCollectedFeesToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesToken0.Get(), o.CollectedFeesToken0.IsSet()
}

// HasCollectedFeesToken0 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasCollectedFeesToken0() bool {
	if o != nil && o.CollectedFeesToken0.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesToken0 gets a reference to the given NullableString and assigns it to the CollectedFeesToken0 field.
func (o *UniswapV3PoolDTO) SetCollectedFeesToken0(v string) {
	o.CollectedFeesToken0.Set(&v)
}
// SetCollectedFeesToken0Nil sets the value for CollectedFeesToken0 to be an explicit nil
func (o *UniswapV3PoolDTO) SetCollectedFeesToken0Nil() {
	o.CollectedFeesToken0.Set(nil)
}

// UnsetCollectedFeesToken0 ensures that no value is present for CollectedFeesToken0, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetCollectedFeesToken0() {
	o.CollectedFeesToken0.Unset()
}

// GetCollectedFeesToken1 returns the CollectedFeesToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetCollectedFeesToken1() string {
	if o == nil || IsNil(o.CollectedFeesToken1.Get()) {
		var ret string
		return ret
	}
	return *o.CollectedFeesToken1.Get()
}

// GetCollectedFeesToken1Ok returns a tuple with the CollectedFeesToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetCollectedFeesToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesToken1.Get(), o.CollectedFeesToken1.IsSet()
}

// HasCollectedFeesToken1 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasCollectedFeesToken1() bool {
	if o != nil && o.CollectedFeesToken1.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesToken1 gets a reference to the given NullableString and assigns it to the CollectedFeesToken1 field.
func (o *UniswapV3PoolDTO) SetCollectedFeesToken1(v string) {
	o.CollectedFeesToken1.Set(&v)
}
// SetCollectedFeesToken1Nil sets the value for CollectedFeesToken1 to be an explicit nil
func (o *UniswapV3PoolDTO) SetCollectedFeesToken1Nil() {
	o.CollectedFeesToken1.Set(nil)
}

// UnsetCollectedFeesToken1 ensures that no value is present for CollectedFeesToken1, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetCollectedFeesToken1() {
	o.CollectedFeesToken1.Unset()
}

// GetCollectedFeesUsd returns the CollectedFeesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetCollectedFeesUsd() string {
	if o == nil || IsNil(o.CollectedFeesUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CollectedFeesUsd.Get()
}

// GetCollectedFeesUsdOk returns a tuple with the CollectedFeesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetCollectedFeesUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectedFeesUsd.Get(), o.CollectedFeesUsd.IsSet()
}

// HasCollectedFeesUsd returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasCollectedFeesUsd() bool {
	if o != nil && o.CollectedFeesUsd.IsSet() {
		return true
	}

	return false
}

// SetCollectedFeesUsd gets a reference to the given NullableString and assigns it to the CollectedFeesUsd field.
func (o *UniswapV3PoolDTO) SetCollectedFeesUsd(v string) {
	o.CollectedFeesUsd.Set(&v)
}
// SetCollectedFeesUsdNil sets the value for CollectedFeesUsd to be an explicit nil
func (o *UniswapV3PoolDTO) SetCollectedFeesUsdNil() {
	o.CollectedFeesUsd.Set(nil)
}

// UnsetCollectedFeesUsd ensures that no value is present for CollectedFeesUsd, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetCollectedFeesUsd() {
	o.CollectedFeesUsd.Unset()
}

// GetTotalValueLockedToken0 returns the TotalValueLockedToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetTotalValueLockedToken0() string {
	if o == nil || IsNil(o.TotalValueLockedToken0.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedToken0.Get()
}

// GetTotalValueLockedToken0Ok returns a tuple with the TotalValueLockedToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetTotalValueLockedToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedToken0.Get(), o.TotalValueLockedToken0.IsSet()
}

// HasTotalValueLockedToken0 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTotalValueLockedToken0() bool {
	if o != nil && o.TotalValueLockedToken0.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedToken0 gets a reference to the given NullableString and assigns it to the TotalValueLockedToken0 field.
func (o *UniswapV3PoolDTO) SetTotalValueLockedToken0(v string) {
	o.TotalValueLockedToken0.Set(&v)
}
// SetTotalValueLockedToken0Nil sets the value for TotalValueLockedToken0 to be an explicit nil
func (o *UniswapV3PoolDTO) SetTotalValueLockedToken0Nil() {
	o.TotalValueLockedToken0.Set(nil)
}

// UnsetTotalValueLockedToken0 ensures that no value is present for TotalValueLockedToken0, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetTotalValueLockedToken0() {
	o.TotalValueLockedToken0.Unset()
}

// GetTotalValueLockedToken1 returns the TotalValueLockedToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetTotalValueLockedToken1() string {
	if o == nil || IsNil(o.TotalValueLockedToken1.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedToken1.Get()
}

// GetTotalValueLockedToken1Ok returns a tuple with the TotalValueLockedToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetTotalValueLockedToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedToken1.Get(), o.TotalValueLockedToken1.IsSet()
}

// HasTotalValueLockedToken1 returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTotalValueLockedToken1() bool {
	if o != nil && o.TotalValueLockedToken1.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedToken1 gets a reference to the given NullableString and assigns it to the TotalValueLockedToken1 field.
func (o *UniswapV3PoolDTO) SetTotalValueLockedToken1(v string) {
	o.TotalValueLockedToken1.Set(&v)
}
// SetTotalValueLockedToken1Nil sets the value for TotalValueLockedToken1 to be an explicit nil
func (o *UniswapV3PoolDTO) SetTotalValueLockedToken1Nil() {
	o.TotalValueLockedToken1.Set(nil)
}

// UnsetTotalValueLockedToken1 ensures that no value is present for TotalValueLockedToken1, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetTotalValueLockedToken1() {
	o.TotalValueLockedToken1.Unset()
}

// GetTotalValueLockedEth returns the TotalValueLockedEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetTotalValueLockedEth() string {
	if o == nil || IsNil(o.TotalValueLockedEth.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedEth.Get()
}

// GetTotalValueLockedEthOk returns a tuple with the TotalValueLockedEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetTotalValueLockedEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedEth.Get(), o.TotalValueLockedEth.IsSet()
}

// HasTotalValueLockedEth returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTotalValueLockedEth() bool {
	if o != nil && o.TotalValueLockedEth.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedEth gets a reference to the given NullableString and assigns it to the TotalValueLockedEth field.
func (o *UniswapV3PoolDTO) SetTotalValueLockedEth(v string) {
	o.TotalValueLockedEth.Set(&v)
}
// SetTotalValueLockedEthNil sets the value for TotalValueLockedEth to be an explicit nil
func (o *UniswapV3PoolDTO) SetTotalValueLockedEthNil() {
	o.TotalValueLockedEth.Set(nil)
}

// UnsetTotalValueLockedEth ensures that no value is present for TotalValueLockedEth, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetTotalValueLockedEth() {
	o.TotalValueLockedEth.Unset()
}

// GetTotalValueLockedUsd returns the TotalValueLockedUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetTotalValueLockedUsd() string {
	if o == nil || IsNil(o.TotalValueLockedUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsd.Get()
}

// GetTotalValueLockedUsdOk returns a tuple with the TotalValueLockedUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetTotalValueLockedUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsd.Get(), o.TotalValueLockedUsd.IsSet()
}

// HasTotalValueLockedUsd returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTotalValueLockedUsd() bool {
	if o != nil && o.TotalValueLockedUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsd gets a reference to the given NullableString and assigns it to the TotalValueLockedUsd field.
func (o *UniswapV3PoolDTO) SetTotalValueLockedUsd(v string) {
	o.TotalValueLockedUsd.Set(&v)
}
// SetTotalValueLockedUsdNil sets the value for TotalValueLockedUsd to be an explicit nil
func (o *UniswapV3PoolDTO) SetTotalValueLockedUsdNil() {
	o.TotalValueLockedUsd.Set(nil)
}

// UnsetTotalValueLockedUsd ensures that no value is present for TotalValueLockedUsd, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetTotalValueLockedUsd() {
	o.TotalValueLockedUsd.Unset()
}

// GetTotalValueLockedUsdUntracked returns the TotalValueLockedUsdUntracked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetTotalValueLockedUsdUntracked() string {
	if o == nil || IsNil(o.TotalValueLockedUsdUntracked.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsdUntracked.Get()
}

// GetTotalValueLockedUsdUntrackedOk returns a tuple with the TotalValueLockedUsdUntracked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetTotalValueLockedUsdUntrackedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsdUntracked.Get(), o.TotalValueLockedUsdUntracked.IsSet()
}

// HasTotalValueLockedUsdUntracked returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasTotalValueLockedUsdUntracked() bool {
	if o != nil && o.TotalValueLockedUsdUntracked.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsdUntracked gets a reference to the given NullableString and assigns it to the TotalValueLockedUsdUntracked field.
func (o *UniswapV3PoolDTO) SetTotalValueLockedUsdUntracked(v string) {
	o.TotalValueLockedUsdUntracked.Set(&v)
}
// SetTotalValueLockedUsdUntrackedNil sets the value for TotalValueLockedUsdUntracked to be an explicit nil
func (o *UniswapV3PoolDTO) SetTotalValueLockedUsdUntrackedNil() {
	o.TotalValueLockedUsdUntracked.Set(nil)
}

// UnsetTotalValueLockedUsdUntracked ensures that no value is present for TotalValueLockedUsdUntracked, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetTotalValueLockedUsdUntracked() {
	o.TotalValueLockedUsdUntracked.Unset()
}

// GetLiquidityProviderCount returns the LiquidityProviderCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV3PoolDTO) GetLiquidityProviderCount() string {
	if o == nil || IsNil(o.LiquidityProviderCount.Get()) {
		var ret string
		return ret
	}
	return *o.LiquidityProviderCount.Get()
}

// GetLiquidityProviderCountOk returns a tuple with the LiquidityProviderCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV3PoolDTO) GetLiquidityProviderCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LiquidityProviderCount.Get(), o.LiquidityProviderCount.IsSet()
}

// HasLiquidityProviderCount returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasLiquidityProviderCount() bool {
	if o != nil && o.LiquidityProviderCount.IsSet() {
		return true
	}

	return false
}

// SetLiquidityProviderCount gets a reference to the given NullableString and assigns it to the LiquidityProviderCount field.
func (o *UniswapV3PoolDTO) SetLiquidityProviderCount(v string) {
	o.LiquidityProviderCount.Set(&v)
}
// SetLiquidityProviderCountNil sets the value for LiquidityProviderCount to be an explicit nil
func (o *UniswapV3PoolDTO) SetLiquidityProviderCountNil() {
	o.LiquidityProviderCount.Set(nil)
}

// UnsetLiquidityProviderCount ensures that no value is present for LiquidityProviderCount, not even an explicit nil
func (o *UniswapV3PoolDTO) UnsetLiquidityProviderCount() {
	o.LiquidityProviderCount.Unset()
}

// GetEvaluatedAsk returns the EvaluatedAsk field value if set, zero value otherwise.
func (o *UniswapV3PoolDTO) GetEvaluatedAsk() float64 {
	if o == nil || IsNil(o.EvaluatedAsk) {
		var ret float64
		return ret
	}
	return *o.EvaluatedAsk
}

// GetEvaluatedAskOk returns a tuple with the EvaluatedAsk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV3PoolDTO) GetEvaluatedAskOk() (*float64, bool) {
	if o == nil || IsNil(o.EvaluatedAsk) {
		return nil, false
	}
	return o.EvaluatedAsk, true
}

// HasEvaluatedAsk returns a boolean if a field has been set.
func (o *UniswapV3PoolDTO) HasEvaluatedAsk() bool {
	if o != nil && !IsNil(o.EvaluatedAsk) {
		return true
	}

	return false
}

// SetEvaluatedAsk gets a reference to the given float64 and assigns it to the EvaluatedAsk field.
func (o *UniswapV3PoolDTO) SetEvaluatedAsk(v float64) {
	o.EvaluatedAsk = &v
}

func (o UniswapV3PoolDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniswapV3PoolDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.CreatedAtTimestamp) {
		toSerialize["created_at_timestamp"] = o.CreatedAtTimestamp
	}
	if o.Token0.IsSet() {
		toSerialize["token_0"] = o.Token0.Get()
	}
	if o.Token1.IsSet() {
		toSerialize["token_1"] = o.Token1.Get()
	}
	if !IsNil(o.FeeTier) {
		toSerialize["fee_tier"] = o.FeeTier
	}
	if !IsNil(o.Liquidity) {
		toSerialize["liquidity"] = o.Liquidity
	}
	if !IsNil(o.SqrtPrice) {
		toSerialize["sqrt_price"] = o.SqrtPrice
	}
	if !IsNil(o.FeeGrowthGlobal0x128) {
		toSerialize["fee_growth_global_0x128"] = o.FeeGrowthGlobal0x128
	}
	if !IsNil(o.FeeGrowthGlobal1x128) {
		toSerialize["fee_growth_global_1x128"] = o.FeeGrowthGlobal1x128
	}
	if o.Token0Price.IsSet() {
		toSerialize["token_0_price"] = o.Token0Price.Get()
	}
	if o.Token1Price.IsSet() {
		toSerialize["token_1_price"] = o.Token1Price.Get()
	}
	if !IsNil(o.Tick) {
		toSerialize["tick"] = o.Tick
	}
	if !IsNil(o.ObservationIndex) {
		toSerialize["observation_index"] = o.ObservationIndex
	}
	if o.VolumeToken0.IsSet() {
		toSerialize["volume_token_0"] = o.VolumeToken0.Get()
	}
	if o.VolumeToken1.IsSet() {
		toSerialize["volume_token_1"] = o.VolumeToken1.Get()
	}
	if o.VolumeUsd.IsSet() {
		toSerialize["volume_usd"] = o.VolumeUsd.Get()
	}
	if o.UntrackedVolumeUsd.IsSet() {
		toSerialize["untracked_volume_usd"] = o.UntrackedVolumeUsd.Get()
	}
	if o.FeesUsd.IsSet() {
		toSerialize["fees_usd"] = o.FeesUsd.Get()
	}
	if !IsNil(o.TxCount) {
		toSerialize["tx_count"] = o.TxCount
	}
	if o.CollectedFeesToken0.IsSet() {
		toSerialize["collected_fees_token_0"] = o.CollectedFeesToken0.Get()
	}
	if o.CollectedFeesToken1.IsSet() {
		toSerialize["collected_fees_token_1"] = o.CollectedFeesToken1.Get()
	}
	if o.CollectedFeesUsd.IsSet() {
		toSerialize["collected_fees_usd"] = o.CollectedFeesUsd.Get()
	}
	if o.TotalValueLockedToken0.IsSet() {
		toSerialize["total_value_locked_token_0"] = o.TotalValueLockedToken0.Get()
	}
	if o.TotalValueLockedToken1.IsSet() {
		toSerialize["total_value_locked_token_1"] = o.TotalValueLockedToken1.Get()
	}
	if o.TotalValueLockedEth.IsSet() {
		toSerialize["total_value_locked_eth"] = o.TotalValueLockedEth.Get()
	}
	if o.TotalValueLockedUsd.IsSet() {
		toSerialize["total_value_locked_usd"] = o.TotalValueLockedUsd.Get()
	}
	if o.TotalValueLockedUsdUntracked.IsSet() {
		toSerialize["total_value_locked_usd_untracked"] = o.TotalValueLockedUsdUntracked.Get()
	}
	if o.LiquidityProviderCount.IsSet() {
		toSerialize["liquidity_provider_count"] = o.LiquidityProviderCount.Get()
	}
	// skip: evaluated_ask is readOnly
	return toSerialize, nil
}

type NullableUniswapV3PoolDTO struct {
	value *UniswapV3PoolDTO
	isSet bool
}

func (v NullableUniswapV3PoolDTO) Get() *UniswapV3PoolDTO {
	return v.value
}

func (v *NullableUniswapV3PoolDTO) Set(val *UniswapV3PoolDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUniswapV3PoolDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUniswapV3PoolDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniswapV3PoolDTO(val *UniswapV3PoolDTO) *NullableUniswapV3PoolDTO {
	return &NullableUniswapV3PoolDTO{value: val, isSet: true}
}

func (v NullableUniswapV3PoolDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniswapV3PoolDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


