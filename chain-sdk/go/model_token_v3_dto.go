/*
OnChain API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TokenV3DTO struct for TokenV3DTO
type TokenV3DTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// 
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
	// 
	Id NullableString `json:"id,omitempty"`
	// 
	Symbol NullableString `json:"symbol,omitempty"`
	// 
	Name NullableString `json:"name,omitempty"`
	// 
	Decimals *int32 `json:"decimals,omitempty"`
	TotalSupply *BigInteger `json:"total_supply,omitempty"`
	// 
	Volume NullableString `json:"volume,omitempty"`
	// 
	VolumeUsd NullableString `json:"volume_usd,omitempty"`
	// 
	UntrackedVolumeUsd NullableString `json:"untracked_volume_usd,omitempty"`
	// 
	FeesUsd NullableString `json:"fees_usd,omitempty"`
	TxCount *BigInteger `json:"tx_count,omitempty"`
	PoolCount *BigInteger `json:"pool_count,omitempty"`
	// 
	TotalValueLocked NullableString `json:"total_value_locked,omitempty"`
	// 
	TotalValueLockedUsd NullableString `json:"total_value_locked_usd,omitempty"`
	// 
	TotalValueLockedUsdUntracked NullableString `json:"total_value_locked_usd_untracked,omitempty"`
	// 
	DerivedEth NullableString `json:"derived_eth,omitempty"`
	// 
	WhitelistPools []string `json:"whitelist_pools,omitempty"`
	TokenSymbol NullableString `json:"token_symbol,omitempty"`
}

// NewTokenV3DTO instantiates a new TokenV3DTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenV3DTO() *TokenV3DTO {
	this := TokenV3DTO{}
	return &this
}

// NewTokenV3DTOWithDefaults instantiates a new TokenV3DTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenV3DTOWithDefaults() *TokenV3DTO {
	this := TokenV3DTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *TokenV3DTO) GetEntryTime() time.Time {
	if o == nil || o.EntryTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || o.EntryTime == nil {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *TokenV3DTO) HasEntryTime() bool {
	if o != nil && o.EntryTime != nil {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *TokenV3DTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *TokenV3DTO) GetRecvTime() time.Time {
	if o == nil || o.RecvTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || o.RecvTime == nil {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *TokenV3DTO) HasRecvTime() bool {
	if o != nil && o.RecvTime != nil {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *TokenV3DTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *TokenV3DTO) GetBlockNumber() int64 {
	if o == nil || o.BlockNumber == nil {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || o.BlockNumber == nil {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *TokenV3DTO) HasBlockNumber() bool {
	if o != nil && o.BlockNumber != nil {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *TokenV3DTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *TokenV3DTO) GetVid() int64 {
	if o == nil || o.Vid == nil {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetVidOk() (*int64, bool) {
	if o == nil || o.Vid == nil {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *TokenV3DTO) HasVid() bool {
	if o != nil && o.Vid != nil {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *TokenV3DTO) SetVid(v int64) {
	o.Vid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *TokenV3DTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *TokenV3DTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *TokenV3DTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *TokenV3DTO) UnsetId() {
	o.Id.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetSymbol() string {
	if o == nil || o.Symbol.Get() == nil {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *TokenV3DTO) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *TokenV3DTO) SetSymbol(v string) {
	o.Symbol.Set(&v)
}
// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *TokenV3DTO) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *TokenV3DTO) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TokenV3DTO) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TokenV3DTO) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TokenV3DTO) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TokenV3DTO) UnsetName() {
	o.Name.Unset()
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *TokenV3DTO) GetDecimals() int32 {
	if o == nil || o.Decimals == nil {
		var ret int32
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetDecimalsOk() (*int32, bool) {
	if o == nil || o.Decimals == nil {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *TokenV3DTO) HasDecimals() bool {
	if o != nil && o.Decimals != nil {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int32 and assigns it to the Decimals field.
func (o *TokenV3DTO) SetDecimals(v int32) {
	o.Decimals = &v
}

// GetTotalSupply returns the TotalSupply field value if set, zero value otherwise.
func (o *TokenV3DTO) GetTotalSupply() BigInteger {
	if o == nil || o.TotalSupply == nil {
		var ret BigInteger
		return ret
	}
	return *o.TotalSupply
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetTotalSupplyOk() (*BigInteger, bool) {
	if o == nil || o.TotalSupply == nil {
		return nil, false
	}
	return o.TotalSupply, true
}

// HasTotalSupply returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTotalSupply() bool {
	if o != nil && o.TotalSupply != nil {
		return true
	}

	return false
}

// SetTotalSupply gets a reference to the given BigInteger and assigns it to the TotalSupply field.
func (o *TokenV3DTO) SetTotalSupply(v BigInteger) {
	o.TotalSupply = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetVolume() string {
	if o == nil || o.Volume.Get() == nil {
		var ret string
		return ret
	}
	return *o.Volume.Get()
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Volume.Get(), o.Volume.IsSet()
}

// HasVolume returns a boolean if a field has been set.
func (o *TokenV3DTO) HasVolume() bool {
	if o != nil && o.Volume.IsSet() {
		return true
	}

	return false
}

// SetVolume gets a reference to the given NullableString and assigns it to the Volume field.
func (o *TokenV3DTO) SetVolume(v string) {
	o.Volume.Set(&v)
}
// SetVolumeNil sets the value for Volume to be an explicit nil
func (o *TokenV3DTO) SetVolumeNil() {
	o.Volume.Set(nil)
}

// UnsetVolume ensures that no value is present for Volume, not even an explicit nil
func (o *TokenV3DTO) UnsetVolume() {
	o.Volume.Unset()
}

// GetVolumeUsd returns the VolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetVolumeUsd() string {
	if o == nil || o.VolumeUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.VolumeUsd.Get()
}

// GetVolumeUsdOk returns a tuple with the VolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeUsd.Get(), o.VolumeUsd.IsSet()
}

// HasVolumeUsd returns a boolean if a field has been set.
func (o *TokenV3DTO) HasVolumeUsd() bool {
	if o != nil && o.VolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetVolumeUsd gets a reference to the given NullableString and assigns it to the VolumeUsd field.
func (o *TokenV3DTO) SetVolumeUsd(v string) {
	o.VolumeUsd.Set(&v)
}
// SetVolumeUsdNil sets the value for VolumeUsd to be an explicit nil
func (o *TokenV3DTO) SetVolumeUsdNil() {
	o.VolumeUsd.Set(nil)
}

// UnsetVolumeUsd ensures that no value is present for VolumeUsd, not even an explicit nil
func (o *TokenV3DTO) UnsetVolumeUsd() {
	o.VolumeUsd.Unset()
}

// GetUntrackedVolumeUsd returns the UntrackedVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetUntrackedVolumeUsd() string {
	if o == nil || o.UntrackedVolumeUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.UntrackedVolumeUsd.Get()
}

// GetUntrackedVolumeUsdOk returns a tuple with the UntrackedVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetUntrackedVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UntrackedVolumeUsd.Get(), o.UntrackedVolumeUsd.IsSet()
}

// HasUntrackedVolumeUsd returns a boolean if a field has been set.
func (o *TokenV3DTO) HasUntrackedVolumeUsd() bool {
	if o != nil && o.UntrackedVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetUntrackedVolumeUsd gets a reference to the given NullableString and assigns it to the UntrackedVolumeUsd field.
func (o *TokenV3DTO) SetUntrackedVolumeUsd(v string) {
	o.UntrackedVolumeUsd.Set(&v)
}
// SetUntrackedVolumeUsdNil sets the value for UntrackedVolumeUsd to be an explicit nil
func (o *TokenV3DTO) SetUntrackedVolumeUsdNil() {
	o.UntrackedVolumeUsd.Set(nil)
}

// UnsetUntrackedVolumeUsd ensures that no value is present for UntrackedVolumeUsd, not even an explicit nil
func (o *TokenV3DTO) UnsetUntrackedVolumeUsd() {
	o.UntrackedVolumeUsd.Unset()
}

// GetFeesUsd returns the FeesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetFeesUsd() string {
	if o == nil || o.FeesUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.FeesUsd.Get()
}

// GetFeesUsdOk returns a tuple with the FeesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetFeesUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeesUsd.Get(), o.FeesUsd.IsSet()
}

// HasFeesUsd returns a boolean if a field has been set.
func (o *TokenV3DTO) HasFeesUsd() bool {
	if o != nil && o.FeesUsd.IsSet() {
		return true
	}

	return false
}

// SetFeesUsd gets a reference to the given NullableString and assigns it to the FeesUsd field.
func (o *TokenV3DTO) SetFeesUsd(v string) {
	o.FeesUsd.Set(&v)
}
// SetFeesUsdNil sets the value for FeesUsd to be an explicit nil
func (o *TokenV3DTO) SetFeesUsdNil() {
	o.FeesUsd.Set(nil)
}

// UnsetFeesUsd ensures that no value is present for FeesUsd, not even an explicit nil
func (o *TokenV3DTO) UnsetFeesUsd() {
	o.FeesUsd.Unset()
}

// GetTxCount returns the TxCount field value if set, zero value otherwise.
func (o *TokenV3DTO) GetTxCount() BigInteger {
	if o == nil || o.TxCount == nil {
		var ret BigInteger
		return ret
	}
	return *o.TxCount
}

// GetTxCountOk returns a tuple with the TxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetTxCountOk() (*BigInteger, bool) {
	if o == nil || o.TxCount == nil {
		return nil, false
	}
	return o.TxCount, true
}

// HasTxCount returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTxCount() bool {
	if o != nil && o.TxCount != nil {
		return true
	}

	return false
}

// SetTxCount gets a reference to the given BigInteger and assigns it to the TxCount field.
func (o *TokenV3DTO) SetTxCount(v BigInteger) {
	o.TxCount = &v
}

// GetPoolCount returns the PoolCount field value if set, zero value otherwise.
func (o *TokenV3DTO) GetPoolCount() BigInteger {
	if o == nil || o.PoolCount == nil {
		var ret BigInteger
		return ret
	}
	return *o.PoolCount
}

// GetPoolCountOk returns a tuple with the PoolCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenV3DTO) GetPoolCountOk() (*BigInteger, bool) {
	if o == nil || o.PoolCount == nil {
		return nil, false
	}
	return o.PoolCount, true
}

// HasPoolCount returns a boolean if a field has been set.
func (o *TokenV3DTO) HasPoolCount() bool {
	if o != nil && o.PoolCount != nil {
		return true
	}

	return false
}

// SetPoolCount gets a reference to the given BigInteger and assigns it to the PoolCount field.
func (o *TokenV3DTO) SetPoolCount(v BigInteger) {
	o.PoolCount = &v
}

// GetTotalValueLocked returns the TotalValueLocked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetTotalValueLocked() string {
	if o == nil || o.TotalValueLocked.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalValueLocked.Get()
}

// GetTotalValueLockedOk returns a tuple with the TotalValueLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetTotalValueLockedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLocked.Get(), o.TotalValueLocked.IsSet()
}

// HasTotalValueLocked returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTotalValueLocked() bool {
	if o != nil && o.TotalValueLocked.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLocked gets a reference to the given NullableString and assigns it to the TotalValueLocked field.
func (o *TokenV3DTO) SetTotalValueLocked(v string) {
	o.TotalValueLocked.Set(&v)
}
// SetTotalValueLockedNil sets the value for TotalValueLocked to be an explicit nil
func (o *TokenV3DTO) SetTotalValueLockedNil() {
	o.TotalValueLocked.Set(nil)
}

// UnsetTotalValueLocked ensures that no value is present for TotalValueLocked, not even an explicit nil
func (o *TokenV3DTO) UnsetTotalValueLocked() {
	o.TotalValueLocked.Unset()
}

// GetTotalValueLockedUsd returns the TotalValueLockedUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetTotalValueLockedUsd() string {
	if o == nil || o.TotalValueLockedUsd.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsd.Get()
}

// GetTotalValueLockedUsdOk returns a tuple with the TotalValueLockedUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetTotalValueLockedUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsd.Get(), o.TotalValueLockedUsd.IsSet()
}

// HasTotalValueLockedUsd returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTotalValueLockedUsd() bool {
	if o != nil && o.TotalValueLockedUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsd gets a reference to the given NullableString and assigns it to the TotalValueLockedUsd field.
func (o *TokenV3DTO) SetTotalValueLockedUsd(v string) {
	o.TotalValueLockedUsd.Set(&v)
}
// SetTotalValueLockedUsdNil sets the value for TotalValueLockedUsd to be an explicit nil
func (o *TokenV3DTO) SetTotalValueLockedUsdNil() {
	o.TotalValueLockedUsd.Set(nil)
}

// UnsetTotalValueLockedUsd ensures that no value is present for TotalValueLockedUsd, not even an explicit nil
func (o *TokenV3DTO) UnsetTotalValueLockedUsd() {
	o.TotalValueLockedUsd.Unset()
}

// GetTotalValueLockedUsdUntracked returns the TotalValueLockedUsdUntracked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetTotalValueLockedUsdUntracked() string {
	if o == nil || o.TotalValueLockedUsdUntracked.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsdUntracked.Get()
}

// GetTotalValueLockedUsdUntrackedOk returns a tuple with the TotalValueLockedUsdUntracked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetTotalValueLockedUsdUntrackedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsdUntracked.Get(), o.TotalValueLockedUsdUntracked.IsSet()
}

// HasTotalValueLockedUsdUntracked returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTotalValueLockedUsdUntracked() bool {
	if o != nil && o.TotalValueLockedUsdUntracked.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsdUntracked gets a reference to the given NullableString and assigns it to the TotalValueLockedUsdUntracked field.
func (o *TokenV3DTO) SetTotalValueLockedUsdUntracked(v string) {
	o.TotalValueLockedUsdUntracked.Set(&v)
}
// SetTotalValueLockedUsdUntrackedNil sets the value for TotalValueLockedUsdUntracked to be an explicit nil
func (o *TokenV3DTO) SetTotalValueLockedUsdUntrackedNil() {
	o.TotalValueLockedUsdUntracked.Set(nil)
}

// UnsetTotalValueLockedUsdUntracked ensures that no value is present for TotalValueLockedUsdUntracked, not even an explicit nil
func (o *TokenV3DTO) UnsetTotalValueLockedUsdUntracked() {
	o.TotalValueLockedUsdUntracked.Unset()
}

// GetDerivedEth returns the DerivedEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetDerivedEth() string {
	if o == nil || o.DerivedEth.Get() == nil {
		var ret string
		return ret
	}
	return *o.DerivedEth.Get()
}

// GetDerivedEthOk returns a tuple with the DerivedEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetDerivedEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DerivedEth.Get(), o.DerivedEth.IsSet()
}

// HasDerivedEth returns a boolean if a field has been set.
func (o *TokenV3DTO) HasDerivedEth() bool {
	if o != nil && o.DerivedEth.IsSet() {
		return true
	}

	return false
}

// SetDerivedEth gets a reference to the given NullableString and assigns it to the DerivedEth field.
func (o *TokenV3DTO) SetDerivedEth(v string) {
	o.DerivedEth.Set(&v)
}
// SetDerivedEthNil sets the value for DerivedEth to be an explicit nil
func (o *TokenV3DTO) SetDerivedEthNil() {
	o.DerivedEth.Set(nil)
}

// UnsetDerivedEth ensures that no value is present for DerivedEth, not even an explicit nil
func (o *TokenV3DTO) UnsetDerivedEth() {
	o.DerivedEth.Unset()
}

// GetWhitelistPools returns the WhitelistPools field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetWhitelistPools() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.WhitelistPools
}

// GetWhitelistPoolsOk returns a tuple with the WhitelistPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetWhitelistPoolsOk() ([]string, bool) {
	if o == nil || o.WhitelistPools == nil {
		return nil, false
	}
	return o.WhitelistPools, true
}

// HasWhitelistPools returns a boolean if a field has been set.
func (o *TokenV3DTO) HasWhitelistPools() bool {
	if o != nil && o.WhitelistPools != nil {
		return true
	}

	return false
}

// SetWhitelistPools gets a reference to the given []string and assigns it to the WhitelistPools field.
func (o *TokenV3DTO) SetWhitelistPools(v []string) {
	o.WhitelistPools = v
}

// GetTokenSymbol returns the TokenSymbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenV3DTO) GetTokenSymbol() string {
	if o == nil || o.TokenSymbol.Get() == nil {
		var ret string
		return ret
	}
	return *o.TokenSymbol.Get()
}

// GetTokenSymbolOk returns a tuple with the TokenSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenV3DTO) GetTokenSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenSymbol.Get(), o.TokenSymbol.IsSet()
}

// HasTokenSymbol returns a boolean if a field has been set.
func (o *TokenV3DTO) HasTokenSymbol() bool {
	if o != nil && o.TokenSymbol.IsSet() {
		return true
	}

	return false
}

// SetTokenSymbol gets a reference to the given NullableString and assigns it to the TokenSymbol field.
func (o *TokenV3DTO) SetTokenSymbol(v string) {
	o.TokenSymbol.Set(&v)
}
// SetTokenSymbolNil sets the value for TokenSymbol to be an explicit nil
func (o *TokenV3DTO) SetTokenSymbolNil() {
	o.TokenSymbol.Set(nil)
}

// UnsetTokenSymbol ensures that no value is present for TokenSymbol, not even an explicit nil
func (o *TokenV3DTO) UnsetTokenSymbol() {
	o.TokenSymbol.Unset()
}

func (o TokenV3DTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryTime != nil {
		toSerialize["entry_time"] = o.EntryTime
	}
	if o.RecvTime != nil {
		toSerialize["recv_time"] = o.RecvTime
	}
	if o.BlockNumber != nil {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Vid != nil {
		toSerialize["vid"] = o.Vid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Decimals != nil {
		toSerialize["decimals"] = o.Decimals
	}
	if o.TotalSupply != nil {
		toSerialize["total_supply"] = o.TotalSupply
	}
	if o.Volume.IsSet() {
		toSerialize["volume"] = o.Volume.Get()
	}
	if o.VolumeUsd.IsSet() {
		toSerialize["volume_usd"] = o.VolumeUsd.Get()
	}
	if o.UntrackedVolumeUsd.IsSet() {
		toSerialize["untracked_volume_usd"] = o.UntrackedVolumeUsd.Get()
	}
	if o.FeesUsd.IsSet() {
		toSerialize["fees_usd"] = o.FeesUsd.Get()
	}
	if o.TxCount != nil {
		toSerialize["tx_count"] = o.TxCount
	}
	if o.PoolCount != nil {
		toSerialize["pool_count"] = o.PoolCount
	}
	if o.TotalValueLocked.IsSet() {
		toSerialize["total_value_locked"] = o.TotalValueLocked.Get()
	}
	if o.TotalValueLockedUsd.IsSet() {
		toSerialize["total_value_locked_usd"] = o.TotalValueLockedUsd.Get()
	}
	if o.TotalValueLockedUsdUntracked.IsSet() {
		toSerialize["total_value_locked_usd_untracked"] = o.TotalValueLockedUsdUntracked.Get()
	}
	if o.DerivedEth.IsSet() {
		toSerialize["derived_eth"] = o.DerivedEth.Get()
	}
	if o.WhitelistPools != nil {
		toSerialize["whitelist_pools"] = o.WhitelistPools
	}
	if o.TokenSymbol.IsSet() {
		toSerialize["token_symbol"] = o.TokenSymbol.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTokenV3DTO struct {
	value *TokenV3DTO
	isSet bool
}

func (v NullableTokenV3DTO) Get() *TokenV3DTO {
	return v.value
}

func (v *NullableTokenV3DTO) Set(val *TokenV3DTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenV3DTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenV3DTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenV3DTO(val *TokenV3DTO) *NullableTokenV3DTO {
	return &NullableTokenV3DTO{value: val, isSet: true}
}

func (v NullableTokenV3DTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenV3DTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


