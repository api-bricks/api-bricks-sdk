/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UniswapV2UniswapFactoryDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniswapV2UniswapFactoryDTO{}

// UniswapV2UniswapFactoryDTO The Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more.
type UniswapV2UniswapFactoryDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// Factory address.
	Id NullableString `json:"id,omitempty"`
	// Amount of pairs created by the Uniswap factory.
	PairCount *int32 `json:"pair_count,omitempty"`
	// All time USD volume across all pairs (USD is derived).
	TotalVolumeUsd NullableString `json:"total_volume_usd,omitempty"`
	// All time volume in ETH across all pairs (ETH is derived).
	TotalVolumeEth NullableString `json:"total_volume_eth,omitempty"`
	// Untracked volume USD.
	UntrackedVolumeUsd NullableString `json:"untracked_volume_usd,omitempty"`
	// Total liquidity across all pairs stored as a derived USD amount.
	TotalLiquidityUsd NullableString `json:"total_liquidity_usd,omitempty"`
	// Total liquidity across all pairs stored as a derived ETH amount.
	TotalLiquidityEth NullableString `json:"total_liquidity_eth,omitempty"`
	// All time amount of transactions across all pairs.
	TxCount NullableString `json:"tx_count,omitempty"`
	// .
	Vid *int64 `json:"vid,omitempty"`
}

// NewUniswapV2UniswapFactoryDTO instantiates a new UniswapV2UniswapFactoryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniswapV2UniswapFactoryDTO() *UniswapV2UniswapFactoryDTO {
	this := UniswapV2UniswapFactoryDTO{}
	return &this
}

// NewUniswapV2UniswapFactoryDTOWithDefaults instantiates a new UniswapV2UniswapFactoryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniswapV2UniswapFactoryDTOWithDefaults() *UniswapV2UniswapFactoryDTO {
	this := UniswapV2UniswapFactoryDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *UniswapV2UniswapFactoryDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2UniswapFactoryDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *UniswapV2UniswapFactoryDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *UniswapV2UniswapFactoryDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2UniswapFactoryDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *UniswapV2UniswapFactoryDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *UniswapV2UniswapFactoryDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2UniswapFactoryDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *UniswapV2UniswapFactoryDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UniswapV2UniswapFactoryDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetId() {
	o.Id.Unset()
}

// GetPairCount returns the PairCount field value if set, zero value otherwise.
func (o *UniswapV2UniswapFactoryDTO) GetPairCount() int32 {
	if o == nil || IsNil(o.PairCount) {
		var ret int32
		return ret
	}
	return *o.PairCount
}

// GetPairCountOk returns a tuple with the PairCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2UniswapFactoryDTO) GetPairCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PairCount) {
		return nil, false
	}
	return o.PairCount, true
}

// HasPairCount returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasPairCount() bool {
	if o != nil && !IsNil(o.PairCount) {
		return true
	}

	return false
}

// SetPairCount gets a reference to the given int32 and assigns it to the PairCount field.
func (o *UniswapV2UniswapFactoryDTO) SetPairCount(v int32) {
	o.PairCount = &v
}

// GetTotalVolumeUsd returns the TotalVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetTotalVolumeUsd() string {
	if o == nil || IsNil(o.TotalVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalVolumeUsd.Get()
}

// GetTotalVolumeUsdOk returns a tuple with the TotalVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetTotalVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVolumeUsd.Get(), o.TotalVolumeUsd.IsSet()
}

// HasTotalVolumeUsd returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasTotalVolumeUsd() bool {
	if o != nil && o.TotalVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalVolumeUsd gets a reference to the given NullableString and assigns it to the TotalVolumeUsd field.
func (o *UniswapV2UniswapFactoryDTO) SetTotalVolumeUsd(v string) {
	o.TotalVolumeUsd.Set(&v)
}
// SetTotalVolumeUsdNil sets the value for TotalVolumeUsd to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetTotalVolumeUsdNil() {
	o.TotalVolumeUsd.Set(nil)
}

// UnsetTotalVolumeUsd ensures that no value is present for TotalVolumeUsd, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetTotalVolumeUsd() {
	o.TotalVolumeUsd.Unset()
}

// GetTotalVolumeEth returns the TotalVolumeEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetTotalVolumeEth() string {
	if o == nil || IsNil(o.TotalVolumeEth.Get()) {
		var ret string
		return ret
	}
	return *o.TotalVolumeEth.Get()
}

// GetTotalVolumeEthOk returns a tuple with the TotalVolumeEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetTotalVolumeEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalVolumeEth.Get(), o.TotalVolumeEth.IsSet()
}

// HasTotalVolumeEth returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasTotalVolumeEth() bool {
	if o != nil && o.TotalVolumeEth.IsSet() {
		return true
	}

	return false
}

// SetTotalVolumeEth gets a reference to the given NullableString and assigns it to the TotalVolumeEth field.
func (o *UniswapV2UniswapFactoryDTO) SetTotalVolumeEth(v string) {
	o.TotalVolumeEth.Set(&v)
}
// SetTotalVolumeEthNil sets the value for TotalVolumeEth to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetTotalVolumeEthNil() {
	o.TotalVolumeEth.Set(nil)
}

// UnsetTotalVolumeEth ensures that no value is present for TotalVolumeEth, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetTotalVolumeEth() {
	o.TotalVolumeEth.Unset()
}

// GetUntrackedVolumeUsd returns the UntrackedVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetUntrackedVolumeUsd() string {
	if o == nil || IsNil(o.UntrackedVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.UntrackedVolumeUsd.Get()
}

// GetUntrackedVolumeUsdOk returns a tuple with the UntrackedVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetUntrackedVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UntrackedVolumeUsd.Get(), o.UntrackedVolumeUsd.IsSet()
}

// HasUntrackedVolumeUsd returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasUntrackedVolumeUsd() bool {
	if o != nil && o.UntrackedVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetUntrackedVolumeUsd gets a reference to the given NullableString and assigns it to the UntrackedVolumeUsd field.
func (o *UniswapV2UniswapFactoryDTO) SetUntrackedVolumeUsd(v string) {
	o.UntrackedVolumeUsd.Set(&v)
}
// SetUntrackedVolumeUsdNil sets the value for UntrackedVolumeUsd to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetUntrackedVolumeUsdNil() {
	o.UntrackedVolumeUsd.Set(nil)
}

// UnsetUntrackedVolumeUsd ensures that no value is present for UntrackedVolumeUsd, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetUntrackedVolumeUsd() {
	o.UntrackedVolumeUsd.Unset()
}

// GetTotalLiquidityUsd returns the TotalLiquidityUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetTotalLiquidityUsd() string {
	if o == nil || IsNil(o.TotalLiquidityUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalLiquidityUsd.Get()
}

// GetTotalLiquidityUsdOk returns a tuple with the TotalLiquidityUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetTotalLiquidityUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalLiquidityUsd.Get(), o.TotalLiquidityUsd.IsSet()
}

// HasTotalLiquidityUsd returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasTotalLiquidityUsd() bool {
	if o != nil && o.TotalLiquidityUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalLiquidityUsd gets a reference to the given NullableString and assigns it to the TotalLiquidityUsd field.
func (o *UniswapV2UniswapFactoryDTO) SetTotalLiquidityUsd(v string) {
	o.TotalLiquidityUsd.Set(&v)
}
// SetTotalLiquidityUsdNil sets the value for TotalLiquidityUsd to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetTotalLiquidityUsdNil() {
	o.TotalLiquidityUsd.Set(nil)
}

// UnsetTotalLiquidityUsd ensures that no value is present for TotalLiquidityUsd, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetTotalLiquidityUsd() {
	o.TotalLiquidityUsd.Unset()
}

// GetTotalLiquidityEth returns the TotalLiquidityEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetTotalLiquidityEth() string {
	if o == nil || IsNil(o.TotalLiquidityEth.Get()) {
		var ret string
		return ret
	}
	return *o.TotalLiquidityEth.Get()
}

// GetTotalLiquidityEthOk returns a tuple with the TotalLiquidityEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetTotalLiquidityEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalLiquidityEth.Get(), o.TotalLiquidityEth.IsSet()
}

// HasTotalLiquidityEth returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasTotalLiquidityEth() bool {
	if o != nil && o.TotalLiquidityEth.IsSet() {
		return true
	}

	return false
}

// SetTotalLiquidityEth gets a reference to the given NullableString and assigns it to the TotalLiquidityEth field.
func (o *UniswapV2UniswapFactoryDTO) SetTotalLiquidityEth(v string) {
	o.TotalLiquidityEth.Set(&v)
}
// SetTotalLiquidityEthNil sets the value for TotalLiquidityEth to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetTotalLiquidityEthNil() {
	o.TotalLiquidityEth.Set(nil)
}

// UnsetTotalLiquidityEth ensures that no value is present for TotalLiquidityEth, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetTotalLiquidityEth() {
	o.TotalLiquidityEth.Unset()
}

// GetTxCount returns the TxCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UniswapV2UniswapFactoryDTO) GetTxCount() string {
	if o == nil || IsNil(o.TxCount.Get()) {
		var ret string
		return ret
	}
	return *o.TxCount.Get()
}

// GetTxCountOk returns a tuple with the TxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UniswapV2UniswapFactoryDTO) GetTxCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxCount.Get(), o.TxCount.IsSet()
}

// HasTxCount returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasTxCount() bool {
	if o != nil && o.TxCount.IsSet() {
		return true
	}

	return false
}

// SetTxCount gets a reference to the given NullableString and assigns it to the TxCount field.
func (o *UniswapV2UniswapFactoryDTO) SetTxCount(v string) {
	o.TxCount.Set(&v)
}
// SetTxCountNil sets the value for TxCount to be an explicit nil
func (o *UniswapV2UniswapFactoryDTO) SetTxCountNil() {
	o.TxCount.Set(nil)
}

// UnsetTxCount ensures that no value is present for TxCount, not even an explicit nil
func (o *UniswapV2UniswapFactoryDTO) UnsetTxCount() {
	o.TxCount.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *UniswapV2UniswapFactoryDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniswapV2UniswapFactoryDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *UniswapV2UniswapFactoryDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *UniswapV2UniswapFactoryDTO) SetVid(v int64) {
	o.Vid = &v
}

func (o UniswapV2UniswapFactoryDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniswapV2UniswapFactoryDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.PairCount) {
		toSerialize["pair_count"] = o.PairCount
	}
	if o.TotalVolumeUsd.IsSet() {
		toSerialize["total_volume_usd"] = o.TotalVolumeUsd.Get()
	}
	if o.TotalVolumeEth.IsSet() {
		toSerialize["total_volume_eth"] = o.TotalVolumeEth.Get()
	}
	if o.UntrackedVolumeUsd.IsSet() {
		toSerialize["untracked_volume_usd"] = o.UntrackedVolumeUsd.Get()
	}
	if o.TotalLiquidityUsd.IsSet() {
		toSerialize["total_liquidity_usd"] = o.TotalLiquidityUsd.Get()
	}
	if o.TotalLiquidityEth.IsSet() {
		toSerialize["total_liquidity_eth"] = o.TotalLiquidityEth.Get()
	}
	if o.TxCount.IsSet() {
		toSerialize["tx_count"] = o.TxCount.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	return toSerialize, nil
}

type NullableUniswapV2UniswapFactoryDTO struct {
	value *UniswapV2UniswapFactoryDTO
	isSet bool
}

func (v NullableUniswapV2UniswapFactoryDTO) Get() *UniswapV2UniswapFactoryDTO {
	return v.value
}

func (v *NullableUniswapV2UniswapFactoryDTO) Set(val *UniswapV2UniswapFactoryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUniswapV2UniswapFactoryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUniswapV2UniswapFactoryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniswapV2UniswapFactoryDTO(val *UniswapV2UniswapFactoryDTO) *NullableUniswapV2UniswapFactoryDTO {
	return &NullableUniswapV2UniswapFactoryDTO{value: val, isSet: true}
}

func (v NullableUniswapV2UniswapFactoryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniswapV2UniswapFactoryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


