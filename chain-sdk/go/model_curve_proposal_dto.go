/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CurveProposalDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurveProposalDTO{}

// CurveProposalDTO struct for CurveProposalDTO
type CurveProposalDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	Id NullableString `json:"id,omitempty"`
	// Sequential number in related to the realted voting app.
	Number NullableString `json:"number,omitempty"`
	// Voting app instance.
	App NullableString `json:"app,omitempty"`
	// Proposal creator's account.
	Creator NullableString `json:"creator,omitempty"`
	// 
	ExecutionScript NullableString `json:"execution_script,omitempty"`
	// 
	ExpireDate NullableString `json:"expire_date,omitempty"`
	// Percentage of positive votes in total possible votes for this proposal to be accepted.
	MinimumQuorum NullableString `json:"minimum_quorum,omitempty"`
	// Percentage of positive votes needed for this proposal to be accepted.
	RequiredSupport NullableString `json:"required_support,omitempty"`
	// 
	SnapshotBlock NullableString `json:"snapshot_block,omitempty"`
	// 
	VotingPower NullableString `json:"voting_power,omitempty"`
	// Link to metadata file.
	Metadata NullableString `json:"metadata,omitempty"`
	// Proposal description text.
	Text NullableString `json:"text,omitempty"`
	// Number of votes received by the proposal.
	VoteCount NullableString `json:"vote_count,omitempty"`
	// Number of positive votes (yes) received by the proposal.
	PositiveVoteCount NullableString `json:"positive_vote_count,omitempty"`
	// Number of negative votes (no) received by the proposal.
	NegativeVoteCount NullableString `json:"negative_vote_count,omitempty"`
	// 
	CurrentQuorum NullableString `json:"current_quorum,omitempty"`
	// 
	CurrentSupport NullableString `json:"current_support,omitempty"`
	// 
	StakedSupport NullableString `json:"staked_support,omitempty"`
	// 
	TotalStaked NullableString `json:"total_staked,omitempty"`
	// 
	Created NullableString `json:"created,omitempty"`
	// 
	CreatedAtBlock NullableString `json:"created_at_block,omitempty"`
	// 
	CreatedAtTransaction NullableString `json:"created_at_transaction,omitempty"`
	// 
	Updated NullableString `json:"updated,omitempty"`
	// 
	UpdatedAtBlock NullableString `json:"updated_at_block,omitempty"`
	// 
	UpdatedAtTransaction NullableString `json:"updated_at_transaction,omitempty"`
	// 
	Executed NullableString `json:"executed,omitempty"`
	// 
	ExecutedAtBlock NullableString `json:"executed_at_block,omitempty"`
	// 
	ExecutedAtTransaction NullableString `json:"executed_at_transaction,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
}

// NewCurveProposalDTO instantiates a new CurveProposalDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurveProposalDTO() *CurveProposalDTO {
	this := CurveProposalDTO{}
	return &this
}

// NewCurveProposalDTOWithDefaults instantiates a new CurveProposalDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurveProposalDTOWithDefaults() *CurveProposalDTO {
	this := CurveProposalDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CurveProposalDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveProposalDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CurveProposalDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CurveProposalDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveProposalDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CurveProposalDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *CurveProposalDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveProposalDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *CurveProposalDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CurveProposalDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CurveProposalDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CurveProposalDTO) UnsetId() {
	o.Id.Unset()
}

// GetNumber returns the Number field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetNumber() string {
	if o == nil || IsNil(o.Number.Get()) {
		var ret string
		return ret
	}
	return *o.Number.Get()
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Number.Get(), o.Number.IsSet()
}

// HasNumber returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasNumber() bool {
	if o != nil && o.Number.IsSet() {
		return true
	}

	return false
}

// SetNumber gets a reference to the given NullableString and assigns it to the Number field.
func (o *CurveProposalDTO) SetNumber(v string) {
	o.Number.Set(&v)
}
// SetNumberNil sets the value for Number to be an explicit nil
func (o *CurveProposalDTO) SetNumberNil() {
	o.Number.Set(nil)
}

// UnsetNumber ensures that no value is present for Number, not even an explicit nil
func (o *CurveProposalDTO) UnsetNumber() {
	o.Number.Unset()
}

// GetApp returns the App field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetApp() string {
	if o == nil || IsNil(o.App.Get()) {
		var ret string
		return ret
	}
	return *o.App.Get()
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.App.Get(), o.App.IsSet()
}

// HasApp returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasApp() bool {
	if o != nil && o.App.IsSet() {
		return true
	}

	return false
}

// SetApp gets a reference to the given NullableString and assigns it to the App field.
func (o *CurveProposalDTO) SetApp(v string) {
	o.App.Set(&v)
}
// SetAppNil sets the value for App to be an explicit nil
func (o *CurveProposalDTO) SetAppNil() {
	o.App.Set(nil)
}

// UnsetApp ensures that no value is present for App, not even an explicit nil
func (o *CurveProposalDTO) UnsetApp() {
	o.App.Unset()
}

// GetCreator returns the Creator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCreator() string {
	if o == nil || IsNil(o.Creator.Get()) {
		var ret string
		return ret
	}
	return *o.Creator.Get()
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCreatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creator.Get(), o.Creator.IsSet()
}

// HasCreator returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCreator() bool {
	if o != nil && o.Creator.IsSet() {
		return true
	}

	return false
}

// SetCreator gets a reference to the given NullableString and assigns it to the Creator field.
func (o *CurveProposalDTO) SetCreator(v string) {
	o.Creator.Set(&v)
}
// SetCreatorNil sets the value for Creator to be an explicit nil
func (o *CurveProposalDTO) SetCreatorNil() {
	o.Creator.Set(nil)
}

// UnsetCreator ensures that no value is present for Creator, not even an explicit nil
func (o *CurveProposalDTO) UnsetCreator() {
	o.Creator.Unset()
}

// GetExecutionScript returns the ExecutionScript field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetExecutionScript() string {
	if o == nil || IsNil(o.ExecutionScript.Get()) {
		var ret string
		return ret
	}
	return *o.ExecutionScript.Get()
}

// GetExecutionScriptOk returns a tuple with the ExecutionScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetExecutionScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutionScript.Get(), o.ExecutionScript.IsSet()
}

// HasExecutionScript returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasExecutionScript() bool {
	if o != nil && o.ExecutionScript.IsSet() {
		return true
	}

	return false
}

// SetExecutionScript gets a reference to the given NullableString and assigns it to the ExecutionScript field.
func (o *CurveProposalDTO) SetExecutionScript(v string) {
	o.ExecutionScript.Set(&v)
}
// SetExecutionScriptNil sets the value for ExecutionScript to be an explicit nil
func (o *CurveProposalDTO) SetExecutionScriptNil() {
	o.ExecutionScript.Set(nil)
}

// UnsetExecutionScript ensures that no value is present for ExecutionScript, not even an explicit nil
func (o *CurveProposalDTO) UnsetExecutionScript() {
	o.ExecutionScript.Unset()
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetExpireDate() string {
	if o == nil || IsNil(o.ExpireDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpireDate.Get()
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetExpireDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpireDate.Get(), o.ExpireDate.IsSet()
}

// HasExpireDate returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasExpireDate() bool {
	if o != nil && o.ExpireDate.IsSet() {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given NullableString and assigns it to the ExpireDate field.
func (o *CurveProposalDTO) SetExpireDate(v string) {
	o.ExpireDate.Set(&v)
}
// SetExpireDateNil sets the value for ExpireDate to be an explicit nil
func (o *CurveProposalDTO) SetExpireDateNil() {
	o.ExpireDate.Set(nil)
}

// UnsetExpireDate ensures that no value is present for ExpireDate, not even an explicit nil
func (o *CurveProposalDTO) UnsetExpireDate() {
	o.ExpireDate.Unset()
}

// GetMinimumQuorum returns the MinimumQuorum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetMinimumQuorum() string {
	if o == nil || IsNil(o.MinimumQuorum.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumQuorum.Get()
}

// GetMinimumQuorumOk returns a tuple with the MinimumQuorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetMinimumQuorumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumQuorum.Get(), o.MinimumQuorum.IsSet()
}

// HasMinimumQuorum returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasMinimumQuorum() bool {
	if o != nil && o.MinimumQuorum.IsSet() {
		return true
	}

	return false
}

// SetMinimumQuorum gets a reference to the given NullableString and assigns it to the MinimumQuorum field.
func (o *CurveProposalDTO) SetMinimumQuorum(v string) {
	o.MinimumQuorum.Set(&v)
}
// SetMinimumQuorumNil sets the value for MinimumQuorum to be an explicit nil
func (o *CurveProposalDTO) SetMinimumQuorumNil() {
	o.MinimumQuorum.Set(nil)
}

// UnsetMinimumQuorum ensures that no value is present for MinimumQuorum, not even an explicit nil
func (o *CurveProposalDTO) UnsetMinimumQuorum() {
	o.MinimumQuorum.Unset()
}

// GetRequiredSupport returns the RequiredSupport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetRequiredSupport() string {
	if o == nil || IsNil(o.RequiredSupport.Get()) {
		var ret string
		return ret
	}
	return *o.RequiredSupport.Get()
}

// GetRequiredSupportOk returns a tuple with the RequiredSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetRequiredSupportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredSupport.Get(), o.RequiredSupport.IsSet()
}

// HasRequiredSupport returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasRequiredSupport() bool {
	if o != nil && o.RequiredSupport.IsSet() {
		return true
	}

	return false
}

// SetRequiredSupport gets a reference to the given NullableString and assigns it to the RequiredSupport field.
func (o *CurveProposalDTO) SetRequiredSupport(v string) {
	o.RequiredSupport.Set(&v)
}
// SetRequiredSupportNil sets the value for RequiredSupport to be an explicit nil
func (o *CurveProposalDTO) SetRequiredSupportNil() {
	o.RequiredSupport.Set(nil)
}

// UnsetRequiredSupport ensures that no value is present for RequiredSupport, not even an explicit nil
func (o *CurveProposalDTO) UnsetRequiredSupport() {
	o.RequiredSupport.Unset()
}

// GetSnapshotBlock returns the SnapshotBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetSnapshotBlock() string {
	if o == nil || IsNil(o.SnapshotBlock.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotBlock.Get()
}

// GetSnapshotBlockOk returns a tuple with the SnapshotBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetSnapshotBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotBlock.Get(), o.SnapshotBlock.IsSet()
}

// HasSnapshotBlock returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasSnapshotBlock() bool {
	if o != nil && o.SnapshotBlock.IsSet() {
		return true
	}

	return false
}

// SetSnapshotBlock gets a reference to the given NullableString and assigns it to the SnapshotBlock field.
func (o *CurveProposalDTO) SetSnapshotBlock(v string) {
	o.SnapshotBlock.Set(&v)
}
// SetSnapshotBlockNil sets the value for SnapshotBlock to be an explicit nil
func (o *CurveProposalDTO) SetSnapshotBlockNil() {
	o.SnapshotBlock.Set(nil)
}

// UnsetSnapshotBlock ensures that no value is present for SnapshotBlock, not even an explicit nil
func (o *CurveProposalDTO) UnsetSnapshotBlock() {
	o.SnapshotBlock.Unset()
}

// GetVotingPower returns the VotingPower field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetVotingPower() string {
	if o == nil || IsNil(o.VotingPower.Get()) {
		var ret string
		return ret
	}
	return *o.VotingPower.Get()
}

// GetVotingPowerOk returns a tuple with the VotingPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetVotingPowerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VotingPower.Get(), o.VotingPower.IsSet()
}

// HasVotingPower returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasVotingPower() bool {
	if o != nil && o.VotingPower.IsSet() {
		return true
	}

	return false
}

// SetVotingPower gets a reference to the given NullableString and assigns it to the VotingPower field.
func (o *CurveProposalDTO) SetVotingPower(v string) {
	o.VotingPower.Set(&v)
}
// SetVotingPowerNil sets the value for VotingPower to be an explicit nil
func (o *CurveProposalDTO) SetVotingPowerNil() {
	o.VotingPower.Set(nil)
}

// UnsetVotingPower ensures that no value is present for VotingPower, not even an explicit nil
func (o *CurveProposalDTO) UnsetVotingPower() {
	o.VotingPower.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetMetadata() string {
	if o == nil || IsNil(o.Metadata.Get()) {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *CurveProposalDTO) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *CurveProposalDTO) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *CurveProposalDTO) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetText() string {
	if o == nil || IsNil(o.Text.Get()) {
		var ret string
		return ret
	}
	return *o.Text.Get()
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Text.Get(), o.Text.IsSet()
}

// HasText returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasText() bool {
	if o != nil && o.Text.IsSet() {
		return true
	}

	return false
}

// SetText gets a reference to the given NullableString and assigns it to the Text field.
func (o *CurveProposalDTO) SetText(v string) {
	o.Text.Set(&v)
}
// SetTextNil sets the value for Text to be an explicit nil
func (o *CurveProposalDTO) SetTextNil() {
	o.Text.Set(nil)
}

// UnsetText ensures that no value is present for Text, not even an explicit nil
func (o *CurveProposalDTO) UnsetText() {
	o.Text.Unset()
}

// GetVoteCount returns the VoteCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetVoteCount() string {
	if o == nil || IsNil(o.VoteCount.Get()) {
		var ret string
		return ret
	}
	return *o.VoteCount.Get()
}

// GetVoteCountOk returns a tuple with the VoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetVoteCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoteCount.Get(), o.VoteCount.IsSet()
}

// HasVoteCount returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasVoteCount() bool {
	if o != nil && o.VoteCount.IsSet() {
		return true
	}

	return false
}

// SetVoteCount gets a reference to the given NullableString and assigns it to the VoteCount field.
func (o *CurveProposalDTO) SetVoteCount(v string) {
	o.VoteCount.Set(&v)
}
// SetVoteCountNil sets the value for VoteCount to be an explicit nil
func (o *CurveProposalDTO) SetVoteCountNil() {
	o.VoteCount.Set(nil)
}

// UnsetVoteCount ensures that no value is present for VoteCount, not even an explicit nil
func (o *CurveProposalDTO) UnsetVoteCount() {
	o.VoteCount.Unset()
}

// GetPositiveVoteCount returns the PositiveVoteCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetPositiveVoteCount() string {
	if o == nil || IsNil(o.PositiveVoteCount.Get()) {
		var ret string
		return ret
	}
	return *o.PositiveVoteCount.Get()
}

// GetPositiveVoteCountOk returns a tuple with the PositiveVoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetPositiveVoteCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PositiveVoteCount.Get(), o.PositiveVoteCount.IsSet()
}

// HasPositiveVoteCount returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasPositiveVoteCount() bool {
	if o != nil && o.PositiveVoteCount.IsSet() {
		return true
	}

	return false
}

// SetPositiveVoteCount gets a reference to the given NullableString and assigns it to the PositiveVoteCount field.
func (o *CurveProposalDTO) SetPositiveVoteCount(v string) {
	o.PositiveVoteCount.Set(&v)
}
// SetPositiveVoteCountNil sets the value for PositiveVoteCount to be an explicit nil
func (o *CurveProposalDTO) SetPositiveVoteCountNil() {
	o.PositiveVoteCount.Set(nil)
}

// UnsetPositiveVoteCount ensures that no value is present for PositiveVoteCount, not even an explicit nil
func (o *CurveProposalDTO) UnsetPositiveVoteCount() {
	o.PositiveVoteCount.Unset()
}

// GetNegativeVoteCount returns the NegativeVoteCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetNegativeVoteCount() string {
	if o == nil || IsNil(o.NegativeVoteCount.Get()) {
		var ret string
		return ret
	}
	return *o.NegativeVoteCount.Get()
}

// GetNegativeVoteCountOk returns a tuple with the NegativeVoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetNegativeVoteCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NegativeVoteCount.Get(), o.NegativeVoteCount.IsSet()
}

// HasNegativeVoteCount returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasNegativeVoteCount() bool {
	if o != nil && o.NegativeVoteCount.IsSet() {
		return true
	}

	return false
}

// SetNegativeVoteCount gets a reference to the given NullableString and assigns it to the NegativeVoteCount field.
func (o *CurveProposalDTO) SetNegativeVoteCount(v string) {
	o.NegativeVoteCount.Set(&v)
}
// SetNegativeVoteCountNil sets the value for NegativeVoteCount to be an explicit nil
func (o *CurveProposalDTO) SetNegativeVoteCountNil() {
	o.NegativeVoteCount.Set(nil)
}

// UnsetNegativeVoteCount ensures that no value is present for NegativeVoteCount, not even an explicit nil
func (o *CurveProposalDTO) UnsetNegativeVoteCount() {
	o.NegativeVoteCount.Unset()
}

// GetCurrentQuorum returns the CurrentQuorum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCurrentQuorum() string {
	if o == nil || IsNil(o.CurrentQuorum.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentQuorum.Get()
}

// GetCurrentQuorumOk returns a tuple with the CurrentQuorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCurrentQuorumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentQuorum.Get(), o.CurrentQuorum.IsSet()
}

// HasCurrentQuorum returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCurrentQuorum() bool {
	if o != nil && o.CurrentQuorum.IsSet() {
		return true
	}

	return false
}

// SetCurrentQuorum gets a reference to the given NullableString and assigns it to the CurrentQuorum field.
func (o *CurveProposalDTO) SetCurrentQuorum(v string) {
	o.CurrentQuorum.Set(&v)
}
// SetCurrentQuorumNil sets the value for CurrentQuorum to be an explicit nil
func (o *CurveProposalDTO) SetCurrentQuorumNil() {
	o.CurrentQuorum.Set(nil)
}

// UnsetCurrentQuorum ensures that no value is present for CurrentQuorum, not even an explicit nil
func (o *CurveProposalDTO) UnsetCurrentQuorum() {
	o.CurrentQuorum.Unset()
}

// GetCurrentSupport returns the CurrentSupport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCurrentSupport() string {
	if o == nil || IsNil(o.CurrentSupport.Get()) {
		var ret string
		return ret
	}
	return *o.CurrentSupport.Get()
}

// GetCurrentSupportOk returns a tuple with the CurrentSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCurrentSupportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSupport.Get(), o.CurrentSupport.IsSet()
}

// HasCurrentSupport returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCurrentSupport() bool {
	if o != nil && o.CurrentSupport.IsSet() {
		return true
	}

	return false
}

// SetCurrentSupport gets a reference to the given NullableString and assigns it to the CurrentSupport field.
func (o *CurveProposalDTO) SetCurrentSupport(v string) {
	o.CurrentSupport.Set(&v)
}
// SetCurrentSupportNil sets the value for CurrentSupport to be an explicit nil
func (o *CurveProposalDTO) SetCurrentSupportNil() {
	o.CurrentSupport.Set(nil)
}

// UnsetCurrentSupport ensures that no value is present for CurrentSupport, not even an explicit nil
func (o *CurveProposalDTO) UnsetCurrentSupport() {
	o.CurrentSupport.Unset()
}

// GetStakedSupport returns the StakedSupport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetStakedSupport() string {
	if o == nil || IsNil(o.StakedSupport.Get()) {
		var ret string
		return ret
	}
	return *o.StakedSupport.Get()
}

// GetStakedSupportOk returns a tuple with the StakedSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetStakedSupportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StakedSupport.Get(), o.StakedSupport.IsSet()
}

// HasStakedSupport returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasStakedSupport() bool {
	if o != nil && o.StakedSupport.IsSet() {
		return true
	}

	return false
}

// SetStakedSupport gets a reference to the given NullableString and assigns it to the StakedSupport field.
func (o *CurveProposalDTO) SetStakedSupport(v string) {
	o.StakedSupport.Set(&v)
}
// SetStakedSupportNil sets the value for StakedSupport to be an explicit nil
func (o *CurveProposalDTO) SetStakedSupportNil() {
	o.StakedSupport.Set(nil)
}

// UnsetStakedSupport ensures that no value is present for StakedSupport, not even an explicit nil
func (o *CurveProposalDTO) UnsetStakedSupport() {
	o.StakedSupport.Unset()
}

// GetTotalStaked returns the TotalStaked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetTotalStaked() string {
	if o == nil || IsNil(o.TotalStaked.Get()) {
		var ret string
		return ret
	}
	return *o.TotalStaked.Get()
}

// GetTotalStakedOk returns a tuple with the TotalStaked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetTotalStakedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalStaked.Get(), o.TotalStaked.IsSet()
}

// HasTotalStaked returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasTotalStaked() bool {
	if o != nil && o.TotalStaked.IsSet() {
		return true
	}

	return false
}

// SetTotalStaked gets a reference to the given NullableString and assigns it to the TotalStaked field.
func (o *CurveProposalDTO) SetTotalStaked(v string) {
	o.TotalStaked.Set(&v)
}
// SetTotalStakedNil sets the value for TotalStaked to be an explicit nil
func (o *CurveProposalDTO) SetTotalStakedNil() {
	o.TotalStaked.Set(nil)
}

// UnsetTotalStaked ensures that no value is present for TotalStaked, not even an explicit nil
func (o *CurveProposalDTO) UnsetTotalStaked() {
	o.TotalStaked.Unset()
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCreated() string {
	if o == nil || IsNil(o.Created.Get()) {
		var ret string
		return ret
	}
	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// HasCreated returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCreated() bool {
	if o != nil && o.Created.IsSet() {
		return true
	}

	return false
}

// SetCreated gets a reference to the given NullableString and assigns it to the Created field.
func (o *CurveProposalDTO) SetCreated(v string) {
	o.Created.Set(&v)
}
// SetCreatedNil sets the value for Created to be an explicit nil
func (o *CurveProposalDTO) SetCreatedNil() {
	o.Created.Set(nil)
}

// UnsetCreated ensures that no value is present for Created, not even an explicit nil
func (o *CurveProposalDTO) UnsetCreated() {
	o.Created.Unset()
}

// GetCreatedAtBlock returns the CreatedAtBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCreatedAtBlock() string {
	if o == nil || IsNil(o.CreatedAtBlock.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAtBlock.Get()
}

// GetCreatedAtBlockOk returns a tuple with the CreatedAtBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCreatedAtBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAtBlock.Get(), o.CreatedAtBlock.IsSet()
}

// HasCreatedAtBlock returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCreatedAtBlock() bool {
	if o != nil && o.CreatedAtBlock.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtBlock gets a reference to the given NullableString and assigns it to the CreatedAtBlock field.
func (o *CurveProposalDTO) SetCreatedAtBlock(v string) {
	o.CreatedAtBlock.Set(&v)
}
// SetCreatedAtBlockNil sets the value for CreatedAtBlock to be an explicit nil
func (o *CurveProposalDTO) SetCreatedAtBlockNil() {
	o.CreatedAtBlock.Set(nil)
}

// UnsetCreatedAtBlock ensures that no value is present for CreatedAtBlock, not even an explicit nil
func (o *CurveProposalDTO) UnsetCreatedAtBlock() {
	o.CreatedAtBlock.Unset()
}

// GetCreatedAtTransaction returns the CreatedAtTransaction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetCreatedAtTransaction() string {
	if o == nil || IsNil(o.CreatedAtTransaction.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedAtTransaction.Get()
}

// GetCreatedAtTransactionOk returns a tuple with the CreatedAtTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetCreatedAtTransactionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAtTransaction.Get(), o.CreatedAtTransaction.IsSet()
}

// HasCreatedAtTransaction returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasCreatedAtTransaction() bool {
	if o != nil && o.CreatedAtTransaction.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtTransaction gets a reference to the given NullableString and assigns it to the CreatedAtTransaction field.
func (o *CurveProposalDTO) SetCreatedAtTransaction(v string) {
	o.CreatedAtTransaction.Set(&v)
}
// SetCreatedAtTransactionNil sets the value for CreatedAtTransaction to be an explicit nil
func (o *CurveProposalDTO) SetCreatedAtTransactionNil() {
	o.CreatedAtTransaction.Set(nil)
}

// UnsetCreatedAtTransaction ensures that no value is present for CreatedAtTransaction, not even an explicit nil
func (o *CurveProposalDTO) UnsetCreatedAtTransaction() {
	o.CreatedAtTransaction.Unset()
}

// GetUpdated returns the Updated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetUpdated() string {
	if o == nil || IsNil(o.Updated.Get()) {
		var ret string
		return ret
	}
	return *o.Updated.Get()
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Updated.Get(), o.Updated.IsSet()
}

// HasUpdated returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasUpdated() bool {
	if o != nil && o.Updated.IsSet() {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given NullableString and assigns it to the Updated field.
func (o *CurveProposalDTO) SetUpdated(v string) {
	o.Updated.Set(&v)
}
// SetUpdatedNil sets the value for Updated to be an explicit nil
func (o *CurveProposalDTO) SetUpdatedNil() {
	o.Updated.Set(nil)
}

// UnsetUpdated ensures that no value is present for Updated, not even an explicit nil
func (o *CurveProposalDTO) UnsetUpdated() {
	o.Updated.Unset()
}

// GetUpdatedAtBlock returns the UpdatedAtBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetUpdatedAtBlock() string {
	if o == nil || IsNil(o.UpdatedAtBlock.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAtBlock.Get()
}

// GetUpdatedAtBlockOk returns a tuple with the UpdatedAtBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetUpdatedAtBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAtBlock.Get(), o.UpdatedAtBlock.IsSet()
}

// HasUpdatedAtBlock returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasUpdatedAtBlock() bool {
	if o != nil && o.UpdatedAtBlock.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtBlock gets a reference to the given NullableString and assigns it to the UpdatedAtBlock field.
func (o *CurveProposalDTO) SetUpdatedAtBlock(v string) {
	o.UpdatedAtBlock.Set(&v)
}
// SetUpdatedAtBlockNil sets the value for UpdatedAtBlock to be an explicit nil
func (o *CurveProposalDTO) SetUpdatedAtBlockNil() {
	o.UpdatedAtBlock.Set(nil)
}

// UnsetUpdatedAtBlock ensures that no value is present for UpdatedAtBlock, not even an explicit nil
func (o *CurveProposalDTO) UnsetUpdatedAtBlock() {
	o.UpdatedAtBlock.Unset()
}

// GetUpdatedAtTransaction returns the UpdatedAtTransaction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetUpdatedAtTransaction() string {
	if o == nil || IsNil(o.UpdatedAtTransaction.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAtTransaction.Get()
}

// GetUpdatedAtTransactionOk returns a tuple with the UpdatedAtTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetUpdatedAtTransactionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAtTransaction.Get(), o.UpdatedAtTransaction.IsSet()
}

// HasUpdatedAtTransaction returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasUpdatedAtTransaction() bool {
	if o != nil && o.UpdatedAtTransaction.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtTransaction gets a reference to the given NullableString and assigns it to the UpdatedAtTransaction field.
func (o *CurveProposalDTO) SetUpdatedAtTransaction(v string) {
	o.UpdatedAtTransaction.Set(&v)
}
// SetUpdatedAtTransactionNil sets the value for UpdatedAtTransaction to be an explicit nil
func (o *CurveProposalDTO) SetUpdatedAtTransactionNil() {
	o.UpdatedAtTransaction.Set(nil)
}

// UnsetUpdatedAtTransaction ensures that no value is present for UpdatedAtTransaction, not even an explicit nil
func (o *CurveProposalDTO) UnsetUpdatedAtTransaction() {
	o.UpdatedAtTransaction.Unset()
}

// GetExecuted returns the Executed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetExecuted() string {
	if o == nil || IsNil(o.Executed.Get()) {
		var ret string
		return ret
	}
	return *o.Executed.Get()
}

// GetExecutedOk returns a tuple with the Executed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetExecutedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Executed.Get(), o.Executed.IsSet()
}

// HasExecuted returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasExecuted() bool {
	if o != nil && o.Executed.IsSet() {
		return true
	}

	return false
}

// SetExecuted gets a reference to the given NullableString and assigns it to the Executed field.
func (o *CurveProposalDTO) SetExecuted(v string) {
	o.Executed.Set(&v)
}
// SetExecutedNil sets the value for Executed to be an explicit nil
func (o *CurveProposalDTO) SetExecutedNil() {
	o.Executed.Set(nil)
}

// UnsetExecuted ensures that no value is present for Executed, not even an explicit nil
func (o *CurveProposalDTO) UnsetExecuted() {
	o.Executed.Unset()
}

// GetExecutedAtBlock returns the ExecutedAtBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetExecutedAtBlock() string {
	if o == nil || IsNil(o.ExecutedAtBlock.Get()) {
		var ret string
		return ret
	}
	return *o.ExecutedAtBlock.Get()
}

// GetExecutedAtBlockOk returns a tuple with the ExecutedAtBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetExecutedAtBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutedAtBlock.Get(), o.ExecutedAtBlock.IsSet()
}

// HasExecutedAtBlock returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasExecutedAtBlock() bool {
	if o != nil && o.ExecutedAtBlock.IsSet() {
		return true
	}

	return false
}

// SetExecutedAtBlock gets a reference to the given NullableString and assigns it to the ExecutedAtBlock field.
func (o *CurveProposalDTO) SetExecutedAtBlock(v string) {
	o.ExecutedAtBlock.Set(&v)
}
// SetExecutedAtBlockNil sets the value for ExecutedAtBlock to be an explicit nil
func (o *CurveProposalDTO) SetExecutedAtBlockNil() {
	o.ExecutedAtBlock.Set(nil)
}

// UnsetExecutedAtBlock ensures that no value is present for ExecutedAtBlock, not even an explicit nil
func (o *CurveProposalDTO) UnsetExecutedAtBlock() {
	o.ExecutedAtBlock.Unset()
}

// GetExecutedAtTransaction returns the ExecutedAtTransaction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveProposalDTO) GetExecutedAtTransaction() string {
	if o == nil || IsNil(o.ExecutedAtTransaction.Get()) {
		var ret string
		return ret
	}
	return *o.ExecutedAtTransaction.Get()
}

// GetExecutedAtTransactionOk returns a tuple with the ExecutedAtTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveProposalDTO) GetExecutedAtTransactionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutedAtTransaction.Get(), o.ExecutedAtTransaction.IsSet()
}

// HasExecutedAtTransaction returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasExecutedAtTransaction() bool {
	if o != nil && o.ExecutedAtTransaction.IsSet() {
		return true
	}

	return false
}

// SetExecutedAtTransaction gets a reference to the given NullableString and assigns it to the ExecutedAtTransaction field.
func (o *CurveProposalDTO) SetExecutedAtTransaction(v string) {
	o.ExecutedAtTransaction.Set(&v)
}
// SetExecutedAtTransactionNil sets the value for ExecutedAtTransaction to be an explicit nil
func (o *CurveProposalDTO) SetExecutedAtTransactionNil() {
	o.ExecutedAtTransaction.Set(nil)
}

// UnsetExecutedAtTransaction ensures that no value is present for ExecutedAtTransaction, not even an explicit nil
func (o *CurveProposalDTO) UnsetExecutedAtTransaction() {
	o.ExecutedAtTransaction.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *CurveProposalDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveProposalDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *CurveProposalDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *CurveProposalDTO) SetVid(v int64) {
	o.Vid = &v
}

func (o CurveProposalDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurveProposalDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Number.IsSet() {
		toSerialize["number"] = o.Number.Get()
	}
	if o.App.IsSet() {
		toSerialize["app"] = o.App.Get()
	}
	if o.Creator.IsSet() {
		toSerialize["creator"] = o.Creator.Get()
	}
	if o.ExecutionScript.IsSet() {
		toSerialize["execution_script"] = o.ExecutionScript.Get()
	}
	if o.ExpireDate.IsSet() {
		toSerialize["expire_date"] = o.ExpireDate.Get()
	}
	if o.MinimumQuorum.IsSet() {
		toSerialize["minimum_quorum"] = o.MinimumQuorum.Get()
	}
	if o.RequiredSupport.IsSet() {
		toSerialize["required_support"] = o.RequiredSupport.Get()
	}
	if o.SnapshotBlock.IsSet() {
		toSerialize["snapshot_block"] = o.SnapshotBlock.Get()
	}
	if o.VotingPower.IsSet() {
		toSerialize["voting_power"] = o.VotingPower.Get()
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.Text.IsSet() {
		toSerialize["text"] = o.Text.Get()
	}
	if o.VoteCount.IsSet() {
		toSerialize["vote_count"] = o.VoteCount.Get()
	}
	if o.PositiveVoteCount.IsSet() {
		toSerialize["positive_vote_count"] = o.PositiveVoteCount.Get()
	}
	if o.NegativeVoteCount.IsSet() {
		toSerialize["negative_vote_count"] = o.NegativeVoteCount.Get()
	}
	if o.CurrentQuorum.IsSet() {
		toSerialize["current_quorum"] = o.CurrentQuorum.Get()
	}
	if o.CurrentSupport.IsSet() {
		toSerialize["current_support"] = o.CurrentSupport.Get()
	}
	if o.StakedSupport.IsSet() {
		toSerialize["staked_support"] = o.StakedSupport.Get()
	}
	if o.TotalStaked.IsSet() {
		toSerialize["total_staked"] = o.TotalStaked.Get()
	}
	if o.Created.IsSet() {
		toSerialize["created"] = o.Created.Get()
	}
	if o.CreatedAtBlock.IsSet() {
		toSerialize["created_at_block"] = o.CreatedAtBlock.Get()
	}
	if o.CreatedAtTransaction.IsSet() {
		toSerialize["created_at_transaction"] = o.CreatedAtTransaction.Get()
	}
	if o.Updated.IsSet() {
		toSerialize["updated"] = o.Updated.Get()
	}
	if o.UpdatedAtBlock.IsSet() {
		toSerialize["updated_at_block"] = o.UpdatedAtBlock.Get()
	}
	if o.UpdatedAtTransaction.IsSet() {
		toSerialize["updated_at_transaction"] = o.UpdatedAtTransaction.Get()
	}
	if o.Executed.IsSet() {
		toSerialize["executed"] = o.Executed.Get()
	}
	if o.ExecutedAtBlock.IsSet() {
		toSerialize["executed_at_block"] = o.ExecutedAtBlock.Get()
	}
	if o.ExecutedAtTransaction.IsSet() {
		toSerialize["executed_at_transaction"] = o.ExecutedAtTransaction.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	return toSerialize, nil
}

type NullableCurveProposalDTO struct {
	value *CurveProposalDTO
	isSet bool
}

func (v NullableCurveProposalDTO) Get() *CurveProposalDTO {
	return v.value
}

func (v *NullableCurveProposalDTO) Set(val *CurveProposalDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCurveProposalDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCurveProposalDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurveProposalDTO(val *CurveProposalDTO) *NullableCurveProposalDTO {
	return &NullableCurveProposalDTO{value: val, isSet: true}
}

func (v NullableCurveProposalDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurveProposalDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


