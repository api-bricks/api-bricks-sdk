/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SushiswapPairDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SushiswapPairDTO{}

// SushiswapPairDTO Information about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.
type SushiswapPairDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// Pair contract address.
	Id NullableString `json:"id,omitempty"`
	// Factory contract address.
	Factory NullableString `json:"factory,omitempty"`
	// Friendly name, format: (token0 name)-(token1 name)
	Name NullableString `json:"name,omitempty"`
	// Reference to token0 as stored in pair contract.
	Token0 NullableString `json:"token_0,omitempty"`
	// Reference to token0 as stored in pair contract.
	Token1 NullableString `json:"token_1,omitempty"`
	// Reserve of token0.
	Reserve0 NullableString `json:"reserve_0,omitempty"`
	// Reserve of token1.
	Reserve1 NullableString `json:"reserve_1,omitempty"`
	// Total supply of liquidity token distributed to LPs.
	TotalSupply NullableString `json:"total_supply,omitempty"`
	// Total liquidity in pair stored as an amount of ETH.
	ReserveEth NullableString `json:"reserve_eth,omitempty"`
	// Total liquidity amount in pair stored as an amount of USD.
	ReserveUsd NullableString `json:"reserve_usd,omitempty"`
	// Total liquidity with only tracked amount.
	TrackedReserveEth NullableString `json:"tracked_reserve_eth,omitempty"`
	// Token0 per token1.
	Token0Price NullableString `json:"token_0_price,omitempty"`
	// Token1 per token0.
	Token1Price NullableString `json:"token_1_price,omitempty"`
	// Amount of token0 swapped on this pair.
	VolumeToken0 NullableString `json:"volume_token_0,omitempty"`
	// Amount of token1 swapped on this pair.
	VolumeToken1 NullableString `json:"volume_token_1,omitempty"`
	// Total amount swapped all time in this pair stored in USD (only tracked if USD liquidity is above minimum threshold).
	VolumeUsd NullableString `json:"volume_usd,omitempty"`
	// Total amount swapped all time in this pair stored in USD, no minimum liquidity threshold.
	UntrackedVolumeUsd NullableString `json:"untracked_volume_usd,omitempty"`
	// All time amount of transactions on this pair.
	TxCount NullableString `json:"tx_count,omitempty"`
	// Total number of LPs.
	LiquidityProviderCount NullableString `json:"liquidity_provider_count,omitempty"`
	// Timestamp.
	Timestamp NullableString `json:"timestamp,omitempty"`
	// Block number in which pair information was created in.
	Block NullableString `json:"block,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
	EvaluatedAsk *float64 `json:"evaluated_ask,omitempty"`
}

// NewSushiswapPairDTO instantiates a new SushiswapPairDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSushiswapPairDTO() *SushiswapPairDTO {
	this := SushiswapPairDTO{}
	return &this
}

// NewSushiswapPairDTOWithDefaults instantiates a new SushiswapPairDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSushiswapPairDTOWithDefaults() *SushiswapPairDTO {
	this := SushiswapPairDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *SushiswapPairDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SushiswapPairDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *SushiswapPairDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *SushiswapPairDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SushiswapPairDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *SushiswapPairDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *SushiswapPairDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SushiswapPairDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *SushiswapPairDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SushiswapPairDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SushiswapPairDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SushiswapPairDTO) UnsetId() {
	o.Id.Unset()
}

// GetFactory returns the Factory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetFactory() string {
	if o == nil || IsNil(o.Factory.Get()) {
		var ret string
		return ret
	}
	return *o.Factory.Get()
}

// GetFactoryOk returns a tuple with the Factory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetFactoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Factory.Get(), o.Factory.IsSet()
}

// HasFactory returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasFactory() bool {
	if o != nil && o.Factory.IsSet() {
		return true
	}

	return false
}

// SetFactory gets a reference to the given NullableString and assigns it to the Factory field.
func (o *SushiswapPairDTO) SetFactory(v string) {
	o.Factory.Set(&v)
}
// SetFactoryNil sets the value for Factory to be an explicit nil
func (o *SushiswapPairDTO) SetFactoryNil() {
	o.Factory.Set(nil)
}

// UnsetFactory ensures that no value is present for Factory, not even an explicit nil
func (o *SushiswapPairDTO) UnsetFactory() {
	o.Factory.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SushiswapPairDTO) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SushiswapPairDTO) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SushiswapPairDTO) UnsetName() {
	o.Name.Unset()
}

// GetToken0 returns the Token0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetToken0() string {
	if o == nil || IsNil(o.Token0.Get()) {
		var ret string
		return ret
	}
	return *o.Token0.Get()
}

// GetToken0Ok returns a tuple with the Token0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token0.Get(), o.Token0.IsSet()
}

// HasToken0 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasToken0() bool {
	if o != nil && o.Token0.IsSet() {
		return true
	}

	return false
}

// SetToken0 gets a reference to the given NullableString and assigns it to the Token0 field.
func (o *SushiswapPairDTO) SetToken0(v string) {
	o.Token0.Set(&v)
}
// SetToken0Nil sets the value for Token0 to be an explicit nil
func (o *SushiswapPairDTO) SetToken0Nil() {
	o.Token0.Set(nil)
}

// UnsetToken0 ensures that no value is present for Token0, not even an explicit nil
func (o *SushiswapPairDTO) UnsetToken0() {
	o.Token0.Unset()
}

// GetToken1 returns the Token1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetToken1() string {
	if o == nil || IsNil(o.Token1.Get()) {
		var ret string
		return ret
	}
	return *o.Token1.Get()
}

// GetToken1Ok returns a tuple with the Token1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token1.Get(), o.Token1.IsSet()
}

// HasToken1 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasToken1() bool {
	if o != nil && o.Token1.IsSet() {
		return true
	}

	return false
}

// SetToken1 gets a reference to the given NullableString and assigns it to the Token1 field.
func (o *SushiswapPairDTO) SetToken1(v string) {
	o.Token1.Set(&v)
}
// SetToken1Nil sets the value for Token1 to be an explicit nil
func (o *SushiswapPairDTO) SetToken1Nil() {
	o.Token1.Set(nil)
}

// UnsetToken1 ensures that no value is present for Token1, not even an explicit nil
func (o *SushiswapPairDTO) UnsetToken1() {
	o.Token1.Unset()
}

// GetReserve0 returns the Reserve0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetReserve0() string {
	if o == nil || IsNil(o.Reserve0.Get()) {
		var ret string
		return ret
	}
	return *o.Reserve0.Get()
}

// GetReserve0Ok returns a tuple with the Reserve0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetReserve0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reserve0.Get(), o.Reserve0.IsSet()
}

// HasReserve0 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasReserve0() bool {
	if o != nil && o.Reserve0.IsSet() {
		return true
	}

	return false
}

// SetReserve0 gets a reference to the given NullableString and assigns it to the Reserve0 field.
func (o *SushiswapPairDTO) SetReserve0(v string) {
	o.Reserve0.Set(&v)
}
// SetReserve0Nil sets the value for Reserve0 to be an explicit nil
func (o *SushiswapPairDTO) SetReserve0Nil() {
	o.Reserve0.Set(nil)
}

// UnsetReserve0 ensures that no value is present for Reserve0, not even an explicit nil
func (o *SushiswapPairDTO) UnsetReserve0() {
	o.Reserve0.Unset()
}

// GetReserve1 returns the Reserve1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetReserve1() string {
	if o == nil || IsNil(o.Reserve1.Get()) {
		var ret string
		return ret
	}
	return *o.Reserve1.Get()
}

// GetReserve1Ok returns a tuple with the Reserve1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetReserve1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reserve1.Get(), o.Reserve1.IsSet()
}

// HasReserve1 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasReserve1() bool {
	if o != nil && o.Reserve1.IsSet() {
		return true
	}

	return false
}

// SetReserve1 gets a reference to the given NullableString and assigns it to the Reserve1 field.
func (o *SushiswapPairDTO) SetReserve1(v string) {
	o.Reserve1.Set(&v)
}
// SetReserve1Nil sets the value for Reserve1 to be an explicit nil
func (o *SushiswapPairDTO) SetReserve1Nil() {
	o.Reserve1.Set(nil)
}

// UnsetReserve1 ensures that no value is present for Reserve1, not even an explicit nil
func (o *SushiswapPairDTO) UnsetReserve1() {
	o.Reserve1.Unset()
}

// GetTotalSupply returns the TotalSupply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetTotalSupply() string {
	if o == nil || IsNil(o.TotalSupply.Get()) {
		var ret string
		return ret
	}
	return *o.TotalSupply.Get()
}

// GetTotalSupplyOk returns a tuple with the TotalSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetTotalSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalSupply.Get(), o.TotalSupply.IsSet()
}

// HasTotalSupply returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasTotalSupply() bool {
	if o != nil && o.TotalSupply.IsSet() {
		return true
	}

	return false
}

// SetTotalSupply gets a reference to the given NullableString and assigns it to the TotalSupply field.
func (o *SushiswapPairDTO) SetTotalSupply(v string) {
	o.TotalSupply.Set(&v)
}
// SetTotalSupplyNil sets the value for TotalSupply to be an explicit nil
func (o *SushiswapPairDTO) SetTotalSupplyNil() {
	o.TotalSupply.Set(nil)
}

// UnsetTotalSupply ensures that no value is present for TotalSupply, not even an explicit nil
func (o *SushiswapPairDTO) UnsetTotalSupply() {
	o.TotalSupply.Unset()
}

// GetReserveEth returns the ReserveEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetReserveEth() string {
	if o == nil || IsNil(o.ReserveEth.Get()) {
		var ret string
		return ret
	}
	return *o.ReserveEth.Get()
}

// GetReserveEthOk returns a tuple with the ReserveEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetReserveEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReserveEth.Get(), o.ReserveEth.IsSet()
}

// HasReserveEth returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasReserveEth() bool {
	if o != nil && o.ReserveEth.IsSet() {
		return true
	}

	return false
}

// SetReserveEth gets a reference to the given NullableString and assigns it to the ReserveEth field.
func (o *SushiswapPairDTO) SetReserveEth(v string) {
	o.ReserveEth.Set(&v)
}
// SetReserveEthNil sets the value for ReserveEth to be an explicit nil
func (o *SushiswapPairDTO) SetReserveEthNil() {
	o.ReserveEth.Set(nil)
}

// UnsetReserveEth ensures that no value is present for ReserveEth, not even an explicit nil
func (o *SushiswapPairDTO) UnsetReserveEth() {
	o.ReserveEth.Unset()
}

// GetReserveUsd returns the ReserveUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetReserveUsd() string {
	if o == nil || IsNil(o.ReserveUsd.Get()) {
		var ret string
		return ret
	}
	return *o.ReserveUsd.Get()
}

// GetReserveUsdOk returns a tuple with the ReserveUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetReserveUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReserveUsd.Get(), o.ReserveUsd.IsSet()
}

// HasReserveUsd returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasReserveUsd() bool {
	if o != nil && o.ReserveUsd.IsSet() {
		return true
	}

	return false
}

// SetReserveUsd gets a reference to the given NullableString and assigns it to the ReserveUsd field.
func (o *SushiswapPairDTO) SetReserveUsd(v string) {
	o.ReserveUsd.Set(&v)
}
// SetReserveUsdNil sets the value for ReserveUsd to be an explicit nil
func (o *SushiswapPairDTO) SetReserveUsdNil() {
	o.ReserveUsd.Set(nil)
}

// UnsetReserveUsd ensures that no value is present for ReserveUsd, not even an explicit nil
func (o *SushiswapPairDTO) UnsetReserveUsd() {
	o.ReserveUsd.Unset()
}

// GetTrackedReserveEth returns the TrackedReserveEth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetTrackedReserveEth() string {
	if o == nil || IsNil(o.TrackedReserveEth.Get()) {
		var ret string
		return ret
	}
	return *o.TrackedReserveEth.Get()
}

// GetTrackedReserveEthOk returns a tuple with the TrackedReserveEth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetTrackedReserveEthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackedReserveEth.Get(), o.TrackedReserveEth.IsSet()
}

// HasTrackedReserveEth returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasTrackedReserveEth() bool {
	if o != nil && o.TrackedReserveEth.IsSet() {
		return true
	}

	return false
}

// SetTrackedReserveEth gets a reference to the given NullableString and assigns it to the TrackedReserveEth field.
func (o *SushiswapPairDTO) SetTrackedReserveEth(v string) {
	o.TrackedReserveEth.Set(&v)
}
// SetTrackedReserveEthNil sets the value for TrackedReserveEth to be an explicit nil
func (o *SushiswapPairDTO) SetTrackedReserveEthNil() {
	o.TrackedReserveEth.Set(nil)
}

// UnsetTrackedReserveEth ensures that no value is present for TrackedReserveEth, not even an explicit nil
func (o *SushiswapPairDTO) UnsetTrackedReserveEth() {
	o.TrackedReserveEth.Unset()
}

// GetToken0Price returns the Token0Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetToken0Price() string {
	if o == nil || IsNil(o.Token0Price.Get()) {
		var ret string
		return ret
	}
	return *o.Token0Price.Get()
}

// GetToken0PriceOk returns a tuple with the Token0Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetToken0PriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token0Price.Get(), o.Token0Price.IsSet()
}

// HasToken0Price returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasToken0Price() bool {
	if o != nil && o.Token0Price.IsSet() {
		return true
	}

	return false
}

// SetToken0Price gets a reference to the given NullableString and assigns it to the Token0Price field.
func (o *SushiswapPairDTO) SetToken0Price(v string) {
	o.Token0Price.Set(&v)
}
// SetToken0PriceNil sets the value for Token0Price to be an explicit nil
func (o *SushiswapPairDTO) SetToken0PriceNil() {
	o.Token0Price.Set(nil)
}

// UnsetToken0Price ensures that no value is present for Token0Price, not even an explicit nil
func (o *SushiswapPairDTO) UnsetToken0Price() {
	o.Token0Price.Unset()
}

// GetToken1Price returns the Token1Price field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetToken1Price() string {
	if o == nil || IsNil(o.Token1Price.Get()) {
		var ret string
		return ret
	}
	return *o.Token1Price.Get()
}

// GetToken1PriceOk returns a tuple with the Token1Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetToken1PriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token1Price.Get(), o.Token1Price.IsSet()
}

// HasToken1Price returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasToken1Price() bool {
	if o != nil && o.Token1Price.IsSet() {
		return true
	}

	return false
}

// SetToken1Price gets a reference to the given NullableString and assigns it to the Token1Price field.
func (o *SushiswapPairDTO) SetToken1Price(v string) {
	o.Token1Price.Set(&v)
}
// SetToken1PriceNil sets the value for Token1Price to be an explicit nil
func (o *SushiswapPairDTO) SetToken1PriceNil() {
	o.Token1Price.Set(nil)
}

// UnsetToken1Price ensures that no value is present for Token1Price, not even an explicit nil
func (o *SushiswapPairDTO) UnsetToken1Price() {
	o.Token1Price.Unset()
}

// GetVolumeToken0 returns the VolumeToken0 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetVolumeToken0() string {
	if o == nil || IsNil(o.VolumeToken0.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeToken0.Get()
}

// GetVolumeToken0Ok returns a tuple with the VolumeToken0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetVolumeToken0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken0.Get(), o.VolumeToken0.IsSet()
}

// HasVolumeToken0 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasVolumeToken0() bool {
	if o != nil && o.VolumeToken0.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken0 gets a reference to the given NullableString and assigns it to the VolumeToken0 field.
func (o *SushiswapPairDTO) SetVolumeToken0(v string) {
	o.VolumeToken0.Set(&v)
}
// SetVolumeToken0Nil sets the value for VolumeToken0 to be an explicit nil
func (o *SushiswapPairDTO) SetVolumeToken0Nil() {
	o.VolumeToken0.Set(nil)
}

// UnsetVolumeToken0 ensures that no value is present for VolumeToken0, not even an explicit nil
func (o *SushiswapPairDTO) UnsetVolumeToken0() {
	o.VolumeToken0.Unset()
}

// GetVolumeToken1 returns the VolumeToken1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetVolumeToken1() string {
	if o == nil || IsNil(o.VolumeToken1.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeToken1.Get()
}

// GetVolumeToken1Ok returns a tuple with the VolumeToken1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetVolumeToken1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeToken1.Get(), o.VolumeToken1.IsSet()
}

// HasVolumeToken1 returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasVolumeToken1() bool {
	if o != nil && o.VolumeToken1.IsSet() {
		return true
	}

	return false
}

// SetVolumeToken1 gets a reference to the given NullableString and assigns it to the VolumeToken1 field.
func (o *SushiswapPairDTO) SetVolumeToken1(v string) {
	o.VolumeToken1.Set(&v)
}
// SetVolumeToken1Nil sets the value for VolumeToken1 to be an explicit nil
func (o *SushiswapPairDTO) SetVolumeToken1Nil() {
	o.VolumeToken1.Set(nil)
}

// UnsetVolumeToken1 ensures that no value is present for VolumeToken1, not even an explicit nil
func (o *SushiswapPairDTO) UnsetVolumeToken1() {
	o.VolumeToken1.Unset()
}

// GetVolumeUsd returns the VolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetVolumeUsd() string {
	if o == nil || IsNil(o.VolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.VolumeUsd.Get()
}

// GetVolumeUsdOk returns a tuple with the VolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumeUsd.Get(), o.VolumeUsd.IsSet()
}

// HasVolumeUsd returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasVolumeUsd() bool {
	if o != nil && o.VolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetVolumeUsd gets a reference to the given NullableString and assigns it to the VolumeUsd field.
func (o *SushiswapPairDTO) SetVolumeUsd(v string) {
	o.VolumeUsd.Set(&v)
}
// SetVolumeUsdNil sets the value for VolumeUsd to be an explicit nil
func (o *SushiswapPairDTO) SetVolumeUsdNil() {
	o.VolumeUsd.Set(nil)
}

// UnsetVolumeUsd ensures that no value is present for VolumeUsd, not even an explicit nil
func (o *SushiswapPairDTO) UnsetVolumeUsd() {
	o.VolumeUsd.Unset()
}

// GetUntrackedVolumeUsd returns the UntrackedVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetUntrackedVolumeUsd() string {
	if o == nil || IsNil(o.UntrackedVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.UntrackedVolumeUsd.Get()
}

// GetUntrackedVolumeUsdOk returns a tuple with the UntrackedVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetUntrackedVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UntrackedVolumeUsd.Get(), o.UntrackedVolumeUsd.IsSet()
}

// HasUntrackedVolumeUsd returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasUntrackedVolumeUsd() bool {
	if o != nil && o.UntrackedVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetUntrackedVolumeUsd gets a reference to the given NullableString and assigns it to the UntrackedVolumeUsd field.
func (o *SushiswapPairDTO) SetUntrackedVolumeUsd(v string) {
	o.UntrackedVolumeUsd.Set(&v)
}
// SetUntrackedVolumeUsdNil sets the value for UntrackedVolumeUsd to be an explicit nil
func (o *SushiswapPairDTO) SetUntrackedVolumeUsdNil() {
	o.UntrackedVolumeUsd.Set(nil)
}

// UnsetUntrackedVolumeUsd ensures that no value is present for UntrackedVolumeUsd, not even an explicit nil
func (o *SushiswapPairDTO) UnsetUntrackedVolumeUsd() {
	o.UntrackedVolumeUsd.Unset()
}

// GetTxCount returns the TxCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetTxCount() string {
	if o == nil || IsNil(o.TxCount.Get()) {
		var ret string
		return ret
	}
	return *o.TxCount.Get()
}

// GetTxCountOk returns a tuple with the TxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetTxCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxCount.Get(), o.TxCount.IsSet()
}

// HasTxCount returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasTxCount() bool {
	if o != nil && o.TxCount.IsSet() {
		return true
	}

	return false
}

// SetTxCount gets a reference to the given NullableString and assigns it to the TxCount field.
func (o *SushiswapPairDTO) SetTxCount(v string) {
	o.TxCount.Set(&v)
}
// SetTxCountNil sets the value for TxCount to be an explicit nil
func (o *SushiswapPairDTO) SetTxCountNil() {
	o.TxCount.Set(nil)
}

// UnsetTxCount ensures that no value is present for TxCount, not even an explicit nil
func (o *SushiswapPairDTO) UnsetTxCount() {
	o.TxCount.Unset()
}

// GetLiquidityProviderCount returns the LiquidityProviderCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetLiquidityProviderCount() string {
	if o == nil || IsNil(o.LiquidityProviderCount.Get()) {
		var ret string
		return ret
	}
	return *o.LiquidityProviderCount.Get()
}

// GetLiquidityProviderCountOk returns a tuple with the LiquidityProviderCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetLiquidityProviderCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LiquidityProviderCount.Get(), o.LiquidityProviderCount.IsSet()
}

// HasLiquidityProviderCount returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasLiquidityProviderCount() bool {
	if o != nil && o.LiquidityProviderCount.IsSet() {
		return true
	}

	return false
}

// SetLiquidityProviderCount gets a reference to the given NullableString and assigns it to the LiquidityProviderCount field.
func (o *SushiswapPairDTO) SetLiquidityProviderCount(v string) {
	o.LiquidityProviderCount.Set(&v)
}
// SetLiquidityProviderCountNil sets the value for LiquidityProviderCount to be an explicit nil
func (o *SushiswapPairDTO) SetLiquidityProviderCountNil() {
	o.LiquidityProviderCount.Set(nil)
}

// UnsetLiquidityProviderCount ensures that no value is present for LiquidityProviderCount, not even an explicit nil
func (o *SushiswapPairDTO) UnsetLiquidityProviderCount() {
	o.LiquidityProviderCount.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *SushiswapPairDTO) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *SushiswapPairDTO) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *SushiswapPairDTO) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetBlock returns the Block field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SushiswapPairDTO) GetBlock() string {
	if o == nil || IsNil(o.Block.Get()) {
		var ret string
		return ret
	}
	return *o.Block.Get()
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SushiswapPairDTO) GetBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Block.Get(), o.Block.IsSet()
}

// HasBlock returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasBlock() bool {
	if o != nil && o.Block.IsSet() {
		return true
	}

	return false
}

// SetBlock gets a reference to the given NullableString and assigns it to the Block field.
func (o *SushiswapPairDTO) SetBlock(v string) {
	o.Block.Set(&v)
}
// SetBlockNil sets the value for Block to be an explicit nil
func (o *SushiswapPairDTO) SetBlockNil() {
	o.Block.Set(nil)
}

// UnsetBlock ensures that no value is present for Block, not even an explicit nil
func (o *SushiswapPairDTO) UnsetBlock() {
	o.Block.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *SushiswapPairDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SushiswapPairDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *SushiswapPairDTO) SetVid(v int64) {
	o.Vid = &v
}

// GetEvaluatedAsk returns the EvaluatedAsk field value if set, zero value otherwise.
func (o *SushiswapPairDTO) GetEvaluatedAsk() float64 {
	if o == nil || IsNil(o.EvaluatedAsk) {
		var ret float64
		return ret
	}
	return *o.EvaluatedAsk
}

// GetEvaluatedAskOk returns a tuple with the EvaluatedAsk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SushiswapPairDTO) GetEvaluatedAskOk() (*float64, bool) {
	if o == nil || IsNil(o.EvaluatedAsk) {
		return nil, false
	}
	return o.EvaluatedAsk, true
}

// HasEvaluatedAsk returns a boolean if a field has been set.
func (o *SushiswapPairDTO) HasEvaluatedAsk() bool {
	if o != nil && !IsNil(o.EvaluatedAsk) {
		return true
	}

	return false
}

// SetEvaluatedAsk gets a reference to the given float64 and assigns it to the EvaluatedAsk field.
func (o *SushiswapPairDTO) SetEvaluatedAsk(v float64) {
	o.EvaluatedAsk = &v
}

func (o SushiswapPairDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SushiswapPairDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Factory.IsSet() {
		toSerialize["factory"] = o.Factory.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Token0.IsSet() {
		toSerialize["token_0"] = o.Token0.Get()
	}
	if o.Token1.IsSet() {
		toSerialize["token_1"] = o.Token1.Get()
	}
	if o.Reserve0.IsSet() {
		toSerialize["reserve_0"] = o.Reserve0.Get()
	}
	if o.Reserve1.IsSet() {
		toSerialize["reserve_1"] = o.Reserve1.Get()
	}
	if o.TotalSupply.IsSet() {
		toSerialize["total_supply"] = o.TotalSupply.Get()
	}
	if o.ReserveEth.IsSet() {
		toSerialize["reserve_eth"] = o.ReserveEth.Get()
	}
	if o.ReserveUsd.IsSet() {
		toSerialize["reserve_usd"] = o.ReserveUsd.Get()
	}
	if o.TrackedReserveEth.IsSet() {
		toSerialize["tracked_reserve_eth"] = o.TrackedReserveEth.Get()
	}
	if o.Token0Price.IsSet() {
		toSerialize["token_0_price"] = o.Token0Price.Get()
	}
	if o.Token1Price.IsSet() {
		toSerialize["token_1_price"] = o.Token1Price.Get()
	}
	if o.VolumeToken0.IsSet() {
		toSerialize["volume_token_0"] = o.VolumeToken0.Get()
	}
	if o.VolumeToken1.IsSet() {
		toSerialize["volume_token_1"] = o.VolumeToken1.Get()
	}
	if o.VolumeUsd.IsSet() {
		toSerialize["volume_usd"] = o.VolumeUsd.Get()
	}
	if o.UntrackedVolumeUsd.IsSet() {
		toSerialize["untracked_volume_usd"] = o.UntrackedVolumeUsd.Get()
	}
	if o.TxCount.IsSet() {
		toSerialize["tx_count"] = o.TxCount.Get()
	}
	if o.LiquidityProviderCount.IsSet() {
		toSerialize["liquidity_provider_count"] = o.LiquidityProviderCount.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.Block.IsSet() {
		toSerialize["block"] = o.Block.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	// skip: evaluated_ask is readOnly
	return toSerialize, nil
}

type NullableSushiswapPairDTO struct {
	value *SushiswapPairDTO
	isSet bool
}

func (v NullableSushiswapPairDTO) Get() *SushiswapPairDTO {
	return v.value
}

func (v *NullableSushiswapPairDTO) Set(val *SushiswapPairDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSushiswapPairDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSushiswapPairDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSushiswapPairDTO(val *SushiswapPairDTO) *NullableSushiswapPairDTO {
	return &NullableSushiswapPairDTO{value: val, isSet: true}
}

func (v NullableSushiswapPairDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSushiswapPairDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


