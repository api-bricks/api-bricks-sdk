/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CurveSystemStateDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurveSystemStateDTO{}

// CurveSystemStateDTO struct for CurveSystemStateDTO
type CurveSystemStateDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// Singleton ID, equals to 'current'.
	Id NullableString `json:"id,omitempty"`
	// Current pool registry address.
	RegistryContract NullableString `json:"registry_contract,omitempty"`
	// Number of contracts in the AddressProvider registry.
	ContractCount NullableString `json:"contract_count,omitempty"`
	// Number of gauges registered.
	GaugeCount NullableString `json:"gauge_count,omitempty"`
	// Number of gauge types registered.
	GaugeTypeCount NullableString `json:"gauge_type_count,omitempty"`
	// Number of active pools.
	PoolCount NullableString `json:"pool_count,omitempty"`
	// Number of tokens registered.
	TokenCount NullableString `json:"token_count,omitempty"`
	// Total number of pools (including removed ones).
	TotalPoolCount NullableString `json:"total_pool_count,omitempty"`
	// 
	Updated NullableString `json:"updated,omitempty"`
	// 
	UpdatedAtBlock NullableString `json:"updated_at_block,omitempty"`
	// 
	UpdatedAtTransaction NullableString `json:"updated_at_transaction,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
}

// NewCurveSystemStateDTO instantiates a new CurveSystemStateDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurveSystemStateDTO() *CurveSystemStateDTO {
	this := CurveSystemStateDTO{}
	return &this
}

// NewCurveSystemStateDTOWithDefaults instantiates a new CurveSystemStateDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurveSystemStateDTOWithDefaults() *CurveSystemStateDTO {
	this := CurveSystemStateDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CurveSystemStateDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveSystemStateDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CurveSystemStateDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CurveSystemStateDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveSystemStateDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CurveSystemStateDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *CurveSystemStateDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveSystemStateDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *CurveSystemStateDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CurveSystemStateDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CurveSystemStateDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetId() {
	o.Id.Unset()
}

// GetRegistryContract returns the RegistryContract field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetRegistryContract() string {
	if o == nil || IsNil(o.RegistryContract.Get()) {
		var ret string
		return ret
	}
	return *o.RegistryContract.Get()
}

// GetRegistryContractOk returns a tuple with the RegistryContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetRegistryContractOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegistryContract.Get(), o.RegistryContract.IsSet()
}

// HasRegistryContract returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasRegistryContract() bool {
	if o != nil && o.RegistryContract.IsSet() {
		return true
	}

	return false
}

// SetRegistryContract gets a reference to the given NullableString and assigns it to the RegistryContract field.
func (o *CurveSystemStateDTO) SetRegistryContract(v string) {
	o.RegistryContract.Set(&v)
}
// SetRegistryContractNil sets the value for RegistryContract to be an explicit nil
func (o *CurveSystemStateDTO) SetRegistryContractNil() {
	o.RegistryContract.Set(nil)
}

// UnsetRegistryContract ensures that no value is present for RegistryContract, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetRegistryContract() {
	o.RegistryContract.Unset()
}

// GetContractCount returns the ContractCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetContractCount() string {
	if o == nil || IsNil(o.ContractCount.Get()) {
		var ret string
		return ret
	}
	return *o.ContractCount.Get()
}

// GetContractCountOk returns a tuple with the ContractCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetContractCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractCount.Get(), o.ContractCount.IsSet()
}

// HasContractCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasContractCount() bool {
	if o != nil && o.ContractCount.IsSet() {
		return true
	}

	return false
}

// SetContractCount gets a reference to the given NullableString and assigns it to the ContractCount field.
func (o *CurveSystemStateDTO) SetContractCount(v string) {
	o.ContractCount.Set(&v)
}
// SetContractCountNil sets the value for ContractCount to be an explicit nil
func (o *CurveSystemStateDTO) SetContractCountNil() {
	o.ContractCount.Set(nil)
}

// UnsetContractCount ensures that no value is present for ContractCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetContractCount() {
	o.ContractCount.Unset()
}

// GetGaugeCount returns the GaugeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetGaugeCount() string {
	if o == nil || IsNil(o.GaugeCount.Get()) {
		var ret string
		return ret
	}
	return *o.GaugeCount.Get()
}

// GetGaugeCountOk returns a tuple with the GaugeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetGaugeCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GaugeCount.Get(), o.GaugeCount.IsSet()
}

// HasGaugeCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasGaugeCount() bool {
	if o != nil && o.GaugeCount.IsSet() {
		return true
	}

	return false
}

// SetGaugeCount gets a reference to the given NullableString and assigns it to the GaugeCount field.
func (o *CurveSystemStateDTO) SetGaugeCount(v string) {
	o.GaugeCount.Set(&v)
}
// SetGaugeCountNil sets the value for GaugeCount to be an explicit nil
func (o *CurveSystemStateDTO) SetGaugeCountNil() {
	o.GaugeCount.Set(nil)
}

// UnsetGaugeCount ensures that no value is present for GaugeCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetGaugeCount() {
	o.GaugeCount.Unset()
}

// GetGaugeTypeCount returns the GaugeTypeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetGaugeTypeCount() string {
	if o == nil || IsNil(o.GaugeTypeCount.Get()) {
		var ret string
		return ret
	}
	return *o.GaugeTypeCount.Get()
}

// GetGaugeTypeCountOk returns a tuple with the GaugeTypeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetGaugeTypeCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GaugeTypeCount.Get(), o.GaugeTypeCount.IsSet()
}

// HasGaugeTypeCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasGaugeTypeCount() bool {
	if o != nil && o.GaugeTypeCount.IsSet() {
		return true
	}

	return false
}

// SetGaugeTypeCount gets a reference to the given NullableString and assigns it to the GaugeTypeCount field.
func (o *CurveSystemStateDTO) SetGaugeTypeCount(v string) {
	o.GaugeTypeCount.Set(&v)
}
// SetGaugeTypeCountNil sets the value for GaugeTypeCount to be an explicit nil
func (o *CurveSystemStateDTO) SetGaugeTypeCountNil() {
	o.GaugeTypeCount.Set(nil)
}

// UnsetGaugeTypeCount ensures that no value is present for GaugeTypeCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetGaugeTypeCount() {
	o.GaugeTypeCount.Unset()
}

// GetPoolCount returns the PoolCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetPoolCount() string {
	if o == nil || IsNil(o.PoolCount.Get()) {
		var ret string
		return ret
	}
	return *o.PoolCount.Get()
}

// GetPoolCountOk returns a tuple with the PoolCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetPoolCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolCount.Get(), o.PoolCount.IsSet()
}

// HasPoolCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasPoolCount() bool {
	if o != nil && o.PoolCount.IsSet() {
		return true
	}

	return false
}

// SetPoolCount gets a reference to the given NullableString and assigns it to the PoolCount field.
func (o *CurveSystemStateDTO) SetPoolCount(v string) {
	o.PoolCount.Set(&v)
}
// SetPoolCountNil sets the value for PoolCount to be an explicit nil
func (o *CurveSystemStateDTO) SetPoolCountNil() {
	o.PoolCount.Set(nil)
}

// UnsetPoolCount ensures that no value is present for PoolCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetPoolCount() {
	o.PoolCount.Unset()
}

// GetTokenCount returns the TokenCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetTokenCount() string {
	if o == nil || IsNil(o.TokenCount.Get()) {
		var ret string
		return ret
	}
	return *o.TokenCount.Get()
}

// GetTokenCountOk returns a tuple with the TokenCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetTokenCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenCount.Get(), o.TokenCount.IsSet()
}

// HasTokenCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasTokenCount() bool {
	if o != nil && o.TokenCount.IsSet() {
		return true
	}

	return false
}

// SetTokenCount gets a reference to the given NullableString and assigns it to the TokenCount field.
func (o *CurveSystemStateDTO) SetTokenCount(v string) {
	o.TokenCount.Set(&v)
}
// SetTokenCountNil sets the value for TokenCount to be an explicit nil
func (o *CurveSystemStateDTO) SetTokenCountNil() {
	o.TokenCount.Set(nil)
}

// UnsetTokenCount ensures that no value is present for TokenCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetTokenCount() {
	o.TokenCount.Unset()
}

// GetTotalPoolCount returns the TotalPoolCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetTotalPoolCount() string {
	if o == nil || IsNil(o.TotalPoolCount.Get()) {
		var ret string
		return ret
	}
	return *o.TotalPoolCount.Get()
}

// GetTotalPoolCountOk returns a tuple with the TotalPoolCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetTotalPoolCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPoolCount.Get(), o.TotalPoolCount.IsSet()
}

// HasTotalPoolCount returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasTotalPoolCount() bool {
	if o != nil && o.TotalPoolCount.IsSet() {
		return true
	}

	return false
}

// SetTotalPoolCount gets a reference to the given NullableString and assigns it to the TotalPoolCount field.
func (o *CurveSystemStateDTO) SetTotalPoolCount(v string) {
	o.TotalPoolCount.Set(&v)
}
// SetTotalPoolCountNil sets the value for TotalPoolCount to be an explicit nil
func (o *CurveSystemStateDTO) SetTotalPoolCountNil() {
	o.TotalPoolCount.Set(nil)
}

// UnsetTotalPoolCount ensures that no value is present for TotalPoolCount, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetTotalPoolCount() {
	o.TotalPoolCount.Unset()
}

// GetUpdated returns the Updated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetUpdated() string {
	if o == nil || IsNil(o.Updated.Get()) {
		var ret string
		return ret
	}
	return *o.Updated.Get()
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Updated.Get(), o.Updated.IsSet()
}

// HasUpdated returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasUpdated() bool {
	if o != nil && o.Updated.IsSet() {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given NullableString and assigns it to the Updated field.
func (o *CurveSystemStateDTO) SetUpdated(v string) {
	o.Updated.Set(&v)
}
// SetUpdatedNil sets the value for Updated to be an explicit nil
func (o *CurveSystemStateDTO) SetUpdatedNil() {
	o.Updated.Set(nil)
}

// UnsetUpdated ensures that no value is present for Updated, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetUpdated() {
	o.Updated.Unset()
}

// GetUpdatedAtBlock returns the UpdatedAtBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetUpdatedAtBlock() string {
	if o == nil || IsNil(o.UpdatedAtBlock.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAtBlock.Get()
}

// GetUpdatedAtBlockOk returns a tuple with the UpdatedAtBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetUpdatedAtBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAtBlock.Get(), o.UpdatedAtBlock.IsSet()
}

// HasUpdatedAtBlock returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasUpdatedAtBlock() bool {
	if o != nil && o.UpdatedAtBlock.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtBlock gets a reference to the given NullableString and assigns it to the UpdatedAtBlock field.
func (o *CurveSystemStateDTO) SetUpdatedAtBlock(v string) {
	o.UpdatedAtBlock.Set(&v)
}
// SetUpdatedAtBlockNil sets the value for UpdatedAtBlock to be an explicit nil
func (o *CurveSystemStateDTO) SetUpdatedAtBlockNil() {
	o.UpdatedAtBlock.Set(nil)
}

// UnsetUpdatedAtBlock ensures that no value is present for UpdatedAtBlock, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetUpdatedAtBlock() {
	o.UpdatedAtBlock.Unset()
}

// GetUpdatedAtTransaction returns the UpdatedAtTransaction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveSystemStateDTO) GetUpdatedAtTransaction() string {
	if o == nil || IsNil(o.UpdatedAtTransaction.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedAtTransaction.Get()
}

// GetUpdatedAtTransactionOk returns a tuple with the UpdatedAtTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveSystemStateDTO) GetUpdatedAtTransactionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAtTransaction.Get(), o.UpdatedAtTransaction.IsSet()
}

// HasUpdatedAtTransaction returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasUpdatedAtTransaction() bool {
	if o != nil && o.UpdatedAtTransaction.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAtTransaction gets a reference to the given NullableString and assigns it to the UpdatedAtTransaction field.
func (o *CurveSystemStateDTO) SetUpdatedAtTransaction(v string) {
	o.UpdatedAtTransaction.Set(&v)
}
// SetUpdatedAtTransactionNil sets the value for UpdatedAtTransaction to be an explicit nil
func (o *CurveSystemStateDTO) SetUpdatedAtTransactionNil() {
	o.UpdatedAtTransaction.Set(nil)
}

// UnsetUpdatedAtTransaction ensures that no value is present for UpdatedAtTransaction, not even an explicit nil
func (o *CurveSystemStateDTO) UnsetUpdatedAtTransaction() {
	o.UpdatedAtTransaction.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *CurveSystemStateDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveSystemStateDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *CurveSystemStateDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *CurveSystemStateDTO) SetVid(v int64) {
	o.Vid = &v
}

func (o CurveSystemStateDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurveSystemStateDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.RegistryContract.IsSet() {
		toSerialize["registry_contract"] = o.RegistryContract.Get()
	}
	if o.ContractCount.IsSet() {
		toSerialize["contract_count"] = o.ContractCount.Get()
	}
	if o.GaugeCount.IsSet() {
		toSerialize["gauge_count"] = o.GaugeCount.Get()
	}
	if o.GaugeTypeCount.IsSet() {
		toSerialize["gauge_type_count"] = o.GaugeTypeCount.Get()
	}
	if o.PoolCount.IsSet() {
		toSerialize["pool_count"] = o.PoolCount.Get()
	}
	if o.TokenCount.IsSet() {
		toSerialize["token_count"] = o.TokenCount.Get()
	}
	if o.TotalPoolCount.IsSet() {
		toSerialize["total_pool_count"] = o.TotalPoolCount.Get()
	}
	if o.Updated.IsSet() {
		toSerialize["updated"] = o.Updated.Get()
	}
	if o.UpdatedAtBlock.IsSet() {
		toSerialize["updated_at_block"] = o.UpdatedAtBlock.Get()
	}
	if o.UpdatedAtTransaction.IsSet() {
		toSerialize["updated_at_transaction"] = o.UpdatedAtTransaction.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	return toSerialize, nil
}

type NullableCurveSystemStateDTO struct {
	value *CurveSystemStateDTO
	isSet bool
}

func (v NullableCurveSystemStateDTO) Get() *CurveSystemStateDTO {
	return v.value
}

func (v *NullableCurveSystemStateDTO) Set(val *CurveSystemStateDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCurveSystemStateDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCurveSystemStateDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurveSystemStateDTO(val *CurveSystemStateDTO) *NullableCurveSystemStateDTO {
	return &NullableCurveSystemStateDTO{value: val, isSet: true}
}

func (v NullableCurveSystemStateDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurveSystemStateDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


