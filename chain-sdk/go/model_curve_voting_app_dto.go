/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CurveVotingAppDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CurveVotingAppDTO{}

// CurveVotingAppDTO struct for CurveVotingAppDTO
type CurveVotingAppDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// App address.
	Id NullableString `json:"id,omitempty"`
	// 
	Address NullableString `json:"address,omitempty"`
	// 
	Codename NullableString `json:"codename,omitempty"`
	// Minimum balance needed to create a proposal.
	MinimumBalance NullableString `json:"minimum_balance,omitempty"`
	// Percentage of positive votes in total possible votes for a proposal to be accepted.
	MinimumQuorum NullableString `json:"minimum_quorum,omitempty"`
	// Minimum time needed to pass between user's previous proposal and a user creating a new proposal.
	MinimumTime NullableString `json:"minimum_time,omitempty"`
	// Percentage of positive votes needed for a proposal to be accepted.
	RequiredSupport NullableString `json:"required_support,omitempty"`
	// Seconds that a proposal will be open for vote (unless enough votes have been cast to make an early decision).
	VoteTime NullableString `json:"vote_time,omitempty"`
	// Number of proposals created with this app.
	ProposalCount NullableString `json:"proposal_count,omitempty"`
	// Number of votes received by all the proposals created with this app.
	VoteCount NullableString `json:"vote_count,omitempty"`
	// Address of the token used for voting.
	Token NullableString `json:"token,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
}

// NewCurveVotingAppDTO instantiates a new CurveVotingAppDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCurveVotingAppDTO() *CurveVotingAppDTO {
	this := CurveVotingAppDTO{}
	return &this
}

// NewCurveVotingAppDTOWithDefaults instantiates a new CurveVotingAppDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCurveVotingAppDTOWithDefaults() *CurveVotingAppDTO {
	this := CurveVotingAppDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CurveVotingAppDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveVotingAppDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CurveVotingAppDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CurveVotingAppDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveVotingAppDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CurveVotingAppDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *CurveVotingAppDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveVotingAppDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *CurveVotingAppDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CurveVotingAppDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CurveVotingAppDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetId() {
	o.Id.Unset()
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetAddress() string {
	if o == nil || IsNil(o.Address.Get()) {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *CurveVotingAppDTO) SetAddress(v string) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *CurveVotingAppDTO) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetAddress() {
	o.Address.Unset()
}

// GetCodename returns the Codename field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetCodename() string {
	if o == nil || IsNil(o.Codename.Get()) {
		var ret string
		return ret
	}
	return *o.Codename.Get()
}

// GetCodenameOk returns a tuple with the Codename field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetCodenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Codename.Get(), o.Codename.IsSet()
}

// HasCodename returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasCodename() bool {
	if o != nil && o.Codename.IsSet() {
		return true
	}

	return false
}

// SetCodename gets a reference to the given NullableString and assigns it to the Codename field.
func (o *CurveVotingAppDTO) SetCodename(v string) {
	o.Codename.Set(&v)
}
// SetCodenameNil sets the value for Codename to be an explicit nil
func (o *CurveVotingAppDTO) SetCodenameNil() {
	o.Codename.Set(nil)
}

// UnsetCodename ensures that no value is present for Codename, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetCodename() {
	o.Codename.Unset()
}

// GetMinimumBalance returns the MinimumBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetMinimumBalance() string {
	if o == nil || IsNil(o.MinimumBalance.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumBalance.Get()
}

// GetMinimumBalanceOk returns a tuple with the MinimumBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetMinimumBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumBalance.Get(), o.MinimumBalance.IsSet()
}

// HasMinimumBalance returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasMinimumBalance() bool {
	if o != nil && o.MinimumBalance.IsSet() {
		return true
	}

	return false
}

// SetMinimumBalance gets a reference to the given NullableString and assigns it to the MinimumBalance field.
func (o *CurveVotingAppDTO) SetMinimumBalance(v string) {
	o.MinimumBalance.Set(&v)
}
// SetMinimumBalanceNil sets the value for MinimumBalance to be an explicit nil
func (o *CurveVotingAppDTO) SetMinimumBalanceNil() {
	o.MinimumBalance.Set(nil)
}

// UnsetMinimumBalance ensures that no value is present for MinimumBalance, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetMinimumBalance() {
	o.MinimumBalance.Unset()
}

// GetMinimumQuorum returns the MinimumQuorum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetMinimumQuorum() string {
	if o == nil || IsNil(o.MinimumQuorum.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumQuorum.Get()
}

// GetMinimumQuorumOk returns a tuple with the MinimumQuorum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetMinimumQuorumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumQuorum.Get(), o.MinimumQuorum.IsSet()
}

// HasMinimumQuorum returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasMinimumQuorum() bool {
	if o != nil && o.MinimumQuorum.IsSet() {
		return true
	}

	return false
}

// SetMinimumQuorum gets a reference to the given NullableString and assigns it to the MinimumQuorum field.
func (o *CurveVotingAppDTO) SetMinimumQuorum(v string) {
	o.MinimumQuorum.Set(&v)
}
// SetMinimumQuorumNil sets the value for MinimumQuorum to be an explicit nil
func (o *CurveVotingAppDTO) SetMinimumQuorumNil() {
	o.MinimumQuorum.Set(nil)
}

// UnsetMinimumQuorum ensures that no value is present for MinimumQuorum, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetMinimumQuorum() {
	o.MinimumQuorum.Unset()
}

// GetMinimumTime returns the MinimumTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetMinimumTime() string {
	if o == nil || IsNil(o.MinimumTime.Get()) {
		var ret string
		return ret
	}
	return *o.MinimumTime.Get()
}

// GetMinimumTimeOk returns a tuple with the MinimumTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetMinimumTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinimumTime.Get(), o.MinimumTime.IsSet()
}

// HasMinimumTime returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasMinimumTime() bool {
	if o != nil && o.MinimumTime.IsSet() {
		return true
	}

	return false
}

// SetMinimumTime gets a reference to the given NullableString and assigns it to the MinimumTime field.
func (o *CurveVotingAppDTO) SetMinimumTime(v string) {
	o.MinimumTime.Set(&v)
}
// SetMinimumTimeNil sets the value for MinimumTime to be an explicit nil
func (o *CurveVotingAppDTO) SetMinimumTimeNil() {
	o.MinimumTime.Set(nil)
}

// UnsetMinimumTime ensures that no value is present for MinimumTime, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetMinimumTime() {
	o.MinimumTime.Unset()
}

// GetRequiredSupport returns the RequiredSupport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetRequiredSupport() string {
	if o == nil || IsNil(o.RequiredSupport.Get()) {
		var ret string
		return ret
	}
	return *o.RequiredSupport.Get()
}

// GetRequiredSupportOk returns a tuple with the RequiredSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetRequiredSupportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequiredSupport.Get(), o.RequiredSupport.IsSet()
}

// HasRequiredSupport returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasRequiredSupport() bool {
	if o != nil && o.RequiredSupport.IsSet() {
		return true
	}

	return false
}

// SetRequiredSupport gets a reference to the given NullableString and assigns it to the RequiredSupport field.
func (o *CurveVotingAppDTO) SetRequiredSupport(v string) {
	o.RequiredSupport.Set(&v)
}
// SetRequiredSupportNil sets the value for RequiredSupport to be an explicit nil
func (o *CurveVotingAppDTO) SetRequiredSupportNil() {
	o.RequiredSupport.Set(nil)
}

// UnsetRequiredSupport ensures that no value is present for RequiredSupport, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetRequiredSupport() {
	o.RequiredSupport.Unset()
}

// GetVoteTime returns the VoteTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetVoteTime() string {
	if o == nil || IsNil(o.VoteTime.Get()) {
		var ret string
		return ret
	}
	return *o.VoteTime.Get()
}

// GetVoteTimeOk returns a tuple with the VoteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetVoteTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoteTime.Get(), o.VoteTime.IsSet()
}

// HasVoteTime returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasVoteTime() bool {
	if o != nil && o.VoteTime.IsSet() {
		return true
	}

	return false
}

// SetVoteTime gets a reference to the given NullableString and assigns it to the VoteTime field.
func (o *CurveVotingAppDTO) SetVoteTime(v string) {
	o.VoteTime.Set(&v)
}
// SetVoteTimeNil sets the value for VoteTime to be an explicit nil
func (o *CurveVotingAppDTO) SetVoteTimeNil() {
	o.VoteTime.Set(nil)
}

// UnsetVoteTime ensures that no value is present for VoteTime, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetVoteTime() {
	o.VoteTime.Unset()
}

// GetProposalCount returns the ProposalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetProposalCount() string {
	if o == nil || IsNil(o.ProposalCount.Get()) {
		var ret string
		return ret
	}
	return *o.ProposalCount.Get()
}

// GetProposalCountOk returns a tuple with the ProposalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetProposalCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProposalCount.Get(), o.ProposalCount.IsSet()
}

// HasProposalCount returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasProposalCount() bool {
	if o != nil && o.ProposalCount.IsSet() {
		return true
	}

	return false
}

// SetProposalCount gets a reference to the given NullableString and assigns it to the ProposalCount field.
func (o *CurveVotingAppDTO) SetProposalCount(v string) {
	o.ProposalCount.Set(&v)
}
// SetProposalCountNil sets the value for ProposalCount to be an explicit nil
func (o *CurveVotingAppDTO) SetProposalCountNil() {
	o.ProposalCount.Set(nil)
}

// UnsetProposalCount ensures that no value is present for ProposalCount, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetProposalCount() {
	o.ProposalCount.Unset()
}

// GetVoteCount returns the VoteCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetVoteCount() string {
	if o == nil || IsNil(o.VoteCount.Get()) {
		var ret string
		return ret
	}
	return *o.VoteCount.Get()
}

// GetVoteCountOk returns a tuple with the VoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetVoteCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VoteCount.Get(), o.VoteCount.IsSet()
}

// HasVoteCount returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasVoteCount() bool {
	if o != nil && o.VoteCount.IsSet() {
		return true
	}

	return false
}

// SetVoteCount gets a reference to the given NullableString and assigns it to the VoteCount field.
func (o *CurveVotingAppDTO) SetVoteCount(v string) {
	o.VoteCount.Set(&v)
}
// SetVoteCountNil sets the value for VoteCount to be an explicit nil
func (o *CurveVotingAppDTO) SetVoteCountNil() {
	o.VoteCount.Set(nil)
}

// UnsetVoteCount ensures that no value is present for VoteCount, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetVoteCount() {
	o.VoteCount.Unset()
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CurveVotingAppDTO) GetToken() string {
	if o == nil || IsNil(o.Token.Get()) {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CurveVotingAppDTO) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *CurveVotingAppDTO) SetToken(v string) {
	o.Token.Set(&v)
}
// SetTokenNil sets the value for Token to be an explicit nil
func (o *CurveVotingAppDTO) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *CurveVotingAppDTO) UnsetToken() {
	o.Token.Unset()
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *CurveVotingAppDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CurveVotingAppDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *CurveVotingAppDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *CurveVotingAppDTO) SetVid(v int64) {
	o.Vid = &v
}

func (o CurveVotingAppDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CurveVotingAppDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.Codename.IsSet() {
		toSerialize["codename"] = o.Codename.Get()
	}
	if o.MinimumBalance.IsSet() {
		toSerialize["minimum_balance"] = o.MinimumBalance.Get()
	}
	if o.MinimumQuorum.IsSet() {
		toSerialize["minimum_quorum"] = o.MinimumQuorum.Get()
	}
	if o.MinimumTime.IsSet() {
		toSerialize["minimum_time"] = o.MinimumTime.Get()
	}
	if o.RequiredSupport.IsSet() {
		toSerialize["required_support"] = o.RequiredSupport.Get()
	}
	if o.VoteTime.IsSet() {
		toSerialize["vote_time"] = o.VoteTime.Get()
	}
	if o.ProposalCount.IsSet() {
		toSerialize["proposal_count"] = o.ProposalCount.Get()
	}
	if o.VoteCount.IsSet() {
		toSerialize["vote_count"] = o.VoteCount.Get()
	}
	if o.Token.IsSet() {
		toSerialize["token"] = o.Token.Get()
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	return toSerialize, nil
}

type NullableCurveVotingAppDTO struct {
	value *CurveVotingAppDTO
	isSet bool
}

func (v NullableCurveVotingAppDTO) Get() *CurveVotingAppDTO {
	return v.value
}

func (v *NullableCurveVotingAppDTO) Set(val *CurveVotingAppDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCurveVotingAppDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCurveVotingAppDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurveVotingAppDTO(val *CurveVotingAppDTO) *NullableCurveVotingAppDTO {
	return &NullableCurveVotingAppDTO{value: val, isSet: true}
}

func (v NullableCurveVotingAppDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurveVotingAppDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


