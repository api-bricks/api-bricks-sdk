/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CurveVotingAppDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("address")
  private String address = null;
  @SerializedName("codename")
  private String codename = null;
  @SerializedName("minimum_balance")
  private String minimumBalance = null;
  @SerializedName("minimum_quorum")
  private String minimumQuorum = null;
  @SerializedName("minimum_time")
  private String minimumTime = null;
  @SerializedName("required_support")
  private String requiredSupport = null;
  @SerializedName("vote_time")
  private String voteTime = null;
  @SerializedName("proposal_count")
  private String proposalCount = null;
  @SerializedName("vote_count")
  private String voteCount = null;
  @SerializedName("token")
  private String token = null;
  @SerializedName("vid")
  private Long vid = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * App address.
   **/
  @ApiModelProperty(value = "App address.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getCodename() {
    return codename;
  }
  public void setCodename(String codename) {
    this.codename = codename;
  }

  /**
   * Minimum balance needed to create a proposal.
   **/
  @ApiModelProperty(value = "Minimum balance needed to create a proposal.")
  public String getMinimumBalance() {
    return minimumBalance;
  }
  public void setMinimumBalance(String minimumBalance) {
    this.minimumBalance = minimumBalance;
  }

  /**
   * Percentage of positive votes in total possible votes for a proposal to be accepted.
   **/
  @ApiModelProperty(value = "Percentage of positive votes in total possible votes for a proposal to be accepted.")
  public String getMinimumQuorum() {
    return minimumQuorum;
  }
  public void setMinimumQuorum(String minimumQuorum) {
    this.minimumQuorum = minimumQuorum;
  }

  /**
   * Minimum time needed to pass between user's previous proposal and a user creating a new proposal.
   **/
  @ApiModelProperty(value = "Minimum time needed to pass between user's previous proposal and a user creating a new proposal.")
  public String getMinimumTime() {
    return minimumTime;
  }
  public void setMinimumTime(String minimumTime) {
    this.minimumTime = minimumTime;
  }

  /**
   * Percentage of positive votes needed for a proposal to be accepted.
   **/
  @ApiModelProperty(value = "Percentage of positive votes needed for a proposal to be accepted.")
  public String getRequiredSupport() {
    return requiredSupport;
  }
  public void setRequiredSupport(String requiredSupport) {
    this.requiredSupport = requiredSupport;
  }

  /**
   * Seconds that a proposal will be open for vote (unless enough votes have been cast to make an early decision).
   **/
  @ApiModelProperty(value = "Seconds that a proposal will be open for vote (unless enough votes have been cast to make an early decision).")
  public String getVoteTime() {
    return voteTime;
  }
  public void setVoteTime(String voteTime) {
    this.voteTime = voteTime;
  }

  /**
   * Number of proposals created with this app.
   **/
  @ApiModelProperty(value = "Number of proposals created with this app.")
  public String getProposalCount() {
    return proposalCount;
  }
  public void setProposalCount(String proposalCount) {
    this.proposalCount = proposalCount;
  }

  /**
   * Number of votes received by all the proposals created with this app.
   **/
  @ApiModelProperty(value = "Number of votes received by all the proposals created with this app.")
  public String getVoteCount() {
    return voteCount;
  }
  public void setVoteCount(String voteCount) {
    this.voteCount = voteCount;
  }

  /**
   * Address of the token used for voting.
   **/
  @ApiModelProperty(value = "Address of the token used for voting.")
  public String getToken() {
    return token;
  }
  public void setToken(String token) {
    this.token = token;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurveVotingAppDTO curveVotingAppDTO = (CurveVotingAppDTO) o;
    return (this.entryTime == null ? curveVotingAppDTO.entryTime == null : this.entryTime.equals(curveVotingAppDTO.entryTime)) &&
        (this.recvTime == null ? curveVotingAppDTO.recvTime == null : this.recvTime.equals(curveVotingAppDTO.recvTime)) &&
        (this.blockNumber == null ? curveVotingAppDTO.blockNumber == null : this.blockNumber.equals(curveVotingAppDTO.blockNumber)) &&
        (this.id == null ? curveVotingAppDTO.id == null : this.id.equals(curveVotingAppDTO.id)) &&
        (this.address == null ? curveVotingAppDTO.address == null : this.address.equals(curveVotingAppDTO.address)) &&
        (this.codename == null ? curveVotingAppDTO.codename == null : this.codename.equals(curveVotingAppDTO.codename)) &&
        (this.minimumBalance == null ? curveVotingAppDTO.minimumBalance == null : this.minimumBalance.equals(curveVotingAppDTO.minimumBalance)) &&
        (this.minimumQuorum == null ? curveVotingAppDTO.minimumQuorum == null : this.minimumQuorum.equals(curveVotingAppDTO.minimumQuorum)) &&
        (this.minimumTime == null ? curveVotingAppDTO.minimumTime == null : this.minimumTime.equals(curveVotingAppDTO.minimumTime)) &&
        (this.requiredSupport == null ? curveVotingAppDTO.requiredSupport == null : this.requiredSupport.equals(curveVotingAppDTO.requiredSupport)) &&
        (this.voteTime == null ? curveVotingAppDTO.voteTime == null : this.voteTime.equals(curveVotingAppDTO.voteTime)) &&
        (this.proposalCount == null ? curveVotingAppDTO.proposalCount == null : this.proposalCount.equals(curveVotingAppDTO.proposalCount)) &&
        (this.voteCount == null ? curveVotingAppDTO.voteCount == null : this.voteCount.equals(curveVotingAppDTO.voteCount)) &&
        (this.token == null ? curveVotingAppDTO.token == null : this.token.equals(curveVotingAppDTO.token)) &&
        (this.vid == null ? curveVotingAppDTO.vid == null : this.vid.equals(curveVotingAppDTO.vid));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.codename == null ? 0: this.codename.hashCode());
    result = 31 * result + (this.minimumBalance == null ? 0: this.minimumBalance.hashCode());
    result = 31 * result + (this.minimumQuorum == null ? 0: this.minimumQuorum.hashCode());
    result = 31 * result + (this.minimumTime == null ? 0: this.minimumTime.hashCode());
    result = 31 * result + (this.requiredSupport == null ? 0: this.requiredSupport.hashCode());
    result = 31 * result + (this.voteTime == null ? 0: this.voteTime.hashCode());
    result = 31 * result + (this.proposalCount == null ? 0: this.proposalCount.hashCode());
    result = 31 * result + (this.voteCount == null ? 0: this.voteCount.hashCode());
    result = 31 * result + (this.token == null ? 0: this.token.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurveVotingAppDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  codename: ").append(codename).append("\n");
    sb.append("  minimumBalance: ").append(minimumBalance).append("\n");
    sb.append("  minimumQuorum: ").append(minimumQuorum).append("\n");
    sb.append("  minimumTime: ").append(minimumTime).append("\n");
    sb.append("  requiredSupport: ").append(requiredSupport).append("\n");
    sb.append("  voteTime: ").append(voteTime).append("\n");
    sb.append("  proposalCount: ").append(proposalCount).append("\n");
    sb.append("  voteCount: ").append(voteCount).append("\n");
    sb.append("  token: ").append(token).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
