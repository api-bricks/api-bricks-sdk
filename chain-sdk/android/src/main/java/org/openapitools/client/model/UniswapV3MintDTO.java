/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, and more.
 **/
@ApiModel(description = "Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, and more.")
public class UniswapV3MintDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("transaction")
  private String transaction = null;
  @SerializedName("timestamp")
  private String timestamp = null;
  @SerializedName("pool")
  private String pool = null;
  @SerializedName("token_0")
  private String token0 = null;
  @SerializedName("token_1")
  private String token1 = null;
  @SerializedName("owner")
  private String owner = null;
  @SerializedName("sender")
  private String sender = null;
  @SerializedName("origin")
  private String origin = null;
  @SerializedName("amount")
  private String amount = null;
  @SerializedName("amount_0")
  private String amount0 = null;
  @SerializedName("amount_1")
  private String amount1 = null;
  @SerializedName("amount_usd")
  private String amountUsd = null;
  @SerializedName("tick_lower")
  private String tickLower = null;
  @SerializedName("tick_upper")
  private String tickUpper = null;
  @SerializedName("log_index")
  private String logIndex = null;
  @SerializedName("vid")
  private Long vid = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * Transaction hash + '#' + index in mints Transaction array.
   **/
  @ApiModelProperty(value = "Transaction hash + '#' + index in mints Transaction array.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Which txn the mint was included in.
   **/
  @ApiModelProperty(value = "Which txn the mint was included in.")
  public String getTransaction() {
    return transaction;
  }
  public void setTransaction(String transaction) {
    this.transaction = transaction;
  }

  /**
   * Time of transaction.
   **/
  @ApiModelProperty(value = "Time of transaction.")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Pool address.
   **/
  @ApiModelProperty(value = "Pool address.")
  public String getPool() {
    return pool;
  }
  public void setPool(String pool) {
    this.pool = pool;
  }

  /**
   * Reference to token0 as stored in pool contract.
   **/
  @ApiModelProperty(value = "Reference to token0 as stored in pool contract.")
  public String getToken0() {
    return token0;
  }
  public void setToken0(String token0) {
    this.token0 = token0;
  }

  /**
   * Reference to token1 as stored in pool contract.
   **/
  @ApiModelProperty(value = "Reference to token1 as stored in pool contract.")
  public String getToken1() {
    return token1;
  }
  public void setToken1(String token1) {
    this.token1 = token1;
  }

  /**
   * Owner of position where liquidity minted to.
   **/
  @ApiModelProperty(value = "Owner of position where liquidity minted to.")
  public String getOwner() {
    return owner;
  }
  public void setOwner(String owner) {
    this.owner = owner;
  }

  /**
   * The address that minted the liquidity.
   **/
  @ApiModelProperty(value = "The address that minted the liquidity.")
  public String getSender() {
    return sender;
  }
  public void setSender(String sender) {
    this.sender = sender;
  }

  /**
   * Transaction origin: the EOA (Externally Owned Account) that initiated the transaction.
   **/
  @ApiModelProperty(value = "Transaction origin: the EOA (Externally Owned Account) that initiated the transaction.")
  public String getOrigin() {
    return origin;
  }
  public void setOrigin(String origin) {
    this.origin = origin;
  }

  /**
   * Amount of liquidity minted.
   **/
  @ApiModelProperty(value = "Amount of liquidity minted.")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }

  /**
   * Amount of token 0 minted.
   **/
  @ApiModelProperty(value = "Amount of token 0 minted.")
  public String getAmount0() {
    return amount0;
  }
  public void setAmount0(String amount0) {
    this.amount0 = amount0;
  }

  /**
   * Amount of token 1 minted.
   **/
  @ApiModelProperty(value = "Amount of token 1 minted.")
  public String getAmount1() {
    return amount1;
  }
  public void setAmount1(String amount1) {
    this.amount1 = amount1;
  }

  /**
   * Derived amount based on available prices of tokens.
   **/
  @ApiModelProperty(value = "Derived amount based on available prices of tokens.")
  public String getAmountUsd() {
    return amountUsd;
  }
  public void setAmountUsd(String amountUsd) {
    this.amountUsd = amountUsd;
  }

  /**
   * Lower tick of the position.
   **/
  @ApiModelProperty(value = "Lower tick of the position.")
  public String getTickLower() {
    return tickLower;
  }
  public void setTickLower(String tickLower) {
    this.tickLower = tickLower;
  }

  /**
   * Upper tick of the position.
   **/
  @ApiModelProperty(value = "Upper tick of the position.")
  public String getTickUpper() {
    return tickUpper;
  }
  public void setTickUpper(String tickUpper) {
    this.tickUpper = tickUpper;
  }

  /**
   * Order within the transaction.
   **/
  @ApiModelProperty(value = "Order within the transaction.")
  public String getLogIndex() {
    return logIndex;
  }
  public void setLogIndex(String logIndex) {
    this.logIndex = logIndex;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UniswapV3MintDTO uniswapV3MintDTO = (UniswapV3MintDTO) o;
    return (this.entryTime == null ? uniswapV3MintDTO.entryTime == null : this.entryTime.equals(uniswapV3MintDTO.entryTime)) &&
        (this.recvTime == null ? uniswapV3MintDTO.recvTime == null : this.recvTime.equals(uniswapV3MintDTO.recvTime)) &&
        (this.blockNumber == null ? uniswapV3MintDTO.blockNumber == null : this.blockNumber.equals(uniswapV3MintDTO.blockNumber)) &&
        (this.id == null ? uniswapV3MintDTO.id == null : this.id.equals(uniswapV3MintDTO.id)) &&
        (this.transaction == null ? uniswapV3MintDTO.transaction == null : this.transaction.equals(uniswapV3MintDTO.transaction)) &&
        (this.timestamp == null ? uniswapV3MintDTO.timestamp == null : this.timestamp.equals(uniswapV3MintDTO.timestamp)) &&
        (this.pool == null ? uniswapV3MintDTO.pool == null : this.pool.equals(uniswapV3MintDTO.pool)) &&
        (this.token0 == null ? uniswapV3MintDTO.token0 == null : this.token0.equals(uniswapV3MintDTO.token0)) &&
        (this.token1 == null ? uniswapV3MintDTO.token1 == null : this.token1.equals(uniswapV3MintDTO.token1)) &&
        (this.owner == null ? uniswapV3MintDTO.owner == null : this.owner.equals(uniswapV3MintDTO.owner)) &&
        (this.sender == null ? uniswapV3MintDTO.sender == null : this.sender.equals(uniswapV3MintDTO.sender)) &&
        (this.origin == null ? uniswapV3MintDTO.origin == null : this.origin.equals(uniswapV3MintDTO.origin)) &&
        (this.amount == null ? uniswapV3MintDTO.amount == null : this.amount.equals(uniswapV3MintDTO.amount)) &&
        (this.amount0 == null ? uniswapV3MintDTO.amount0 == null : this.amount0.equals(uniswapV3MintDTO.amount0)) &&
        (this.amount1 == null ? uniswapV3MintDTO.amount1 == null : this.amount1.equals(uniswapV3MintDTO.amount1)) &&
        (this.amountUsd == null ? uniswapV3MintDTO.amountUsd == null : this.amountUsd.equals(uniswapV3MintDTO.amountUsd)) &&
        (this.tickLower == null ? uniswapV3MintDTO.tickLower == null : this.tickLower.equals(uniswapV3MintDTO.tickLower)) &&
        (this.tickUpper == null ? uniswapV3MintDTO.tickUpper == null : this.tickUpper.equals(uniswapV3MintDTO.tickUpper)) &&
        (this.logIndex == null ? uniswapV3MintDTO.logIndex == null : this.logIndex.equals(uniswapV3MintDTO.logIndex)) &&
        (this.vid == null ? uniswapV3MintDTO.vid == null : this.vid.equals(uniswapV3MintDTO.vid));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.transaction == null ? 0: this.transaction.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.pool == null ? 0: this.pool.hashCode());
    result = 31 * result + (this.token0 == null ? 0: this.token0.hashCode());
    result = 31 * result + (this.token1 == null ? 0: this.token1.hashCode());
    result = 31 * result + (this.owner == null ? 0: this.owner.hashCode());
    result = 31 * result + (this.sender == null ? 0: this.sender.hashCode());
    result = 31 * result + (this.origin == null ? 0: this.origin.hashCode());
    result = 31 * result + (this.amount == null ? 0: this.amount.hashCode());
    result = 31 * result + (this.amount0 == null ? 0: this.amount0.hashCode());
    result = 31 * result + (this.amount1 == null ? 0: this.amount1.hashCode());
    result = 31 * result + (this.amountUsd == null ? 0: this.amountUsd.hashCode());
    result = 31 * result + (this.tickLower == null ? 0: this.tickLower.hashCode());
    result = 31 * result + (this.tickUpper == null ? 0: this.tickUpper.hashCode());
    result = 31 * result + (this.logIndex == null ? 0: this.logIndex.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UniswapV3MintDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  transaction: ").append(transaction).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  pool: ").append(pool).append("\n");
    sb.append("  token0: ").append(token0).append("\n");
    sb.append("  token1: ").append(token1).append("\n");
    sb.append("  owner: ").append(owner).append("\n");
    sb.append("  sender: ").append(sender).append("\n");
    sb.append("  origin: ").append(origin).append("\n");
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  amount0: ").append(amount0).append("\n");
    sb.append("  amount1: ").append(amount1).append("\n");
    sb.append("  amountUsd: ").append(amountUsd).append("\n");
    sb.append("  tickLower: ").append(tickLower).append("\n");
    sb.append("  tickUpper: ").append(tickUpper).append("\n");
    sb.append("  logIndex: ").append(logIndex).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
