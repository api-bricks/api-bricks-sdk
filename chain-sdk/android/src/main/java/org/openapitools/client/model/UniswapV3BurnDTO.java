/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned, who received tokens, and more. This entity can be used to track liquidity removals on pairs.
 **/
@ApiModel(description = "Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned, who received tokens, and more. This entity can be used to track liquidity removals on pairs.")
public class UniswapV3BurnDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("transaction")
  private String transaction = null;
  @SerializedName("pool")
  private String pool = null;
  @SerializedName("token_0")
  private String token0 = null;
  @SerializedName("token_1")
  private String token1 = null;
  @SerializedName("timestamp")
  private String timestamp = null;
  @SerializedName("owner")
  private String owner = null;
  @SerializedName("origin")
  private String origin = null;
  @SerializedName("amount")
  private String amount = null;
  @SerializedName("amount_0")
  private String amount0 = null;
  @SerializedName("amount_1")
  private String amount1 = null;
  @SerializedName("amount_usd")
  private String amountUsd = null;
  @SerializedName("tick_lower")
  private String tickLower = null;
  @SerializedName("tick_upper")
  private String tickUpper = null;
  @SerializedName("log_index")
  private String logIndex = null;
  @SerializedName("vid")
  private Long vid = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * Transaction hash + '#' + index in mints Transaction array.
   **/
  @ApiModelProperty(value = "Transaction hash + '#' + index in mints Transaction array.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Transaction burn was included in.
   **/
  @ApiModelProperty(value = "Transaction burn was included in.")
  public String getTransaction() {
    return transaction;
  }
  public void setTransaction(String transaction) {
    this.transaction = transaction;
  }

  /**
   * Pool position is within.
   **/
  @ApiModelProperty(value = "Pool position is within.")
  public String getPool() {
    return pool;
  }
  public void setPool(String pool) {
    this.pool = pool;
  }

  /**
   * Reference to token0 as stored in pool contract.
   **/
  @ApiModelProperty(value = "Reference to token0 as stored in pool contract.")
  public String getToken0() {
    return token0;
  }
  public void setToken0(String token0) {
    this.token0 = token0;
  }

  /**
   * Reference to token1 as stored in pool contract.
   **/
  @ApiModelProperty(value = "Reference to token1 as stored in pool contract.")
  public String getToken1() {
    return token1;
  }
  public void setToken1(String token1) {
    this.token1 = token1;
  }

  /**
   * Timestamp.
   **/
  @ApiModelProperty(value = "Timestamp.")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Owner of position where liquidity was burned.
   **/
  @ApiModelProperty(value = "Owner of position where liquidity was burned.")
  public String getOwner() {
    return owner;
  }
  public void setOwner(String owner) {
    this.owner = owner;
  }

  /**
   * Transaction origin: the EOA (Externally Owned Account) that initiated the transaction.
   **/
  @ApiModelProperty(value = "Transaction origin: the EOA (Externally Owned Account) that initiated the transaction.")
  public String getOrigin() {
    return origin;
  }
  public void setOrigin(String origin) {
    this.origin = origin;
  }

  /**
   * Amount of liquidity burned.
   **/
  @ApiModelProperty(value = "Amount of liquidity burned.")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }

  /**
   * Amount of token 0 burned.
   **/
  @ApiModelProperty(value = "Amount of token 0 burned.")
  public String getAmount0() {
    return amount0;
  }
  public void setAmount0(String amount0) {
    this.amount0 = amount0;
  }

  /**
   * Amount of token 1 burned.
   **/
  @ApiModelProperty(value = "Amount of token 1 burned.")
  public String getAmount1() {
    return amount1;
  }
  public void setAmount1(String amount1) {
    this.amount1 = amount1;
  }

  /**
   * Derived amount based on available prices of tokens.
   **/
  @ApiModelProperty(value = "Derived amount based on available prices of tokens.")
  public String getAmountUsd() {
    return amountUsd;
  }
  public void setAmountUsd(String amountUsd) {
    this.amountUsd = amountUsd;
  }

  /**
   * Lower tick of position.
   **/
  @ApiModelProperty(value = "Lower tick of position.")
  public String getTickLower() {
    return tickLower;
  }
  public void setTickLower(String tickLower) {
    this.tickLower = tickLower;
  }

  /**
   * Upper tick of position.
   **/
  @ApiModelProperty(value = "Upper tick of position.")
  public String getTickUpper() {
    return tickUpper;
  }
  public void setTickUpper(String tickUpper) {
    this.tickUpper = tickUpper;
  }

  /**
   * Position within the transactions.
   **/
  @ApiModelProperty(value = "Position within the transactions.")
  public String getLogIndex() {
    return logIndex;
  }
  public void setLogIndex(String logIndex) {
    this.logIndex = logIndex;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UniswapV3BurnDTO uniswapV3BurnDTO = (UniswapV3BurnDTO) o;
    return (this.entryTime == null ? uniswapV3BurnDTO.entryTime == null : this.entryTime.equals(uniswapV3BurnDTO.entryTime)) &&
        (this.recvTime == null ? uniswapV3BurnDTO.recvTime == null : this.recvTime.equals(uniswapV3BurnDTO.recvTime)) &&
        (this.blockNumber == null ? uniswapV3BurnDTO.blockNumber == null : this.blockNumber.equals(uniswapV3BurnDTO.blockNumber)) &&
        (this.id == null ? uniswapV3BurnDTO.id == null : this.id.equals(uniswapV3BurnDTO.id)) &&
        (this.transaction == null ? uniswapV3BurnDTO.transaction == null : this.transaction.equals(uniswapV3BurnDTO.transaction)) &&
        (this.pool == null ? uniswapV3BurnDTO.pool == null : this.pool.equals(uniswapV3BurnDTO.pool)) &&
        (this.token0 == null ? uniswapV3BurnDTO.token0 == null : this.token0.equals(uniswapV3BurnDTO.token0)) &&
        (this.token1 == null ? uniswapV3BurnDTO.token1 == null : this.token1.equals(uniswapV3BurnDTO.token1)) &&
        (this.timestamp == null ? uniswapV3BurnDTO.timestamp == null : this.timestamp.equals(uniswapV3BurnDTO.timestamp)) &&
        (this.owner == null ? uniswapV3BurnDTO.owner == null : this.owner.equals(uniswapV3BurnDTO.owner)) &&
        (this.origin == null ? uniswapV3BurnDTO.origin == null : this.origin.equals(uniswapV3BurnDTO.origin)) &&
        (this.amount == null ? uniswapV3BurnDTO.amount == null : this.amount.equals(uniswapV3BurnDTO.amount)) &&
        (this.amount0 == null ? uniswapV3BurnDTO.amount0 == null : this.amount0.equals(uniswapV3BurnDTO.amount0)) &&
        (this.amount1 == null ? uniswapV3BurnDTO.amount1 == null : this.amount1.equals(uniswapV3BurnDTO.amount1)) &&
        (this.amountUsd == null ? uniswapV3BurnDTO.amountUsd == null : this.amountUsd.equals(uniswapV3BurnDTO.amountUsd)) &&
        (this.tickLower == null ? uniswapV3BurnDTO.tickLower == null : this.tickLower.equals(uniswapV3BurnDTO.tickLower)) &&
        (this.tickUpper == null ? uniswapV3BurnDTO.tickUpper == null : this.tickUpper.equals(uniswapV3BurnDTO.tickUpper)) &&
        (this.logIndex == null ? uniswapV3BurnDTO.logIndex == null : this.logIndex.equals(uniswapV3BurnDTO.logIndex)) &&
        (this.vid == null ? uniswapV3BurnDTO.vid == null : this.vid.equals(uniswapV3BurnDTO.vid));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.transaction == null ? 0: this.transaction.hashCode());
    result = 31 * result + (this.pool == null ? 0: this.pool.hashCode());
    result = 31 * result + (this.token0 == null ? 0: this.token0.hashCode());
    result = 31 * result + (this.token1 == null ? 0: this.token1.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.owner == null ? 0: this.owner.hashCode());
    result = 31 * result + (this.origin == null ? 0: this.origin.hashCode());
    result = 31 * result + (this.amount == null ? 0: this.amount.hashCode());
    result = 31 * result + (this.amount0 == null ? 0: this.amount0.hashCode());
    result = 31 * result + (this.amount1 == null ? 0: this.amount1.hashCode());
    result = 31 * result + (this.amountUsd == null ? 0: this.amountUsd.hashCode());
    result = 31 * result + (this.tickLower == null ? 0: this.tickLower.hashCode());
    result = 31 * result + (this.tickUpper == null ? 0: this.tickUpper.hashCode());
    result = 31 * result + (this.logIndex == null ? 0: this.logIndex.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UniswapV3BurnDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  transaction: ").append(transaction).append("\n");
    sb.append("  pool: ").append(pool).append("\n");
    sb.append("  token0: ").append(token0).append("\n");
    sb.append("  token1: ").append(token1).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  owner: ").append(owner).append("\n");
    sb.append("  origin: ").append(origin).append("\n");
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  amount0: ").append(amount0).append("\n");
    sb.append("  amount1: ").append(amount1).append("\n");
    sb.append("  amountUsd: ").append(amountUsd).append("\n");
    sb.append("  tickLower: ").append(tickLower).append("\n");
    sb.append("  tickUpper: ").append(tickUpper).append("\n");
    sb.append("  logIndex: ").append(logIndex).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
