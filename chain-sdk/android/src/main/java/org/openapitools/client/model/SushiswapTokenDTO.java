/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Stores aggregated information for a specific token across all pairs that token is included in.
 **/
@ApiModel(description = "Stores aggregated information for a specific token across all pairs that token is included in.")
public class SushiswapTokenDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("factory")
  private String factory = null;
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("decimals")
  private String decimals = null;
  @SerializedName("total_supply")
  private String totalSupply = null;
  @SerializedName("volume")
  private String volume = null;
  @SerializedName("volume_usd")
  private String volumeUsd = null;
  @SerializedName("untracked_volume_usd")
  private String untrackedVolumeUsd = null;
  @SerializedName("tx_count")
  private String txCount = null;
  @SerializedName("liquidity")
  private String liquidity = null;
  @SerializedName("derived_eth")
  private String derivedEth = null;
  @SerializedName("whitelist_pairs")
  private List<String> whitelistPairs = null;
  @SerializedName("vid")
  private Long vid = null;
  @SerializedName("token_symbol")
  private String tokenSymbol = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * Token address.
   **/
  @ApiModelProperty(value = "Token address.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Factory address.
   **/
  @ApiModelProperty(value = "Factory address.")
  public String getFactory() {
    return factory;
  }
  public void setFactory(String factory) {
    this.factory = factory;
  }

  /**
   * Token symbol.
   **/
  @ApiModelProperty(value = "Token symbol.")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   * Token name.
   **/
  @ApiModelProperty(value = "Token name.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Token decimals.
   **/
  @ApiModelProperty(value = "Token decimals.")
  public String getDecimals() {
    return decimals;
  }
  public void setDecimals(String decimals) {
    this.decimals = decimals;
  }

  /**
   * Total supply of liquidity token.
   **/
  @ApiModelProperty(value = "Total supply of liquidity token.")
  public String getTotalSupply() {
    return totalSupply;
  }
  public void setTotalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
  }

  /**
   * Amount of token traded all time across all pairs.
   **/
  @ApiModelProperty(value = "Amount of token traded all time across all pairs.")
  public String getVolume() {
    return volume;
  }
  public void setVolume(String volume) {
    this.volume = volume;
  }

  /**
   * Amount of token in USD traded all time across pairs (only for tokens with liquidity above minimum threshold).
   **/
  @ApiModelProperty(value = "Amount of token in USD traded all time across pairs (only for tokens with liquidity above minimum threshold).")
  public String getVolumeUsd() {
    return volumeUsd;
  }
  public void setVolumeUsd(String volumeUsd) {
    this.volumeUsd = volumeUsd;
  }

  /**
   * Amount of token in USD traded all time across pairs (no minimum liquidity threshold).
   **/
  @ApiModelProperty(value = "Amount of token in USD traded all time across pairs (no minimum liquidity threshold).")
  public String getUntrackedVolumeUsd() {
    return untrackedVolumeUsd;
  }
  public void setUntrackedVolumeUsd(String untrackedVolumeUsd) {
    this.untrackedVolumeUsd = untrackedVolumeUsd;
  }

  /**
   * Amount of transactions all time in pairs including token.
   **/
  @ApiModelProperty(value = "Amount of transactions all time in pairs including token.")
  public String getTxCount() {
    return txCount;
  }
  public void setTxCount(String txCount) {
    this.txCount = txCount;
  }

  /**
   * Total amount of token provided as liquidity across all pairs.
   **/
  @ApiModelProperty(value = "Total amount of token provided as liquidity across all pairs.")
  public String getLiquidity() {
    return liquidity;
  }
  public void setLiquidity(String liquidity) {
    this.liquidity = liquidity;
  }

  /**
   * ETH per token.
   **/
  @ApiModelProperty(value = "ETH per token.")
  public String getDerivedEth() {
    return derivedEth;
  }
  public void setDerivedEth(String derivedEth) {
    this.derivedEth = derivedEth;
  }

  /**
   * Array of whitelisted pairs.
   **/
  @ApiModelProperty(value = "Array of whitelisted pairs.")
  public List<String> getWhitelistPairs() {
    return whitelistPairs;
  }
  public void setWhitelistPairs(List<String> whitelistPairs) {
    this.whitelistPairs = whitelistPairs;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTokenSymbol() {
    return tokenSymbol;
  }
  public void setTokenSymbol(String tokenSymbol) {
    this.tokenSymbol = tokenSymbol;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SushiswapTokenDTO sushiswapTokenDTO = (SushiswapTokenDTO) o;
    return (this.entryTime == null ? sushiswapTokenDTO.entryTime == null : this.entryTime.equals(sushiswapTokenDTO.entryTime)) &&
        (this.recvTime == null ? sushiswapTokenDTO.recvTime == null : this.recvTime.equals(sushiswapTokenDTO.recvTime)) &&
        (this.blockNumber == null ? sushiswapTokenDTO.blockNumber == null : this.blockNumber.equals(sushiswapTokenDTO.blockNumber)) &&
        (this.id == null ? sushiswapTokenDTO.id == null : this.id.equals(sushiswapTokenDTO.id)) &&
        (this.factory == null ? sushiswapTokenDTO.factory == null : this.factory.equals(sushiswapTokenDTO.factory)) &&
        (this.symbol == null ? sushiswapTokenDTO.symbol == null : this.symbol.equals(sushiswapTokenDTO.symbol)) &&
        (this.name == null ? sushiswapTokenDTO.name == null : this.name.equals(sushiswapTokenDTO.name)) &&
        (this.decimals == null ? sushiswapTokenDTO.decimals == null : this.decimals.equals(sushiswapTokenDTO.decimals)) &&
        (this.totalSupply == null ? sushiswapTokenDTO.totalSupply == null : this.totalSupply.equals(sushiswapTokenDTO.totalSupply)) &&
        (this.volume == null ? sushiswapTokenDTO.volume == null : this.volume.equals(sushiswapTokenDTO.volume)) &&
        (this.volumeUsd == null ? sushiswapTokenDTO.volumeUsd == null : this.volumeUsd.equals(sushiswapTokenDTO.volumeUsd)) &&
        (this.untrackedVolumeUsd == null ? sushiswapTokenDTO.untrackedVolumeUsd == null : this.untrackedVolumeUsd.equals(sushiswapTokenDTO.untrackedVolumeUsd)) &&
        (this.txCount == null ? sushiswapTokenDTO.txCount == null : this.txCount.equals(sushiswapTokenDTO.txCount)) &&
        (this.liquidity == null ? sushiswapTokenDTO.liquidity == null : this.liquidity.equals(sushiswapTokenDTO.liquidity)) &&
        (this.derivedEth == null ? sushiswapTokenDTO.derivedEth == null : this.derivedEth.equals(sushiswapTokenDTO.derivedEth)) &&
        (this.whitelistPairs == null ? sushiswapTokenDTO.whitelistPairs == null : this.whitelistPairs.equals(sushiswapTokenDTO.whitelistPairs)) &&
        (this.vid == null ? sushiswapTokenDTO.vid == null : this.vid.equals(sushiswapTokenDTO.vid)) &&
        (this.tokenSymbol == null ? sushiswapTokenDTO.tokenSymbol == null : this.tokenSymbol.equals(sushiswapTokenDTO.tokenSymbol));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.factory == null ? 0: this.factory.hashCode());
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.decimals == null ? 0: this.decimals.hashCode());
    result = 31 * result + (this.totalSupply == null ? 0: this.totalSupply.hashCode());
    result = 31 * result + (this.volume == null ? 0: this.volume.hashCode());
    result = 31 * result + (this.volumeUsd == null ? 0: this.volumeUsd.hashCode());
    result = 31 * result + (this.untrackedVolumeUsd == null ? 0: this.untrackedVolumeUsd.hashCode());
    result = 31 * result + (this.txCount == null ? 0: this.txCount.hashCode());
    result = 31 * result + (this.liquidity == null ? 0: this.liquidity.hashCode());
    result = 31 * result + (this.derivedEth == null ? 0: this.derivedEth.hashCode());
    result = 31 * result + (this.whitelistPairs == null ? 0: this.whitelistPairs.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    result = 31 * result + (this.tokenSymbol == null ? 0: this.tokenSymbol.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SushiswapTokenDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  factory: ").append(factory).append("\n");
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  decimals: ").append(decimals).append("\n");
    sb.append("  totalSupply: ").append(totalSupply).append("\n");
    sb.append("  volume: ").append(volume).append("\n");
    sb.append("  volumeUsd: ").append(volumeUsd).append("\n");
    sb.append("  untrackedVolumeUsd: ").append(untrackedVolumeUsd).append("\n");
    sb.append("  txCount: ").append(txCount).append("\n");
    sb.append("  liquidity: ").append(liquidity).append("\n");
    sb.append("  derivedEth: ").append(derivedEth).append("\n");
    sb.append("  whitelistPairs: ").append(whitelistPairs).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("  tokenSymbol: ").append(tokenSymbol).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
