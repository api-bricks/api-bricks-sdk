/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Tracks data across all pairs aggregated into a daily bucket.
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param id Unix timestamp for start of day / 86400 giving a unique day index.
 * @param date Unix timestamp for start of day.
 * @param dailyVolumeEth Total volume across all pairs on this day, stored as a derived amount of ETH.
 * @param dailyVolumeUsd Total volume across all pairs on this day, stored as a derived amount of USD.
 * @param dailyVolumeUntracked Total volume across all pairs on this day, untracked.
 * @param totalVolumeEth All time volume across all pairs in ETH up to and including this day.
 * @param totalLiquidityEth Total liquidity across all pairs in ETH up to and including this day.
 * @param totalVolumeUsd All time volume across all pairs in USD up to and including this day.
 * @param totalLiquidityUsd Total liquidity across all pairs in USD up to and including this day.
 * @param txCount Number of transactions throughout this day.
 * @param vid 
 */


data class UniswapV2UniswapDayDataDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /* Unix timestamp for start of day / 86400 giving a unique day index. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Unix timestamp for start of day. */
    @Json(name = "date")
    val date: kotlin.Int? = null,

    /* Total volume across all pairs on this day, stored as a derived amount of ETH. */
    @Json(name = "daily_volume_eth")
    val dailyVolumeEth: kotlin.String? = null,

    /* Total volume across all pairs on this day, stored as a derived amount of USD. */
    @Json(name = "daily_volume_usd")
    val dailyVolumeUsd: kotlin.String? = null,

    /* Total volume across all pairs on this day, untracked. */
    @Json(name = "daily_volume_untracked")
    val dailyVolumeUntracked: kotlin.String? = null,

    /* All time volume across all pairs in ETH up to and including this day. */
    @Json(name = "total_volume_eth")
    val totalVolumeEth: kotlin.String? = null,

    /* Total liquidity across all pairs in ETH up to and including this day. */
    @Json(name = "total_liquidity_eth")
    val totalLiquidityEth: kotlin.String? = null,

    /* All time volume across all pairs in USD up to and including this day. */
    @Json(name = "total_volume_usd")
    val totalVolumeUsd: kotlin.String? = null,

    /* Total liquidity across all pairs in USD up to and including this day. */
    @Json(name = "total_liquidity_usd")
    val totalLiquidityUsd: kotlin.String? = null,

    /* Number of transactions throughout this day. */
    @Json(name = "tx_count")
    val txCount: kotlin.String? = null,

    /*  */
    @Json(name = "vid")
    val vid: kotlin.Long? = null

)

