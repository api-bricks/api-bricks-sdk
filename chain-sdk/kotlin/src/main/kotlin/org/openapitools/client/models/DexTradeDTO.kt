/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.TransactionsETradeAggressiveSide

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Trade for a single user, as part of a ring trade. It's part of the solution submitted by a solver for a given batch.
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param id 
 * @param order 
 * @param owner 
 * @param sellVolume 
 * @param buyVolume 
 * @param tradeBatchId 
 * @param tradeEpoch The date of the end of the batch.
 * @param buyToken 
 * @param sellToken 
 * @param createEpoch The date where the transaction was mined.
 * @param revertEpoch 
 * @param txHash 
 * @param txLogIndex 
 * @param vid 
 * @param poolId 
 * @param transactionId 
 * @param evaluatedPrice 
 * @param evaluatedAmount 
 * @param evaluatedAggressor 
 */


data class DexTradeDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /*  */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /*  */
    @Json(name = "order")
    val order: kotlin.String? = null,

    /*  */
    @Json(name = "owner")
    val owner: kotlin.String? = null,

    /*  */
    @Json(name = "sell_volume")
    val sellVolume: kotlin.String? = null,

    /*  */
    @Json(name = "buy_volume")
    val buyVolume: kotlin.String? = null,

    /*  */
    @Json(name = "trade_batch_id")
    val tradeBatchId: kotlin.String? = null,

    /* The date of the end of the batch. */
    @Json(name = "trade_epoch")
    val tradeEpoch: kotlin.String? = null,

    /*  */
    @Json(name = "buy_token")
    val buyToken: kotlin.String? = null,

    /*  */
    @Json(name = "sell_token")
    val sellToken: kotlin.String? = null,

    /* The date where the transaction was mined. */
    @Json(name = "create_epoch")
    val createEpoch: kotlin.String? = null,

    /*  */
    @Json(name = "revert_epoch")
    val revertEpoch: kotlin.String? = null,

    /*  */
    @Json(name = "tx_hash")
    val txHash: kotlin.String? = null,

    /*  */
    @Json(name = "tx_log_index")
    val txLogIndex: kotlin.String? = null,

    /*  */
    @Json(name = "vid")
    val vid: kotlin.Long? = null,

    @Json(name = "pool_id")
    val poolId: kotlin.String? = null,

    @Json(name = "transaction_id")
    val transactionId: kotlin.String? = null,

    @Json(name = "evaluated_price")
    val evaluatedPrice: kotlin.Double? = null,

    @Json(name = "evaluated_amount")
    val evaluatedAmount: kotlin.Double? = null,

    @Json(name = "evaluated_aggressor")
    val evaluatedAggressor: TransactionsETradeAggressiveSide? = null

)

