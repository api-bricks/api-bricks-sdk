/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.NumericsBigInteger

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Data accumulated and condensed into day stats for all of Uniswap.
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param vid 
 * @param id Timestamp rounded to current day by dividing by 86400.
 * @param date Timestamp rounded to current day by dividing by 86400.
 * @param volumeEth Total volume across all pairs on this day, stored as a derived amount of ETH.
 * @param volumeUsd Total volume across all pairs on this day, stored as a derived amount of USD.
 * @param volumeUsdUntracked Total daily volume in Uniswap derived in terms of USD untracked.
 * @param feesUsd Fees in USD
 * @param txCount 
 * @param tvlUsd Tvl in terms of USD.
 */


data class UniswapV3UniswapDayDataDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /*  */
    @Json(name = "vid")
    val vid: kotlin.Long? = null,

    /* Timestamp rounded to current day by dividing by 86400. */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Timestamp rounded to current day by dividing by 86400. */
    @Json(name = "date")
    val date: kotlin.Int? = null,

    /* Total volume across all pairs on this day, stored as a derived amount of ETH. */
    @Json(name = "volume_eth")
    val volumeEth: kotlin.String? = null,

    /* Total volume across all pairs on this day, stored as a derived amount of USD. */
    @Json(name = "volume_usd")
    val volumeUsd: kotlin.String? = null,

    /* Total daily volume in Uniswap derived in terms of USD untracked. */
    @Json(name = "volume_usd_untracked")
    val volumeUsdUntracked: kotlin.String? = null,

    /* Fees in USD */
    @Json(name = "fees_usd")
    val feesUsd: kotlin.String? = null,

    @Json(name = "tx_count")
    val txCount: NumericsBigInteger? = null,

    /* Tvl in terms of USD. */
    @Json(name = "tvl_usd")
    val tvlUsd: kotlin.String? = null

)

