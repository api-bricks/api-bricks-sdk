#
# On Chain Dapps - REST API
#  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
# Version: v1
# Contact: support@coinapi.io
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

version: 1.0.{build}
image:
  - Visual Studio 2019 # PWSH 7.x
  #- Visual Studio 2017 # PS 5.x, PWSH 6.x
  #- Ubuntu # PWSH 6.x
  # ref: https://www.appveyor.com/docs/windows-images-software/
install:
  - pwsh: $PSVersionTable.PSVersion
  - pwsh: Install-Module Pester -Force -Scope CurrentUser
build: off
test_script:
  - pwsh: |
      .\Build.ps1
      Import-Module -Name '.\src\PSOpenAPITools'
      $Result = Invoke-Pester -PassThru
      if ($Result.FailedCount -gt 0) {
          $host.SetShouldExit($Result.FailedCount)
          exit $Result.FailedCount
      }
deploy_script:
  - pwsh: |
      if ($env:APPVEYOR_REPO_TAG -eq $true -and $null -ne $env:NuGetApiKey) {
          .\Build.ps1
          try {
              Publish-Module -NuGetApiKey $env:NuGetApiKey -Path .\src\PSOpenAPITools\ -Confirm:$False -Verbose
              Write-Host "Successfully published the PowerShell module."
          } catch {
              $host.SetShouldExit($LastExitCode)
              Write-Host "Error when running Publish-Module:"
              Write-Host $_
              exit
          }
      }
