/*
 * OnChain API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing UniswapV2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UniswapV2ApiTests
    {
        private UniswapV2Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UniswapV2Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UniswapV2Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' UniswapV2Api
            //Assert.IsInstanceOf(typeof(UniswapV2Api), instance);
        }

        
        /// <summary>
        /// Test DappsUniswapv2BundlesHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2BundlesHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv2BundlesHistoricalGet(startBlock, endBlock, startDate, endDate);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2BurnsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2BurnsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2BurnsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2DayDataHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2DayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv2DayDataHistoricalGet(startBlock, endBlock, startDate, endDate);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2FactoryHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2FactoryHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv2FactoryHistoricalGet(startBlock, endBlock, startDate, endDate);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2LiquidityPositionHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2LiquidityPositionHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2LiquidityPositionHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2LiquidityPositionSnapshotsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2LiquidityPositionSnapshotsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2LiquidityPositionSnapshotsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2MintsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2MintsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2MintsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2PoolDayDataHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2PoolDayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2PoolDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2PoolHourDataHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2PoolHourDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2PoolHourDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2PoolsCurrentGet
        /// </summary>
        [Test]
        public void DappsUniswapv2PoolsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv2PoolsCurrentGet(filterPoolId);
            //Assert.IsInstanceOf(typeof(List<UniswapV2PairV2DTO>), response, "response is List<UniswapV2PairV2DTO>");
        }
        
        /// <summary>
        /// Test DappsUniswapv2PoolsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2PoolsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2PoolsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2SwapsCurrentGet
        /// </summary>
        [Test]
        public void DappsUniswapv2SwapsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DappsUniswapv2SwapsCurrentGet();
            //Assert.IsInstanceOf(typeof(List<UniswapV2SwapV2DTO>), response, "response is List<UniswapV2SwapV2DTO>");
        }
        
        /// <summary>
        /// Test DappsUniswapv2SwapsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2SwapsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv2SwapsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2TokenDayDataHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2TokenDayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsUniswapv2TokenDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2TokensCurrentGet
        /// </summary>
        [Test]
        public void DappsUniswapv2TokensCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DappsUniswapv2TokensCurrentGet();
            //Assert.IsInstanceOf(typeof(List<UniswapV2TokenV2DTO>), response, "response is List<UniswapV2TokenV2DTO>");
        }
        
        /// <summary>
        /// Test DappsUniswapv2TokensHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2TokensHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsUniswapv2TokensHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2TransactionsHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2TransactionsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv2TransactionsHistoricalGet(startBlock, endBlock, startDate, endDate);
            
        }
        
        /// <summary>
        /// Test DappsUniswapv2UsersHistoricalGet
        /// </summary>
        [Test]
        public void DappsUniswapv2UsersHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv2UsersHistoricalGet(startBlock, endBlock, startDate, endDate);
            
        }
        
    }

}
