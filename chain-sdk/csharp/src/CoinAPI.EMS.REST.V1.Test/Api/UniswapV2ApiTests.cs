/*
 * OnChain API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing UniswapV2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UniswapV2ApiTests
    {
        private UniswapV2Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UniswapV2Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UniswapV2Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' UniswapV2Api
            //Assert.IsInstanceOf(typeof(UniswapV2Api), instance);
        }

        
        /// <summary>
        /// Test UniswapV2GetBundleV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetBundleV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetBundleV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2BundleV2DTO>), response, "response is List<UniswapV2BundleV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetBurnV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetBurnV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string pair = null;
            //var response = instance.UniswapV2GetBurnV2sHistorical(startBlock, endBlock, startDate, endDate, id, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2BurnV2DTO>), response, "response is List<UniswapV2BurnV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetLiquidityPositionSnapshotV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetLiquidityPositionSnapshotV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string user = null;
            //string pair = null;
            //var response = instance.UniswapV2GetLiquidityPositionSnapshotV2sHistorical(startBlock, endBlock, startDate, endDate, id, user, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2LiquidityPositionSnapshotV2DTO>), response, "response is List<UniswapV2LiquidityPositionSnapshotV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetLiquidityPositionV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetLiquidityPositionV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string user = null;
            //string pair = null;
            //var response = instance.UniswapV2GetLiquidityPositionV2sHistorical(startBlock, endBlock, startDate, endDate, id, user, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2LiquidityPositionV2DTO>), response, "response is List<UniswapV2LiquidityPositionV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetMintV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetMintV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string pair = null;
            //var response = instance.UniswapV2GetMintV2sHistorical(startBlock, endBlock, startDate, endDate, id, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2MintV2DTO>), response, "response is List<UniswapV2MintV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetPairDayDataV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetPairDayDataV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string token0 = null;
            //string token1 = null;
            //var response = instance.UniswapV2GetPairDayDataV2sHistorical(startBlock, endBlock, startDate, endDate, id, token0, token1);
            //Assert.IsInstanceOf(typeof(List<UniswapV2PairDayDataV2DTO>), response, "response is List<UniswapV2PairDayDataV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetPairHourDataV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetPairHourDataV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string pair = null;
            //var response = instance.UniswapV2GetPairHourDataV2sHistorical(startBlock, endBlock, startDate, endDate, id, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2PairHourDataV2DTO>), response, "response is List<UniswapV2PairHourDataV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetPairV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetPairV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string token0 = null;
            //string token1 = null;
            //var response = instance.UniswapV2GetPairV2sHistorical(startBlock, endBlock, startDate, endDate, id, token0, token1);
            //Assert.IsInstanceOf(typeof(List<UniswapV2PairV2DTO>), response, "response is List<UniswapV2PairV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetPoolsCurrent
        /// </summary>
        [Test]
        public void UniswapV2GetPoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.UniswapV2GetPoolsCurrent(filterPoolId);
            //Assert.IsInstanceOf(typeof(List<UniswapV2PairV2DTO>), response, "response is List<UniswapV2PairV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetSwapV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetSwapV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string pair = null;
            //var response = instance.UniswapV2GetSwapV2sHistorical(startBlock, endBlock, startDate, endDate, id, pair);
            //Assert.IsInstanceOf(typeof(List<UniswapV2SwapV2DTO>), response, "response is List<UniswapV2SwapV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetSwapsCurrent
        /// </summary>
        [Test]
        public void UniswapV2GetSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV2GetSwapsCurrent();
            //Assert.IsInstanceOf(typeof(List<UniswapV2SwapV2DTO>), response, "response is List<UniswapV2SwapV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetTokenDayDataV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetTokenDayDataV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetTokenDayDataV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2TokenDayDataV2DTO>), response, "response is List<UniswapV2TokenDayDataV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetTokenV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetTokenV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string symbol = null;
            //string name = null;
            //var response = instance.UniswapV2GetTokenV2sHistorical(startBlock, endBlock, startDate, endDate, id, symbol, name);
            //Assert.IsInstanceOf(typeof(List<UniswapV2TokenV2DTO>), response, "response is List<UniswapV2TokenV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetTokensCurrent
        /// </summary>
        [Test]
        public void UniswapV2GetTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV2GetTokensCurrent();
            //Assert.IsInstanceOf(typeof(List<UniswapV2TokenV2DTO>), response, "response is List<UniswapV2TokenV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetTransactionV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetTransactionV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetTransactionV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2TransactionV2DTO>), response, "response is List<UniswapV2TransactionV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetUniswapDayDataV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetUniswapDayDataV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetUniswapDayDataV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2UniswapDayDataV2DTO>), response, "response is List<UniswapV2UniswapDayDataV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetUniswapFactoryV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetUniswapFactoryV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetUniswapFactoryV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2UniswapFactoryV2DTO>), response, "response is List<UniswapV2UniswapFactoryV2DTO>");
        }
        
        /// <summary>
        /// Test UniswapV2GetUserV2sHistorical
        /// </summary>
        [Test]
        public void UniswapV2GetUserV2sHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.UniswapV2GetUserV2sHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsInstanceOf(typeof(List<UniswapV2UserV2DTO>), response, "response is List<UniswapV2UserV2DTO>");
        }
        
    }

}
