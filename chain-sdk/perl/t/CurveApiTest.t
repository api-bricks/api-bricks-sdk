=begin comment

OnChain API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

The version of the OpenAPI document: v1
Contact: support@coinapi.io
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::CurveApi');

my $api = WWW::OpenAPIClient::CurveApi->new();
isa_ok($api, 'WWW::OpenAPIClient::CurveApi');

#
# curve_get_account_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_account_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_account_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_account_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_account_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_account_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_account_dtos__historical_result = $api->curve_get_account_dtos__historical(start_block => $curve_get_account_dtos__historical_start_block, end_block => $curve_get_account_dtos__historical_end_block, start_date => $curve_get_account_dtos__historical_start_date, end_date => $curve_get_account_dtos__historical_end_date, pool_id => $curve_get_account_dtos__historical_pool_id);

#
# curve_get_accounts__historical test
#
# uncomment below and update the test
#my $curve_get_accounts__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_accounts__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_accounts__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_accounts__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_accounts__historical_result = $api->curve_get_accounts__historical(start_block => $curve_get_accounts__historical_start_block, end_block => $curve_get_accounts__historical_end_block, start_date => $curve_get_accounts__historical_start_date, end_date => $curve_get_accounts__historical_end_date);

#
# curve_get_add_liquidity_event_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_add_liquidity_event_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_event_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_event_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_event_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_event_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_event_dtos__historical_result = $api->curve_get_add_liquidity_event_dtos__historical(start_block => $curve_get_add_liquidity_event_dtos__historical_start_block, end_block => $curve_get_add_liquidity_event_dtos__historical_end_block, start_date => $curve_get_add_liquidity_event_dtos__historical_start_date, end_date => $curve_get_add_liquidity_event_dtos__historical_end_date, pool_id => $curve_get_add_liquidity_event_dtos__historical_pool_id);

#
# curve_get_add_liquidity_events__historical test
#
# uncomment below and update the test
#my $curve_get_add_liquidity_events__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_events__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_events__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_events__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_events__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_add_liquidity_events__historical_result = $api->curve_get_add_liquidity_events__historical(start_block => $curve_get_add_liquidity_events__historical_start_block, end_block => $curve_get_add_liquidity_events__historical_end_block, start_date => $curve_get_add_liquidity_events__historical_start_date, end_date => $curve_get_add_liquidity_events__historical_end_date, pool_id => $curve_get_add_liquidity_events__historical_pool_id);

#
# curve_get_admin_fee_change_log_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_admin_fee_change_log_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_log_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_log_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_log_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_log_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_log_dtos__historical_result = $api->curve_get_admin_fee_change_log_dtos__historical(start_block => $curve_get_admin_fee_change_log_dtos__historical_start_block, end_block => $curve_get_admin_fee_change_log_dtos__historical_end_block, start_date => $curve_get_admin_fee_change_log_dtos__historical_start_date, end_date => $curve_get_admin_fee_change_log_dtos__historical_end_date, pool_id => $curve_get_admin_fee_change_log_dtos__historical_pool_id);

#
# curve_get_admin_fee_change_logs__historical test
#
# uncomment below and update the test
#my $curve_get_admin_fee_change_logs__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_logs__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_logs__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_logs__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_logs__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_admin_fee_change_logs__historical_result = $api->curve_get_admin_fee_change_logs__historical(start_block => $curve_get_admin_fee_change_logs__historical_start_block, end_block => $curve_get_admin_fee_change_logs__historical_end_block, start_date => $curve_get_admin_fee_change_logs__historical_start_date, end_date => $curve_get_admin_fee_change_logs__historical_end_date, pool_id => $curve_get_admin_fee_change_logs__historical_pool_id);

#
# curve_get_amplification_coeff_change_log_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_amplification_coeff_change_log_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_log_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_log_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_log_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_log_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_log_dtos__historical_result = $api->curve_get_amplification_coeff_change_log_dtos__historical(start_block => $curve_get_amplification_coeff_change_log_dtos__historical_start_block, end_block => $curve_get_amplification_coeff_change_log_dtos__historical_end_block, start_date => $curve_get_amplification_coeff_change_log_dtos__historical_start_date, end_date => $curve_get_amplification_coeff_change_log_dtos__historical_end_date, pool_id => $curve_get_amplification_coeff_change_log_dtos__historical_pool_id);

#
# curve_get_amplification_coeff_change_logs__historical test
#
# uncomment below and update the test
#my $curve_get_amplification_coeff_change_logs__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_logs__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_logs__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_logs__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_logs__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_amplification_coeff_change_logs__historical_result = $api->curve_get_amplification_coeff_change_logs__historical(start_block => $curve_get_amplification_coeff_change_logs__historical_start_block, end_block => $curve_get_amplification_coeff_change_logs__historical_end_block, start_date => $curve_get_amplification_coeff_change_logs__historical_start_date, end_date => $curve_get_amplification_coeff_change_logs__historical_end_date, pool_id => $curve_get_amplification_coeff_change_logs__historical_pool_id);

#
# curve_get_coin_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_coin_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_coin_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_coin_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_coin_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_coin_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_coin_dtos__historical_result = $api->curve_get_coin_dtos__historical(start_block => $curve_get_coin_dtos__historical_start_block, end_block => $curve_get_coin_dtos__historical_end_block, start_date => $curve_get_coin_dtos__historical_start_date, end_date => $curve_get_coin_dtos__historical_end_date, pool_id => $curve_get_coin_dtos__historical_pool_id);

#
# curve_get_coins__historical test
#
# uncomment below and update the test
#my $curve_get_coins__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_coins__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_coins__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_coins__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_coins__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_coins__historical_result = $api->curve_get_coins__historical(start_block => $curve_get_coins__historical_start_block, end_block => $curve_get_coins__historical_end_block, start_date => $curve_get_coins__historical_start_date, end_date => $curve_get_coins__historical_end_date, pool_id => $curve_get_coins__historical_pool_id);

#
# curve_get_contract_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_contract_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_contract_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_contract_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_contract_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_contract_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_contract_dtos__historical_result = $api->curve_get_contract_dtos__historical(start_block => $curve_get_contract_dtos__historical_start_block, end_block => $curve_get_contract_dtos__historical_end_block, start_date => $curve_get_contract_dtos__historical_start_date, end_date => $curve_get_contract_dtos__historical_end_date, pool_id => $curve_get_contract_dtos__historical_pool_id);

#
# curve_get_contract_version_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_contract_version_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_contract_version_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_contract_version_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_contract_version_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_contract_version_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_contract_version_dtos__historical_result = $api->curve_get_contract_version_dtos__historical(start_block => $curve_get_contract_version_dtos__historical_start_block, end_block => $curve_get_contract_version_dtos__historical_end_block, start_date => $curve_get_contract_version_dtos__historical_start_date, end_date => $curve_get_contract_version_dtos__historical_end_date, pool_id => $curve_get_contract_version_dtos__historical_pool_id);

#
# curve_get_contracts__historical test
#
# uncomment below and update the test
#my $curve_get_contracts__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_contracts__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_contracts__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_contracts__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_contracts__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_contracts__historical_result = $api->curve_get_contracts__historical(start_block => $curve_get_contracts__historical_start_block, end_block => $curve_get_contracts__historical_end_block, start_date => $curve_get_contracts__historical_start_date, end_date => $curve_get_contracts__historical_end_date, pool_id => $curve_get_contracts__historical_pool_id);

#
# curve_get_contracts_versions__historical test
#
# uncomment below and update the test
#my $curve_get_contracts_versions__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_contracts_versions__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_contracts_versions__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_contracts_versions__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_contracts_versions__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_contracts_versions__historical_result = $api->curve_get_contracts_versions__historical(start_block => $curve_get_contracts_versions__historical_start_block, end_block => $curve_get_contracts_versions__historical_end_block, start_date => $curve_get_contracts_versions__historical_start_date, end_date => $curve_get_contracts_versions__historical_end_date, pool_id => $curve_get_contracts_versions__historical_pool_id);

#
# curve_get_daily_volume_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_daily_volume_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_daily_volume_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_daily_volume_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_daily_volume_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_daily_volume_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_daily_volume_dtos__historical_result = $api->curve_get_daily_volume_dtos__historical(start_block => $curve_get_daily_volume_dtos__historical_start_block, end_block => $curve_get_daily_volume_dtos__historical_end_block, start_date => $curve_get_daily_volume_dtos__historical_start_date, end_date => $curve_get_daily_volume_dtos__historical_end_date, pool_id => $curve_get_daily_volume_dtos__historical_pool_id);

#
# curve_get_daily_volumes__historical test
#
# uncomment below and update the test
#my $curve_get_daily_volumes__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_daily_volumes__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_daily_volumes__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_daily_volumes__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_daily_volumes__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_daily_volumes__historical_result = $api->curve_get_daily_volumes__historical(start_block => $curve_get_daily_volumes__historical_start_block, end_block => $curve_get_daily_volumes__historical_end_block, start_date => $curve_get_daily_volumes__historical_start_date, end_date => $curve_get_daily_volumes__historical_end_date, pool_id => $curve_get_daily_volumes__historical_pool_id);

#
# curve_get_exchange_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_exchange_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_exchange_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_exchange_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_exchange_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_exchange_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_exchange_dtos__historical_result = $api->curve_get_exchange_dtos__historical(start_block => $curve_get_exchange_dtos__historical_start_block, end_block => $curve_get_exchange_dtos__historical_end_block, start_date => $curve_get_exchange_dtos__historical_start_date, end_date => $curve_get_exchange_dtos__historical_end_date, pool_id => $curve_get_exchange_dtos__historical_pool_id);

#
# curve_get_exchanges__historical test
#
# uncomment below and update the test
#my $curve_get_exchanges__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_exchanges__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_exchanges__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_exchanges__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_exchanges__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_exchanges__historical_result = $api->curve_get_exchanges__historical(start_block => $curve_get_exchanges__historical_start_block, end_block => $curve_get_exchanges__historical_end_block, start_date => $curve_get_exchanges__historical_start_date, end_date => $curve_get_exchanges__historical_end_date, pool_id => $curve_get_exchanges__historical_pool_id);

#
# curve_get_fee_change_log_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_fee_change_log_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_fee_change_log_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_fee_change_log_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_fee_change_log_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_fee_change_log_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_fee_change_log_dtos__historical_result = $api->curve_get_fee_change_log_dtos__historical(start_block => $curve_get_fee_change_log_dtos__historical_start_block, end_block => $curve_get_fee_change_log_dtos__historical_end_block, start_date => $curve_get_fee_change_log_dtos__historical_start_date, end_date => $curve_get_fee_change_log_dtos__historical_end_date, pool_id => $curve_get_fee_change_log_dtos__historical_pool_id);

#
# curve_get_fee_change_logs__historical test
#
# uncomment below and update the test
#my $curve_get_fee_change_logs__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_fee_change_logs__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_fee_change_logs__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_fee_change_logs__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_fee_change_logs__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_fee_change_logs__historical_result = $api->curve_get_fee_change_logs__historical(start_block => $curve_get_fee_change_logs__historical_start_block, end_block => $curve_get_fee_change_logs__historical_end_block, start_date => $curve_get_fee_change_logs__historical_start_date, end_date => $curve_get_fee_change_logs__historical_end_date, pool_id => $curve_get_fee_change_logs__historical_pool_id);

#
# curve_get_gauge_deposit_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_deposit_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_deposit_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_deposit_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_deposit_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_deposit_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_deposit_dtos__historical_result = $api->curve_get_gauge_deposit_dtos__historical(start_block => $curve_get_gauge_deposit_dtos__historical_start_block, end_block => $curve_get_gauge_deposit_dtos__historical_end_block, start_date => $curve_get_gauge_deposit_dtos__historical_start_date, end_date => $curve_get_gauge_deposit_dtos__historical_end_date, pool_id => $curve_get_gauge_deposit_dtos__historical_pool_id);

#
# curve_get_gauge_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_dtos__historical_result = $api->curve_get_gauge_dtos__historical(start_block => $curve_get_gauge_dtos__historical_start_block, end_block => $curve_get_gauge_dtos__historical_end_block, start_date => $curve_get_gauge_dtos__historical_start_date, end_date => $curve_get_gauge_dtos__historical_end_date, pool_id => $curve_get_gauge_dtos__historical_pool_id);

#
# curve_get_gauge_liquidity_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_liquidity_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_liquidity_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_liquidity_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_liquidity_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_liquidity_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_liquidity_dtos__historical_result = $api->curve_get_gauge_liquidity_dtos__historical(start_block => $curve_get_gauge_liquidity_dtos__historical_start_block, end_block => $curve_get_gauge_liquidity_dtos__historical_end_block, start_date => $curve_get_gauge_liquidity_dtos__historical_start_date, end_date => $curve_get_gauge_liquidity_dtos__historical_end_date, pool_id => $curve_get_gauge_liquidity_dtos__historical_pool_id);

#
# curve_get_gauge_total_weight_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_total_weight_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_total_weight_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_total_weight_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_total_weight_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_total_weight_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_total_weight_dtos__historical_result = $api->curve_get_gauge_total_weight_dtos__historical(start_block => $curve_get_gauge_total_weight_dtos__historical_start_block, end_block => $curve_get_gauge_total_weight_dtos__historical_end_block, start_date => $curve_get_gauge_total_weight_dtos__historical_start_date, end_date => $curve_get_gauge_total_weight_dtos__historical_end_date, pool_id => $curve_get_gauge_total_weight_dtos__historical_pool_id);

#
# curve_get_gauge_type_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_type_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_dtos__historical_result = $api->curve_get_gauge_type_dtos__historical(start_block => $curve_get_gauge_type_dtos__historical_start_block, end_block => $curve_get_gauge_type_dtos__historical_end_block, start_date => $curve_get_gauge_type_dtos__historical_start_date, end_date => $curve_get_gauge_type_dtos__historical_end_date, pool_id => $curve_get_gauge_type_dtos__historical_pool_id);

#
# curve_get_gauge_type_weight_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_type_weight_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_weight_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_weight_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_weight_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_weight_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_type_weight_dtos__historical_result = $api->curve_get_gauge_type_weight_dtos__historical(start_block => $curve_get_gauge_type_weight_dtos__historical_start_block, end_block => $curve_get_gauge_type_weight_dtos__historical_end_block, start_date => $curve_get_gauge_type_weight_dtos__historical_start_date, end_date => $curve_get_gauge_type_weight_dtos__historical_end_date, pool_id => $curve_get_gauge_type_weight_dtos__historical_pool_id);

#
# curve_get_gauge_weight_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_weight_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_dtos__historical_result = $api->curve_get_gauge_weight_dtos__historical(start_block => $curve_get_gauge_weight_dtos__historical_start_block, end_block => $curve_get_gauge_weight_dtos__historical_end_block, start_date => $curve_get_gauge_weight_dtos__historical_start_date, end_date => $curve_get_gauge_weight_dtos__historical_end_date, pool_id => $curve_get_gauge_weight_dtos__historical_pool_id);

#
# curve_get_gauge_weight_vote_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_weight_vote_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_vote_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_vote_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_vote_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_vote_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_weight_vote_dtos__historical_result = $api->curve_get_gauge_weight_vote_dtos__historical(start_block => $curve_get_gauge_weight_vote_dtos__historical_start_block, end_block => $curve_get_gauge_weight_vote_dtos__historical_end_block, start_date => $curve_get_gauge_weight_vote_dtos__historical_start_date, end_date => $curve_get_gauge_weight_vote_dtos__historical_end_date, pool_id => $curve_get_gauge_weight_vote_dtos__historical_pool_id);

#
# curve_get_gauge_withdraw_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_gauge_withdraw_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_withdraw_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauge_withdraw_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_withdraw_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauge_withdraw_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauge_withdraw_dtos__historical_result = $api->curve_get_gauge_withdraw_dtos__historical(start_block => $curve_get_gauge_withdraw_dtos__historical_start_block, end_block => $curve_get_gauge_withdraw_dtos__historical_end_block, start_date => $curve_get_gauge_withdraw_dtos__historical_start_date, end_date => $curve_get_gauge_withdraw_dtos__historical_end_date, pool_id => $curve_get_gauge_withdraw_dtos__historical_pool_id);

#
# curve_get_gauges__historical test
#
# uncomment below and update the test
#my $curve_get_gauges__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_gauges__historical_result = $api->curve_get_gauges__historical(start_block => $curve_get_gauges__historical_start_block, end_block => $curve_get_gauges__historical_end_block, start_date => $curve_get_gauges__historical_start_date, end_date => $curve_get_gauges__historical_end_date, pool_id => $curve_get_gauges__historical_pool_id);

#
# curve_get_gauges_deposits__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_deposits__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_deposits__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_deposits__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_deposits__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_deposits__historical_result = $api->curve_get_gauges_deposits__historical(start_block => $curve_get_gauges_deposits__historical_start_block, end_block => $curve_get_gauges_deposits__historical_end_block, start_date => $curve_get_gauges_deposits__historical_start_date, end_date => $curve_get_gauges_deposits__historical_end_date);

#
# curve_get_gauges_liquidity__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_liquidity__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_liquidity__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_liquidity__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_liquidity__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_liquidity__historical_result = $api->curve_get_gauges_liquidity__historical(start_block => $curve_get_gauges_liquidity__historical_start_block, end_block => $curve_get_gauges_liquidity__historical_end_block, start_date => $curve_get_gauges_liquidity__historical_start_date, end_date => $curve_get_gauges_liquidity__historical_end_date);

#
# curve_get_gauges_total_weights__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_total_weights__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_total_weights__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_total_weights__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_total_weights__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_total_weights__historical_result = $api->curve_get_gauges_total_weights__historical(start_block => $curve_get_gauges_total_weights__historical_start_block, end_block => $curve_get_gauges_total_weights__historical_end_block, start_date => $curve_get_gauges_total_weights__historical_start_date, end_date => $curve_get_gauges_total_weights__historical_end_date);

#
# curve_get_gauges_types__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_types__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_types__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_types__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_types__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_types__historical_result = $api->curve_get_gauges_types__historical(start_block => $curve_get_gauges_types__historical_start_block, end_block => $curve_get_gauges_types__historical_end_block, start_date => $curve_get_gauges_types__historical_start_date, end_date => $curve_get_gauges_types__historical_end_date);

#
# curve_get_gauges_types_weights__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_types_weights__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_types_weights__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_types_weights__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_types_weights__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_types_weights__historical_result = $api->curve_get_gauges_types_weights__historical(start_block => $curve_get_gauges_types_weights__historical_start_block, end_block => $curve_get_gauges_types_weights__historical_end_block, start_date => $curve_get_gauges_types_weights__historical_start_date, end_date => $curve_get_gauges_types_weights__historical_end_date);

#
# curve_get_gauges_weights__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_weights__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights__historical_result = $api->curve_get_gauges_weights__historical(start_block => $curve_get_gauges_weights__historical_start_block, end_block => $curve_get_gauges_weights__historical_end_block, start_date => $curve_get_gauges_weights__historical_start_date, end_date => $curve_get_gauges_weights__historical_end_date);

#
# curve_get_gauges_weights_votes__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_weights_votes__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights_votes__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights_votes__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights_votes__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_weights_votes__historical_result = $api->curve_get_gauges_weights_votes__historical(start_block => $curve_get_gauges_weights_votes__historical_start_block, end_block => $curve_get_gauges_weights_votes__historical_end_block, start_date => $curve_get_gauges_weights_votes__historical_start_date, end_date => $curve_get_gauges_weights_votes__historical_end_date);

#
# curve_get_gauges_withdraw__historical test
#
# uncomment below and update the test
#my $curve_get_gauges_withdraw__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_withdraw__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_gauges_withdraw__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_withdraw__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_gauges_withdraw__historical_result = $api->curve_get_gauges_withdraw__historical(start_block => $curve_get_gauges_withdraw__historical_start_block, end_block => $curve_get_gauges_withdraw__historical_end_block, start_date => $curve_get_gauges_withdraw__historical_start_date, end_date => $curve_get_gauges_withdraw__historical_end_date);

#
# curve_get_hourly_volume_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_hourly_volume_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_hourly_volume_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_hourly_volume_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_hourly_volume_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_hourly_volume_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_hourly_volume_dtos__historical_result = $api->curve_get_hourly_volume_dtos__historical(start_block => $curve_get_hourly_volume_dtos__historical_start_block, end_block => $curve_get_hourly_volume_dtos__historical_end_block, start_date => $curve_get_hourly_volume_dtos__historical_start_date, end_date => $curve_get_hourly_volume_dtos__historical_end_date, pool_id => $curve_get_hourly_volume_dtos__historical_pool_id);

#
# curve_get_hourly_volumes__historical test
#
# uncomment below and update the test
#my $curve_get_hourly_volumes__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_hourly_volumes__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_hourly_volumes__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_hourly_volumes__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_hourly_volumes__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_hourly_volumes__historical_result = $api->curve_get_hourly_volumes__historical(start_block => $curve_get_hourly_volumes__historical_start_block, end_block => $curve_get_hourly_volumes__historical_end_block, start_date => $curve_get_hourly_volumes__historical_start_date, end_date => $curve_get_hourly_volumes__historical_end_date, pool_id => $curve_get_hourly_volumes__historical_pool_id);

#
# curve_get_lp_token_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_lp_token_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_lp_token_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_lp_token_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_lp_token_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_lp_token_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_lp_token_dtos__historical_result = $api->curve_get_lp_token_dtos__historical(start_block => $curve_get_lp_token_dtos__historical_start_block, end_block => $curve_get_lp_token_dtos__historical_end_block, start_date => $curve_get_lp_token_dtos__historical_start_date, end_date => $curve_get_lp_token_dtos__historical_end_date, pool_id => $curve_get_lp_token_dtos__historical_pool_id);

#
# curve_get_lp_tokens__historical test
#
# uncomment below and update the test
#my $curve_get_lp_tokens__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_lp_tokens__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_lp_tokens__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_lp_tokens__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_lp_tokens__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_lp_tokens__historical_result = $api->curve_get_lp_tokens__historical(start_block => $curve_get_lp_tokens__historical_start_block, end_block => $curve_get_lp_tokens__historical_end_block, start_date => $curve_get_lp_tokens__historical_start_date, end_date => $curve_get_lp_tokens__historical_end_date, pool_id => $curve_get_lp_tokens__historical_pool_id);

#
# curve_get_pool_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_pool_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_pool_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_pool_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_pool_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_pool_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_pool_dtos__historical_result = $api->curve_get_pool_dtos__historical(start_block => $curve_get_pool_dtos__historical_start_block, end_block => $curve_get_pool_dtos__historical_end_block, start_date => $curve_get_pool_dtos__historical_start_date, end_date => $curve_get_pool_dtos__historical_end_date, pool_id => $curve_get_pool_dtos__historical_pool_id);

#
# curve_get_pools__historical test
#
# uncomment below and update the test
#my $curve_get_pools__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_pools__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_pools__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_pools__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_pools__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_pools__historical_result = $api->curve_get_pools__historical(start_block => $curve_get_pools__historical_start_block, end_block => $curve_get_pools__historical_end_block, start_date => $curve_get_pools__historical_start_date, end_date => $curve_get_pools__historical_end_date, pool_id => $curve_get_pools__historical_pool_id);

#
# curve_get_proposal_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_proposal_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_proposal_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_proposal_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_proposal_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_proposal_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_proposal_dtos__historical_result = $api->curve_get_proposal_dtos__historical(start_block => $curve_get_proposal_dtos__historical_start_block, end_block => $curve_get_proposal_dtos__historical_end_block, start_date => $curve_get_proposal_dtos__historical_start_date, end_date => $curve_get_proposal_dtos__historical_end_date, pool_id => $curve_get_proposal_dtos__historical_pool_id);

#
# curve_get_proposal_vote_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_proposal_vote_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_proposal_vote_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_proposal_vote_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_proposal_vote_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_proposal_vote_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_proposal_vote_dtos__historical_result = $api->curve_get_proposal_vote_dtos__historical(start_block => $curve_get_proposal_vote_dtos__historical_start_block, end_block => $curve_get_proposal_vote_dtos__historical_end_block, start_date => $curve_get_proposal_vote_dtos__historical_start_date, end_date => $curve_get_proposal_vote_dtos__historical_end_date, pool_id => $curve_get_proposal_vote_dtos__historical_pool_id);

#
# curve_get_proposals__historical test
#
# uncomment below and update the test
#my $curve_get_proposals__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_proposals__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_proposals__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_proposals__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_proposals__historical_result = $api->curve_get_proposals__historical(start_block => $curve_get_proposals__historical_start_block, end_block => $curve_get_proposals__historical_end_block, start_date => $curve_get_proposals__historical_start_date, end_date => $curve_get_proposals__historical_end_date);

#
# curve_get_proposals_votes__historical test
#
# uncomment below and update the test
#my $curve_get_proposals_votes__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_proposals_votes__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_proposals_votes__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_proposals_votes__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_proposals_votes__historical_result = $api->curve_get_proposals_votes__historical(start_block => $curve_get_proposals_votes__historical_start_block, end_block => $curve_get_proposals_votes__historical_end_block, start_date => $curve_get_proposals_votes__historical_start_date, end_date => $curve_get_proposals_votes__historical_end_date);

#
# curve_get_remove_liquidity_event_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_remove_liquidity_event_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_event_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_event_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_event_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_event_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_event_dtos__historical_result = $api->curve_get_remove_liquidity_event_dtos__historical(start_block => $curve_get_remove_liquidity_event_dtos__historical_start_block, end_block => $curve_get_remove_liquidity_event_dtos__historical_end_block, start_date => $curve_get_remove_liquidity_event_dtos__historical_start_date, end_date => $curve_get_remove_liquidity_event_dtos__historical_end_date, pool_id => $curve_get_remove_liquidity_event_dtos__historical_pool_id);

#
# curve_get_remove_liquidity_events__historical test
#
# uncomment below and update the test
#my $curve_get_remove_liquidity_events__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_events__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_events__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_events__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_events__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_events__historical_result = $api->curve_get_remove_liquidity_events__historical(start_block => $curve_get_remove_liquidity_events__historical_start_block, end_block => $curve_get_remove_liquidity_events__historical_end_block, start_date => $curve_get_remove_liquidity_events__historical_start_date, end_date => $curve_get_remove_liquidity_events__historical_end_date, pool_id => $curve_get_remove_liquidity_events__historical_pool_id);

#
# curve_get_remove_liquidity_one_event_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_remove_liquidity_one_event_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_event_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_event_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_event_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_event_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_event_dtos__historical_result = $api->curve_get_remove_liquidity_one_event_dtos__historical(start_block => $curve_get_remove_liquidity_one_event_dtos__historical_start_block, end_block => $curve_get_remove_liquidity_one_event_dtos__historical_end_block, start_date => $curve_get_remove_liquidity_one_event_dtos__historical_start_date, end_date => $curve_get_remove_liquidity_one_event_dtos__historical_end_date, pool_id => $curve_get_remove_liquidity_one_event_dtos__historical_pool_id);

#
# curve_get_remove_liquidity_one_events__historical test
#
# uncomment below and update the test
#my $curve_get_remove_liquidity_one_events__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_events__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_events__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_events__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_events__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_remove_liquidity_one_events__historical_result = $api->curve_get_remove_liquidity_one_events__historical(start_block => $curve_get_remove_liquidity_one_events__historical_start_block, end_block => $curve_get_remove_liquidity_one_events__historical_end_block, start_date => $curve_get_remove_liquidity_one_events__historical_start_date, end_date => $curve_get_remove_liquidity_one_events__historical_end_date, pool_id => $curve_get_remove_liquidity_one_events__historical_pool_id);

#
# curve_get_system_state_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_system_state_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_system_state_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_system_state_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_system_state_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_system_state_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_system_state_dtos__historical_result = $api->curve_get_system_state_dtos__historical(start_block => $curve_get_system_state_dtos__historical_start_block, end_block => $curve_get_system_state_dtos__historical_end_block, start_date => $curve_get_system_state_dtos__historical_start_date, end_date => $curve_get_system_state_dtos__historical_end_date, pool_id => $curve_get_system_state_dtos__historical_pool_id);

#
# curve_get_system_states__historical test
#
# uncomment below and update the test
#my $curve_get_system_states__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_system_states__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_system_states__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_system_states__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_system_states__historical_result = $api->curve_get_system_states__historical(start_block => $curve_get_system_states__historical_start_block, end_block => $curve_get_system_states__historical_end_block, start_date => $curve_get_system_states__historical_start_date, end_date => $curve_get_system_states__historical_end_date);

#
# curve_get_token_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_token_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_token_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_token_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_token_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_token_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_token_dtos__historical_result = $api->curve_get_token_dtos__historical(start_block => $curve_get_token_dtos__historical_start_block, end_block => $curve_get_token_dtos__historical_end_block, start_date => $curve_get_token_dtos__historical_start_date, end_date => $curve_get_token_dtos__historical_end_date, pool_id => $curve_get_token_dtos__historical_pool_id);

#
# curve_get_tokens__historical test
#
# uncomment below and update the test
#my $curve_get_tokens__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_tokens__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_tokens__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_tokens__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_tokens__historical_token_id = undef; # replace NULL with a proper value
#my $curve_get_tokens__historical_result = $api->curve_get_tokens__historical(start_block => $curve_get_tokens__historical_start_block, end_block => $curve_get_tokens__historical_end_block, start_date => $curve_get_tokens__historical_start_date, end_date => $curve_get_tokens__historical_end_date, token_id => $curve_get_tokens__historical_token_id);

#
# curve_get_transfer_ownership_event_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_transfer_ownership_event_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_event_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_event_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_event_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_event_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_event_dtos__historical_result = $api->curve_get_transfer_ownership_event_dtos__historical(start_block => $curve_get_transfer_ownership_event_dtos__historical_start_block, end_block => $curve_get_transfer_ownership_event_dtos__historical_end_block, start_date => $curve_get_transfer_ownership_event_dtos__historical_start_date, end_date => $curve_get_transfer_ownership_event_dtos__historical_end_date, pool_id => $curve_get_transfer_ownership_event_dtos__historical_pool_id);

#
# curve_get_transfer_ownership_events__historical test
#
# uncomment below and update the test
#my $curve_get_transfer_ownership_events__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_events__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_events__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_events__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_events__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_transfer_ownership_events__historical_result = $api->curve_get_transfer_ownership_events__historical(start_block => $curve_get_transfer_ownership_events__historical_start_block, end_block => $curve_get_transfer_ownership_events__historical_end_block, start_date => $curve_get_transfer_ownership_events__historical_start_date, end_date => $curve_get_transfer_ownership_events__historical_end_date, pool_id => $curve_get_transfer_ownership_events__historical_pool_id);

#
# curve_get_underlying_coin_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_underlying_coin_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_underlying_coin_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_underlying_coin_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_underlying_coin_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_underlying_coin_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_underlying_coin_dtos__historical_result = $api->curve_get_underlying_coin_dtos__historical(start_block => $curve_get_underlying_coin_dtos__historical_start_block, end_block => $curve_get_underlying_coin_dtos__historical_end_block, start_date => $curve_get_underlying_coin_dtos__historical_start_date, end_date => $curve_get_underlying_coin_dtos__historical_end_date, pool_id => $curve_get_underlying_coin_dtos__historical_pool_id);

#
# curve_get_underlying_coins__historical test
#
# uncomment below and update the test
#my $curve_get_underlying_coins__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_underlying_coins__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_underlying_coins__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_underlying_coins__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_underlying_coins__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_underlying_coins__historical_result = $api->curve_get_underlying_coins__historical(start_block => $curve_get_underlying_coins__historical_start_block, end_block => $curve_get_underlying_coins__historical_end_block, start_date => $curve_get_underlying_coins__historical_start_date, end_date => $curve_get_underlying_coins__historical_end_date, pool_id => $curve_get_underlying_coins__historical_pool_id);

#
# curve_get_voting_app_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_voting_app_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_voting_app_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_voting_app_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_voting_app_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_voting_app_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_voting_app_dtos__historical_result = $api->curve_get_voting_app_dtos__historical(start_block => $curve_get_voting_app_dtos__historical_start_block, end_block => $curve_get_voting_app_dtos__historical_end_block, start_date => $curve_get_voting_app_dtos__historical_start_date, end_date => $curve_get_voting_app_dtos__historical_end_date, pool_id => $curve_get_voting_app_dtos__historical_pool_id);

#
# curve_get_voting_apps__historical test
#
# uncomment below and update the test
#my $curve_get_voting_apps__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_voting_apps__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_voting_apps__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_voting_apps__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_voting_apps__historical_result = $api->curve_get_voting_apps__historical(start_block => $curve_get_voting_apps__historical_start_block, end_block => $curve_get_voting_apps__historical_end_block, start_date => $curve_get_voting_apps__historical_start_date, end_date => $curve_get_voting_apps__historical_end_date);

#
# curve_get_weekly_volume_dtos__historical test
#
# uncomment below and update the test
#my $curve_get_weekly_volume_dtos__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_weekly_volume_dtos__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_weekly_volume_dtos__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_weekly_volume_dtos__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_weekly_volume_dtos__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_weekly_volume_dtos__historical_result = $api->curve_get_weekly_volume_dtos__historical(start_block => $curve_get_weekly_volume_dtos__historical_start_block, end_block => $curve_get_weekly_volume_dtos__historical_end_block, start_date => $curve_get_weekly_volume_dtos__historical_start_date, end_date => $curve_get_weekly_volume_dtos__historical_end_date, pool_id => $curve_get_weekly_volume_dtos__historical_pool_id);

#
# curve_get_weekly_volumes__historical test
#
# uncomment below and update the test
#my $curve_get_weekly_volumes__historical_start_block = undef; # replace NULL with a proper value
#my $curve_get_weekly_volumes__historical_end_block = undef; # replace NULL with a proper value
#my $curve_get_weekly_volumes__historical_start_date = undef; # replace NULL with a proper value
#my $curve_get_weekly_volumes__historical_end_date = undef; # replace NULL with a proper value
#my $curve_get_weekly_volumes__historical_pool_id = undef; # replace NULL with a proper value
#my $curve_get_weekly_volumes__historical_result = $api->curve_get_weekly_volumes__historical(start_block => $curve_get_weekly_volumes__historical_start_block, end_block => $curve_get_weekly_volumes__historical_end_block, start_date => $curve_get_weekly_volumes__historical_start_date, end_date => $curve_get_weekly_volumes__historical_end_date, pool_id => $curve_get_weekly_volumes__historical_pool_id);

