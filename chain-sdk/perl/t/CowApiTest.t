=begin comment

On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

The version of the OpenAPI document: v1
Contact: support@coinapi.io
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::CowApi');

my $api = WWW::OpenAPIClient::CowApi->new();
isa_ok($api, 'WWW::OpenAPIClient::CowApi');

#
# cow_get_orders__historical test
#
# uncomment below and update the test
#my $cow_get_orders__historical_start_block = undef; # replace NULL with a proper value
#my $cow_get_orders__historical_end_block = undef; # replace NULL with a proper value
#my $cow_get_orders__historical_start_date = undef; # replace NULL with a proper value
#my $cow_get_orders__historical_end_date = undef; # replace NULL with a proper value
#my $cow_get_orders__historical_id = undef; # replace NULL with a proper value
#my $cow_get_orders__historical_result = $api->cow_get_orders__historical(start_block => $cow_get_orders__historical_start_block, end_block => $cow_get_orders__historical_end_block, start_date => $cow_get_orders__historical_start_date, end_date => $cow_get_orders__historical_end_date, id => $cow_get_orders__historical_id);

#
# cow_get_settlements__historical test
#
# uncomment below and update the test
#my $cow_get_settlements__historical_start_block = undef; # replace NULL with a proper value
#my $cow_get_settlements__historical_end_block = undef; # replace NULL with a proper value
#my $cow_get_settlements__historical_start_date = undef; # replace NULL with a proper value
#my $cow_get_settlements__historical_end_date = undef; # replace NULL with a proper value
#my $cow_get_settlements__historical_id = undef; # replace NULL with a proper value
#my $cow_get_settlements__historical_result = $api->cow_get_settlements__historical(start_block => $cow_get_settlements__historical_start_block, end_block => $cow_get_settlements__historical_end_block, start_date => $cow_get_settlements__historical_start_date, end_date => $cow_get_settlements__historical_end_date, id => $cow_get_settlements__historical_id);

#
# cow_get_tokens__historical test
#
# uncomment below and update the test
#my $cow_get_tokens__historical_start_block = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_end_block = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_start_date = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_end_date = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_id = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_address = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_name = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_symbol = undef; # replace NULL with a proper value
#my $cow_get_tokens__historical_result = $api->cow_get_tokens__historical(start_block => $cow_get_tokens__historical_start_block, end_block => $cow_get_tokens__historical_end_block, start_date => $cow_get_tokens__historical_start_date, end_date => $cow_get_tokens__historical_end_date, id => $cow_get_tokens__historical_id, address => $cow_get_tokens__historical_address, name => $cow_get_tokens__historical_name, symbol => $cow_get_tokens__historical_symbol);

#
# cow_get_trades__historical test
#
# uncomment below and update the test
#my $cow_get_trades__historical_start_block = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_end_block = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_start_date = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_end_date = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_id = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_sell_token = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_buy_token = undef; # replace NULL with a proper value
#my $cow_get_trades__historical_result = $api->cow_get_trades__historical(start_block => $cow_get_trades__historical_start_block, end_block => $cow_get_trades__historical_end_block, start_date => $cow_get_trades__historical_start_date, end_date => $cow_get_trades__historical_end_date, id => $cow_get_trades__historical_id, sell_token => $cow_get_trades__historical_sell_token, buy_token => $cow_get_trades__historical_buy_token);

#
# cow_get_users__historical test
#
# uncomment below and update the test
#my $cow_get_users__historical_start_block = undef; # replace NULL with a proper value
#my $cow_get_users__historical_end_block = undef; # replace NULL with a proper value
#my $cow_get_users__historical_start_date = undef; # replace NULL with a proper value
#my $cow_get_users__historical_end_date = undef; # replace NULL with a proper value
#my $cow_get_users__historical_id = undef; # replace NULL with a proper value
#my $cow_get_users__historical_address = undef; # replace NULL with a proper value
#my $cow_get_users__historical_result = $api->cow_get_users__historical(start_block => $cow_get_users__historical_start_block, end_block => $cow_get_users__historical_end_block, start_date => $cow_get_users__historical_start_date, end_date => $cow_get_users__historical_end_date, id => $cow_get_users__historical_id, address => $cow_get_users__historical_address);

#
# cow_orders__current test
#
# uncomment below and update the test
#my $cow_orders__current_result = $api->cow_orders__current();

#
# cow_settlements__current test
#
# uncomment below and update the test
#my $cow_settlements__current_result = $api->cow_settlements__current();

#
# cow_tokens__current test
#
# uncomment below and update the test
#my $cow_tokens__current_result = $api->cow_tokens__current();

#
# cow_trades__current test
#
# uncomment below and update the test
#my $cow_trades__current_result = $api->cow_trades__current();

#
# cow_users__current test
#
# uncomment below and update the test
#my $cow_users__current_result = $api->cow_users__current();

