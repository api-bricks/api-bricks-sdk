{-
   OnChain API
    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( CurveExchangeDTO
    , DexTradeDTO
    , NumericsBigInteger
    , SushiswapPairDTO
    , SushiswapSwapDTO
    , SushiswapTokenDTO
    , TransactionsETradeAggressiveSide(..), transactionsETradeAggressiveSideVariants
    , UniswapV2PairV2DTO
    , UniswapV2SwapV2DTO
    , UniswapV2TokenV2DTO
    , UniswapV3BundleV3DTO
    , UniswapV3BurnV3DTO
    , UniswapV3FactoryV3DTO
    , UniswapV3MintV3DTO
    , UniswapV3PoolDayDataV3DTO
    , UniswapV3PoolHourDataV3DTO
    , UniswapV3PoolV3DTO
    , UniswapV3PositionSnapshotV3DTO
    , UniswapV3PositionV3DTO
    , UniswapV3SwapV3DTO
    , UniswapV3TickDayDataV3DTO
    , UniswapV3TickV3DTO
    , UniswapV3TokenHourDataV3DTO
    , UniswapV3TokenV3DTO
    , UniswapV3TokenV3DayDataDTO
    , UniswapV3UniswapDayDataV3DTO
    , encodeCurveExchangeDTO
    , encodeDexTradeDTO
    , encodeNumericsBigInteger
    , encodeSushiswapPairDTO
    , encodeSushiswapSwapDTO
    , encodeSushiswapTokenDTO
    , encodeTransactionsETradeAggressiveSide
    , encodeUniswapV2PairV2DTO
    , encodeUniswapV2SwapV2DTO
    , encodeUniswapV2TokenV2DTO
    , encodeUniswapV3BundleV3DTO
    , encodeUniswapV3BurnV3DTO
    , encodeUniswapV3FactoryV3DTO
    , encodeUniswapV3MintV3DTO
    , encodeUniswapV3PoolDayDataV3DTO
    , encodeUniswapV3PoolHourDataV3DTO
    , encodeUniswapV3PoolV3DTO
    , encodeUniswapV3PositionSnapshotV3DTO
    , encodeUniswapV3PositionV3DTO
    , encodeUniswapV3SwapV3DTO
    , encodeUniswapV3TickDayDataV3DTO
    , encodeUniswapV3TickV3DTO
    , encodeUniswapV3TokenHourDataV3DTO
    , encodeUniswapV3TokenV3DTO
    , encodeUniswapV3TokenV3DayDataDTO
    , encodeUniswapV3UniswapDayDataV3DTO
    , curveExchangeDTODecoder
    , dexTradeDTODecoder
    , numericsBigIntegerDecoder
    , sushiswapPairDTODecoder
    , sushiswapSwapDTODecoder
    , sushiswapTokenDTODecoder
    , transactionsETradeAggressiveSideDecoder
    , uniswapV2PairV2DTODecoder
    , uniswapV2SwapV2DTODecoder
    , uniswapV2TokenV2DTODecoder
    , uniswapV3BundleV3DTODecoder
    , uniswapV3BurnV3DTODecoder
    , uniswapV3FactoryV3DTODecoder
    , uniswapV3MintV3DTODecoder
    , uniswapV3PoolDayDataV3DTODecoder
    , uniswapV3PoolHourDataV3DTODecoder
    , uniswapV3PoolV3DTODecoder
    , uniswapV3PositionSnapshotV3DTODecoder
    , uniswapV3PositionV3DTODecoder
    , uniswapV3SwapV3DTODecoder
    , uniswapV3TickDayDataV3DTODecoder
    , uniswapV3TickV3DTODecoder
    , uniswapV3TokenHourDataV3DTODecoder
    , uniswapV3TokenV3DTODecoder
    , uniswapV3TokenV3DayDataDTODecoder
    , uniswapV3UniswapDayDataV3DTODecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias CurveExchangeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , buyer : Maybe String
    , receiver : Maybe String
    , tokenSold : Maybe String
    , tokenBought : Maybe String
    , amountSold : Maybe String
    , amountBought : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


{-| Trade for a single user, as part of a ring trade. It's part of the solution submitted by a solver for a given batch.
-}
type alias DexTradeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , order : Maybe String
    , owner : Maybe String
    , sellVolume : Maybe String
    , buyVolume : Maybe String
    , tradeBatchId : Maybe String
    , tradeEpoch : Maybe String
    , buyToken : Maybe String
    , sellToken : Maybe String
    , createEpoch : Maybe String
    , revertEpoch : Maybe String
    , txHash : Maybe String
    , txLogIndex : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    }


type alias NumericsBigInteger =
    { isPowerOfTwo : Maybe Bool
    , isZero : Maybe Bool
    , isOne : Maybe Bool
    , isEven : Maybe Bool
    , sign : Maybe Int
    }


{-| Information about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.
-}
type alias SushiswapPairDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , name : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidityProviderCount : Maybe String
    , timestamp : Maybe String
    , block : Maybe String
    , vid : Maybe Int
    , evaluatedAsk : Maybe Float
    }


{-| Swap are created for each token swap within a pair.
-}
type alias SushiswapSwapDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , sender : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias SushiswapTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe String
    , totalSupply : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidity : Maybe String
    , derivedEth : Maybe String
    , whitelistPairs : Maybe (List (String))
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


type TransactionsETradeAggressiveSide
    = TransactionsETradeAggressiveSideBuy
    | TransactionsETradeAggressiveSideSell
    | TransactionsETradeAggressiveSideEstimatedBuy
    | TransactionsETradeAggressiveSideEstimatedSell
    | TransactionsETradeAggressiveSideUnknown


transactionsETradeAggressiveSideVariants : List TransactionsETradeAggressiveSide
transactionsETradeAggressiveSideVariants =
    [ TransactionsETradeAggressiveSideBuy
    , TransactionsETradeAggressiveSideSell
    , TransactionsETradeAggressiveSideEstimatedBuy
    , TransactionsETradeAggressiveSideEstimatedSell
    , TransactionsETradeAggressiveSideUnknown
    ]


{-| Information about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.
-}
type alias UniswapV2PairV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


{-| Swap are created for each token swap within a pair.
-}
type alias UniswapV2SwapV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pair : Maybe String
    , sender : Maybe String
    , from : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe NumericsBigInteger
    , amountUsd : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias UniswapV2TokenV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe NumericsBigInteger
    , tradeVolume : Maybe String
    , tradeVolumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , totalLiquidity : Maybe String
    , derivedEth : Maybe String
    , tokenSymbol : Maybe String
    }


{-| The Bundle is used as a global store of derived ETH price in USD. This provides a strong estimate for the USD price of ETH.
-}
type alias UniswapV3BundleV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , ethPriceUsd : Maybe String
    , vid : Maybe Int
    }


{-| Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned, who received tokens, and more. This entity can be used to track liquidity removals on pairs.
-}
type alias UniswapV3BurnV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , timestamp : Maybe String
    , owner : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


{-| The Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more.
-}
type alias UniswapV3FactoryV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , poolCount : Maybe String
    , txCount : Maybe String
    , totalVolumeUsd : Maybe String
    , totalVolumeEth : Maybe String
    , totalFeesUsd : Maybe String
    , totalFeesEth : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , totalValueLockedEthUntracked : Maybe String
    , owner : Maybe String
    , vid : Maybe Int
    }


{-| Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, and more.
-}
type alias UniswapV3MintV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , owner : Maybe String
    , sender : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


{-| Data accumulated and condensed into day stats for each pool.
-}
type alias UniswapV3PoolDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Hourly stats tracker for pool.
-}
type alias UniswapV3PoolHourDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.
-}
type alias UniswapV3PoolV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , createdAtTimestamp : Maybe Posix
    , token0 : Maybe String
    , token1 : Maybe String
    , feeTier : Maybe NumericsBigInteger
    , liquidity : Maybe NumericsBigInteger
    , sqrtPrice : Maybe NumericsBigInteger
    , feeGrowthGlobal0x128 : Maybe NumericsBigInteger
    , feeGrowthGlobal1x128 : Maybe NumericsBigInteger
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe NumericsBigInteger
    , observationIndex : Maybe NumericsBigInteger
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , totalValueLockedToken0 : Maybe String
    , totalValueLockedToken1 : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


type alias UniswapV3PositionSnapshotV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , position : Maybe String
    , timestamp : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


{-| Positions created through NonfungiblePositionManager. Positions are represented as NFTs (ERC-721 tokens) as opposed to the fungible ERC-20 tokens on Uniswap V1 and V2.
-}
type alias UniswapV3PositionV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


{-| Swap are created for each token swap within a pair.
-}
type alias UniswapV3SwapV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , sender : Maybe String
    , recipient : Maybe String
    , origin : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , sqrtPriceX96 : Maybe NumericsBigInteger
    , tick : Maybe NumericsBigInteger
    , logIndex : Maybe NumericsBigInteger
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


{-| Data accumulated and condensed into day stats for each exchange. Entity gets saved only if there is a change during the day
-}
type alias UniswapV3TickDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , tick : Maybe String
    , liquidityGross : Maybe String
    , liquidityNet : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , feeGrowthOutside0x128 : Maybe String
    , feeGrowthOutside1x128 : Maybe String
    , vid : Maybe Int
    }


{-| Ticks are the boundaries between discrete areas in price space.
-}
type alias UniswapV3TickV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , poolAddress : Maybe String
    , tickIdx : Maybe NumericsBigInteger
    , pool : Maybe String
    , liquidityGross : Maybe NumericsBigInteger
    , liquidityNet : Maybe NumericsBigInteger
    , price0 : Maybe String
    , price1 : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe NumericsBigInteger
    , feeGrowthOutside0x128 : Maybe NumericsBigInteger
    , feeGrowthOutside1x128 : Maybe NumericsBigInteger
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias UniswapV3TokenHourDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias UniswapV3TokenV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe NumericsBigInteger
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , poolCount : Maybe NumericsBigInteger
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , derivedEth : Maybe String
    , whitelistPools : Maybe (List (String))
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias UniswapV3TokenV3DayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    }


{-| Data accumulated and condensed into day stats for all of Uniswap.
-}
type alias UniswapV3UniswapDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , volumeUsdUntracked : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , tvlUsd : Maybe String
    }


-- ENCODER


encodeCurveExchangeDTO : CurveExchangeDTO -> Json.Encode.Value
encodeCurveExchangeDTO =
    encodeObject << encodeCurveExchangeDTOPairs


encodeCurveExchangeDTOWithTag : ( String, String ) -> CurveExchangeDTO -> Json.Encode.Value
encodeCurveExchangeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveExchangeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveExchangeDTOPairs : CurveExchangeDTO -> List EncodedField
encodeCurveExchangeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "buyer" Json.Encode.string model.buyer
            , maybeEncodeNullable "receiver" Json.Encode.string model.receiver
            , maybeEncodeNullable "token_sold" Json.Encode.string model.tokenSold
            , maybeEncodeNullable "token_bought" Json.Encode.string model.tokenBought
            , maybeEncodeNullable "amount_sold" Json.Encode.string model.amountSold
            , maybeEncodeNullable "amount_bought" Json.Encode.string model.amountBought
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeDexTradeDTO : DexTradeDTO -> Json.Encode.Value
encodeDexTradeDTO =
    encodeObject << encodeDexTradeDTOPairs


encodeDexTradeDTOWithTag : ( String, String ) -> DexTradeDTO -> Json.Encode.Value
encodeDexTradeDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexTradeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexTradeDTOPairs : DexTradeDTO -> List EncodedField
encodeDexTradeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "order" Json.Encode.string model.order
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "sell_volume" Json.Encode.string model.sellVolume
            , maybeEncodeNullable "buy_volume" Json.Encode.string model.buyVolume
            , maybeEncodeNullable "trade_batch_id" Json.Encode.string model.tradeBatchId
            , maybeEncodeNullable "trade_epoch" Json.Encode.string model.tradeEpoch
            , maybeEncodeNullable "buy_token" Json.Encode.string model.buyToken
            , maybeEncodeNullable "sell_token" Json.Encode.string model.sellToken
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "revert_epoch" Json.Encode.string model.revertEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "tx_log_index" Json.Encode.string model.txLogIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeNumericsBigInteger : NumericsBigInteger -> Json.Encode.Value
encodeNumericsBigInteger =
    encodeObject << encodeNumericsBigIntegerPairs


encodeNumericsBigIntegerWithTag : ( String, String ) -> NumericsBigInteger -> Json.Encode.Value
encodeNumericsBigIntegerWithTag (tagField, tag) model =
    encodeObject (encodeNumericsBigIntegerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeNumericsBigIntegerPairs : NumericsBigInteger -> List EncodedField
encodeNumericsBigIntegerPairs model =
    let
        pairs =
            [ maybeEncode "is_power_of_two" Json.Encode.bool model.isPowerOfTwo
            , maybeEncode "is_zero" Json.Encode.bool model.isZero
            , maybeEncode "is_one" Json.Encode.bool model.isOne
            , maybeEncode "is_even" Json.Encode.bool model.isEven
            , maybeEncode "sign" Json.Encode.int model.sign
            ]
    in
    pairs


encodeSushiswapPairDTO : SushiswapPairDTO -> Json.Encode.Value
encodeSushiswapPairDTO =
    encodeObject << encodeSushiswapPairDTOPairs


encodeSushiswapPairDTOWithTag : ( String, String ) -> SushiswapPairDTO -> Json.Encode.Value
encodeSushiswapPairDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapPairDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapPairDTOPairs : SushiswapPairDTO -> List EncodedField
encodeSushiswapPairDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeSushiswapSwapDTO : SushiswapSwapDTO -> Json.Encode.Value
encodeSushiswapSwapDTO =
    encodeObject << encodeSushiswapSwapDTOPairs


encodeSushiswapSwapDTOWithTag : ( String, String ) -> SushiswapSwapDTO -> Json.Encode.Value
encodeSushiswapSwapDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapSwapDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapSwapDTOPairs : SushiswapSwapDTO -> List EncodedField
encodeSushiswapSwapDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeSushiswapTokenDTO : SushiswapTokenDTO -> Json.Encode.Value
encodeSushiswapTokenDTO =
    encodeObject << encodeSushiswapTokenDTOPairs


encodeSushiswapTokenDTOWithTag : ( String, String ) -> SushiswapTokenDTO -> Json.Encode.Value
encodeSushiswapTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapTokenDTOPairs : SushiswapTokenDTO -> List EncodedField
encodeSushiswapTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pairs" (Json.Encode.list Json.Encode.string) model.whitelistPairs
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


stringFromTransactionsETradeAggressiveSide : TransactionsETradeAggressiveSide -> String
stringFromTransactionsETradeAggressiveSide model =
    case model of
        TransactionsETradeAggressiveSideBuy ->
            "Buy"

        TransactionsETradeAggressiveSideSell ->
            "Sell"

        TransactionsETradeAggressiveSideEstimatedBuy ->
            "EstimatedBuy"

        TransactionsETradeAggressiveSideEstimatedSell ->
            "EstimatedSell"

        TransactionsETradeAggressiveSideUnknown ->
            "Unknown"


encodeTransactionsETradeAggressiveSide : TransactionsETradeAggressiveSide -> Json.Encode.Value
encodeTransactionsETradeAggressiveSide =
    Json.Encode.string << stringFromTransactionsETradeAggressiveSide


encodeUniswapV2PairV2DTO : UniswapV2PairV2DTO -> Json.Encode.Value
encodeUniswapV2PairV2DTO =
    encodeObject << encodeUniswapV2PairV2DTOPairs


encodeUniswapV2PairV2DTOWithTag : ( String, String ) -> UniswapV2PairV2DTO -> Json.Encode.Value
encodeUniswapV2PairV2DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2PairV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2PairV2DTOPairs : UniswapV2PairV2DTO -> List EncodedField
encodeUniswapV2PairV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeUniswapV2SwapV2DTO : UniswapV2SwapV2DTO -> Json.Encode.Value
encodeUniswapV2SwapV2DTO =
    encodeObject << encodeUniswapV2SwapV2DTOPairs


encodeUniswapV2SwapV2DTOWithTag : ( String, String ) -> UniswapV2SwapV2DTO -> Json.Encode.Value
encodeUniswapV2SwapV2DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2SwapV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2SwapV2DTOPairs : UniswapV2SwapV2DTO -> List EncodedField
encodeUniswapV2SwapV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "from" Json.Encode.string model.from
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncode "log_index" encodeNumericsBigInteger model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeUniswapV2TokenV2DTO : UniswapV2TokenV2DTO -> Json.Encode.Value
encodeUniswapV2TokenV2DTO =
    encodeObject << encodeUniswapV2TokenV2DTOPairs


encodeUniswapV2TokenV2DTOWithTag : ( String, String ) -> UniswapV2TokenV2DTO -> Json.Encode.Value
encodeUniswapV2TokenV2DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2TokenV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2TokenV2DTOPairs : UniswapV2TokenV2DTO -> List EncodedField
encodeUniswapV2TokenV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeNumericsBigInteger model.totalSupply
            , maybeEncodeNullable "trade_volume" Json.Encode.string model.tradeVolume
            , maybeEncodeNullable "trade_volume_usd" Json.Encode.string model.tradeVolumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "total_liquidity" Json.Encode.string model.totalLiquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeUniswapV3BundleV3DTO : UniswapV3BundleV3DTO -> Json.Encode.Value
encodeUniswapV3BundleV3DTO =
    encodeObject << encodeUniswapV3BundleV3DTOPairs


encodeUniswapV3BundleV3DTOWithTag : ( String, String ) -> UniswapV3BundleV3DTO -> Json.Encode.Value
encodeUniswapV3BundleV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3BundleV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3BundleV3DTOPairs : UniswapV3BundleV3DTO -> List EncodedField
encodeUniswapV3BundleV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "eth_price_usd" Json.Encode.string model.ethPriceUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3BurnV3DTO : UniswapV3BurnV3DTO -> Json.Encode.Value
encodeUniswapV3BurnV3DTO =
    encodeObject << encodeUniswapV3BurnV3DTOPairs


encodeUniswapV3BurnV3DTOWithTag : ( String, String ) -> UniswapV3BurnV3DTO -> Json.Encode.Value
encodeUniswapV3BurnV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3BurnV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3BurnV3DTOPairs : UniswapV3BurnV3DTO -> List EncodedField
encodeUniswapV3BurnV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3FactoryV3DTO : UniswapV3FactoryV3DTO -> Json.Encode.Value
encodeUniswapV3FactoryV3DTO =
    encodeObject << encodeUniswapV3FactoryV3DTOPairs


encodeUniswapV3FactoryV3DTOWithTag : ( String, String ) -> UniswapV3FactoryV3DTO -> Json.Encode.Value
encodeUniswapV3FactoryV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3FactoryV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3FactoryV3DTOPairs : UniswapV3FactoryV3DTO -> List EncodedField
encodeUniswapV3FactoryV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_count" Json.Encode.string model.poolCount
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "total_volume_usd" Json.Encode.string model.totalVolumeUsd
            , maybeEncodeNullable "total_volume_eth" Json.Encode.string model.totalVolumeEth
            , maybeEncodeNullable "total_fees_usd" Json.Encode.string model.totalFeesUsd
            , maybeEncodeNullable "total_fees_eth" Json.Encode.string model.totalFeesEth
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "total_value_locked_eth_untracked" Json.Encode.string model.totalValueLockedEthUntracked
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3MintV3DTO : UniswapV3MintV3DTO -> Json.Encode.Value
encodeUniswapV3MintV3DTO =
    encodeObject << encodeUniswapV3MintV3DTOPairs


encodeUniswapV3MintV3DTOWithTag : ( String, String ) -> UniswapV3MintV3DTO -> Json.Encode.Value
encodeUniswapV3MintV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3MintV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3MintV3DTOPairs : UniswapV3MintV3DTO -> List EncodedField
encodeUniswapV3MintV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PoolDayDataV3DTO : UniswapV3PoolDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3PoolDayDataV3DTO =
    encodeObject << encodeUniswapV3PoolDayDataV3DTOPairs


encodeUniswapV3PoolDayDataV3DTOWithTag : ( String, String ) -> UniswapV3PoolDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3PoolDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolDayDataV3DTOPairs : UniswapV3PoolDayDataV3DTO -> List EncodedField
encodeUniswapV3PoolDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PoolHourDataV3DTO : UniswapV3PoolHourDataV3DTO -> Json.Encode.Value
encodeUniswapV3PoolHourDataV3DTO =
    encodeObject << encodeUniswapV3PoolHourDataV3DTOPairs


encodeUniswapV3PoolHourDataV3DTOWithTag : ( String, String ) -> UniswapV3PoolHourDataV3DTO -> Json.Encode.Value
encodeUniswapV3PoolHourDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolHourDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolHourDataV3DTOPairs : UniswapV3PoolHourDataV3DTO -> List EncodedField
encodeUniswapV3PoolHourDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PoolV3DTO : UniswapV3PoolV3DTO -> Json.Encode.Value
encodeUniswapV3PoolV3DTO =
    encodeObject << encodeUniswapV3PoolV3DTOPairs


encodeUniswapV3PoolV3DTOWithTag : ( String, String ) -> UniswapV3PoolV3DTO -> Json.Encode.Value
encodeUniswapV3PoolV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolV3DTOPairs : UniswapV3PoolV3DTO -> List EncodedField
encodeUniswapV3PoolV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncode "fee_tier" encodeNumericsBigInteger model.feeTier
            , maybeEncode "liquidity" encodeNumericsBigInteger model.liquidity
            , maybeEncode "sqrt_price" encodeNumericsBigInteger model.sqrtPrice
            , maybeEncode "fee_growth_global_0x128" encodeNumericsBigInteger model.feeGrowthGlobal0x128
            , maybeEncode "fee_growth_global_1x128" encodeNumericsBigInteger model.feeGrowthGlobal1x128
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncode "tick" encodeNumericsBigInteger model.tick
            , maybeEncode "observation_index" encodeNumericsBigInteger model.observationIndex
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncodeNullable "total_value_locked_token_0" Json.Encode.string model.totalValueLockedToken0
            , maybeEncodeNullable "total_value_locked_token_1" Json.Encode.string model.totalValueLockedToken1
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeUniswapV3PositionSnapshotV3DTO : UniswapV3PositionSnapshotV3DTO -> Json.Encode.Value
encodeUniswapV3PositionSnapshotV3DTO =
    encodeObject << encodeUniswapV3PositionSnapshotV3DTOPairs


encodeUniswapV3PositionSnapshotV3DTOWithTag : ( String, String ) -> UniswapV3PositionSnapshotV3DTO -> Json.Encode.Value
encodeUniswapV3PositionSnapshotV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PositionSnapshotV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PositionSnapshotV3DTOPairs : UniswapV3PositionSnapshotV3DTO -> List EncodedField
encodeUniswapV3PositionSnapshotV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "position" Json.Encode.string model.position
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PositionV3DTO : UniswapV3PositionV3DTO -> Json.Encode.Value
encodeUniswapV3PositionV3DTO =
    encodeObject << encodeUniswapV3PositionV3DTOPairs


encodeUniswapV3PositionV3DTOWithTag : ( String, String ) -> UniswapV3PositionV3DTO -> Json.Encode.Value
encodeUniswapV3PositionV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PositionV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PositionV3DTOPairs : UniswapV3PositionV3DTO -> List EncodedField
encodeUniswapV3PositionV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3SwapV3DTO : UniswapV3SwapV3DTO -> Json.Encode.Value
encodeUniswapV3SwapV3DTO =
    encodeObject << encodeUniswapV3SwapV3DTOPairs


encodeUniswapV3SwapV3DTOWithTag : ( String, String ) -> UniswapV3SwapV3DTO -> Json.Encode.Value
encodeUniswapV3SwapV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3SwapV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3SwapV3DTOPairs : UniswapV3SwapV3DTO -> List EncodedField
encodeUniswapV3SwapV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "recipient" Json.Encode.string model.recipient
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "sqrt_price_x96" encodeNumericsBigInteger model.sqrtPriceX96
            , maybeEncode "tick" encodeNumericsBigInteger model.tick
            , maybeEncode "log_index" encodeNumericsBigInteger model.logIndex
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeUniswapV3TickDayDataV3DTO : UniswapV3TickDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3TickDayDataV3DTO =
    encodeObject << encodeUniswapV3TickDayDataV3DTOPairs


encodeUniswapV3TickDayDataV3DTOWithTag : ( String, String ) -> UniswapV3TickDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3TickDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TickDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TickDayDataV3DTOPairs : UniswapV3TickDayDataV3DTO -> List EncodedField
encodeUniswapV3TickDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "liquidity_gross" Json.Encode.string model.liquidityGross
            , maybeEncodeNullable "liquidity_net" Json.Encode.string model.liquidityNet
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "fee_growth_outside_0x128" Json.Encode.string model.feeGrowthOutside0x128
            , maybeEncodeNullable "fee_growth_outside_1x128" Json.Encode.string model.feeGrowthOutside1x128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3TickV3DTO : UniswapV3TickV3DTO -> Json.Encode.Value
encodeUniswapV3TickV3DTO =
    encodeObject << encodeUniswapV3TickV3DTOPairs


encodeUniswapV3TickV3DTOWithTag : ( String, String ) -> UniswapV3TickV3DTO -> Json.Encode.Value
encodeUniswapV3TickV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TickV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TickV3DTOPairs : UniswapV3TickV3DTO -> List EncodedField
encodeUniswapV3TickV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_address" Json.Encode.string model.poolAddress
            , maybeEncode "tick_idx" encodeNumericsBigInteger model.tickIdx
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncode "liquidity_gross" encodeNumericsBigInteger model.liquidityGross
            , maybeEncode "liquidity_net" encodeNumericsBigInteger model.liquidityNet
            , maybeEncodeNullable "price_0" Json.Encode.string model.price0
            , maybeEncodeNullable "price_1" Json.Encode.string model.price1
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncode "liquidity_provider_count" encodeNumericsBigInteger model.liquidityProviderCount
            , maybeEncode "fee_growth_outside_0x128" encodeNumericsBigInteger model.feeGrowthOutside0x128
            , maybeEncode "fee_growth_outside_1x128" encodeNumericsBigInteger model.feeGrowthOutside1x128
            ]
    in
    pairs


encodeUniswapV3TokenHourDataV3DTO : UniswapV3TokenHourDataV3DTO -> Json.Encode.Value
encodeUniswapV3TokenHourDataV3DTO =
    encodeObject << encodeUniswapV3TokenHourDataV3DTOPairs


encodeUniswapV3TokenHourDataV3DTOWithTag : ( String, String ) -> UniswapV3TokenHourDataV3DTO -> Json.Encode.Value
encodeUniswapV3TokenHourDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenHourDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenHourDataV3DTOPairs : UniswapV3TokenHourDataV3DTO -> List EncodedField
encodeUniswapV3TokenHourDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3TokenV3DTO : UniswapV3TokenV3DTO -> Json.Encode.Value
encodeUniswapV3TokenV3DTO =
    encodeObject << encodeUniswapV3TokenV3DTOPairs


encodeUniswapV3TokenV3DTOWithTag : ( String, String ) -> UniswapV3TokenV3DTO -> Json.Encode.Value
encodeUniswapV3TokenV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenV3DTOPairs : UniswapV3TokenV3DTO -> List EncodedField
encodeUniswapV3TokenV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeNumericsBigInteger model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncode "pool_count" encodeNumericsBigInteger model.poolCount
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pools" (Json.Encode.list Json.Encode.string) model.whitelistPools
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeUniswapV3TokenV3DayDataDTO : UniswapV3TokenV3DayDataDTO -> Json.Encode.Value
encodeUniswapV3TokenV3DayDataDTO =
    encodeObject << encodeUniswapV3TokenV3DayDataDTOPairs


encodeUniswapV3TokenV3DayDataDTOWithTag : ( String, String ) -> UniswapV3TokenV3DayDataDTO -> Json.Encode.Value
encodeUniswapV3TokenV3DayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenV3DayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenV3DayDataDTOPairs : UniswapV3TokenV3DayDataDTO -> List EncodedField
encodeUniswapV3TokenV3DayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            ]
    in
    pairs


encodeUniswapV3UniswapDayDataV3DTO : UniswapV3UniswapDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3UniswapDayDataV3DTO =
    encodeObject << encodeUniswapV3UniswapDayDataV3DTOPairs


encodeUniswapV3UniswapDayDataV3DTOWithTag : ( String, String ) -> UniswapV3UniswapDayDataV3DTO -> Json.Encode.Value
encodeUniswapV3UniswapDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3UniswapDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3UniswapDayDataV3DTOPairs : UniswapV3UniswapDayDataV3DTO -> List EncodedField
encodeUniswapV3UniswapDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "volume_usd_untracked" Json.Encode.string model.volumeUsdUntracked
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            ]
    in
    pairs


-- DECODER


curveExchangeDTODecoder : Json.Decode.Decoder CurveExchangeDTO
curveExchangeDTODecoder =
    Json.Decode.succeed CurveExchangeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "buyer" Json.Decode.string Nothing
        |> maybeDecodeNullable "receiver" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_sold" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_bought" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_sold" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_bought" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


dexTradeDTODecoder : Json.Decode.Decoder DexTradeDTO
dexTradeDTODecoder =
    Json.Decode.succeed DexTradeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "order" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "revert_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing


numericsBigIntegerDecoder : Json.Decode.Decoder NumericsBigInteger
numericsBigIntegerDecoder =
    Json.Decode.succeed NumericsBigInteger
        |> maybeDecode "is_power_of_two" Json.Decode.bool Nothing
        |> maybeDecode "is_zero" Json.Decode.bool Nothing
        |> maybeDecode "is_one" Json.Decode.bool Nothing
        |> maybeDecode "is_even" Json.Decode.bool Nothing
        |> maybeDecode "sign" Json.Decode.int Nothing


sushiswapPairDTODecoder : Json.Decode.Decoder SushiswapPairDTO
sushiswapPairDTODecoder =
    Json.Decode.succeed SushiswapPairDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


sushiswapSwapDTODecoder : Json.Decode.Decoder SushiswapSwapDTO
sushiswapSwapDTODecoder =
    Json.Decode.succeed SushiswapSwapDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing


sushiswapTokenDTODecoder : Json.Decode.Decoder SushiswapTokenDTO
sushiswapTokenDTODecoder =
    Json.Decode.succeed SushiswapTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pairs" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


transactionsETradeAggressiveSideDecoder : Json.Decode.Decoder TransactionsETradeAggressiveSide
transactionsETradeAggressiveSideDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "Buy" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideBuy

                    "Sell" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideSell

                    "EstimatedBuy" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideEstimatedBuy

                    "EstimatedSell" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideEstimatedSell

                    "Unknown" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideUnknown

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


uniswapV2PairV2DTODecoder : Json.Decode.Decoder UniswapV2PairV2DTO
uniswapV2PairV2DTODecoder =
    Json.Decode.succeed UniswapV2PairV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


uniswapV2SwapV2DTODecoder : Json.Decode.Decoder UniswapV2SwapV2DTO
uniswapV2SwapV2DTODecoder =
    Json.Decode.succeed UniswapV2SwapV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "from" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecode "log_index" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


uniswapV2TokenV2DTODecoder : Json.Decode.Decoder UniswapV2TokenV2DTO
uniswapV2TokenV2DTODecoder =
    Json.Decode.succeed UniswapV2TokenV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "trade_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


uniswapV3BundleV3DTODecoder : Json.Decode.Decoder UniswapV3BundleV3DTO
uniswapV3BundleV3DTODecoder =
    Json.Decode.succeed UniswapV3BundleV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "eth_price_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3BurnV3DTODecoder : Json.Decode.Decoder UniswapV3BurnV3DTO
uniswapV3BurnV3DTODecoder =
    Json.Decode.succeed UniswapV3BurnV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3FactoryV3DTODecoder : Json.Decode.Decoder UniswapV3FactoryV3DTO
uniswapV3FactoryV3DTODecoder =
    Json.Decode.succeed UniswapV3FactoryV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3MintV3DTODecoder : Json.Decode.Decoder UniswapV3MintV3DTO
uniswapV3MintV3DTODecoder =
    Json.Decode.succeed UniswapV3MintV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PoolDayDataV3DTODecoder : Json.Decode.Decoder UniswapV3PoolDayDataV3DTO
uniswapV3PoolDayDataV3DTODecoder =
    Json.Decode.succeed UniswapV3PoolDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PoolHourDataV3DTODecoder : Json.Decode.Decoder UniswapV3PoolHourDataV3DTO
uniswapV3PoolHourDataV3DTODecoder =
    Json.Decode.succeed UniswapV3PoolHourDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PoolV3DTODecoder : Json.Decode.Decoder UniswapV3PoolV3DTO
uniswapV3PoolV3DTODecoder =
    Json.Decode.succeed UniswapV3PoolV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecode "fee_tier" numericsBigIntegerDecoder Nothing
        |> maybeDecode "liquidity" numericsBigIntegerDecoder Nothing
        |> maybeDecode "sqrt_price" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_0x128" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_1x128" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecode "tick" numericsBigIntegerDecoder Nothing
        |> maybeDecode "observation_index" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


uniswapV3PositionSnapshotV3DTODecoder : Json.Decode.Decoder UniswapV3PositionSnapshotV3DTO
uniswapV3PositionSnapshotV3DTODecoder =
    Json.Decode.succeed UniswapV3PositionSnapshotV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "position" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PositionV3DTODecoder : Json.Decode.Decoder UniswapV3PositionV3DTO
uniswapV3PositionV3DTODecoder =
    Json.Decode.succeed UniswapV3PositionV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3SwapV3DTODecoder : Json.Decode.Decoder UniswapV3SwapV3DTO
uniswapV3SwapV3DTODecoder =
    Json.Decode.succeed UniswapV3SwapV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "recipient" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "sqrt_price_x96" numericsBigIntegerDecoder Nothing
        |> maybeDecode "tick" numericsBigIntegerDecoder Nothing
        |> maybeDecode "log_index" numericsBigIntegerDecoder Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


uniswapV3TickDayDataV3DTODecoder : Json.Decode.Decoder UniswapV3TickDayDataV3DTO
uniswapV3TickDayDataV3DTODecoder =
    Json.Decode.succeed UniswapV3TickDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_gross" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_net" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_1x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3TickV3DTODecoder : Json.Decode.Decoder UniswapV3TickV3DTO
uniswapV3TickV3DTODecoder =
    Json.Decode.succeed UniswapV3TickV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_address" Json.Decode.string Nothing
        |> maybeDecode "tick_idx" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecode "liquidity_gross" numericsBigIntegerDecoder Nothing
        |> maybeDecode "liquidity_net" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "price_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "liquidity_provider_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_0x128" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_1x128" numericsBigIntegerDecoder Nothing


uniswapV3TokenHourDataV3DTODecoder : Json.Decode.Decoder UniswapV3TokenHourDataV3DTO
uniswapV3TokenHourDataV3DTODecoder =
    Json.Decode.succeed UniswapV3TokenHourDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3TokenV3DTODecoder : Json.Decode.Decoder UniswapV3TokenV3DTO
uniswapV3TokenV3DTODecoder =
    Json.Decode.succeed UniswapV3TokenV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "pool_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pools" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


uniswapV3TokenV3DayDataDTODecoder : Json.Decode.Decoder UniswapV3TokenV3DayDataDTO
uniswapV3TokenV3DayDataDTODecoder =
    Json.Decode.succeed UniswapV3TokenV3DayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing


uniswapV3UniswapDayDataV3DTODecoder : Json.Decode.Decoder UniswapV3UniswapDayDataV3DTO
uniswapV3UniswapDayDataV3DTODecoder =
    Json.Decode.succeed UniswapV3UniswapDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f