{-
   OnChain API
    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( BigInteger
    , BundleV3DTO
    , BurnV3DTO
    , ETradeAggressiveSide(..), eTradeAggressiveSideVariants
    , FactoryV3DTO
    , MintV3DTO
    , PairDTO
    , PairV2DTO
    , PoolDayDataV3DTO
    , PoolHourDataV3DTO
    , PoolV3DTO
    , PositionSnapshotV3DTO
    , PositionV3DTO
    , SwapDTO
    , SwapV2DTO
    , SwapV3DTO
    , TickDayDataV3DTO
    , TickV3DTO
    , TokenDTO
    , TokenHourDataV3DTO
    , TokenV2DTO
    , TokenV3DTO
    , TokenV3DayDataDTO
    , UniswapDayDataV3DTO
    , encodeBigInteger
    , encodeBundleV3DTO
    , encodeBurnV3DTO
    , encodeETradeAggressiveSide
    , encodeFactoryV3DTO
    , encodeMintV3DTO
    , encodePairDTO
    , encodePairV2DTO
    , encodePoolDayDataV3DTO
    , encodePoolHourDataV3DTO
    , encodePoolV3DTO
    , encodePositionSnapshotV3DTO
    , encodePositionV3DTO
    , encodeSwapDTO
    , encodeSwapV2DTO
    , encodeSwapV3DTO
    , encodeTickDayDataV3DTO
    , encodeTickV3DTO
    , encodeTokenDTO
    , encodeTokenHourDataV3DTO
    , encodeTokenV2DTO
    , encodeTokenV3DTO
    , encodeTokenV3DayDataDTO
    , encodeUniswapDayDataV3DTO
    , bigIntegerDecoder
    , bundleV3DTODecoder
    , burnV3DTODecoder
    , eTradeAggressiveSideDecoder
    , factoryV3DTODecoder
    , mintV3DTODecoder
    , pairDTODecoder
    , pairV2DTODecoder
    , poolDayDataV3DTODecoder
    , poolHourDataV3DTODecoder
    , poolV3DTODecoder
    , positionSnapshotV3DTODecoder
    , positionV3DTODecoder
    , swapDTODecoder
    , swapV2DTODecoder
    , swapV3DTODecoder
    , tickDayDataV3DTODecoder
    , tickV3DTODecoder
    , tokenDTODecoder
    , tokenHourDataV3DTODecoder
    , tokenV2DTODecoder
    , tokenV3DTODecoder
    , tokenV3DayDataDTODecoder
    , uniswapDayDataV3DTODecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias BigInteger =
    { isPowerOfTwo : Maybe Bool
    , isZero : Maybe Bool
    , isOne : Maybe Bool
    , isEven : Maybe Bool
    , sign : Maybe Int
    }


type alias BundleV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , ethPriceUsd : Maybe String
    , vid : Maybe Int
    }


type alias BurnV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , timestamp : Maybe String
    , owner : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


type ETradeAggressiveSide
    = ETradeAggressiveSideBuy
    | ETradeAggressiveSideSell
    | ETradeAggressiveSideEstimatedBuy
    | ETradeAggressiveSideEstimatedSell
    | ETradeAggressiveSideUnknown


eTradeAggressiveSideVariants : List ETradeAggressiveSide
eTradeAggressiveSideVariants =
    [ ETradeAggressiveSideBuy
    , ETradeAggressiveSideSell
    , ETradeAggressiveSideEstimatedBuy
    , ETradeAggressiveSideEstimatedSell
    , ETradeAggressiveSideUnknown
    ]


type alias FactoryV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , poolCount : Maybe String
    , txCount : Maybe String
    , totalVolumeUsd : Maybe String
    , totalVolumeEth : Maybe String
    , totalFeesUsd : Maybe String
    , totalFeesEth : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , totalValueLockedEthUntracked : Maybe String
    , owner : Maybe String
    , vid : Maybe Int
    }


type alias MintV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , owner : Maybe String
    , sender : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


type alias PairDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , name : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidityProviderCount : Maybe String
    , timestamp : Maybe String
    , block : Maybe String
    , vid : Maybe Int
    , evaluatedAsk : Maybe Float
    }


type alias PairV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe BigInteger
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


type alias PoolDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


type alias PoolHourDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


type alias PoolV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , createdAtTimestamp : Maybe Posix
    , token0 : Maybe String
    , token1 : Maybe String
    , feeTier : Maybe BigInteger
    , liquidity : Maybe BigInteger
    , sqrtPrice : Maybe BigInteger
    , feeGrowthGlobal0x128 : Maybe BigInteger
    , feeGrowthGlobal1x128 : Maybe BigInteger
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe BigInteger
    , observationIndex : Maybe BigInteger
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe BigInteger
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , totalValueLockedToken0 : Maybe String
    , totalValueLockedToken1 : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


type alias PositionSnapshotV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , position : Maybe String
    , timestamp : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


type alias PositionV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


type alias SwapDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , sender : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe ETradeAggressiveSide
    }


type alias SwapV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pair : Maybe String
    , sender : Maybe String
    , from : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe BigInteger
    , amountUsd : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe ETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


type alias SwapV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , sender : Maybe String
    , recipient : Maybe String
    , origin : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , sqrtPriceX96 : Maybe BigInteger
    , tick : Maybe BigInteger
    , logIndex : Maybe BigInteger
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe ETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


type alias TickDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , tick : Maybe String
    , liquidityGross : Maybe String
    , liquidityNet : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , feeGrowthOutside0x128 : Maybe String
    , feeGrowthOutside1x128 : Maybe String
    , vid : Maybe Int
    }


type alias TickV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , poolAddress : Maybe String
    , tickIdx : Maybe BigInteger
    , pool : Maybe String
    , liquidityGross : Maybe BigInteger
    , liquidityNet : Maybe BigInteger
    , price0 : Maybe String
    , price1 : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe BigInteger
    , feeGrowthOutside0x128 : Maybe BigInteger
    , feeGrowthOutside1x128 : Maybe BigInteger
    }


type alias TokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe String
    , totalSupply : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidity : Maybe String
    , derivedEth : Maybe String
    , whitelistPairs : Maybe (List (String))
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias TokenHourDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias TokenV2DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe BigInteger
    , tradeVolume : Maybe String
    , tradeVolumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe BigInteger
    , totalLiquidity : Maybe String
    , derivedEth : Maybe String
    , tokenSymbol : Maybe String
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias TokenV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe BigInteger
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe BigInteger
    , poolCount : Maybe BigInteger
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , derivedEth : Maybe String
    , whitelistPools : Maybe (List (String))
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias TokenV3DayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    }


{-| Data accumulated and condensed into day stats for all of Uniswap
-}
type alias UniswapDayDataV3DTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , volumeUsdUntracked : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe BigInteger
    , tvlUsd : Maybe String
    }


-- ENCODER


encodeBigInteger : BigInteger -> Json.Encode.Value
encodeBigInteger =
    encodeObject << encodeBigIntegerPairs


encodeBigIntegerWithTag : ( String, String ) -> BigInteger -> Json.Encode.Value
encodeBigIntegerWithTag (tagField, tag) model =
    encodeObject (encodeBigIntegerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBigIntegerPairs : BigInteger -> List EncodedField
encodeBigIntegerPairs model =
    let
        pairs =
            [ maybeEncode "is_power_of_two" Json.Encode.bool model.isPowerOfTwo
            , maybeEncode "is_zero" Json.Encode.bool model.isZero
            , maybeEncode "is_one" Json.Encode.bool model.isOne
            , maybeEncode "is_even" Json.Encode.bool model.isEven
            , maybeEncode "sign" Json.Encode.int model.sign
            ]
    in
    pairs


encodeBundleV3DTO : BundleV3DTO -> Json.Encode.Value
encodeBundleV3DTO =
    encodeObject << encodeBundleV3DTOPairs


encodeBundleV3DTOWithTag : ( String, String ) -> BundleV3DTO -> Json.Encode.Value
encodeBundleV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeBundleV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBundleV3DTOPairs : BundleV3DTO -> List EncodedField
encodeBundleV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "eth_price_usd" Json.Encode.string model.ethPriceUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeBurnV3DTO : BurnV3DTO -> Json.Encode.Value
encodeBurnV3DTO =
    encodeObject << encodeBurnV3DTOPairs


encodeBurnV3DTOWithTag : ( String, String ) -> BurnV3DTO -> Json.Encode.Value
encodeBurnV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeBurnV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeBurnV3DTOPairs : BurnV3DTO -> List EncodedField
encodeBurnV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


stringFromETradeAggressiveSide : ETradeAggressiveSide -> String
stringFromETradeAggressiveSide model =
    case model of
        ETradeAggressiveSideBuy ->
            "Buy"

        ETradeAggressiveSideSell ->
            "Sell"

        ETradeAggressiveSideEstimatedBuy ->
            "EstimatedBuy"

        ETradeAggressiveSideEstimatedSell ->
            "EstimatedSell"

        ETradeAggressiveSideUnknown ->
            "Unknown"


encodeETradeAggressiveSide : ETradeAggressiveSide -> Json.Encode.Value
encodeETradeAggressiveSide =
    Json.Encode.string << stringFromETradeAggressiveSide


encodeFactoryV3DTO : FactoryV3DTO -> Json.Encode.Value
encodeFactoryV3DTO =
    encodeObject << encodeFactoryV3DTOPairs


encodeFactoryV3DTOWithTag : ( String, String ) -> FactoryV3DTO -> Json.Encode.Value
encodeFactoryV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeFactoryV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeFactoryV3DTOPairs : FactoryV3DTO -> List EncodedField
encodeFactoryV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_count" Json.Encode.string model.poolCount
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "total_volume_usd" Json.Encode.string model.totalVolumeUsd
            , maybeEncodeNullable "total_volume_eth" Json.Encode.string model.totalVolumeEth
            , maybeEncodeNullable "total_fees_usd" Json.Encode.string model.totalFeesUsd
            , maybeEncodeNullable "total_fees_eth" Json.Encode.string model.totalFeesEth
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "total_value_locked_eth_untracked" Json.Encode.string model.totalValueLockedEthUntracked
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeMintV3DTO : MintV3DTO -> Json.Encode.Value
encodeMintV3DTO =
    encodeObject << encodeMintV3DTOPairs


encodeMintV3DTOWithTag : ( String, String ) -> MintV3DTO -> Json.Encode.Value
encodeMintV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeMintV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeMintV3DTOPairs : MintV3DTO -> List EncodedField
encodeMintV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodePairDTO : PairDTO -> Json.Encode.Value
encodePairDTO =
    encodeObject << encodePairDTOPairs


encodePairDTOWithTag : ( String, String ) -> PairDTO -> Json.Encode.Value
encodePairDTOWithTag (tagField, tag) model =
    encodeObject (encodePairDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePairDTOPairs : PairDTO -> List EncodedField
encodePairDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodePairV2DTO : PairV2DTO -> Json.Encode.Value
encodePairV2DTO =
    encodeObject << encodePairV2DTOPairs


encodePairV2DTOWithTag : ( String, String ) -> PairV2DTO -> Json.Encode.Value
encodePairV2DTOWithTag (tagField, tag) model =
    encodeObject (encodePairV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePairV2DTOPairs : PairV2DTO -> List EncodedField
encodePairV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeBigInteger model.txCount
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodePoolDayDataV3DTO : PoolDayDataV3DTO -> Json.Encode.Value
encodePoolDayDataV3DTO =
    encodeObject << encodePoolDayDataV3DTOPairs


encodePoolDayDataV3DTOWithTag : ( String, String ) -> PoolDayDataV3DTO -> Json.Encode.Value
encodePoolDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodePoolDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePoolDayDataV3DTOPairs : PoolDayDataV3DTO -> List EncodedField
encodePoolDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodePoolHourDataV3DTO : PoolHourDataV3DTO -> Json.Encode.Value
encodePoolHourDataV3DTO =
    encodeObject << encodePoolHourDataV3DTOPairs


encodePoolHourDataV3DTOWithTag : ( String, String ) -> PoolHourDataV3DTO -> Json.Encode.Value
encodePoolHourDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodePoolHourDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePoolHourDataV3DTOPairs : PoolHourDataV3DTO -> List EncodedField
encodePoolHourDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodePoolV3DTO : PoolV3DTO -> Json.Encode.Value
encodePoolV3DTO =
    encodeObject << encodePoolV3DTOPairs


encodePoolV3DTOWithTag : ( String, String ) -> PoolV3DTO -> Json.Encode.Value
encodePoolV3DTOWithTag (tagField, tag) model =
    encodeObject (encodePoolV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePoolV3DTOPairs : PoolV3DTO -> List EncodedField
encodePoolV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncode "fee_tier" encodeBigInteger model.feeTier
            , maybeEncode "liquidity" encodeBigInteger model.liquidity
            , maybeEncode "sqrt_price" encodeBigInteger model.sqrtPrice
            , maybeEncode "fee_growth_global_0x128" encodeBigInteger model.feeGrowthGlobal0x128
            , maybeEncode "fee_growth_global_1x128" encodeBigInteger model.feeGrowthGlobal1x128
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncode "tick" encodeBigInteger model.tick
            , maybeEncode "observation_index" encodeBigInteger model.observationIndex
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeBigInteger model.txCount
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncodeNullable "total_value_locked_token_0" Json.Encode.string model.totalValueLockedToken0
            , maybeEncodeNullable "total_value_locked_token_1" Json.Encode.string model.totalValueLockedToken1
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodePositionSnapshotV3DTO : PositionSnapshotV3DTO -> Json.Encode.Value
encodePositionSnapshotV3DTO =
    encodeObject << encodePositionSnapshotV3DTOPairs


encodePositionSnapshotV3DTOWithTag : ( String, String ) -> PositionSnapshotV3DTO -> Json.Encode.Value
encodePositionSnapshotV3DTOWithTag (tagField, tag) model =
    encodeObject (encodePositionSnapshotV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePositionSnapshotV3DTOPairs : PositionSnapshotV3DTO -> List EncodedField
encodePositionSnapshotV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "position" Json.Encode.string model.position
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodePositionV3DTO : PositionV3DTO -> Json.Encode.Value
encodePositionV3DTO =
    encodeObject << encodePositionV3DTOPairs


encodePositionV3DTOWithTag : ( String, String ) -> PositionV3DTO -> Json.Encode.Value
encodePositionV3DTOWithTag (tagField, tag) model =
    encodeObject (encodePositionV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodePositionV3DTOPairs : PositionV3DTO -> List EncodedField
encodePositionV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSwapDTO : SwapDTO -> Json.Encode.Value
encodeSwapDTO =
    encodeObject << encodeSwapDTOPairs


encodeSwapDTOWithTag : ( String, String ) -> SwapDTO -> Json.Encode.Value
encodeSwapDTOWithTag (tagField, tag) model =
    encodeObject (encodeSwapDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSwapDTOPairs : SwapDTO -> List EncodedField
encodeSwapDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeSwapV2DTO : SwapV2DTO -> Json.Encode.Value
encodeSwapV2DTO =
    encodeObject << encodeSwapV2DTOPairs


encodeSwapV2DTOWithTag : ( String, String ) -> SwapV2DTO -> Json.Encode.Value
encodeSwapV2DTOWithTag (tagField, tag) model =
    encodeObject (encodeSwapV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSwapV2DTOPairs : SwapV2DTO -> List EncodedField
encodeSwapV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "from" Json.Encode.string model.from
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncode "log_index" encodeBigInteger model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeSwapV3DTO : SwapV3DTO -> Json.Encode.Value
encodeSwapV3DTO =
    encodeObject << encodeSwapV3DTOPairs


encodeSwapV3DTOWithTag : ( String, String ) -> SwapV3DTO -> Json.Encode.Value
encodeSwapV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeSwapV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSwapV3DTOPairs : SwapV3DTO -> List EncodedField
encodeSwapV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "recipient" Json.Encode.string model.recipient
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "sqrt_price_x96" encodeBigInteger model.sqrtPriceX96
            , maybeEncode "tick" encodeBigInteger model.tick
            , maybeEncode "log_index" encodeBigInteger model.logIndex
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeTickDayDataV3DTO : TickDayDataV3DTO -> Json.Encode.Value
encodeTickDayDataV3DTO =
    encodeObject << encodeTickDayDataV3DTOPairs


encodeTickDayDataV3DTOWithTag : ( String, String ) -> TickDayDataV3DTO -> Json.Encode.Value
encodeTickDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeTickDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTickDayDataV3DTOPairs : TickDayDataV3DTO -> List EncodedField
encodeTickDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "liquidity_gross" Json.Encode.string model.liquidityGross
            , maybeEncodeNullable "liquidity_net" Json.Encode.string model.liquidityNet
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "fee_growth_outside_0x128" Json.Encode.string model.feeGrowthOutside0x128
            , maybeEncodeNullable "fee_growth_outside_1x128" Json.Encode.string model.feeGrowthOutside1x128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeTickV3DTO : TickV3DTO -> Json.Encode.Value
encodeTickV3DTO =
    encodeObject << encodeTickV3DTOPairs


encodeTickV3DTOWithTag : ( String, String ) -> TickV3DTO -> Json.Encode.Value
encodeTickV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeTickV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTickV3DTOPairs : TickV3DTO -> List EncodedField
encodeTickV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_address" Json.Encode.string model.poolAddress
            , maybeEncode "tick_idx" encodeBigInteger model.tickIdx
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncode "liquidity_gross" encodeBigInteger model.liquidityGross
            , maybeEncode "liquidity_net" encodeBigInteger model.liquidityNet
            , maybeEncodeNullable "price_0" Json.Encode.string model.price0
            , maybeEncodeNullable "price_1" Json.Encode.string model.price1
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncode "liquidity_provider_count" encodeBigInteger model.liquidityProviderCount
            , maybeEncode "fee_growth_outside_0x128" encodeBigInteger model.feeGrowthOutside0x128
            , maybeEncode "fee_growth_outside_1x128" encodeBigInteger model.feeGrowthOutside1x128
            ]
    in
    pairs


encodeTokenDTO : TokenDTO -> Json.Encode.Value
encodeTokenDTO =
    encodeObject << encodeTokenDTOPairs


encodeTokenDTOWithTag : ( String, String ) -> TokenDTO -> Json.Encode.Value
encodeTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTokenDTOPairs : TokenDTO -> List EncodedField
encodeTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pairs" (Json.Encode.list Json.Encode.string) model.whitelistPairs
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeTokenHourDataV3DTO : TokenHourDataV3DTO -> Json.Encode.Value
encodeTokenHourDataV3DTO =
    encodeObject << encodeTokenHourDataV3DTOPairs


encodeTokenHourDataV3DTOWithTag : ( String, String ) -> TokenHourDataV3DTO -> Json.Encode.Value
encodeTokenHourDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeTokenHourDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTokenHourDataV3DTOPairs : TokenHourDataV3DTO -> List EncodedField
encodeTokenHourDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeTokenV2DTO : TokenV2DTO -> Json.Encode.Value
encodeTokenV2DTO =
    encodeObject << encodeTokenV2DTOPairs


encodeTokenV2DTOWithTag : ( String, String ) -> TokenV2DTO -> Json.Encode.Value
encodeTokenV2DTOWithTag (tagField, tag) model =
    encodeObject (encodeTokenV2DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTokenV2DTOPairs : TokenV2DTO -> List EncodedField
encodeTokenV2DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeBigInteger model.totalSupply
            , maybeEncodeNullable "trade_volume" Json.Encode.string model.tradeVolume
            , maybeEncodeNullable "trade_volume_usd" Json.Encode.string model.tradeVolumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeBigInteger model.txCount
            , maybeEncodeNullable "total_liquidity" Json.Encode.string model.totalLiquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeTokenV3DTO : TokenV3DTO -> Json.Encode.Value
encodeTokenV3DTO =
    encodeObject << encodeTokenV3DTOPairs


encodeTokenV3DTOWithTag : ( String, String ) -> TokenV3DTO -> Json.Encode.Value
encodeTokenV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeTokenV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTokenV3DTOPairs : TokenV3DTO -> List EncodedField
encodeTokenV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeBigInteger model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeBigInteger model.txCount
            , maybeEncode "pool_count" encodeBigInteger model.poolCount
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pools" (Json.Encode.list Json.Encode.string) model.whitelistPools
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeTokenV3DayDataDTO : TokenV3DayDataDTO -> Json.Encode.Value
encodeTokenV3DayDataDTO =
    encodeObject << encodeTokenV3DayDataDTOPairs


encodeTokenV3DayDataDTOWithTag : ( String, String ) -> TokenV3DayDataDTO -> Json.Encode.Value
encodeTokenV3DayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeTokenV3DayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeTokenV3DayDataDTOPairs : TokenV3DayDataDTO -> List EncodedField
encodeTokenV3DayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            ]
    in
    pairs


encodeUniswapDayDataV3DTO : UniswapDayDataV3DTO -> Json.Encode.Value
encodeUniswapDayDataV3DTO =
    encodeObject << encodeUniswapDayDataV3DTOPairs


encodeUniswapDayDataV3DTOWithTag : ( String, String ) -> UniswapDayDataV3DTO -> Json.Encode.Value
encodeUniswapDayDataV3DTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapDayDataV3DTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapDayDataV3DTOPairs : UniswapDayDataV3DTO -> List EncodedField
encodeUniswapDayDataV3DTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "volume_usd_untracked" Json.Encode.string model.volumeUsdUntracked
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeBigInteger model.txCount
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            ]
    in
    pairs


-- DECODER


bigIntegerDecoder : Json.Decode.Decoder BigInteger
bigIntegerDecoder =
    Json.Decode.succeed BigInteger
        |> maybeDecode "is_power_of_two" Json.Decode.bool Nothing
        |> maybeDecode "is_zero" Json.Decode.bool Nothing
        |> maybeDecode "is_one" Json.Decode.bool Nothing
        |> maybeDecode "is_even" Json.Decode.bool Nothing
        |> maybeDecode "sign" Json.Decode.int Nothing


bundleV3DTODecoder : Json.Decode.Decoder BundleV3DTO
bundleV3DTODecoder =
    Json.Decode.succeed BundleV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "eth_price_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


burnV3DTODecoder : Json.Decode.Decoder BurnV3DTO
burnV3DTODecoder =
    Json.Decode.succeed BurnV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


eTradeAggressiveSideDecoder : Json.Decode.Decoder ETradeAggressiveSide
eTradeAggressiveSideDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "Buy" ->
                        Json.Decode.succeed ETradeAggressiveSideBuy

                    "Sell" ->
                        Json.Decode.succeed ETradeAggressiveSideSell

                    "EstimatedBuy" ->
                        Json.Decode.succeed ETradeAggressiveSideEstimatedBuy

                    "EstimatedSell" ->
                        Json.Decode.succeed ETradeAggressiveSideEstimatedSell

                    "Unknown" ->
                        Json.Decode.succeed ETradeAggressiveSideUnknown

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


factoryV3DTODecoder : Json.Decode.Decoder FactoryV3DTO
factoryV3DTODecoder =
    Json.Decode.succeed FactoryV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


mintV3DTODecoder : Json.Decode.Decoder MintV3DTO
mintV3DTODecoder =
    Json.Decode.succeed MintV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


pairDTODecoder : Json.Decode.Decoder PairDTO
pairDTODecoder =
    Json.Decode.succeed PairDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


pairV2DTODecoder : Json.Decode.Decoder PairV2DTO
pairV2DTODecoder =
    Json.Decode.succeed PairV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" bigIntegerDecoder Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


poolDayDataV3DTODecoder : Json.Decode.Decoder PoolDayDataV3DTO
poolDayDataV3DTODecoder =
    Json.Decode.succeed PoolDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


poolHourDataV3DTODecoder : Json.Decode.Decoder PoolHourDataV3DTO
poolHourDataV3DTODecoder =
    Json.Decode.succeed PoolHourDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


poolV3DTODecoder : Json.Decode.Decoder PoolV3DTO
poolV3DTODecoder =
    Json.Decode.succeed PoolV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecode "fee_tier" bigIntegerDecoder Nothing
        |> maybeDecode "liquidity" bigIntegerDecoder Nothing
        |> maybeDecode "sqrt_price" bigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_0x128" bigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_1x128" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecode "tick" bigIntegerDecoder Nothing
        |> maybeDecode "observation_index" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


positionSnapshotV3DTODecoder : Json.Decode.Decoder PositionSnapshotV3DTO
positionSnapshotV3DTODecoder =
    Json.Decode.succeed PositionSnapshotV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "position" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


positionV3DTODecoder : Json.Decode.Decoder PositionV3DTO
positionV3DTODecoder =
    Json.Decode.succeed PositionV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


swapDTODecoder : Json.Decode.Decoder SwapDTO
swapDTODecoder =
    Json.Decode.succeed SwapDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" eTradeAggressiveSideDecoder Nothing


swapV2DTODecoder : Json.Decode.Decoder SwapV2DTO
swapV2DTODecoder =
    Json.Decode.succeed SwapV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "from" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecode "log_index" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" eTradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


swapV3DTODecoder : Json.Decode.Decoder SwapV3DTO
swapV3DTODecoder =
    Json.Decode.succeed SwapV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "recipient" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "sqrt_price_x96" bigIntegerDecoder Nothing
        |> maybeDecode "tick" bigIntegerDecoder Nothing
        |> maybeDecode "log_index" bigIntegerDecoder Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" eTradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


tickDayDataV3DTODecoder : Json.Decode.Decoder TickDayDataV3DTO
tickDayDataV3DTODecoder =
    Json.Decode.succeed TickDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_gross" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_net" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_1x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


tickV3DTODecoder : Json.Decode.Decoder TickV3DTO
tickV3DTODecoder =
    Json.Decode.succeed TickV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_address" Json.Decode.string Nothing
        |> maybeDecode "tick_idx" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecode "liquidity_gross" bigIntegerDecoder Nothing
        |> maybeDecode "liquidity_net" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "price_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "liquidity_provider_count" bigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_0x128" bigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_1x128" bigIntegerDecoder Nothing


tokenDTODecoder : Json.Decode.Decoder TokenDTO
tokenDTODecoder =
    Json.Decode.succeed TokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pairs" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


tokenHourDataV3DTODecoder : Json.Decode.Decoder TokenHourDataV3DTO
tokenHourDataV3DTODecoder =
    Json.Decode.succeed TokenHourDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


tokenV2DTODecoder : Json.Decode.Decoder TokenV2DTO
tokenV2DTODecoder =
    Json.Decode.succeed TokenV2DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "trade_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


tokenV3DTODecoder : Json.Decode.Decoder TokenV3DTO
tokenV3DTODecoder =
    Json.Decode.succeed TokenV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" bigIntegerDecoder Nothing
        |> maybeDecode "pool_count" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pools" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


tokenV3DayDataDTODecoder : Json.Decode.Decoder TokenV3DayDataDTO
tokenV3DayDataDTODecoder =
    Json.Decode.succeed TokenV3DayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing


uniswapDayDataV3DTODecoder : Json.Decode.Decoder UniswapDayDataV3DTO
uniswapDayDataV3DTODecoder =
    Json.Decode.succeed UniswapDayDataV3DTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" bigIntegerDecoder Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f