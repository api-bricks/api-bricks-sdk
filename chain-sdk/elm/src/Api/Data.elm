{-
   On Chain Dapps - REST API
    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( CRYPTOPUNKSBidDTO
    , CRYPTOPUNKSCollectionDTO
    , CRYPTOPUNKSCollectionDailySnapshotDTO
    , CRYPTOPUNKSDataSourcesDTO
    , CRYPTOPUNKSItemDTO
    , CRYPTOPUNKSMarketPlaceDTO
    , CRYPTOPUNKSMarketplaceDailySnapshotDTO
    , CRYPTOPUNKSTradeDTO
    , CRYPTOPUNKSUserDTO
    , CowOrderDTO
    , CowSettlementDTO
    , CowTokenDTO
    , CowTradeDTO
    , CowUserDTO
    , CurveAccountDTO
    , CurveAddLiquidityEventDTO
    , CurveAdminFeeChangeLogDTO
    , CurveAmplificationCoeffChangeLogDTO
    , CurveCoinDTO
    , CurveContractDTO
    , CurveContractVersionDTO
    , CurveDailyVolumeDTO
    , CurveExchangeDTO
    , CurveFeeChangeLogDTO
    , CurveGaugeDTO
    , CurveGaugeDepositDTO
    , CurveGaugeLiquidityDTO
    , CurveGaugeTotalWeightDTO
    , CurveGaugeTypeDTO
    , CurveGaugeTypeWeightDTO
    , CurveGaugeWeightDTO
    , CurveGaugeWeightVoteDTO
    , CurveGaugeWithdrawDTO
    , CurveHourlyVolumeDTO
    , CurveLpTokenDTO
    , CurvePoolDTO
    , CurveProposalDTO
    , CurveProposalVoteDTO
    , CurveRemoveLiquidityEventDTO
    , CurveRemoveLiquidityOneEventDTO
    , CurveSystemStateDTO
    , CurveTokenDTO
    , CurveTransferOwnershipEventDTO
    , CurveUnderlyingCoinDTO
    , CurveVotingAppDTO
    , CurveWeeklyVolumeDTO
    , DexBatchDTO
    , DexDepositDTO
    , DexOrderDTO
    , DexPriceDTO
    , DexSolutionDTO
    , DexStatsDTO
    , DexTokenDTO
    , DexTradeDTO
    , DexUserDTO
    , DexWithdrawDTO
    , DexWithdrawRequestDTO
    , NumericsBigInteger
    , SushiswapBundleDTO
    , SushiswapBurnDTO
    , SushiswapDayDataDTO
    , SushiswapFactoryDTO
    , SushiswapHourDataDTO
    , SushiswapLiquidityPositionDTO
    , SushiswapLiquidityPositionSnapshotDTO
    , SushiswapMintDTO
    , SushiswapPairDTO
    , SushiswapPairDayDataDTO
    , SushiswapPairHourDataDTO
    , SushiswapSwapDTO
    , SushiswapTokenDTO
    , SushiswapTokenDayDataDTO
    , SushiswapTransactionDTO
    , SushiswapUserDTO
    , TransactionsETradeAggressiveSide(..), transactionsETradeAggressiveSideVariants
    , UniswapV2BundleDTO
    , UniswapV2BurnDTO
    , UniswapV2LiquidityPositionDTO
    , UniswapV2LiquidityPositionSnapshotDTO
    , UniswapV2MintDTO
    , UniswapV2PairDTO
    , UniswapV2PairDayDataDTO
    , UniswapV2PairHourDataDTO
    , UniswapV2SwapDTO
    , UniswapV2TokenDTO
    , UniswapV2TokenDayDataDTO
    , UniswapV2TransactionDTO
    , UniswapV2UniswapDayDataDTO
    , UniswapV2UniswapFactoryDTO
    , UniswapV2UserDTO
    , UniswapV3BundleDTO
    , UniswapV3BurnDTO
    , UniswapV3FactoryDTO
    , UniswapV3MintDTO
    , UniswapV3PoolDTO
    , UniswapV3PoolDayDataDTO
    , UniswapV3PoolHourDataDTO
    , UniswapV3PositionDTO
    , UniswapV3PositionSnapshotDTO
    , UniswapV3SwapDTO
    , UniswapV3TickDTO
    , UniswapV3TickDayDataDTO
    , UniswapV3TokenDTO
    , UniswapV3TokenHourDataDTO
    , UniswapV3TokenV3DayDataDTO
    , UniswapV3TransactionDTO
    , UniswapV3UniswapDayDataDTO
    , encodeCRYPTOPUNKSBidDTO
    , encodeCRYPTOPUNKSCollectionDTO
    , encodeCRYPTOPUNKSCollectionDailySnapshotDTO
    , encodeCRYPTOPUNKSDataSourcesDTO
    , encodeCRYPTOPUNKSItemDTO
    , encodeCRYPTOPUNKSMarketPlaceDTO
    , encodeCRYPTOPUNKSMarketplaceDailySnapshotDTO
    , encodeCRYPTOPUNKSTradeDTO
    , encodeCRYPTOPUNKSUserDTO
    , encodeCowOrderDTO
    , encodeCowSettlementDTO
    , encodeCowTokenDTO
    , encodeCowTradeDTO
    , encodeCowUserDTO
    , encodeCurveAccountDTO
    , encodeCurveAddLiquidityEventDTO
    , encodeCurveAdminFeeChangeLogDTO
    , encodeCurveAmplificationCoeffChangeLogDTO
    , encodeCurveCoinDTO
    , encodeCurveContractDTO
    , encodeCurveContractVersionDTO
    , encodeCurveDailyVolumeDTO
    , encodeCurveExchangeDTO
    , encodeCurveFeeChangeLogDTO
    , encodeCurveGaugeDTO
    , encodeCurveGaugeDepositDTO
    , encodeCurveGaugeLiquidityDTO
    , encodeCurveGaugeTotalWeightDTO
    , encodeCurveGaugeTypeDTO
    , encodeCurveGaugeTypeWeightDTO
    , encodeCurveGaugeWeightDTO
    , encodeCurveGaugeWeightVoteDTO
    , encodeCurveGaugeWithdrawDTO
    , encodeCurveHourlyVolumeDTO
    , encodeCurveLpTokenDTO
    , encodeCurvePoolDTO
    , encodeCurveProposalDTO
    , encodeCurveProposalVoteDTO
    , encodeCurveRemoveLiquidityEventDTO
    , encodeCurveRemoveLiquidityOneEventDTO
    , encodeCurveSystemStateDTO
    , encodeCurveTokenDTO
    , encodeCurveTransferOwnershipEventDTO
    , encodeCurveUnderlyingCoinDTO
    , encodeCurveVotingAppDTO
    , encodeCurveWeeklyVolumeDTO
    , encodeDexBatchDTO
    , encodeDexDepositDTO
    , encodeDexOrderDTO
    , encodeDexPriceDTO
    , encodeDexSolutionDTO
    , encodeDexStatsDTO
    , encodeDexTokenDTO
    , encodeDexTradeDTO
    , encodeDexUserDTO
    , encodeDexWithdrawDTO
    , encodeDexWithdrawRequestDTO
    , encodeNumericsBigInteger
    , encodeSushiswapBundleDTO
    , encodeSushiswapBurnDTO
    , encodeSushiswapDayDataDTO
    , encodeSushiswapFactoryDTO
    , encodeSushiswapHourDataDTO
    , encodeSushiswapLiquidityPositionDTO
    , encodeSushiswapLiquidityPositionSnapshotDTO
    , encodeSushiswapMintDTO
    , encodeSushiswapPairDTO
    , encodeSushiswapPairDayDataDTO
    , encodeSushiswapPairHourDataDTO
    , encodeSushiswapSwapDTO
    , encodeSushiswapTokenDTO
    , encodeSushiswapTokenDayDataDTO
    , encodeSushiswapTransactionDTO
    , encodeSushiswapUserDTO
    , encodeTransactionsETradeAggressiveSide
    , encodeUniswapV2BundleDTO
    , encodeUniswapV2BurnDTO
    , encodeUniswapV2LiquidityPositionDTO
    , encodeUniswapV2LiquidityPositionSnapshotDTO
    , encodeUniswapV2MintDTO
    , encodeUniswapV2PairDTO
    , encodeUniswapV2PairDayDataDTO
    , encodeUniswapV2PairHourDataDTO
    , encodeUniswapV2SwapDTO
    , encodeUniswapV2TokenDTO
    , encodeUniswapV2TokenDayDataDTO
    , encodeUniswapV2TransactionDTO
    , encodeUniswapV2UniswapDayDataDTO
    , encodeUniswapV2UniswapFactoryDTO
    , encodeUniswapV2UserDTO
    , encodeUniswapV3BundleDTO
    , encodeUniswapV3BurnDTO
    , encodeUniswapV3FactoryDTO
    , encodeUniswapV3MintDTO
    , encodeUniswapV3PoolDTO
    , encodeUniswapV3PoolDayDataDTO
    , encodeUniswapV3PoolHourDataDTO
    , encodeUniswapV3PositionDTO
    , encodeUniswapV3PositionSnapshotDTO
    , encodeUniswapV3SwapDTO
    , encodeUniswapV3TickDTO
    , encodeUniswapV3TickDayDataDTO
    , encodeUniswapV3TokenDTO
    , encodeUniswapV3TokenHourDataDTO
    , encodeUniswapV3TokenV3DayDataDTO
    , encodeUniswapV3TransactionDTO
    , encodeUniswapV3UniswapDayDataDTO
    , stringFromTransactionsETradeAggressiveSide
    , cRYPTOPUNKSBidDTODecoder
    , cRYPTOPUNKSCollectionDTODecoder
    , cRYPTOPUNKSCollectionDailySnapshotDTODecoder
    , cRYPTOPUNKSDataSourcesDTODecoder
    , cRYPTOPUNKSItemDTODecoder
    , cRYPTOPUNKSMarketPlaceDTODecoder
    , cRYPTOPUNKSMarketplaceDailySnapshotDTODecoder
    , cRYPTOPUNKSTradeDTODecoder
    , cRYPTOPUNKSUserDTODecoder
    , cowOrderDTODecoder
    , cowSettlementDTODecoder
    , cowTokenDTODecoder
    , cowTradeDTODecoder
    , cowUserDTODecoder
    , curveAccountDTODecoder
    , curveAddLiquidityEventDTODecoder
    , curveAdminFeeChangeLogDTODecoder
    , curveAmplificationCoeffChangeLogDTODecoder
    , curveCoinDTODecoder
    , curveContractDTODecoder
    , curveContractVersionDTODecoder
    , curveDailyVolumeDTODecoder
    , curveExchangeDTODecoder
    , curveFeeChangeLogDTODecoder
    , curveGaugeDTODecoder
    , curveGaugeDepositDTODecoder
    , curveGaugeLiquidityDTODecoder
    , curveGaugeTotalWeightDTODecoder
    , curveGaugeTypeDTODecoder
    , curveGaugeTypeWeightDTODecoder
    , curveGaugeWeightDTODecoder
    , curveGaugeWeightVoteDTODecoder
    , curveGaugeWithdrawDTODecoder
    , curveHourlyVolumeDTODecoder
    , curveLpTokenDTODecoder
    , curvePoolDTODecoder
    , curveProposalDTODecoder
    , curveProposalVoteDTODecoder
    , curveRemoveLiquidityEventDTODecoder
    , curveRemoveLiquidityOneEventDTODecoder
    , curveSystemStateDTODecoder
    , curveTokenDTODecoder
    , curveTransferOwnershipEventDTODecoder
    , curveUnderlyingCoinDTODecoder
    , curveVotingAppDTODecoder
    , curveWeeklyVolumeDTODecoder
    , dexBatchDTODecoder
    , dexDepositDTODecoder
    , dexOrderDTODecoder
    , dexPriceDTODecoder
    , dexSolutionDTODecoder
    , dexStatsDTODecoder
    , dexTokenDTODecoder
    , dexTradeDTODecoder
    , dexUserDTODecoder
    , dexWithdrawDTODecoder
    , dexWithdrawRequestDTODecoder
    , numericsBigIntegerDecoder
    , sushiswapBundleDTODecoder
    , sushiswapBurnDTODecoder
    , sushiswapDayDataDTODecoder
    , sushiswapFactoryDTODecoder
    , sushiswapHourDataDTODecoder
    , sushiswapLiquidityPositionDTODecoder
    , sushiswapLiquidityPositionSnapshotDTODecoder
    , sushiswapMintDTODecoder
    , sushiswapPairDTODecoder
    , sushiswapPairDayDataDTODecoder
    , sushiswapPairHourDataDTODecoder
    , sushiswapSwapDTODecoder
    , sushiswapTokenDTODecoder
    , sushiswapTokenDayDataDTODecoder
    , sushiswapTransactionDTODecoder
    , sushiswapUserDTODecoder
    , transactionsETradeAggressiveSideDecoder
    , uniswapV2BundleDTODecoder
    , uniswapV2BurnDTODecoder
    , uniswapV2LiquidityPositionDTODecoder
    , uniswapV2LiquidityPositionSnapshotDTODecoder
    , uniswapV2MintDTODecoder
    , uniswapV2PairDTODecoder
    , uniswapV2PairDayDataDTODecoder
    , uniswapV2PairHourDataDTODecoder
    , uniswapV2SwapDTODecoder
    , uniswapV2TokenDTODecoder
    , uniswapV2TokenDayDataDTODecoder
    , uniswapV2TransactionDTODecoder
    , uniswapV2UniswapDayDataDTODecoder
    , uniswapV2UniswapFactoryDTODecoder
    , uniswapV2UserDTODecoder
    , uniswapV3BundleDTODecoder
    , uniswapV3BurnDTODecoder
    , uniswapV3FactoryDTODecoder
    , uniswapV3MintDTODecoder
    , uniswapV3PoolDTODecoder
    , uniswapV3PoolDayDataDTODecoder
    , uniswapV3PoolHourDataDTODecoder
    , uniswapV3PositionDTODecoder
    , uniswapV3PositionSnapshotDTODecoder
    , uniswapV3SwapDTODecoder
    , uniswapV3TickDTODecoder
    , uniswapV3TickDayDataDTODecoder
    , uniswapV3TokenDTODecoder
    , uniswapV3TokenHourDataDTODecoder
    , uniswapV3TokenV3DayDataDTODecoder
    , uniswapV3TransactionDTODecoder
    , uniswapV3UniswapDayDataDTODecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias CRYPTOPUNKSBidDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , tokensBid : Maybe String
    , tokenId : Maybe String
    , timestamp : Maybe String
    , bidder : Maybe String
    }


type alias CRYPTOPUNKSCollectionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , name : Maybe String
    , symbol : Maybe String
    , totalSupply : Maybe String
    , royaltyFee : Maybe String
    , cumulativeTradeVolumeEth : Maybe String
    , marketplaceRevenueEth : Maybe String
    , creatorRevenueEth : Maybe String
    , totalRevenueEth : Maybe String
    , tradeCount : Maybe Int
    , buyerCount : Maybe Int
    , sellerCount : Maybe Int
    }


type alias CRYPTOPUNKSCollectionDailySnapshotDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , collection : Maybe String
    , timestamp : Maybe String
    , royaltyFee : Maybe String
    , dailyMinSalePrice : Maybe String
    , dailyMaxSalePrice : Maybe String
    , cumulativeTradeVolumeEth : Maybe String
    , dailyTradeVolumeEth : Maybe String
    , marketplaceRevenueEth : Maybe String
    , creatorRevenueEth : Maybe String
    , totalRevenueEth : Maybe String
    , tradeCount : Maybe Int
    , dailyTradedItemCount : Maybe Int
    }


type alias CRYPTOPUNKSDataSourcesDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , blockRange : Maybe String
    , causalityRegion : Maybe Int
    , manifestIdx : Maybe Int
    , parent : Maybe Int
    , id : Maybe String
    , param : Maybe String
    , context : Maybe String
    , doneAt : Maybe Int
    }


type alias CRYPTOPUNKSItemDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    }


type alias CRYPTOPUNKSMarketPlaceDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , name : Maybe String
    , slug : Maybe String
    , schemaVersion : Maybe String
    , subgraphVersion : Maybe String
    , methodologyVersion : Maybe String
    , collectionCount : Maybe Int
    , tradeCount : Maybe Int
    , cumulativeTradeVolumeEth : Maybe String
    , marketplaceRevenueEth : Maybe String
    , creatorRevenueEth : Maybe String
    , totalRevenueEth : Maybe String
    , cumulativeUniqueTraders : Maybe Int
    }


type alias CRYPTOPUNKSMarketplaceDailySnapshotDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , marketplace : Maybe String
    , timestamp : Maybe String
    , collectionCount : Maybe Int
    , cumulativeTradeVolumeEth : Maybe String
    , marketplaceRevenueEth : Maybe String
    , creatorRevenueEth : Maybe String
    , totalRevenueEth : Maybe String
    , tradeCount : Maybe Int
    , cumulativeUniqueTraders : Maybe Int
    , dailyActiveTraders : Maybe Int
    , dailyTradedCollectionCount : Maybe Int
    , dailyTradedItemCount : Maybe Int
    }


type alias CRYPTOPUNKSTradeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    , transactionHash : Maybe String
    , logIndex : Maybe Int
    , timestamp : Maybe String
    , isBundle : Maybe Bool
    , collection : Maybe String
    , tokenId : Maybe String
    , amount : Maybe String
    , priceEth : Maybe String
    , buyer : Maybe String
    , seller : Maybe String
    }


type alias CRYPTOPUNKSUserDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , blockRange : Maybe String
    , id : Maybe String
    }


type alias CowOrderDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , tradesTimestamp : Maybe String
    , invalidateTimestamp : Maybe String
    , presignTimestamp : Maybe String
    , isSigned : Maybe Bool
    , isValid : Maybe Bool
    , vid : Maybe Int
    }


{-| A settlement comprises a list of traded tokens with their corresponding price in the batch.
-}
type alias CowSettlementDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , solver : Maybe String
    , txHash : Maybe String
    , firstTradeTimestamp : Maybe String
    , vid : Maybe Int
    }


{-| Stores information for a specific token across all pairs that token is included in.
-}
type alias CowTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , firstTradeTimestamp : Maybe String
    , name : Maybe String
    , symbol : Maybe String
    , decimals : Maybe Int
    , totalVolume : Maybe String
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


{-| Trade entity.
-}
type alias CowTradeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , timestamp : Maybe String
    , gasPrice : Maybe String
    , gasLimit : Maybe String
    , feeAmount : Maybe String
    , txHash : Maybe String
    , settlement : Maybe String
    , buyAmount : Maybe String
    , sellAmount : Maybe String
    , sellToken : Maybe String
    , buyToken : Maybe String
    , order : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    }


type alias CowUserDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , firstTradeTimestamp : Maybe String
    , isSolver : Maybe Bool
    , vid : Maybe Int
    }


type alias CurveAccountDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , vid : Maybe Int
    }


type alias CurveAddLiquidityEventDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , provider : Maybe String
    , tokenAmounts : Maybe ( List String )
    , fees : Maybe ( List String )
    , invariant : Maybe String
    , tokenSupply : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveAdminFeeChangeLogDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , value : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveAmplificationCoeffChangeLogDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , value : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveCoinDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , index : Maybe Int
    , pool : Maybe String
    , token : Maybe String
    , underlying : Maybe String
    , balance : Maybe String
    , rate : Maybe String
    , updated : Maybe String
    , updatedAtBlock : Maybe String
    , updatedAtTransaction : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


type alias CurveContractDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , description : Maybe String
    , added : Maybe String
    , addedAtBlock : Maybe String
    , addedAtTransaction : Maybe String
    , modified : Maybe String
    , modifiedAtBlock : Maybe String
    , modifiedAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveContractVersionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , contract : Maybe String
    , address : Maybe String
    , version : Maybe String
    , added : Maybe String
    , addedAtBlock : Maybe String
    , addedAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveDailyVolumeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , timestamp : Maybe String
    , volume : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


type alias CurveExchangeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , buyer : Maybe String
    , receiver : Maybe String
    , tokenSold : Maybe String
    , tokenBought : Maybe String
    , amountSold : Maybe String
    , amountBought : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


type alias CurveFeeChangeLogDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , value : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , type_ : Maybe String
    , pool : Maybe String
    , created : Maybe String
    , createdAtBlock : Maybe String
    , createdAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeDepositDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , gauge : Maybe String
    , provider : Maybe String
    , value : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


type alias CurveGaugeLiquidityDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , gauge : Maybe String
    , originalBalance : Maybe String
    , originalSupply : Maybe String
    , workingBalance : Maybe String
    , workingSupply : Maybe String
    , timestamp : Maybe String
    , block : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeTotalWeightDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , time : Maybe String
    , weight : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeTypeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , name : Maybe String
    , gaugeCount : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeTypeWeightDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , type_ : Maybe String
    , time : Maybe String
    , weight : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeWeightDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , gauge : Maybe String
    , time : Maybe String
    , weight : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeWeightVoteDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , gauge : Maybe String
    , user : Maybe String
    , time : Maybe String
    , weight : Maybe String
    , vid : Maybe Int
    }


type alias CurveGaugeWithdrawDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , gauge : Maybe String
    , provider : Maybe String
    , value : Maybe String
    , vid : Maybe Int
    }


type alias CurveHourlyVolumeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , timestamp : Maybe String
    , volume : Maybe String
    , vid : Maybe Int
    }


type alias CurveLpTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , decimals : Maybe String
    , name : Maybe String
    , symbol : Maybe String
    , gauge : Maybe String
    , pool : Maybe String
    , vid : Maybe Int
    }


type alias CurvePoolDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , name : Maybe String
    , isMeta : Maybe Bool
    , registryAddress : Maybe String
    , swapAddress : Maybe String
    , lpToken : Maybe String
    , coinCount : Maybe String
    , underlyingCount : Maybe String
    , a : Maybe String
    , fee : Maybe String
    , adminFee : Maybe String
    , owner : Maybe String
    , virtualPrice : Maybe String
    , locked : Maybe String
    , addedAt : Maybe Posix
    , addedAtBlock : Maybe String
    , addedAtTransaction : Maybe String
    , removedAt : Maybe String
    , removedAtBlock : Maybe String
    , removedAtTransaction : Maybe String
    , exchangeCount : Maybe String
    , gaugeCount : Maybe String
    , vid : Maybe Int
    , evaluatedAsk : Maybe Float
    }


type alias CurveProposalDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , number : Maybe String
    , app : Maybe String
    , creator : Maybe String
    , executionScript : Maybe String
    , expireDate : Maybe String
    , minimumQuorum : Maybe String
    , requiredSupport : Maybe String
    , snapshotBlock : Maybe String
    , votingPower : Maybe String
    , metadata : Maybe String
    , text : Maybe String
    , voteCount : Maybe String
    , positiveVoteCount : Maybe String
    , negativeVoteCount : Maybe String
    , currentQuorum : Maybe String
    , currentSupport : Maybe String
    , stakedSupport : Maybe String
    , totalStaked : Maybe String
    , created : Maybe String
    , createdAtBlock : Maybe String
    , createdAtTransaction : Maybe String
    , updated : Maybe String
    , updatedAtBlock : Maybe String
    , updatedAtTransaction : Maybe String
    , executed : Maybe String
    , executedAtBlock : Maybe String
    , executedAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveProposalVoteDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , proposal : Maybe String
    , supports : Maybe Bool
    , stake : Maybe String
    , voter : Maybe String
    , created : Maybe String
    , createdAtBlock : Maybe String
    , createdAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveRemoveLiquidityEventDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , provider : Maybe String
    , tokenAmounts : Maybe ( List String )
    , fees : Maybe ( List String )
    , tokenSupply : Maybe String
    , invariant : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveRemoveLiquidityOneEventDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , provider : Maybe String
    , tokenAmount : Maybe String
    , coinAmount : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveSystemStateDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , registryContract : Maybe String
    , contractCount : Maybe String
    , gaugeCount : Maybe String
    , gaugeTypeCount : Maybe String
    , poolCount : Maybe String
    , tokenCount : Maybe String
    , totalPoolCount : Maybe String
    , updated : Maybe String
    , updatedAtBlock : Maybe String
    , updatedAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , decimals : Maybe String
    , name : Maybe String
    , symbol : Maybe String
    , pools : Maybe ( List String )
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


type alias CurveTransferOwnershipEventDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , newAdmin : Maybe String
    , block : Maybe String
    , timestamp : Maybe String
    , transaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveUnderlyingCoinDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , index : Maybe Int
    , pool : Maybe String
    , token : Maybe String
    , coin : Maybe String
    , balance : Maybe String
    , updated : Maybe String
    , updatedAtBlock : Maybe String
    , updatedAtTransaction : Maybe String
    , vid : Maybe Int
    }


type alias CurveVotingAppDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , codename : Maybe String
    , minimumBalance : Maybe String
    , minimumQuorum : Maybe String
    , minimumTime : Maybe String
    , requiredSupport : Maybe String
    , voteTime : Maybe String
    , proposalCount : Maybe String
    , voteCount : Maybe String
    , token : Maybe String
    , vid : Maybe Int
    }


type alias CurveWeeklyVolumeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pool : Maybe String
    , timestamp : Maybe String
    , volume : Maybe String
    , vid : Maybe Int
    }


{-| Batch executed. Every batch will contain at least solution with the a set of trades that are executed in it
-}
type alias DexBatchDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , startEpoch : Maybe String
    , endEpoch : Maybe String
    , solution : Maybe String
    , firstSolutionEpoch : Maybe String
    , lastRevertEpoch : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


{-| Deposit of an user.
-}
type alias DexDepositDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , tokenAddress : Maybe String
    , amount : Maybe String
    , batchId : Maybe String
    , createEpoch : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


{-| Order submitted by an user. It has a validity (dates) so they can only be executed from/until some given batches. Partial executions of this trades must respect the limit price.
-}
type alias DexOrderDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , orderId : Maybe Int
    , fromBatchId : Maybe String
    , fromEpoch : Maybe String
    , untilBatchId : Maybe String
    , untilEpoch : Maybe String
    , buyToken : Maybe String
    , sellToken : Maybe String
    , priceNumerator : Maybe String
    , priceDenominator : Maybe String
    , maxSellAmount : Maybe String
    , minReceiveAmount : Maybe String
    , soldVolume : Maybe String
    , boughtVolume : Maybe String
    , createEpoch : Maybe String
    , cancelEpoch : Maybe String
    , deleteEpoch : Maybe String
    , txHash : Maybe String
    , txLogIndex : Maybe String
    , vid : Maybe Int
    }


{-| Token price in conjuction with batch id.
-}
type alias DexPriceDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , token : Maybe String
    , batchId : Maybe String
    , priceInOwlNumerator : Maybe String
    , priceInOwlDenominator : Maybe String
    , volume : Maybe String
    , createEpoch : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


type alias DexSolutionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , batch : Maybe String
    , solver : Maybe String
    , feeReward : Maybe String
    , objectiveValue : Maybe String
    , utility : Maybe String
    , trades : Maybe ( List String )
    , createEpoch : Maybe String
    , revertEpoch : Maybe String
    , txHash : Maybe String
    , txLogIndex : Maybe String
    , vid : Maybe Int
    }


{-| A type collecting global stats about this instance of Gnosis Protocol.
-}
type alias DexStatsDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , volumeInOwl : Maybe String
    , utilityInOwl : Maybe String
    , owlBurnt : Maybe String
    , settledBatchCount : Maybe Int
    , settledTradeCount : Maybe Int
    , listedTokens : Maybe Int
    , vid : Maybe Int
    }


{-| Registered token.
-}
type alias DexTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , address : Maybe String
    , fromBatchId : Maybe String
    , symbol : Maybe String
    , decimals : Maybe String
    , name : Maybe String
    , sellVolume : Maybe String
    , createEpoch : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


{-| Trade for a single user, as part of a ring trade. It's part of the solution submitted by a solver for a given batch.
-}
type alias DexTradeDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , order : Maybe String
    , owner : Maybe String
    , sellVolume : Maybe String
    , buyVolume : Maybe String
    , tradeBatchId : Maybe String
    , tradeEpoch : Maybe String
    , buyToken : Maybe String
    , sellToken : Maybe String
    , createEpoch : Maybe String
    , revertEpoch : Maybe String
    , txHash : Maybe String
    , txLogIndex : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    }


{-| User of the protocol. Any ethereum account that deposited tokens or traded.
-}
type alias DexUserDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , fromBatchId : Maybe String
    , createEpoch : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


{-| Withdraw of an user.
-}
type alias DexWithdrawDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , tokenAddress : Maybe String
    , amount : Maybe String
    , createEpoch : Maybe String
    , createBatchId : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


{-| Withdraw request of an user
-}
type alias DexWithdrawRequestDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , tokenAddress : Maybe String
    , amount : Maybe String
    , withdrawableFromBatchId : Maybe String
    , createEpoch : Maybe String
    , createBatchId : Maybe String
    , txHash : Maybe String
    , vid : Maybe Int
    }


type alias NumericsBigInteger =
    { isPowerOfTwo : Maybe Bool
    , isZero : Maybe Bool
    , isOne : Maybe Bool
    , isEven : Maybe Bool
    , sign : Maybe Int
    }


{-| The Bundle is used as a global store of derived ETH price in USD.
-}
type alias SushiswapBundleDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , ethPrice : Maybe String
    , vid : Maybe Int
    }


{-| Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned LP tokens, who received tokens, and more. This entity can be used to track liquidity removals on pairs.
-}
type alias SushiswapBurnDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , liquidity : Maybe String
    , sender : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , to : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , complete : Maybe Bool
    , feeTo : Maybe String
    , feeLiquidity : Maybe String
    , vid : Maybe Int
    }


{-| Tracks data across all pairs aggregated into a daily bucket.
-}
type alias SushiswapDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , factory : Maybe String
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolume : Maybe String
    , liquidityEth : Maybe String
    , liquidityUsd : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


{-| The Sushiswap Factory entity is responsible for storing aggregate information across all Sushiswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more.
-}
type alias SushiswapFactoryDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pairCount : Maybe String
    , volumeUsd : Maybe String
    , volumeEth : Maybe String
    , untrackedVolumeUsd : Maybe String
    , liquidityUsd : Maybe String
    , liquidityEth : Maybe String
    , txCount : Maybe String
    , tokenCount : Maybe String
    , userCount : Maybe String
    , vid : Maybe Int
    }


type alias SushiswapHourDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , factory : Maybe String
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolume : Maybe String
    , liquidityEth : Maybe String
    , liquidityUsd : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


type alias SushiswapLiquidityPositionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , pair : Maybe String
    , liquidityTokenBalance : Maybe String
    , block : Maybe Int
    , timestamp : Maybe Int
    , vid : Maybe Int
    }


{-| This entity is used to store data about a user's liquidity position over time. This information, along with information from the pair itself can be used to provide position sizes, token deposits, and more. It gets created and never updated.
-}
type alias SushiswapLiquidityPositionSnapshotDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , liquidityPosition : Maybe String
    , timestamp : Maybe Int
    , block : Maybe Int
    , user : Maybe String
    , pair : Maybe String
    , token0PriceUsd : Maybe String
    , token1PriceUsd : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , reserveUsd : Maybe String
    , liquidityTokenTotalSupply : Maybe String
    , liquidityTokenBalance : Maybe String
    , vid : Maybe Int
    }


{-| Mint entities are created for every emitted Mint event on the Sushiswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, who received the liquidity, and more. This entity can be used to track liquidity provisions on pairs.
-}
type alias SushiswapMintDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , to : Maybe String
    , liquidity : Maybe String
    , sender : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , feeTo : Maybe String
    , feeLiquidity : Maybe String
    , vid : Maybe Int
    }


{-| Information about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.
-}
type alias SushiswapPairDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , name : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidityProviderCount : Maybe String
    , timestamp : Maybe String
    , block : Maybe String
    , vid : Maybe Int
    , evaluatedAsk : Maybe Float
    }


{-| Tracks pair data across each day.
-}
type alias SushiswapPairDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pair : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


{-| Tracks pair data across each hour.
-}
type alias SushiswapPairHourDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pair : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , reserveUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


{-| Swap are created for each token swap within a pair.
-}
type alias SushiswapSwapDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , sender : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , vid : Maybe Int
    , poolId : Maybe String
    , transactionId : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias SushiswapTokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , factory : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe String
    , totalSupply : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe String
    , liquidity : Maybe String
    , derivedEth : Maybe String
    , whitelistPairs : Maybe ( List String )
    , vid : Maybe Int
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias SushiswapTokenDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , txCount : Maybe String
    , liquidity : Maybe String
    , liquidityEth : Maybe String
    , liquidityUsd : Maybe String
    , priceUsd : Maybe String
    , vid : Maybe Int
    }


{-| Transaction entities are created for each Ethereum transaction that contains an interaction within Sushiswap contracts. Each transaction contains 3 arrays, and at least one of these arrays has a length of 1.
-}
type alias SushiswapTransactionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , timestamp : Maybe String
    , mints : Maybe ( List String )
    , burns : Maybe ( List String )
    , swaps : Maybe ( List String )
    , vid : Maybe Int
    }


type alias SushiswapUserDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , vid : Maybe Int
    }


type TransactionsETradeAggressiveSide
    = TransactionsETradeAggressiveSideBuy
    | TransactionsETradeAggressiveSideSell
    | TransactionsETradeAggressiveSideEstimatedBuy
    | TransactionsETradeAggressiveSideEstimatedSell
    | TransactionsETradeAggressiveSideUnknown


transactionsETradeAggressiveSideVariants : List TransactionsETradeAggressiveSide
transactionsETradeAggressiveSideVariants =
    [ TransactionsETradeAggressiveSideBuy
    , TransactionsETradeAggressiveSideSell
    , TransactionsETradeAggressiveSideEstimatedBuy
    , TransactionsETradeAggressiveSideEstimatedSell
    , TransactionsETradeAggressiveSideUnknown
    ]


{-| The Bundle is used as a global store of derived ETH price in USD. Because there is no guaranteed common base token across pairs, a global reference of USD price is useful for deriving other USD values. The Bundle entity stores an updated weighted average of ETH<->Stablecoin pair prices. This provides a strong estimate for the USD price of ETH.
-}
type alias UniswapV2BundleDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , ethPrice : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


{-| Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned LP tokens, who received tokens, and more. This entity can be used to track liquidity removals on pairs.
-}
type alias UniswapV2BurnDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , liquidity : Maybe String
    , sender : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , to : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , needsComplete : Maybe Bool
    , feeTo : Maybe String
    , feeLiquidity : Maybe String
    , vid : Maybe Int
    }


{-| This entity is used to store data about a user's liquidity position. This information, along with information from the pair itself can be used to provide position sizes, token deposits, and more.
-}
type alias UniswapV2LiquidityPositionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , user : Maybe String
    , pair : Maybe String
    , liquidityTokenBalance : Maybe String
    , vid : Maybe Int
    }


{-| This entity is used to store data about a user's liquidity position over time. This information, along with information from the pair itself can be used to provide position sizes, token deposits, and more. It gets created and never updated.
-}
type alias UniswapV2LiquidityPositionSnapshotDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , liquidityPosition : Maybe String
    , timestamp : Maybe Int
    , block : Maybe Int
    , user : Maybe String
    , pair : Maybe String
    , token0PriceUsd : Maybe String
    , token1PriceUsd : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , reserveUsd : Maybe String
    , liquidityTokenTotalSupply : Maybe String
    , liquidityTokenBalance : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


{-| Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, who received the liquidity, and more. This entity can be used to track liquidity provisions on pairs.
-}
type alias UniswapV2MintDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pair : Maybe String
    , to : Maybe String
    , liquidity : Maybe String
    , sender : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , logIndex : Maybe String
    , amountUsd : Maybe String
    , feeTo : Maybe String
    , feeLiquidity : Maybe String
    , vid : Maybe Int
    , blockRange : Maybe String
    }


{-| Information about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.
-}
type alias UniswapV2PairDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveEth : Maybe String
    , reserveUsd : Maybe String
    , trackedReserveEth : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


{-| Tracks pair data across each day.
-}
type alias UniswapV2PairDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pairAddress : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveUsd : Maybe String
    , dailyVolumeToken0 : Maybe String
    , dailyVolumeToken1 : Maybe String
    , dailyVolumeUsd : Maybe String
    , dailyTxns : Maybe String
    , vid : Maybe Int
    }


{-| Tracks pair data across each hour.
-}
type alias UniswapV2PairHourDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , hourStartUnix : Maybe Int
    , pair : Maybe String
    , reserve0 : Maybe String
    , reserve1 : Maybe String
    , totalSupply : Maybe String
    , reserveUsd : Maybe String
    , hourlyVolumeToken0 : Maybe String
    , hourlyVolumeToken1 : Maybe String
    , hourlyVolumeUsd : Maybe String
    , hourlyTxns : Maybe String
    , vid : Maybe Int
    }


{-| Swap are created for each token swap within a pair.
-}
type alias UniswapV2SwapDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pair : Maybe String
    , sender : Maybe String
    , from : Maybe String
    , amount0In : Maybe String
    , amount1In : Maybe String
    , amount0Out : Maybe String
    , amount1Out : Maybe String
    , to : Maybe String
    , logIndex : Maybe NumericsBigInteger
    , amountUsd : Maybe String
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias UniswapV2TokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe NumericsBigInteger
    , tradeVolume : Maybe String
    , tradeVolumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , totalLiquidity : Maybe String
    , derivedEth : Maybe String
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias UniswapV2TokenDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , token : Maybe String
    , dailyVolumeToken : Maybe String
    , dailyVolumeEth : Maybe String
    , dailyVolumeUsd : Maybe String
    , dailyTxns : Maybe String
    , totalLiquidityToken : Maybe String
    , totalLiquidityEth : Maybe String
    , totalLiquidityUsd : Maybe String
    , priceUsd : Maybe String
    , vid : Maybe Int
    }


{-| Transaction entities are created for each Ethereum transaction that contains an interaction within Uniswap contracts. Each transaction contains 3 arrays, and at least one of these arrays has a length of 1.
-}
type alias UniswapV2TransactionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , timestamp : Maybe String
    , mints : Maybe ( List String )
    , burns : Maybe ( List String )
    , swaps : Maybe ( List String )
    , vid : Maybe Int
    }


{-| Tracks data across all pairs aggregated into a daily bucket.
-}
type alias UniswapV2UniswapDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , dailyVolumeEth : Maybe String
    , dailyVolumeUsd : Maybe String
    , dailyVolumeUntracked : Maybe String
    , totalVolumeEth : Maybe String
    , totalLiquidityEth : Maybe String
    , totalVolumeUsd : Maybe String
    , totalLiquidityUsd : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


{-| The Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more.
-}
type alias UniswapV2UniswapFactoryDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , pairCount : Maybe Int
    , totalVolumeUsd : Maybe String
    , totalVolumeEth : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalLiquidityUsd : Maybe String
    , totalLiquidityEth : Maybe String
    , txCount : Maybe String
    , vid : Maybe Int
    }


{-| A user entity is created for any address that provides liquidity to a pool on Uniswap. This entity can be used to track open positions for users.
-}
type alias UniswapV2UserDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , usdSwapped : Maybe String
    , vid : Maybe Int
    }


{-| The Bundle is used as a global store of derived ETH price in USD. This provides a strong estimate for the USD price of ETH.
-}
type alias UniswapV3BundleDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , ethPriceUsd : Maybe String
    , vid : Maybe Int
    }


{-| Burn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned, who received tokens, and more. This entity can be used to track liquidity removals on pairs.
-}
type alias UniswapV3BurnDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , timestamp : Maybe String
    , owner : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


{-| The Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more.
-}
type alias UniswapV3FactoryDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , poolCount : Maybe String
    , txCount : Maybe String
    , totalVolumeUsd : Maybe String
    , totalVolumeEth : Maybe String
    , totalFeesUsd : Maybe String
    , totalFeesEth : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , totalValueLockedEthUntracked : Maybe String
    , owner : Maybe String
    , vid : Maybe Int
    }


{-| Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, and more.
-}
type alias UniswapV3MintDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , owner : Maybe String
    , sender : Maybe String
    , origin : Maybe String
    , amount : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , logIndex : Maybe String
    , vid : Maybe Int
    }


{-| Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.
-}
type alias UniswapV3PoolDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , createdAtTimestamp : Maybe Posix
    , token0 : Maybe String
    , token1 : Maybe String
    , feeTier : Maybe NumericsBigInteger
    , liquidity : Maybe NumericsBigInteger
    , sqrtPrice : Maybe NumericsBigInteger
    , feeGrowthGlobal0x128 : Maybe NumericsBigInteger
    , feeGrowthGlobal1x128 : Maybe NumericsBigInteger
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe NumericsBigInteger
    , observationIndex : Maybe NumericsBigInteger
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , totalValueLockedToken0 : Maybe String
    , totalValueLockedToken1 : Maybe String
    , totalValueLockedEth : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , liquidityProviderCount : Maybe String
    , evaluatedAsk : Maybe Float
    }


{-| Data accumulated and condensed into day stats for each pool.
-}
type alias UniswapV3PoolDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Hourly stats tracker for pool.
-}
type alias UniswapV3PoolHourDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , pool : Maybe String
    , liquidity : Maybe String
    , sqrtPrice : Maybe String
    , token0Price : Maybe String
    , token1Price : Maybe String
    , tick : Maybe String
    , feeGrowthGlobal0x128 : Maybe String
    , feeGrowthGlobal1x128 : Maybe String
    , tvlUsd : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Positions created through NonfungiblePositionManager. Positions are represented as NFTs (ERC-721 tokens) as opposed to the fungible ERC-20 tokens on Uniswap V1 and V2.
-}
type alias UniswapV3PositionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , tickLower : Maybe String
    , tickUpper : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


type alias UniswapV3PositionSnapshotDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , owner : Maybe String
    , pool : Maybe String
    , position : Maybe String
    , timestamp : Maybe String
    , liquidity : Maybe String
    , depositedToken0 : Maybe String
    , depositedToken1 : Maybe String
    , withdrawnToken0 : Maybe String
    , withdrawnToken1 : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , transaction : Maybe String
    , feeGrowthInside0LastX128 : Maybe String
    , feeGrowthInside1LastX128 : Maybe String
    , vid : Maybe Int
    }


{-| Swap are created for each token swap within a pair.
-}
type alias UniswapV3SwapDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , transaction : Maybe String
    , timestamp : Maybe Posix
    , pool : Maybe String
    , token0 : Maybe String
    , token1 : Maybe String
    , sender : Maybe String
    , recipient : Maybe String
    , origin : Maybe String
    , amount0 : Maybe String
    , amount1 : Maybe String
    , amountUsd : Maybe String
    , sqrtPriceX96 : Maybe NumericsBigInteger
    , tick : Maybe NumericsBigInteger
    , logIndex : Maybe NumericsBigInteger
    , evaluatedPrice : Maybe Float
    , evaluatedAmount : Maybe Float
    , evaluatedAggressor : Maybe TransactionsETradeAggressiveSide
    , poolId : Maybe String
    , transactionId : Maybe String
    }


{-| Ticks are the boundaries between discrete areas in price space.
-}
type alias UniswapV3TickDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , poolAddress : Maybe String
    , tickIdx : Maybe NumericsBigInteger
    , pool : Maybe String
    , liquidityGross : Maybe NumericsBigInteger
    , liquidityNet : Maybe NumericsBigInteger
    , price0 : Maybe String
    , price1 : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , collectedFeesToken0 : Maybe String
    , collectedFeesToken1 : Maybe String
    , collectedFeesUsd : Maybe String
    , createdAtTimestamp : Maybe Posix
    , liquidityProviderCount : Maybe NumericsBigInteger
    , feeGrowthOutside0x128 : Maybe NumericsBigInteger
    , feeGrowthOutside1x128 : Maybe NumericsBigInteger
    }


{-| Data accumulated and condensed into day stats for each exchange. Entity gets saved only if there is a change during the day
-}
type alias UniswapV3TickDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , pool : Maybe String
    , tick : Maybe String
    , liquidityGross : Maybe String
    , liquidityNet : Maybe String
    , volumeToken0 : Maybe String
    , volumeToken1 : Maybe String
    , volumeUsd : Maybe String
    , feesUsd : Maybe String
    , feeGrowthOutside0x128 : Maybe String
    , feeGrowthOutside1x128 : Maybe String
    , vid : Maybe Int
    }


{-| Stores aggregated information for a specific token across all pairs that token is included in.
-}
type alias UniswapV3TokenDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , symbol : Maybe String
    , name : Maybe String
    , decimals : Maybe Int
    , totalSupply : Maybe NumericsBigInteger
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , poolCount : Maybe NumericsBigInteger
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , totalValueLockedUsdUntracked : Maybe String
    , derivedEth : Maybe String
    , whitelistPools : Maybe ( List String )
    , tokenSymbol : Maybe String
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias UniswapV3TokenHourDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , periodStartUnix : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    , vid : Maybe Int
    }


{-| Token data aggregated across all pairs that include token.
-}
type alias UniswapV3TokenV3DayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , token : Maybe String
    , volume : Maybe String
    , volumeUsd : Maybe String
    , untrackedVolumeUsd : Maybe String
    , totalValueLocked : Maybe String
    , totalValueLockedUsd : Maybe String
    , priceUsd : Maybe String
    , feesUsd : Maybe String
    , open : Maybe String
    , high : Maybe String
    , low : Maybe String
    , close : Maybe String
    }


type alias UniswapV3TransactionDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , id : Maybe String
    , timestamp : Maybe String
    , gasUsed : Maybe String
    , gasPrice : Maybe String
    , vid : Maybe Int
    }


{-| Data accumulated and condensed into day stats for all of Uniswap.
-}
type alias UniswapV3UniswapDayDataDTO =
    { entryTime : Maybe Posix
    , recvTime : Maybe Posix
    , blockNumber : Maybe Int
    , vid : Maybe Int
    , id : Maybe String
    , date : Maybe Int
    , volumeEth : Maybe String
    , volumeUsd : Maybe String
    , volumeUsdUntracked : Maybe String
    , feesUsd : Maybe String
    , txCount : Maybe NumericsBigInteger
    , tvlUsd : Maybe String
    }


-- ENCODER


encodeCRYPTOPUNKSBidDTO : CRYPTOPUNKSBidDTO -> Json.Encode.Value
encodeCRYPTOPUNKSBidDTO =
    encodeObject << encodeCRYPTOPUNKSBidDTOPairs


encodeCRYPTOPUNKSBidDTOWithTag : ( String, String ) -> CRYPTOPUNKSBidDTO -> Json.Encode.Value
encodeCRYPTOPUNKSBidDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSBidDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSBidDTOPairs : CRYPTOPUNKSBidDTO -> List EncodedField
encodeCRYPTOPUNKSBidDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncodeNullable "block_number" Json.Encode.string model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "tokens_bid" Json.Encode.string model.tokensBid
            , maybeEncodeNullable "token_id" Json.Encode.string model.tokenId
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "bidder" Json.Encode.string model.bidder
            ]
    in
    pairs


encodeCRYPTOPUNKSCollectionDTO : CRYPTOPUNKSCollectionDTO -> Json.Encode.Value
encodeCRYPTOPUNKSCollectionDTO =
    encodeObject << encodeCRYPTOPUNKSCollectionDTOPairs


encodeCRYPTOPUNKSCollectionDTOWithTag : ( String, String ) -> CRYPTOPUNKSCollectionDTO -> Json.Encode.Value
encodeCRYPTOPUNKSCollectionDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSCollectionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSCollectionDTOPairs : CRYPTOPUNKSCollectionDTO -> List EncodedField
encodeCRYPTOPUNKSCollectionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "royalty_fee" Json.Encode.string model.royaltyFee
            , maybeEncodeNullable "cumulative_trade_volume_eth" Json.Encode.string model.cumulativeTradeVolumeEth
            , maybeEncodeNullable "marketplace_revenue_eth" Json.Encode.string model.marketplaceRevenueEth
            , maybeEncodeNullable "creator_revenue_eth" Json.Encode.string model.creatorRevenueEth
            , maybeEncodeNullable "total_revenue_eth" Json.Encode.string model.totalRevenueEth
            , maybeEncode "trade_count" Json.Encode.int model.tradeCount
            , maybeEncode "buyer_count" Json.Encode.int model.buyerCount
            , maybeEncode "seller_count" Json.Encode.int model.sellerCount
            ]
    in
    pairs


encodeCRYPTOPUNKSCollectionDailySnapshotDTO : CRYPTOPUNKSCollectionDailySnapshotDTO -> Json.Encode.Value
encodeCRYPTOPUNKSCollectionDailySnapshotDTO =
    encodeObject << encodeCRYPTOPUNKSCollectionDailySnapshotDTOPairs


encodeCRYPTOPUNKSCollectionDailySnapshotDTOWithTag : ( String, String ) -> CRYPTOPUNKSCollectionDailySnapshotDTO -> Json.Encode.Value
encodeCRYPTOPUNKSCollectionDailySnapshotDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSCollectionDailySnapshotDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSCollectionDailySnapshotDTOPairs : CRYPTOPUNKSCollectionDailySnapshotDTO -> List EncodedField
encodeCRYPTOPUNKSCollectionDailySnapshotDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncodeNullable "block_number" Json.Encode.string model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "collection" Json.Encode.string model.collection
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "royalty_fee" Json.Encode.string model.royaltyFee
            , maybeEncodeNullable "daily_min_sale_price" Json.Encode.string model.dailyMinSalePrice
            , maybeEncodeNullable "daily_max_sale_price" Json.Encode.string model.dailyMaxSalePrice
            , maybeEncodeNullable "cumulative_trade_volume_eth" Json.Encode.string model.cumulativeTradeVolumeEth
            , maybeEncodeNullable "daily_trade_volume_eth" Json.Encode.string model.dailyTradeVolumeEth
            , maybeEncodeNullable "marketplace_revenue_eth" Json.Encode.string model.marketplaceRevenueEth
            , maybeEncodeNullable "creator_revenue_eth" Json.Encode.string model.creatorRevenueEth
            , maybeEncodeNullable "total_revenue_eth" Json.Encode.string model.totalRevenueEth
            , maybeEncode "trade_count" Json.Encode.int model.tradeCount
            , maybeEncode "daily_traded_item_count" Json.Encode.int model.dailyTradedItemCount
            ]
    in
    pairs


encodeCRYPTOPUNKSDataSourcesDTO : CRYPTOPUNKSDataSourcesDTO -> Json.Encode.Value
encodeCRYPTOPUNKSDataSourcesDTO =
    encodeObject << encodeCRYPTOPUNKSDataSourcesDTOPairs


encodeCRYPTOPUNKSDataSourcesDTOWithTag : ( String, String ) -> CRYPTOPUNKSDataSourcesDTO -> Json.Encode.Value
encodeCRYPTOPUNKSDataSourcesDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSDataSourcesDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSDataSourcesDTOPairs : CRYPTOPUNKSDataSourcesDTO -> List EncodedField
encodeCRYPTOPUNKSDataSourcesDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncode "causality_region" Json.Encode.int model.causalityRegion
            , maybeEncode "manifest_idx" Json.Encode.int model.manifestIdx
            , maybeEncodeNullable "parent" Json.Encode.int model.parent
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "param" Json.Encode.string model.param
            , maybeEncodeNullable "context" Json.Encode.string model.context
            , maybeEncodeNullable "done_at" Json.Encode.int model.doneAt
            ]
    in
    pairs


encodeCRYPTOPUNKSItemDTO : CRYPTOPUNKSItemDTO -> Json.Encode.Value
encodeCRYPTOPUNKSItemDTO =
    encodeObject << encodeCRYPTOPUNKSItemDTOPairs


encodeCRYPTOPUNKSItemDTOWithTag : ( String, String ) -> CRYPTOPUNKSItemDTO -> Json.Encode.Value
encodeCRYPTOPUNKSItemDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSItemDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSItemDTOPairs : CRYPTOPUNKSItemDTO -> List EncodedField
encodeCRYPTOPUNKSItemDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            ]
    in
    pairs


encodeCRYPTOPUNKSMarketPlaceDTO : CRYPTOPUNKSMarketPlaceDTO -> Json.Encode.Value
encodeCRYPTOPUNKSMarketPlaceDTO =
    encodeObject << encodeCRYPTOPUNKSMarketPlaceDTOPairs


encodeCRYPTOPUNKSMarketPlaceDTOWithTag : ( String, String ) -> CRYPTOPUNKSMarketPlaceDTO -> Json.Encode.Value
encodeCRYPTOPUNKSMarketPlaceDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSMarketPlaceDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSMarketPlaceDTOPairs : CRYPTOPUNKSMarketPlaceDTO -> List EncodedField
encodeCRYPTOPUNKSMarketPlaceDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "slug" Json.Encode.string model.slug
            , maybeEncodeNullable "schema_version" Json.Encode.string model.schemaVersion
            , maybeEncodeNullable "subgraph_version" Json.Encode.string model.subgraphVersion
            , maybeEncodeNullable "methodology_version" Json.Encode.string model.methodologyVersion
            , maybeEncode "collection_count" Json.Encode.int model.collectionCount
            , maybeEncode "trade_count" Json.Encode.int model.tradeCount
            , maybeEncodeNullable "cumulative_trade_volume_eth" Json.Encode.string model.cumulativeTradeVolumeEth
            , maybeEncodeNullable "marketplace_revenue_eth" Json.Encode.string model.marketplaceRevenueEth
            , maybeEncodeNullable "creator_revenue_eth" Json.Encode.string model.creatorRevenueEth
            , maybeEncodeNullable "total_revenue_eth" Json.Encode.string model.totalRevenueEth
            , maybeEncode "cumulative_unique_traders" Json.Encode.int model.cumulativeUniqueTraders
            ]
    in
    pairs


encodeCRYPTOPUNKSMarketplaceDailySnapshotDTO : CRYPTOPUNKSMarketplaceDailySnapshotDTO -> Json.Encode.Value
encodeCRYPTOPUNKSMarketplaceDailySnapshotDTO =
    encodeObject << encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOPairs


encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOWithTag : ( String, String ) -> CRYPTOPUNKSMarketplaceDailySnapshotDTO -> Json.Encode.Value
encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOPairs : CRYPTOPUNKSMarketplaceDailySnapshotDTO -> List EncodedField
encodeCRYPTOPUNKSMarketplaceDailySnapshotDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncodeNullable "block_number" Json.Encode.string model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "marketplace" Json.Encode.string model.marketplace
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncode "collection_count" Json.Encode.int model.collectionCount
            , maybeEncodeNullable "cumulative_trade_volume_eth" Json.Encode.string model.cumulativeTradeVolumeEth
            , maybeEncodeNullable "marketplace_revenue_eth" Json.Encode.string model.marketplaceRevenueEth
            , maybeEncodeNullable "creator_revenue_eth" Json.Encode.string model.creatorRevenueEth
            , maybeEncodeNullable "total_revenue_eth" Json.Encode.string model.totalRevenueEth
            , maybeEncode "trade_count" Json.Encode.int model.tradeCount
            , maybeEncode "cumulative_unique_traders" Json.Encode.int model.cumulativeUniqueTraders
            , maybeEncode "daily_active_traders" Json.Encode.int model.dailyActiveTraders
            , maybeEncode "daily_traded_collection_count" Json.Encode.int model.dailyTradedCollectionCount
            , maybeEncode "daily_traded_item_count" Json.Encode.int model.dailyTradedItemCount
            ]
    in
    pairs


encodeCRYPTOPUNKSTradeDTO : CRYPTOPUNKSTradeDTO -> Json.Encode.Value
encodeCRYPTOPUNKSTradeDTO =
    encodeObject << encodeCRYPTOPUNKSTradeDTOPairs


encodeCRYPTOPUNKSTradeDTOWithTag : ( String, String ) -> CRYPTOPUNKSTradeDTO -> Json.Encode.Value
encodeCRYPTOPUNKSTradeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSTradeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSTradeDTOPairs : CRYPTOPUNKSTradeDTO -> List EncodedField
encodeCRYPTOPUNKSTradeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncodeNullable "block_number" Json.Encode.string model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction_hash" Json.Encode.string model.transactionHash
            , maybeEncode "log_index" Json.Encode.int model.logIndex
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncode "is_bundle" Json.Encode.bool model.isBundle
            , maybeEncodeNullable "collection" Json.Encode.string model.collection
            , maybeEncodeNullable "token_id" Json.Encode.string model.tokenId
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "price_eth" Json.Encode.string model.priceEth
            , maybeEncodeNullable "buyer" Json.Encode.string model.buyer
            , maybeEncodeNullable "seller" Json.Encode.string model.seller
            ]
    in
    pairs


encodeCRYPTOPUNKSUserDTO : CRYPTOPUNKSUserDTO -> Json.Encode.Value
encodeCRYPTOPUNKSUserDTO =
    encodeObject << encodeCRYPTOPUNKSUserDTOPairs


encodeCRYPTOPUNKSUserDTOWithTag : ( String, String ) -> CRYPTOPUNKSUserDTO -> Json.Encode.Value
encodeCRYPTOPUNKSUserDTOWithTag (tagField, tag) model =
    encodeObject (encodeCRYPTOPUNKSUserDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCRYPTOPUNKSUserDTOPairs : CRYPTOPUNKSUserDTO -> List EncodedField
encodeCRYPTOPUNKSUserDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            , maybeEncodeNullable "id" Json.Encode.string model.id
            ]
    in
    pairs


encodeCowOrderDTO : CowOrderDTO -> Json.Encode.Value
encodeCowOrderDTO =
    encodeObject << encodeCowOrderDTOPairs


encodeCowOrderDTOWithTag : ( String, String ) -> CowOrderDTO -> Json.Encode.Value
encodeCowOrderDTOWithTag (tagField, tag) model =
    encodeObject (encodeCowOrderDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCowOrderDTOPairs : CowOrderDTO -> List EncodedField
encodeCowOrderDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "trades_timestamp" Json.Encode.string model.tradesTimestamp
            , maybeEncodeNullable "invalidate_timestamp" Json.Encode.string model.invalidateTimestamp
            , maybeEncodeNullable "presign_timestamp" Json.Encode.string model.presignTimestamp
            , maybeEncodeNullable "is_signed" Json.Encode.bool model.isSigned
            , maybeEncode "is_valid" Json.Encode.bool model.isValid
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCowSettlementDTO : CowSettlementDTO -> Json.Encode.Value
encodeCowSettlementDTO =
    encodeObject << encodeCowSettlementDTOPairs


encodeCowSettlementDTOWithTag : ( String, String ) -> CowSettlementDTO -> Json.Encode.Value
encodeCowSettlementDTOWithTag (tagField, tag) model =
    encodeObject (encodeCowSettlementDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCowSettlementDTOPairs : CowSettlementDTO -> List EncodedField
encodeCowSettlementDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "solver" Json.Encode.string model.solver
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "first_trade_timestamp" Json.Encode.string model.firstTradeTimestamp
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCowTokenDTO : CowTokenDTO -> Json.Encode.Value
encodeCowTokenDTO =
    encodeObject << encodeCowTokenDTOPairs


encodeCowTokenDTOWithTag : ( String, String ) -> CowTokenDTO -> Json.Encode.Value
encodeCowTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeCowTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCowTokenDTOPairs : CowTokenDTO -> List EncodedField
encodeCowTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "first_trade_timestamp" Json.Encode.string model.firstTradeTimestamp
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncodeNullable "total_volume" Json.Encode.string model.totalVolume
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeCowTradeDTO : CowTradeDTO -> Json.Encode.Value
encodeCowTradeDTO =
    encodeObject << encodeCowTradeDTOPairs


encodeCowTradeDTOWithTag : ( String, String ) -> CowTradeDTO -> Json.Encode.Value
encodeCowTradeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCowTradeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCowTradeDTOPairs : CowTradeDTO -> List EncodedField
encodeCowTradeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "gas_price" Json.Encode.string model.gasPrice
            , maybeEncodeNullable "gas_limit" Json.Encode.string model.gasLimit
            , maybeEncodeNullable "fee_amount" Json.Encode.string model.feeAmount
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "settlement" Json.Encode.string model.settlement
            , maybeEncodeNullable "buy_amount" Json.Encode.string model.buyAmount
            , maybeEncodeNullable "sell_amount" Json.Encode.string model.sellAmount
            , maybeEncodeNullable "sell_token" Json.Encode.string model.sellToken
            , maybeEncodeNullable "buy_token" Json.Encode.string model.buyToken
            , maybeEncodeNullable "order" Json.Encode.string model.order
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeCowUserDTO : CowUserDTO -> Json.Encode.Value
encodeCowUserDTO =
    encodeObject << encodeCowUserDTOPairs


encodeCowUserDTOWithTag : ( String, String ) -> CowUserDTO -> Json.Encode.Value
encodeCowUserDTOWithTag (tagField, tag) model =
    encodeObject (encodeCowUserDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCowUserDTOPairs : CowUserDTO -> List EncodedField
encodeCowUserDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "first_trade_timestamp" Json.Encode.string model.firstTradeTimestamp
            , maybeEncode "is_solver" Json.Encode.bool model.isSolver
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveAccountDTO : CurveAccountDTO -> Json.Encode.Value
encodeCurveAccountDTO =
    encodeObject << encodeCurveAccountDTOPairs


encodeCurveAccountDTOWithTag : ( String, String ) -> CurveAccountDTO -> Json.Encode.Value
encodeCurveAccountDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveAccountDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveAccountDTOPairs : CurveAccountDTO -> List EncodedField
encodeCurveAccountDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveAddLiquidityEventDTO : CurveAddLiquidityEventDTO -> Json.Encode.Value
encodeCurveAddLiquidityEventDTO =
    encodeObject << encodeCurveAddLiquidityEventDTOPairs


encodeCurveAddLiquidityEventDTOWithTag : ( String, String ) -> CurveAddLiquidityEventDTO -> Json.Encode.Value
encodeCurveAddLiquidityEventDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveAddLiquidityEventDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveAddLiquidityEventDTOPairs : CurveAddLiquidityEventDTO -> List EncodedField
encodeCurveAddLiquidityEventDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "provider" Json.Encode.string model.provider
            , maybeEncodeNullable "token_amounts" (Json.Encode.list Json.Encode.string) model.tokenAmounts
            , maybeEncodeNullable "fees" (Json.Encode.list Json.Encode.string) model.fees
            , maybeEncodeNullable "invariant" Json.Encode.string model.invariant
            , maybeEncodeNullable "token_supply" Json.Encode.string model.tokenSupply
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveAdminFeeChangeLogDTO : CurveAdminFeeChangeLogDTO -> Json.Encode.Value
encodeCurveAdminFeeChangeLogDTO =
    encodeObject << encodeCurveAdminFeeChangeLogDTOPairs


encodeCurveAdminFeeChangeLogDTOWithTag : ( String, String ) -> CurveAdminFeeChangeLogDTO -> Json.Encode.Value
encodeCurveAdminFeeChangeLogDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveAdminFeeChangeLogDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveAdminFeeChangeLogDTOPairs : CurveAdminFeeChangeLogDTO -> List EncodedField
encodeCurveAdminFeeChangeLogDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveAmplificationCoeffChangeLogDTO : CurveAmplificationCoeffChangeLogDTO -> Json.Encode.Value
encodeCurveAmplificationCoeffChangeLogDTO =
    encodeObject << encodeCurveAmplificationCoeffChangeLogDTOPairs


encodeCurveAmplificationCoeffChangeLogDTOWithTag : ( String, String ) -> CurveAmplificationCoeffChangeLogDTO -> Json.Encode.Value
encodeCurveAmplificationCoeffChangeLogDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveAmplificationCoeffChangeLogDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveAmplificationCoeffChangeLogDTOPairs : CurveAmplificationCoeffChangeLogDTO -> List EncodedField
encodeCurveAmplificationCoeffChangeLogDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveCoinDTO : CurveCoinDTO -> Json.Encode.Value
encodeCurveCoinDTO =
    encodeObject << encodeCurveCoinDTOPairs


encodeCurveCoinDTOWithTag : ( String, String ) -> CurveCoinDTO -> Json.Encode.Value
encodeCurveCoinDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveCoinDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveCoinDTOPairs : CurveCoinDTO -> List EncodedField
encodeCurveCoinDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "index" Json.Encode.int model.index
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "underlying" Json.Encode.string model.underlying
            , maybeEncodeNullable "balance" Json.Encode.string model.balance
            , maybeEncodeNullable "rate" Json.Encode.string model.rate
            , maybeEncodeNullable "updated" Json.Encode.string model.updated
            , maybeEncodeNullable "updated_at_block" Json.Encode.string model.updatedAtBlock
            , maybeEncodeNullable "updated_at_transaction" Json.Encode.string model.updatedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeCurveContractDTO : CurveContractDTO -> Json.Encode.Value
encodeCurveContractDTO =
    encodeObject << encodeCurveContractDTOPairs


encodeCurveContractDTOWithTag : ( String, String ) -> CurveContractDTO -> Json.Encode.Value
encodeCurveContractDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveContractDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveContractDTOPairs : CurveContractDTO -> List EncodedField
encodeCurveContractDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "description" Json.Encode.string model.description
            , maybeEncodeNullable "added" Json.Encode.string model.added
            , maybeEncodeNullable "added_at_block" Json.Encode.string model.addedAtBlock
            , maybeEncodeNullable "added_at_transaction" Json.Encode.string model.addedAtTransaction
            , maybeEncodeNullable "modified" Json.Encode.string model.modified
            , maybeEncodeNullable "modified_at_block" Json.Encode.string model.modifiedAtBlock
            , maybeEncodeNullable "modified_at_transaction" Json.Encode.string model.modifiedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveContractVersionDTO : CurveContractVersionDTO -> Json.Encode.Value
encodeCurveContractVersionDTO =
    encodeObject << encodeCurveContractVersionDTOPairs


encodeCurveContractVersionDTOWithTag : ( String, String ) -> CurveContractVersionDTO -> Json.Encode.Value
encodeCurveContractVersionDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveContractVersionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveContractVersionDTOPairs : CurveContractVersionDTO -> List EncodedField
encodeCurveContractVersionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "contract" Json.Encode.string model.contract
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "version" Json.Encode.string model.version
            , maybeEncodeNullable "added" Json.Encode.string model.added
            , maybeEncodeNullable "added_at_block" Json.Encode.string model.addedAtBlock
            , maybeEncodeNullable "added_at_transaction" Json.Encode.string model.addedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveDailyVolumeDTO : CurveDailyVolumeDTO -> Json.Encode.Value
encodeCurveDailyVolumeDTO =
    encodeObject << encodeCurveDailyVolumeDTOPairs


encodeCurveDailyVolumeDTOWithTag : ( String, String ) -> CurveDailyVolumeDTO -> Json.Encode.Value
encodeCurveDailyVolumeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveDailyVolumeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveDailyVolumeDTOPairs : CurveDailyVolumeDTO -> List EncodedField
encodeCurveDailyVolumeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeCurveExchangeDTO : CurveExchangeDTO -> Json.Encode.Value
encodeCurveExchangeDTO =
    encodeObject << encodeCurveExchangeDTOPairs


encodeCurveExchangeDTOWithTag : ( String, String ) -> CurveExchangeDTO -> Json.Encode.Value
encodeCurveExchangeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveExchangeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveExchangeDTOPairs : CurveExchangeDTO -> List EncodedField
encodeCurveExchangeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "buyer" Json.Encode.string model.buyer
            , maybeEncodeNullable "receiver" Json.Encode.string model.receiver
            , maybeEncodeNullable "token_sold" Json.Encode.string model.tokenSold
            , maybeEncodeNullable "token_bought" Json.Encode.string model.tokenBought
            , maybeEncodeNullable "amount_sold" Json.Encode.string model.amountSold
            , maybeEncodeNullable "amount_bought" Json.Encode.string model.amountBought
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeCurveFeeChangeLogDTO : CurveFeeChangeLogDTO -> Json.Encode.Value
encodeCurveFeeChangeLogDTO =
    encodeObject << encodeCurveFeeChangeLogDTOPairs


encodeCurveFeeChangeLogDTOWithTag : ( String, String ) -> CurveFeeChangeLogDTO -> Json.Encode.Value
encodeCurveFeeChangeLogDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveFeeChangeLogDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveFeeChangeLogDTOPairs : CurveFeeChangeLogDTO -> List EncodedField
encodeCurveFeeChangeLogDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeDTO : CurveGaugeDTO -> Json.Encode.Value
encodeCurveGaugeDTO =
    encodeObject << encodeCurveGaugeDTOPairs


encodeCurveGaugeDTOWithTag : ( String, String ) -> CurveGaugeDTO -> Json.Encode.Value
encodeCurveGaugeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeDTOPairs : CurveGaugeDTO -> List EncodedField
encodeCurveGaugeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "created" Json.Encode.string model.created
            , maybeEncodeNullable "created_at_block" Json.Encode.string model.createdAtBlock
            , maybeEncodeNullable "created_at_transaction" Json.Encode.string model.createdAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeDepositDTO : CurveGaugeDepositDTO -> Json.Encode.Value
encodeCurveGaugeDepositDTO =
    encodeObject << encodeCurveGaugeDepositDTOPairs


encodeCurveGaugeDepositDTOWithTag : ( String, String ) -> CurveGaugeDepositDTO -> Json.Encode.Value
encodeCurveGaugeDepositDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeDepositDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeDepositDTOPairs : CurveGaugeDepositDTO -> List EncodedField
encodeCurveGaugeDepositDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "provider" Json.Encode.string model.provider
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeCurveGaugeLiquidityDTO : CurveGaugeLiquidityDTO -> Json.Encode.Value
encodeCurveGaugeLiquidityDTO =
    encodeObject << encodeCurveGaugeLiquidityDTOPairs


encodeCurveGaugeLiquidityDTOWithTag : ( String, String ) -> CurveGaugeLiquidityDTO -> Json.Encode.Value
encodeCurveGaugeLiquidityDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeLiquidityDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeLiquidityDTOPairs : CurveGaugeLiquidityDTO -> List EncodedField
encodeCurveGaugeLiquidityDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "original_balance" Json.Encode.string model.originalBalance
            , maybeEncodeNullable "original_supply" Json.Encode.string model.originalSupply
            , maybeEncodeNullable "working_balance" Json.Encode.string model.workingBalance
            , maybeEncodeNullable "working_supply" Json.Encode.string model.workingSupply
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeTotalWeightDTO : CurveGaugeTotalWeightDTO -> Json.Encode.Value
encodeCurveGaugeTotalWeightDTO =
    encodeObject << encodeCurveGaugeTotalWeightDTOPairs


encodeCurveGaugeTotalWeightDTOWithTag : ( String, String ) -> CurveGaugeTotalWeightDTO -> Json.Encode.Value
encodeCurveGaugeTotalWeightDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeTotalWeightDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeTotalWeightDTOPairs : CurveGaugeTotalWeightDTO -> List EncodedField
encodeCurveGaugeTotalWeightDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "time" Json.Encode.string model.time
            , maybeEncodeNullable "weight" Json.Encode.string model.weight
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeTypeDTO : CurveGaugeTypeDTO -> Json.Encode.Value
encodeCurveGaugeTypeDTO =
    encodeObject << encodeCurveGaugeTypeDTOPairs


encodeCurveGaugeTypeDTOWithTag : ( String, String ) -> CurveGaugeTypeDTO -> Json.Encode.Value
encodeCurveGaugeTypeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeTypeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeTypeDTOPairs : CurveGaugeTypeDTO -> List EncodedField
encodeCurveGaugeTypeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "gauge_count" Json.Encode.string model.gaugeCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeTypeWeightDTO : CurveGaugeTypeWeightDTO -> Json.Encode.Value
encodeCurveGaugeTypeWeightDTO =
    encodeObject << encodeCurveGaugeTypeWeightDTOPairs


encodeCurveGaugeTypeWeightDTOWithTag : ( String, String ) -> CurveGaugeTypeWeightDTO -> Json.Encode.Value
encodeCurveGaugeTypeWeightDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeTypeWeightDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeTypeWeightDTOPairs : CurveGaugeTypeWeightDTO -> List EncodedField
encodeCurveGaugeTypeWeightDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "type" Json.Encode.string model.type_
            , maybeEncodeNullable "time" Json.Encode.string model.time
            , maybeEncodeNullable "weight" Json.Encode.string model.weight
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeWeightDTO : CurveGaugeWeightDTO -> Json.Encode.Value
encodeCurveGaugeWeightDTO =
    encodeObject << encodeCurveGaugeWeightDTOPairs


encodeCurveGaugeWeightDTOWithTag : ( String, String ) -> CurveGaugeWeightDTO -> Json.Encode.Value
encodeCurveGaugeWeightDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeWeightDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeWeightDTOPairs : CurveGaugeWeightDTO -> List EncodedField
encodeCurveGaugeWeightDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "time" Json.Encode.string model.time
            , maybeEncodeNullable "weight" Json.Encode.string model.weight
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeWeightVoteDTO : CurveGaugeWeightVoteDTO -> Json.Encode.Value
encodeCurveGaugeWeightVoteDTO =
    encodeObject << encodeCurveGaugeWeightVoteDTOPairs


encodeCurveGaugeWeightVoteDTOWithTag : ( String, String ) -> CurveGaugeWeightVoteDTO -> Json.Encode.Value
encodeCurveGaugeWeightVoteDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeWeightVoteDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeWeightVoteDTOPairs : CurveGaugeWeightVoteDTO -> List EncodedField
encodeCurveGaugeWeightVoteDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "time" Json.Encode.string model.time
            , maybeEncodeNullable "weight" Json.Encode.string model.weight
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveGaugeWithdrawDTO : CurveGaugeWithdrawDTO -> Json.Encode.Value
encodeCurveGaugeWithdrawDTO =
    encodeObject << encodeCurveGaugeWithdrawDTOPairs


encodeCurveGaugeWithdrawDTOWithTag : ( String, String ) -> CurveGaugeWithdrawDTO -> Json.Encode.Value
encodeCurveGaugeWithdrawDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveGaugeWithdrawDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveGaugeWithdrawDTOPairs : CurveGaugeWithdrawDTO -> List EncodedField
encodeCurveGaugeWithdrawDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "provider" Json.Encode.string model.provider
            , maybeEncodeNullable "value" Json.Encode.string model.value
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveHourlyVolumeDTO : CurveHourlyVolumeDTO -> Json.Encode.Value
encodeCurveHourlyVolumeDTO =
    encodeObject << encodeCurveHourlyVolumeDTOPairs


encodeCurveHourlyVolumeDTOWithTag : ( String, String ) -> CurveHourlyVolumeDTO -> Json.Encode.Value
encodeCurveHourlyVolumeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveHourlyVolumeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveHourlyVolumeDTOPairs : CurveHourlyVolumeDTO -> List EncodedField
encodeCurveHourlyVolumeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveLpTokenDTO : CurveLpTokenDTO -> Json.Encode.Value
encodeCurveLpTokenDTO =
    encodeObject << encodeCurveLpTokenDTOPairs


encodeCurveLpTokenDTOWithTag : ( String, String ) -> CurveLpTokenDTO -> Json.Encode.Value
encodeCurveLpTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveLpTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveLpTokenDTOPairs : CurveLpTokenDTO -> List EncodedField
encodeCurveLpTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "gauge" Json.Encode.string model.gauge
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurvePoolDTO : CurvePoolDTO -> Json.Encode.Value
encodeCurvePoolDTO =
    encodeObject << encodeCurvePoolDTOPairs


encodeCurvePoolDTOWithTag : ( String, String ) -> CurvePoolDTO -> Json.Encode.Value
encodeCurvePoolDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurvePoolDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurvePoolDTOPairs : CurvePoolDTO -> List EncodedField
encodeCurvePoolDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "is_meta" Json.Encode.bool model.isMeta
            , maybeEncodeNullable "registry_address" Json.Encode.string model.registryAddress
            , maybeEncodeNullable "swap_address" Json.Encode.string model.swapAddress
            , maybeEncodeNullable "lp_token" Json.Encode.string model.lpToken
            , maybeEncodeNullable "coin_count" Json.Encode.string model.coinCount
            , maybeEncodeNullable "underlying_count" Json.Encode.string model.underlyingCount
            , maybeEncodeNullable "a" Json.Encode.string model.a
            , maybeEncodeNullable "fee" Json.Encode.string model.fee
            , maybeEncodeNullable "admin_fee" Json.Encode.string model.adminFee
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "virtual_price" Json.Encode.string model.virtualPrice
            , maybeEncodeNullable "locked" Json.Encode.string model.locked
            , maybeEncode "added_at" Api.Time.encodeDateTime model.addedAt
            , maybeEncodeNullable "added_at_block" Json.Encode.string model.addedAtBlock
            , maybeEncodeNullable "added_at_transaction" Json.Encode.string model.addedAtTransaction
            , maybeEncodeNullable "removed_at" Json.Encode.string model.removedAt
            , maybeEncodeNullable "removed_at_block" Json.Encode.string model.removedAtBlock
            , maybeEncodeNullable "removed_at_transaction" Json.Encode.string model.removedAtTransaction
            , maybeEncodeNullable "exchange_count" Json.Encode.string model.exchangeCount
            , maybeEncodeNullable "gauge_count" Json.Encode.string model.gaugeCount
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeCurveProposalDTO : CurveProposalDTO -> Json.Encode.Value
encodeCurveProposalDTO =
    encodeObject << encodeCurveProposalDTOPairs


encodeCurveProposalDTOWithTag : ( String, String ) -> CurveProposalDTO -> Json.Encode.Value
encodeCurveProposalDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveProposalDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveProposalDTOPairs : CurveProposalDTO -> List EncodedField
encodeCurveProposalDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "number" Json.Encode.string model.number
            , maybeEncodeNullable "app" Json.Encode.string model.app
            , maybeEncodeNullable "creator" Json.Encode.string model.creator
            , maybeEncodeNullable "execution_script" Json.Encode.string model.executionScript
            , maybeEncodeNullable "expire_date" Json.Encode.string model.expireDate
            , maybeEncodeNullable "minimum_quorum" Json.Encode.string model.minimumQuorum
            , maybeEncodeNullable "required_support" Json.Encode.string model.requiredSupport
            , maybeEncodeNullable "snapshot_block" Json.Encode.string model.snapshotBlock
            , maybeEncodeNullable "voting_power" Json.Encode.string model.votingPower
            , maybeEncodeNullable "metadata" Json.Encode.string model.metadata
            , maybeEncodeNullable "text" Json.Encode.string model.text
            , maybeEncodeNullable "vote_count" Json.Encode.string model.voteCount
            , maybeEncodeNullable "positive_vote_count" Json.Encode.string model.positiveVoteCount
            , maybeEncodeNullable "negative_vote_count" Json.Encode.string model.negativeVoteCount
            , maybeEncodeNullable "current_quorum" Json.Encode.string model.currentQuorum
            , maybeEncodeNullable "current_support" Json.Encode.string model.currentSupport
            , maybeEncodeNullable "staked_support" Json.Encode.string model.stakedSupport
            , maybeEncodeNullable "total_staked" Json.Encode.string model.totalStaked
            , maybeEncodeNullable "created" Json.Encode.string model.created
            , maybeEncodeNullable "created_at_block" Json.Encode.string model.createdAtBlock
            , maybeEncodeNullable "created_at_transaction" Json.Encode.string model.createdAtTransaction
            , maybeEncodeNullable "updated" Json.Encode.string model.updated
            , maybeEncodeNullable "updated_at_block" Json.Encode.string model.updatedAtBlock
            , maybeEncodeNullable "updated_at_transaction" Json.Encode.string model.updatedAtTransaction
            , maybeEncodeNullable "executed" Json.Encode.string model.executed
            , maybeEncodeNullable "executed_at_block" Json.Encode.string model.executedAtBlock
            , maybeEncodeNullable "executed_at_transaction" Json.Encode.string model.executedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveProposalVoteDTO : CurveProposalVoteDTO -> Json.Encode.Value
encodeCurveProposalVoteDTO =
    encodeObject << encodeCurveProposalVoteDTOPairs


encodeCurveProposalVoteDTOWithTag : ( String, String ) -> CurveProposalVoteDTO -> Json.Encode.Value
encodeCurveProposalVoteDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveProposalVoteDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveProposalVoteDTOPairs : CurveProposalVoteDTO -> List EncodedField
encodeCurveProposalVoteDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "proposal" Json.Encode.string model.proposal
            , maybeEncode "supports" Json.Encode.bool model.supports
            , maybeEncodeNullable "stake" Json.Encode.string model.stake
            , maybeEncodeNullable "voter" Json.Encode.string model.voter
            , maybeEncodeNullable "created" Json.Encode.string model.created
            , maybeEncodeNullable "created_at_block" Json.Encode.string model.createdAtBlock
            , maybeEncodeNullable "created_at_transaction" Json.Encode.string model.createdAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveRemoveLiquidityEventDTO : CurveRemoveLiquidityEventDTO -> Json.Encode.Value
encodeCurveRemoveLiquidityEventDTO =
    encodeObject << encodeCurveRemoveLiquidityEventDTOPairs


encodeCurveRemoveLiquidityEventDTOWithTag : ( String, String ) -> CurveRemoveLiquidityEventDTO -> Json.Encode.Value
encodeCurveRemoveLiquidityEventDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveRemoveLiquidityEventDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveRemoveLiquidityEventDTOPairs : CurveRemoveLiquidityEventDTO -> List EncodedField
encodeCurveRemoveLiquidityEventDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "provider" Json.Encode.string model.provider
            , maybeEncodeNullable "token_amounts" (Json.Encode.list Json.Encode.string) model.tokenAmounts
            , maybeEncodeNullable "fees" (Json.Encode.list Json.Encode.string) model.fees
            , maybeEncodeNullable "token_supply" Json.Encode.string model.tokenSupply
            , maybeEncodeNullable "invariant" Json.Encode.string model.invariant
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveRemoveLiquidityOneEventDTO : CurveRemoveLiquidityOneEventDTO -> Json.Encode.Value
encodeCurveRemoveLiquidityOneEventDTO =
    encodeObject << encodeCurveRemoveLiquidityOneEventDTOPairs


encodeCurveRemoveLiquidityOneEventDTOWithTag : ( String, String ) -> CurveRemoveLiquidityOneEventDTO -> Json.Encode.Value
encodeCurveRemoveLiquidityOneEventDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveRemoveLiquidityOneEventDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveRemoveLiquidityOneEventDTOPairs : CurveRemoveLiquidityOneEventDTO -> List EncodedField
encodeCurveRemoveLiquidityOneEventDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "provider" Json.Encode.string model.provider
            , maybeEncodeNullable "token_amount" Json.Encode.string model.tokenAmount
            , maybeEncodeNullable "coin_amount" Json.Encode.string model.coinAmount
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveSystemStateDTO : CurveSystemStateDTO -> Json.Encode.Value
encodeCurveSystemStateDTO =
    encodeObject << encodeCurveSystemStateDTOPairs


encodeCurveSystemStateDTOWithTag : ( String, String ) -> CurveSystemStateDTO -> Json.Encode.Value
encodeCurveSystemStateDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveSystemStateDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveSystemStateDTOPairs : CurveSystemStateDTO -> List EncodedField
encodeCurveSystemStateDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "registry_contract" Json.Encode.string model.registryContract
            , maybeEncodeNullable "contract_count" Json.Encode.string model.contractCount
            , maybeEncodeNullable "gauge_count" Json.Encode.string model.gaugeCount
            , maybeEncodeNullable "gauge_type_count" Json.Encode.string model.gaugeTypeCount
            , maybeEncodeNullable "pool_count" Json.Encode.string model.poolCount
            , maybeEncodeNullable "token_count" Json.Encode.string model.tokenCount
            , maybeEncodeNullable "total_pool_count" Json.Encode.string model.totalPoolCount
            , maybeEncodeNullable "updated" Json.Encode.string model.updated
            , maybeEncodeNullable "updated_at_block" Json.Encode.string model.updatedAtBlock
            , maybeEncodeNullable "updated_at_transaction" Json.Encode.string model.updatedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveTokenDTO : CurveTokenDTO -> Json.Encode.Value
encodeCurveTokenDTO =
    encodeObject << encodeCurveTokenDTOPairs


encodeCurveTokenDTOWithTag : ( String, String ) -> CurveTokenDTO -> Json.Encode.Value
encodeCurveTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveTokenDTOPairs : CurveTokenDTO -> List EncodedField
encodeCurveTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "pools" (Json.Encode.list Json.Encode.string) model.pools
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeCurveTransferOwnershipEventDTO : CurveTransferOwnershipEventDTO -> Json.Encode.Value
encodeCurveTransferOwnershipEventDTO =
    encodeObject << encodeCurveTransferOwnershipEventDTOPairs


encodeCurveTransferOwnershipEventDTOWithTag : ( String, String ) -> CurveTransferOwnershipEventDTO -> Json.Encode.Value
encodeCurveTransferOwnershipEventDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveTransferOwnershipEventDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveTransferOwnershipEventDTOPairs : CurveTransferOwnershipEventDTO -> List EncodedField
encodeCurveTransferOwnershipEventDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "new_admin" Json.Encode.string model.newAdmin
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveUnderlyingCoinDTO : CurveUnderlyingCoinDTO -> Json.Encode.Value
encodeCurveUnderlyingCoinDTO =
    encodeObject << encodeCurveUnderlyingCoinDTOPairs


encodeCurveUnderlyingCoinDTOWithTag : ( String, String ) -> CurveUnderlyingCoinDTO -> Json.Encode.Value
encodeCurveUnderlyingCoinDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveUnderlyingCoinDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveUnderlyingCoinDTOPairs : CurveUnderlyingCoinDTO -> List EncodedField
encodeCurveUnderlyingCoinDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "index" Json.Encode.int model.index
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "coin" Json.Encode.string model.coin
            , maybeEncodeNullable "balance" Json.Encode.string model.balance
            , maybeEncodeNullable "updated" Json.Encode.string model.updated
            , maybeEncodeNullable "updated_at_block" Json.Encode.string model.updatedAtBlock
            , maybeEncodeNullable "updated_at_transaction" Json.Encode.string model.updatedAtTransaction
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveVotingAppDTO : CurveVotingAppDTO -> Json.Encode.Value
encodeCurveVotingAppDTO =
    encodeObject << encodeCurveVotingAppDTOPairs


encodeCurveVotingAppDTOWithTag : ( String, String ) -> CurveVotingAppDTO -> Json.Encode.Value
encodeCurveVotingAppDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveVotingAppDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveVotingAppDTOPairs : CurveVotingAppDTO -> List EncodedField
encodeCurveVotingAppDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "codename" Json.Encode.string model.codename
            , maybeEncodeNullable "minimum_balance" Json.Encode.string model.minimumBalance
            , maybeEncodeNullable "minimum_quorum" Json.Encode.string model.minimumQuorum
            , maybeEncodeNullable "minimum_time" Json.Encode.string model.minimumTime
            , maybeEncodeNullable "required_support" Json.Encode.string model.requiredSupport
            , maybeEncodeNullable "vote_time" Json.Encode.string model.voteTime
            , maybeEncodeNullable "proposal_count" Json.Encode.string model.proposalCount
            , maybeEncodeNullable "vote_count" Json.Encode.string model.voteCount
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeCurveWeeklyVolumeDTO : CurveWeeklyVolumeDTO -> Json.Encode.Value
encodeCurveWeeklyVolumeDTO =
    encodeObject << encodeCurveWeeklyVolumeDTOPairs


encodeCurveWeeklyVolumeDTOWithTag : ( String, String ) -> CurveWeeklyVolumeDTO -> Json.Encode.Value
encodeCurveWeeklyVolumeDTOWithTag (tagField, tag) model =
    encodeObject (encodeCurveWeeklyVolumeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeCurveWeeklyVolumeDTOPairs : CurveWeeklyVolumeDTO -> List EncodedField
encodeCurveWeeklyVolumeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexBatchDTO : DexBatchDTO -> Json.Encode.Value
encodeDexBatchDTO =
    encodeObject << encodeDexBatchDTOPairs


encodeDexBatchDTOWithTag : ( String, String ) -> DexBatchDTO -> Json.Encode.Value
encodeDexBatchDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexBatchDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexBatchDTOPairs : DexBatchDTO -> List EncodedField
encodeDexBatchDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "start_epoch" Json.Encode.string model.startEpoch
            , maybeEncodeNullable "end_epoch" Json.Encode.string model.endEpoch
            , maybeEncodeNullable "solution" Json.Encode.string model.solution
            , maybeEncodeNullable "first_solution_epoch" Json.Encode.string model.firstSolutionEpoch
            , maybeEncodeNullable "last_revert_epoch" Json.Encode.string model.lastRevertEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexDepositDTO : DexDepositDTO -> Json.Encode.Value
encodeDexDepositDTO =
    encodeObject << encodeDexDepositDTOPairs


encodeDexDepositDTOWithTag : ( String, String ) -> DexDepositDTO -> Json.Encode.Value
encodeDexDepositDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexDepositDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexDepositDTOPairs : DexDepositDTO -> List EncodedField
encodeDexDepositDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "token_address" Json.Encode.string model.tokenAddress
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "batch_id" Json.Encode.string model.batchId
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexOrderDTO : DexOrderDTO -> Json.Encode.Value
encodeDexOrderDTO =
    encodeObject << encodeDexOrderDTOPairs


encodeDexOrderDTOWithTag : ( String, String ) -> DexOrderDTO -> Json.Encode.Value
encodeDexOrderDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexOrderDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexOrderDTOPairs : DexOrderDTO -> List EncodedField
encodeDexOrderDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncode "order_id" Json.Encode.int model.orderId
            , maybeEncodeNullable "from_batch_id" Json.Encode.string model.fromBatchId
            , maybeEncodeNullable "from_epoch" Json.Encode.string model.fromEpoch
            , maybeEncodeNullable "until_batch_id" Json.Encode.string model.untilBatchId
            , maybeEncodeNullable "until_epoch" Json.Encode.string model.untilEpoch
            , maybeEncodeNullable "buy_token" Json.Encode.string model.buyToken
            , maybeEncodeNullable "sell_token" Json.Encode.string model.sellToken
            , maybeEncodeNullable "price_numerator" Json.Encode.string model.priceNumerator
            , maybeEncodeNullable "price_denominator" Json.Encode.string model.priceDenominator
            , maybeEncodeNullable "max_sell_amount" Json.Encode.string model.maxSellAmount
            , maybeEncodeNullable "min_receive_amount" Json.Encode.string model.minReceiveAmount
            , maybeEncodeNullable "sold_volume" Json.Encode.string model.soldVolume
            , maybeEncodeNullable "bought_volume" Json.Encode.string model.boughtVolume
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "cancel_epoch" Json.Encode.string model.cancelEpoch
            , maybeEncodeNullable "delete_epoch" Json.Encode.string model.deleteEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "tx_log_index" Json.Encode.string model.txLogIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexPriceDTO : DexPriceDTO -> Json.Encode.Value
encodeDexPriceDTO =
    encodeObject << encodeDexPriceDTOPairs


encodeDexPriceDTOWithTag : ( String, String ) -> DexPriceDTO -> Json.Encode.Value
encodeDexPriceDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexPriceDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexPriceDTOPairs : DexPriceDTO -> List EncodedField
encodeDexPriceDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "batch_id" Json.Encode.string model.batchId
            , maybeEncodeNullable "price_in_owl_numerator" Json.Encode.string model.priceInOwlNumerator
            , maybeEncodeNullable "price_in_owl_denominator" Json.Encode.string model.priceInOwlDenominator
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexSolutionDTO : DexSolutionDTO -> Json.Encode.Value
encodeDexSolutionDTO =
    encodeObject << encodeDexSolutionDTOPairs


encodeDexSolutionDTOWithTag : ( String, String ) -> DexSolutionDTO -> Json.Encode.Value
encodeDexSolutionDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexSolutionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexSolutionDTOPairs : DexSolutionDTO -> List EncodedField
encodeDexSolutionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "batch" Json.Encode.string model.batch
            , maybeEncodeNullable "solver" Json.Encode.string model.solver
            , maybeEncodeNullable "fee_reward" Json.Encode.string model.feeReward
            , maybeEncodeNullable "objective_value" Json.Encode.string model.objectiveValue
            , maybeEncodeNullable "utility" Json.Encode.string model.utility
            , maybeEncodeNullable "trades" (Json.Encode.list Json.Encode.string) model.trades
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "revert_epoch" Json.Encode.string model.revertEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "tx_log_index" Json.Encode.string model.txLogIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexStatsDTO : DexStatsDTO -> Json.Encode.Value
encodeDexStatsDTO =
    encodeObject << encodeDexStatsDTOPairs


encodeDexStatsDTOWithTag : ( String, String ) -> DexStatsDTO -> Json.Encode.Value
encodeDexStatsDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexStatsDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexStatsDTOPairs : DexStatsDTO -> List EncodedField
encodeDexStatsDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "volume_in_owl" Json.Encode.string model.volumeInOwl
            , maybeEncodeNullable "utility_in_owl" Json.Encode.string model.utilityInOwl
            , maybeEncodeNullable "owl_burnt" Json.Encode.string model.owlBurnt
            , maybeEncode "settled_batch_count" Json.Encode.int model.settledBatchCount
            , maybeEncode "settled_trade_count" Json.Encode.int model.settledTradeCount
            , maybeEncode "listed_tokens" Json.Encode.int model.listedTokens
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexTokenDTO : DexTokenDTO -> Json.Encode.Value
encodeDexTokenDTO =
    encodeObject << encodeDexTokenDTOPairs


encodeDexTokenDTOWithTag : ( String, String ) -> DexTokenDTO -> Json.Encode.Value
encodeDexTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexTokenDTOPairs : DexTokenDTO -> List EncodedField
encodeDexTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "address" Json.Encode.string model.address
            , maybeEncodeNullable "from_batch_id" Json.Encode.string model.fromBatchId
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "sell_volume" Json.Encode.string model.sellVolume
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeDexTradeDTO : DexTradeDTO -> Json.Encode.Value
encodeDexTradeDTO =
    encodeObject << encodeDexTradeDTOPairs


encodeDexTradeDTOWithTag : ( String, String ) -> DexTradeDTO -> Json.Encode.Value
encodeDexTradeDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexTradeDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexTradeDTOPairs : DexTradeDTO -> List EncodedField
encodeDexTradeDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "order" Json.Encode.string model.order
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "sell_volume" Json.Encode.string model.sellVolume
            , maybeEncodeNullable "buy_volume" Json.Encode.string model.buyVolume
            , maybeEncodeNullable "trade_batch_id" Json.Encode.string model.tradeBatchId
            , maybeEncodeNullable "trade_epoch" Json.Encode.string model.tradeEpoch
            , maybeEncodeNullable "buy_token" Json.Encode.string model.buyToken
            , maybeEncodeNullable "sell_token" Json.Encode.string model.sellToken
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "revert_epoch" Json.Encode.string model.revertEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncodeNullable "tx_log_index" Json.Encode.string model.txLogIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeDexUserDTO : DexUserDTO -> Json.Encode.Value
encodeDexUserDTO =
    encodeObject << encodeDexUserDTOPairs


encodeDexUserDTOWithTag : ( String, String ) -> DexUserDTO -> Json.Encode.Value
encodeDexUserDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexUserDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexUserDTOPairs : DexUserDTO -> List EncodedField
encodeDexUserDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "from_batch_id" Json.Encode.string model.fromBatchId
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexWithdrawDTO : DexWithdrawDTO -> Json.Encode.Value
encodeDexWithdrawDTO =
    encodeObject << encodeDexWithdrawDTOPairs


encodeDexWithdrawDTOWithTag : ( String, String ) -> DexWithdrawDTO -> Json.Encode.Value
encodeDexWithdrawDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexWithdrawDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexWithdrawDTOPairs : DexWithdrawDTO -> List EncodedField
encodeDexWithdrawDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "token_address" Json.Encode.string model.tokenAddress
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "create_batch_id" Json.Encode.string model.createBatchId
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeDexWithdrawRequestDTO : DexWithdrawRequestDTO -> Json.Encode.Value
encodeDexWithdrawRequestDTO =
    encodeObject << encodeDexWithdrawRequestDTOPairs


encodeDexWithdrawRequestDTOWithTag : ( String, String ) -> DexWithdrawRequestDTO -> Json.Encode.Value
encodeDexWithdrawRequestDTOWithTag (tagField, tag) model =
    encodeObject (encodeDexWithdrawRequestDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeDexWithdrawRequestDTOPairs : DexWithdrawRequestDTO -> List EncodedField
encodeDexWithdrawRequestDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "token_address" Json.Encode.string model.tokenAddress
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "withdrawable_from_batch_id" Json.Encode.string model.withdrawableFromBatchId
            , maybeEncodeNullable "create_epoch" Json.Encode.string model.createEpoch
            , maybeEncodeNullable "create_batch_id" Json.Encode.string model.createBatchId
            , maybeEncodeNullable "tx_hash" Json.Encode.string model.txHash
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeNumericsBigInteger : NumericsBigInteger -> Json.Encode.Value
encodeNumericsBigInteger =
    encodeObject << encodeNumericsBigIntegerPairs


encodeNumericsBigIntegerWithTag : ( String, String ) -> NumericsBigInteger -> Json.Encode.Value
encodeNumericsBigIntegerWithTag (tagField, tag) model =
    encodeObject (encodeNumericsBigIntegerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeNumericsBigIntegerPairs : NumericsBigInteger -> List EncodedField
encodeNumericsBigIntegerPairs model =
    let
        pairs =
            [ maybeEncode "is_power_of_two" Json.Encode.bool model.isPowerOfTwo
            , maybeEncode "is_zero" Json.Encode.bool model.isZero
            , maybeEncode "is_one" Json.Encode.bool model.isOne
            , maybeEncode "is_even" Json.Encode.bool model.isEven
            , maybeEncode "sign" Json.Encode.int model.sign
            ]
    in
    pairs


encodeSushiswapBundleDTO : SushiswapBundleDTO -> Json.Encode.Value
encodeSushiswapBundleDTO =
    encodeObject << encodeSushiswapBundleDTOPairs


encodeSushiswapBundleDTOWithTag : ( String, String ) -> SushiswapBundleDTO -> Json.Encode.Value
encodeSushiswapBundleDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapBundleDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapBundleDTOPairs : SushiswapBundleDTO -> List EncodedField
encodeSushiswapBundleDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "eth_price" Json.Encode.string model.ethPrice
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapBurnDTO : SushiswapBurnDTO -> Json.Encode.Value
encodeSushiswapBurnDTO =
    encodeObject << encodeSushiswapBurnDTOPairs


encodeSushiswapBurnDTOWithTag : ( String, String ) -> SushiswapBurnDTO -> Json.Encode.Value
encodeSushiswapBurnDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapBurnDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapBurnDTOPairs : SushiswapBurnDTO -> List EncodedField
encodeSushiswapBurnDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "complete" Json.Encode.bool model.complete
            , maybeEncodeNullable "fee_to" Json.Encode.string model.feeTo
            , maybeEncodeNullable "fee_liquidity" Json.Encode.string model.feeLiquidity
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapDayDataDTO : SushiswapDayDataDTO -> Json.Encode.Value
encodeSushiswapDayDataDTO =
    encodeObject << encodeSushiswapDayDataDTOPairs


encodeSushiswapDayDataDTOWithTag : ( String, String ) -> SushiswapDayDataDTO -> Json.Encode.Value
encodeSushiswapDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapDayDataDTOPairs : SushiswapDayDataDTO -> List EncodedField
encodeSushiswapDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume" Json.Encode.string model.untrackedVolume
            , maybeEncodeNullable "liquidity_eth" Json.Encode.string model.liquidityEth
            , maybeEncodeNullable "liquidity_usd" Json.Encode.string model.liquidityUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapFactoryDTO : SushiswapFactoryDTO -> Json.Encode.Value
encodeSushiswapFactoryDTO =
    encodeObject << encodeSushiswapFactoryDTOPairs


encodeSushiswapFactoryDTOWithTag : ( String, String ) -> SushiswapFactoryDTO -> Json.Encode.Value
encodeSushiswapFactoryDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapFactoryDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapFactoryDTOPairs : SushiswapFactoryDTO -> List EncodedField
encodeSushiswapFactoryDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pair_count" Json.Encode.string model.pairCount
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "liquidity_usd" Json.Encode.string model.liquidityUsd
            , maybeEncodeNullable "liquidity_eth" Json.Encode.string model.liquidityEth
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "token_count" Json.Encode.string model.tokenCount
            , maybeEncodeNullable "user_count" Json.Encode.string model.userCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapHourDataDTO : SushiswapHourDataDTO -> Json.Encode.Value
encodeSushiswapHourDataDTO =
    encodeObject << encodeSushiswapHourDataDTOPairs


encodeSushiswapHourDataDTOWithTag : ( String, String ) -> SushiswapHourDataDTO -> Json.Encode.Value
encodeSushiswapHourDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapHourDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapHourDataDTOPairs : SushiswapHourDataDTO -> List EncodedField
encodeSushiswapHourDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume" Json.Encode.string model.untrackedVolume
            , maybeEncodeNullable "liquidity_eth" Json.Encode.string model.liquidityEth
            , maybeEncodeNullable "liquidity_usd" Json.Encode.string model.liquidityUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapLiquidityPositionDTO : SushiswapLiquidityPositionDTO -> Json.Encode.Value
encodeSushiswapLiquidityPositionDTO =
    encodeObject << encodeSushiswapLiquidityPositionDTOPairs


encodeSushiswapLiquidityPositionDTOWithTag : ( String, String ) -> SushiswapLiquidityPositionDTO -> Json.Encode.Value
encodeSushiswapLiquidityPositionDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapLiquidityPositionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapLiquidityPositionDTOPairs : SushiswapLiquidityPositionDTO -> List EncodedField
encodeSushiswapLiquidityPositionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "liquidity_token_balance" Json.Encode.string model.liquidityTokenBalance
            , maybeEncode "block" Json.Encode.int model.block
            , maybeEncode "timestamp" Json.Encode.int model.timestamp
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapLiquidityPositionSnapshotDTO : SushiswapLiquidityPositionSnapshotDTO -> Json.Encode.Value
encodeSushiswapLiquidityPositionSnapshotDTO =
    encodeObject << encodeSushiswapLiquidityPositionSnapshotDTOPairs


encodeSushiswapLiquidityPositionSnapshotDTOWithTag : ( String, String ) -> SushiswapLiquidityPositionSnapshotDTO -> Json.Encode.Value
encodeSushiswapLiquidityPositionSnapshotDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapLiquidityPositionSnapshotDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapLiquidityPositionSnapshotDTOPairs : SushiswapLiquidityPositionSnapshotDTO -> List EncodedField
encodeSushiswapLiquidityPositionSnapshotDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "liquidity_position" Json.Encode.string model.liquidityPosition
            , maybeEncode "timestamp" Json.Encode.int model.timestamp
            , maybeEncode "block" Json.Encode.int model.block
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "token_0_price_usd" Json.Encode.string model.token0PriceUsd
            , maybeEncodeNullable "token_1_price_usd" Json.Encode.string model.token1PriceUsd
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "liquidity_token_total_supply" Json.Encode.string model.liquidityTokenTotalSupply
            , maybeEncodeNullable "liquidity_token_balance" Json.Encode.string model.liquidityTokenBalance
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapMintDTO : SushiswapMintDTO -> Json.Encode.Value
encodeSushiswapMintDTO =
    encodeObject << encodeSushiswapMintDTOPairs


encodeSushiswapMintDTOWithTag : ( String, String ) -> SushiswapMintDTO -> Json.Encode.Value
encodeSushiswapMintDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapMintDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapMintDTOPairs : SushiswapMintDTO -> List EncodedField
encodeSushiswapMintDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "fee_to" Json.Encode.string model.feeTo
            , maybeEncodeNullable "fee_liquidity" Json.Encode.string model.feeLiquidity
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapPairDTO : SushiswapPairDTO -> Json.Encode.Value
encodeSushiswapPairDTO =
    encodeObject << encodeSushiswapPairDTOPairs


encodeSushiswapPairDTOWithTag : ( String, String ) -> SushiswapPairDTO -> Json.Encode.Value
encodeSushiswapPairDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapPairDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapPairDTOPairs : SushiswapPairDTO -> List EncodedField
encodeSushiswapPairDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "block" Json.Encode.string model.block
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeSushiswapPairDayDataDTO : SushiswapPairDayDataDTO -> Json.Encode.Value
encodeSushiswapPairDayDataDTO =
    encodeObject << encodeSushiswapPairDayDataDTOPairs


encodeSushiswapPairDayDataDTOWithTag : ( String, String ) -> SushiswapPairDayDataDTO -> Json.Encode.Value
encodeSushiswapPairDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapPairDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapPairDayDataDTOPairs : SushiswapPairDayDataDTO -> List EncodedField
encodeSushiswapPairDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapPairHourDataDTO : SushiswapPairHourDataDTO -> Json.Encode.Value
encodeSushiswapPairHourDataDTO =
    encodeObject << encodeSushiswapPairHourDataDTOPairs


encodeSushiswapPairHourDataDTOWithTag : ( String, String ) -> SushiswapPairHourDataDTO -> Json.Encode.Value
encodeSushiswapPairHourDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapPairHourDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapPairHourDataDTOPairs : SushiswapPairHourDataDTO -> List EncodedField
encodeSushiswapPairHourDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapSwapDTO : SushiswapSwapDTO -> Json.Encode.Value
encodeSushiswapSwapDTO =
    encodeObject << encodeSushiswapSwapDTOPairs


encodeSushiswapSwapDTOWithTag : ( String, String ) -> SushiswapSwapDTO -> Json.Encode.Value
encodeSushiswapSwapDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapSwapDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapSwapDTOPairs : SushiswapSwapDTO -> List EncodedField
encodeSushiswapSwapDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            ]
    in
    pairs


encodeSushiswapTokenDTO : SushiswapTokenDTO -> Json.Encode.Value
encodeSushiswapTokenDTO =
    encodeObject << encodeSushiswapTokenDTOPairs


encodeSushiswapTokenDTOWithTag : ( String, String ) -> SushiswapTokenDTO -> Json.Encode.Value
encodeSushiswapTokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapTokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapTokenDTOPairs : SushiswapTokenDTO -> List EncodedField
encodeSushiswapTokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "factory" Json.Encode.string model.factory
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncodeNullable "decimals" Json.Encode.string model.decimals
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pairs" (Json.Encode.list Json.Encode.string) model.whitelistPairs
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeSushiswapTokenDayDataDTO : SushiswapTokenDayDataDTO -> Json.Encode.Value
encodeSushiswapTokenDayDataDTO =
    encodeObject << encodeSushiswapTokenDayDataDTOPairs


encodeSushiswapTokenDayDataDTOWithTag : ( String, String ) -> SushiswapTokenDayDataDTO -> Json.Encode.Value
encodeSushiswapTokenDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapTokenDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapTokenDayDataDTOPairs : SushiswapTokenDayDataDTO -> List EncodedField
encodeSushiswapTokenDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "liquidity_eth" Json.Encode.string model.liquidityEth
            , maybeEncodeNullable "liquidity_usd" Json.Encode.string model.liquidityUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapTransactionDTO : SushiswapTransactionDTO -> Json.Encode.Value
encodeSushiswapTransactionDTO =
    encodeObject << encodeSushiswapTransactionDTOPairs


encodeSushiswapTransactionDTOWithTag : ( String, String ) -> SushiswapTransactionDTO -> Json.Encode.Value
encodeSushiswapTransactionDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapTransactionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapTransactionDTOPairs : SushiswapTransactionDTO -> List EncodedField
encodeSushiswapTransactionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "mints" (Json.Encode.list Json.Encode.string) model.mints
            , maybeEncodeNullable "burns" (Json.Encode.list Json.Encode.string) model.burns
            , maybeEncodeNullable "swaps" (Json.Encode.list Json.Encode.string) model.swaps
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeSushiswapUserDTO : SushiswapUserDTO -> Json.Encode.Value
encodeSushiswapUserDTO =
    encodeObject << encodeSushiswapUserDTOPairs


encodeSushiswapUserDTOWithTag : ( String, String ) -> SushiswapUserDTO -> Json.Encode.Value
encodeSushiswapUserDTOWithTag (tagField, tag) model =
    encodeObject (encodeSushiswapUserDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSushiswapUserDTOPairs : SushiswapUserDTO -> List EncodedField
encodeSushiswapUserDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


stringFromTransactionsETradeAggressiveSide : TransactionsETradeAggressiveSide -> String
stringFromTransactionsETradeAggressiveSide model =
    case model of
        TransactionsETradeAggressiveSideBuy ->
            "Buy"

        TransactionsETradeAggressiveSideSell ->
            "Sell"

        TransactionsETradeAggressiveSideEstimatedBuy ->
            "EstimatedBuy"

        TransactionsETradeAggressiveSideEstimatedSell ->
            "EstimatedSell"

        TransactionsETradeAggressiveSideUnknown ->
            "Unknown"


encodeTransactionsETradeAggressiveSide : TransactionsETradeAggressiveSide -> Json.Encode.Value
encodeTransactionsETradeAggressiveSide =
    Json.Encode.string << stringFromTransactionsETradeAggressiveSide


encodeUniswapV2BundleDTO : UniswapV2BundleDTO -> Json.Encode.Value
encodeUniswapV2BundleDTO =
    encodeObject << encodeUniswapV2BundleDTOPairs


encodeUniswapV2BundleDTOWithTag : ( String, String ) -> UniswapV2BundleDTO -> Json.Encode.Value
encodeUniswapV2BundleDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2BundleDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2BundleDTOPairs : UniswapV2BundleDTO -> List EncodedField
encodeUniswapV2BundleDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "eth_price" Json.Encode.string model.ethPrice
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeUniswapV2BurnDTO : UniswapV2BurnDTO -> Json.Encode.Value
encodeUniswapV2BurnDTO =
    encodeObject << encodeUniswapV2BurnDTOPairs


encodeUniswapV2BurnDTOWithTag : ( String, String ) -> UniswapV2BurnDTO -> Json.Encode.Value
encodeUniswapV2BurnDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2BurnDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2BurnDTOPairs : UniswapV2BurnDTO -> List EncodedField
encodeUniswapV2BurnDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "needs_complete" Json.Encode.bool model.needsComplete
            , maybeEncodeNullable "fee_to" Json.Encode.string model.feeTo
            , maybeEncodeNullable "fee_liquidity" Json.Encode.string model.feeLiquidity
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2LiquidityPositionDTO : UniswapV2LiquidityPositionDTO -> Json.Encode.Value
encodeUniswapV2LiquidityPositionDTO =
    encodeObject << encodeUniswapV2LiquidityPositionDTOPairs


encodeUniswapV2LiquidityPositionDTOWithTag : ( String, String ) -> UniswapV2LiquidityPositionDTO -> Json.Encode.Value
encodeUniswapV2LiquidityPositionDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2LiquidityPositionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2LiquidityPositionDTOPairs : UniswapV2LiquidityPositionDTO -> List EncodedField
encodeUniswapV2LiquidityPositionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "liquidity_token_balance" Json.Encode.string model.liquidityTokenBalance
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2LiquidityPositionSnapshotDTO : UniswapV2LiquidityPositionSnapshotDTO -> Json.Encode.Value
encodeUniswapV2LiquidityPositionSnapshotDTO =
    encodeObject << encodeUniswapV2LiquidityPositionSnapshotDTOPairs


encodeUniswapV2LiquidityPositionSnapshotDTOWithTag : ( String, String ) -> UniswapV2LiquidityPositionSnapshotDTO -> Json.Encode.Value
encodeUniswapV2LiquidityPositionSnapshotDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2LiquidityPositionSnapshotDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2LiquidityPositionSnapshotDTOPairs : UniswapV2LiquidityPositionSnapshotDTO -> List EncodedField
encodeUniswapV2LiquidityPositionSnapshotDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "liquidity_position" Json.Encode.string model.liquidityPosition
            , maybeEncode "timestamp" Json.Encode.int model.timestamp
            , maybeEncode "block" Json.Encode.int model.block
            , maybeEncodeNullable "user" Json.Encode.string model.user
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "token_0_price_usd" Json.Encode.string model.token0PriceUsd
            , maybeEncodeNullable "token_1_price_usd" Json.Encode.string model.token1PriceUsd
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "liquidity_token_total_supply" Json.Encode.string model.liquidityTokenTotalSupply
            , maybeEncodeNullable "liquidity_token_balance" Json.Encode.string model.liquidityTokenBalance
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeUniswapV2MintDTO : UniswapV2MintDTO -> Json.Encode.Value
encodeUniswapV2MintDTO =
    encodeObject << encodeUniswapV2MintDTOPairs


encodeUniswapV2MintDTOWithTag : ( String, String ) -> UniswapV2MintDTO -> Json.Encode.Value
encodeUniswapV2MintDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2MintDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2MintDTOPairs : UniswapV2MintDTO -> List EncodedField
encodeUniswapV2MintDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "fee_to" Json.Encode.string model.feeTo
            , maybeEncodeNullable "fee_liquidity" Json.Encode.string model.feeLiquidity
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "block_range" Json.Encode.string model.blockRange
            ]
    in
    pairs


encodeUniswapV2PairDTO : UniswapV2PairDTO -> Json.Encode.Value
encodeUniswapV2PairDTO =
    encodeObject << encodeUniswapV2PairDTOPairs


encodeUniswapV2PairDTOWithTag : ( String, String ) -> UniswapV2PairDTO -> Json.Encode.Value
encodeUniswapV2PairDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2PairDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2PairDTOPairs : UniswapV2PairDTO -> List EncodedField
encodeUniswapV2PairDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_eth" Json.Encode.string model.reserveEth
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "tracked_reserve_eth" Json.Encode.string model.trackedReserveEth
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeUniswapV2PairDayDataDTO : UniswapV2PairDayDataDTO -> Json.Encode.Value
encodeUniswapV2PairDayDataDTO =
    encodeObject << encodeUniswapV2PairDayDataDTOPairs


encodeUniswapV2PairDayDataDTOWithTag : ( String, String ) -> UniswapV2PairDayDataDTO -> Json.Encode.Value
encodeUniswapV2PairDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2PairDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2PairDayDataDTOPairs : UniswapV2PairDayDataDTO -> List EncodedField
encodeUniswapV2PairDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pair_address" Json.Encode.string model.pairAddress
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "daily_volume_token_0" Json.Encode.string model.dailyVolumeToken0
            , maybeEncodeNullable "daily_volume_token_1" Json.Encode.string model.dailyVolumeToken1
            , maybeEncodeNullable "daily_volume_usd" Json.Encode.string model.dailyVolumeUsd
            , maybeEncodeNullable "daily_txns" Json.Encode.string model.dailyTxns
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2PairHourDataDTO : UniswapV2PairHourDataDTO -> Json.Encode.Value
encodeUniswapV2PairHourDataDTO =
    encodeObject << encodeUniswapV2PairHourDataDTOPairs


encodeUniswapV2PairHourDataDTOWithTag : ( String, String ) -> UniswapV2PairHourDataDTO -> Json.Encode.Value
encodeUniswapV2PairHourDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2PairHourDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2PairHourDataDTOPairs : UniswapV2PairHourDataDTO -> List EncodedField
encodeUniswapV2PairHourDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "hour_start_unix" Json.Encode.int model.hourStartUnix
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "reserve_0" Json.Encode.string model.reserve0
            , maybeEncodeNullable "reserve_1" Json.Encode.string model.reserve1
            , maybeEncodeNullable "total_supply" Json.Encode.string model.totalSupply
            , maybeEncodeNullable "reserve_usd" Json.Encode.string model.reserveUsd
            , maybeEncodeNullable "hourly_volume_token_0" Json.Encode.string model.hourlyVolumeToken0
            , maybeEncodeNullable "hourly_volume_token_1" Json.Encode.string model.hourlyVolumeToken1
            , maybeEncodeNullable "hourly_volume_usd" Json.Encode.string model.hourlyVolumeUsd
            , maybeEncodeNullable "hourly_txns" Json.Encode.string model.hourlyTxns
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2SwapDTO : UniswapV2SwapDTO -> Json.Encode.Value
encodeUniswapV2SwapDTO =
    encodeObject << encodeUniswapV2SwapDTOPairs


encodeUniswapV2SwapDTOWithTag : ( String, String ) -> UniswapV2SwapDTO -> Json.Encode.Value
encodeUniswapV2SwapDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2SwapDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2SwapDTOPairs : UniswapV2SwapDTO -> List EncodedField
encodeUniswapV2SwapDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pair" Json.Encode.string model.pair
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "from" Json.Encode.string model.from
            , maybeEncodeNullable "amount_0_in" Json.Encode.string model.amount0In
            , maybeEncodeNullable "amount_1_in" Json.Encode.string model.amount1In
            , maybeEncodeNullable "amount_0_out" Json.Encode.string model.amount0Out
            , maybeEncodeNullable "amount_1_out" Json.Encode.string model.amount1Out
            , maybeEncodeNullable "to" Json.Encode.string model.to
            , maybeEncode "log_index" encodeNumericsBigInteger model.logIndex
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeUniswapV2TokenDTO : UniswapV2TokenDTO -> Json.Encode.Value
encodeUniswapV2TokenDTO =
    encodeObject << encodeUniswapV2TokenDTOPairs


encodeUniswapV2TokenDTOWithTag : ( String, String ) -> UniswapV2TokenDTO -> Json.Encode.Value
encodeUniswapV2TokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2TokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2TokenDTOPairs : UniswapV2TokenDTO -> List EncodedField
encodeUniswapV2TokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeNumericsBigInteger model.totalSupply
            , maybeEncodeNullable "trade_volume" Json.Encode.string model.tradeVolume
            , maybeEncodeNullable "trade_volume_usd" Json.Encode.string model.tradeVolumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "total_liquidity" Json.Encode.string model.totalLiquidity
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeUniswapV2TokenDayDataDTO : UniswapV2TokenDayDataDTO -> Json.Encode.Value
encodeUniswapV2TokenDayDataDTO =
    encodeObject << encodeUniswapV2TokenDayDataDTOPairs


encodeUniswapV2TokenDayDataDTOWithTag : ( String, String ) -> UniswapV2TokenDayDataDTO -> Json.Encode.Value
encodeUniswapV2TokenDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2TokenDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2TokenDayDataDTOPairs : UniswapV2TokenDayDataDTO -> List EncodedField
encodeUniswapV2TokenDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "daily_volume_token" Json.Encode.string model.dailyVolumeToken
            , maybeEncodeNullable "daily_volume_eth" Json.Encode.string model.dailyVolumeEth
            , maybeEncodeNullable "daily_volume_usd" Json.Encode.string model.dailyVolumeUsd
            , maybeEncodeNullable "daily_txns" Json.Encode.string model.dailyTxns
            , maybeEncodeNullable "total_liquidity_token" Json.Encode.string model.totalLiquidityToken
            , maybeEncodeNullable "total_liquidity_eth" Json.Encode.string model.totalLiquidityEth
            , maybeEncodeNullable "total_liquidity_usd" Json.Encode.string model.totalLiquidityUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2TransactionDTO : UniswapV2TransactionDTO -> Json.Encode.Value
encodeUniswapV2TransactionDTO =
    encodeObject << encodeUniswapV2TransactionDTOPairs


encodeUniswapV2TransactionDTOWithTag : ( String, String ) -> UniswapV2TransactionDTO -> Json.Encode.Value
encodeUniswapV2TransactionDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2TransactionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2TransactionDTOPairs : UniswapV2TransactionDTO -> List EncodedField
encodeUniswapV2TransactionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "mints" (Json.Encode.list Json.Encode.string) model.mints
            , maybeEncodeNullable "burns" (Json.Encode.list Json.Encode.string) model.burns
            , maybeEncodeNullable "swaps" (Json.Encode.list Json.Encode.string) model.swaps
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2UniswapDayDataDTO : UniswapV2UniswapDayDataDTO -> Json.Encode.Value
encodeUniswapV2UniswapDayDataDTO =
    encodeObject << encodeUniswapV2UniswapDayDataDTOPairs


encodeUniswapV2UniswapDayDataDTOWithTag : ( String, String ) -> UniswapV2UniswapDayDataDTO -> Json.Encode.Value
encodeUniswapV2UniswapDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2UniswapDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2UniswapDayDataDTOPairs : UniswapV2UniswapDayDataDTO -> List EncodedField
encodeUniswapV2UniswapDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "daily_volume_eth" Json.Encode.string model.dailyVolumeEth
            , maybeEncodeNullable "daily_volume_usd" Json.Encode.string model.dailyVolumeUsd
            , maybeEncodeNullable "daily_volume_untracked" Json.Encode.string model.dailyVolumeUntracked
            , maybeEncodeNullable "total_volume_eth" Json.Encode.string model.totalVolumeEth
            , maybeEncodeNullable "total_liquidity_eth" Json.Encode.string model.totalLiquidityEth
            , maybeEncodeNullable "total_volume_usd" Json.Encode.string model.totalVolumeUsd
            , maybeEncodeNullable "total_liquidity_usd" Json.Encode.string model.totalLiquidityUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2UniswapFactoryDTO : UniswapV2UniswapFactoryDTO -> Json.Encode.Value
encodeUniswapV2UniswapFactoryDTO =
    encodeObject << encodeUniswapV2UniswapFactoryDTOPairs


encodeUniswapV2UniswapFactoryDTOWithTag : ( String, String ) -> UniswapV2UniswapFactoryDTO -> Json.Encode.Value
encodeUniswapV2UniswapFactoryDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2UniswapFactoryDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2UniswapFactoryDTOPairs : UniswapV2UniswapFactoryDTO -> List EncodedField
encodeUniswapV2UniswapFactoryDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "pair_count" Json.Encode.int model.pairCount
            , maybeEncodeNullable "total_volume_usd" Json.Encode.string model.totalVolumeUsd
            , maybeEncodeNullable "total_volume_eth" Json.Encode.string model.totalVolumeEth
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_liquidity_usd" Json.Encode.string model.totalLiquidityUsd
            , maybeEncodeNullable "total_liquidity_eth" Json.Encode.string model.totalLiquidityEth
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV2UserDTO : UniswapV2UserDTO -> Json.Encode.Value
encodeUniswapV2UserDTO =
    encodeObject << encodeUniswapV2UserDTOPairs


encodeUniswapV2UserDTOWithTag : ( String, String ) -> UniswapV2UserDTO -> Json.Encode.Value
encodeUniswapV2UserDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV2UserDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV2UserDTOPairs : UniswapV2UserDTO -> List EncodedField
encodeUniswapV2UserDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "usd_swapped" Json.Encode.string model.usdSwapped
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3BundleDTO : UniswapV3BundleDTO -> Json.Encode.Value
encodeUniswapV3BundleDTO =
    encodeObject << encodeUniswapV3BundleDTOPairs


encodeUniswapV3BundleDTOWithTag : ( String, String ) -> UniswapV3BundleDTO -> Json.Encode.Value
encodeUniswapV3BundleDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3BundleDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3BundleDTOPairs : UniswapV3BundleDTO -> List EncodedField
encodeUniswapV3BundleDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "eth_price_usd" Json.Encode.string model.ethPriceUsd
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3BurnDTO : UniswapV3BurnDTO -> Json.Encode.Value
encodeUniswapV3BurnDTO =
    encodeObject << encodeUniswapV3BurnDTOPairs


encodeUniswapV3BurnDTOWithTag : ( String, String ) -> UniswapV3BurnDTO -> Json.Encode.Value
encodeUniswapV3BurnDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3BurnDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3BurnDTOPairs : UniswapV3BurnDTO -> List EncodedField
encodeUniswapV3BurnDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3FactoryDTO : UniswapV3FactoryDTO -> Json.Encode.Value
encodeUniswapV3FactoryDTO =
    encodeObject << encodeUniswapV3FactoryDTOPairs


encodeUniswapV3FactoryDTOWithTag : ( String, String ) -> UniswapV3FactoryDTO -> Json.Encode.Value
encodeUniswapV3FactoryDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3FactoryDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3FactoryDTOPairs : UniswapV3FactoryDTO -> List EncodedField
encodeUniswapV3FactoryDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_count" Json.Encode.string model.poolCount
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "total_volume_usd" Json.Encode.string model.totalVolumeUsd
            , maybeEncodeNullable "total_volume_eth" Json.Encode.string model.totalVolumeEth
            , maybeEncodeNullable "total_fees_usd" Json.Encode.string model.totalFeesUsd
            , maybeEncodeNullable "total_fees_eth" Json.Encode.string model.totalFeesEth
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "total_value_locked_eth_untracked" Json.Encode.string model.totalValueLockedEthUntracked
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3MintDTO : UniswapV3MintDTO -> Json.Encode.Value
encodeUniswapV3MintDTO =
    encodeObject << encodeUniswapV3MintDTOPairs


encodeUniswapV3MintDTOWithTag : ( String, String ) -> UniswapV3MintDTO -> Json.Encode.Value
encodeUniswapV3MintDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3MintDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3MintDTOPairs : UniswapV3MintDTO -> List EncodedField
encodeUniswapV3MintDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount" Json.Encode.string model.amount
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "log_index" Json.Encode.string model.logIndex
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PoolDTO : UniswapV3PoolDTO -> Json.Encode.Value
encodeUniswapV3PoolDTO =
    encodeObject << encodeUniswapV3PoolDTOPairs


encodeUniswapV3PoolDTOWithTag : ( String, String ) -> UniswapV3PoolDTO -> Json.Encode.Value
encodeUniswapV3PoolDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolDTOPairs : UniswapV3PoolDTO -> List EncodedField
encodeUniswapV3PoolDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncode "fee_tier" encodeNumericsBigInteger model.feeTier
            , maybeEncode "liquidity" encodeNumericsBigInteger model.liquidity
            , maybeEncode "sqrt_price" encodeNumericsBigInteger model.sqrtPrice
            , maybeEncode "fee_growth_global_0x128" encodeNumericsBigInteger model.feeGrowthGlobal0x128
            , maybeEncode "fee_growth_global_1x128" encodeNumericsBigInteger model.feeGrowthGlobal1x128
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncode "tick" encodeNumericsBigInteger model.tick
            , maybeEncode "observation_index" encodeNumericsBigInteger model.observationIndex
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncodeNullable "total_value_locked_token_0" Json.Encode.string model.totalValueLockedToken0
            , maybeEncodeNullable "total_value_locked_token_1" Json.Encode.string model.totalValueLockedToken1
            , maybeEncodeNullable "total_value_locked_eth" Json.Encode.string model.totalValueLockedEth
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "liquidity_provider_count" Json.Encode.string model.liquidityProviderCount
            , maybeEncode "evaluated_ask" Json.Encode.float model.evaluatedAsk
            ]
    in
    pairs


encodeUniswapV3PoolDayDataDTO : UniswapV3PoolDayDataDTO -> Json.Encode.Value
encodeUniswapV3PoolDayDataDTO =
    encodeObject << encodeUniswapV3PoolDayDataDTOPairs


encodeUniswapV3PoolDayDataDTOWithTag : ( String, String ) -> UniswapV3PoolDayDataDTO -> Json.Encode.Value
encodeUniswapV3PoolDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolDayDataDTOPairs : UniswapV3PoolDayDataDTO -> List EncodedField
encodeUniswapV3PoolDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PoolHourDataDTO : UniswapV3PoolHourDataDTO -> Json.Encode.Value
encodeUniswapV3PoolHourDataDTO =
    encodeObject << encodeUniswapV3PoolHourDataDTOPairs


encodeUniswapV3PoolHourDataDTOWithTag : ( String, String ) -> UniswapV3PoolHourDataDTO -> Json.Encode.Value
encodeUniswapV3PoolHourDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PoolHourDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PoolHourDataDTOPairs : UniswapV3PoolHourDataDTO -> List EncodedField
encodeUniswapV3PoolHourDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "sqrt_price" Json.Encode.string model.sqrtPrice
            , maybeEncodeNullable "token_0_price" Json.Encode.string model.token0Price
            , maybeEncodeNullable "token_1_price" Json.Encode.string model.token1Price
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "fee_growth_global_0x128" Json.Encode.string model.feeGrowthGlobal0x128
            , maybeEncodeNullable "fee_growth_global_1x128" Json.Encode.string model.feeGrowthGlobal1x128
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "tx_count" Json.Encode.string model.txCount
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PositionDTO : UniswapV3PositionDTO -> Json.Encode.Value
encodeUniswapV3PositionDTO =
    encodeObject << encodeUniswapV3PositionDTOPairs


encodeUniswapV3PositionDTOWithTag : ( String, String ) -> UniswapV3PositionDTO -> Json.Encode.Value
encodeUniswapV3PositionDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PositionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PositionDTOPairs : UniswapV3PositionDTO -> List EncodedField
encodeUniswapV3PositionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "tick_lower" Json.Encode.string model.tickLower
            , maybeEncodeNullable "tick_upper" Json.Encode.string model.tickUpper
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3PositionSnapshotDTO : UniswapV3PositionSnapshotDTO -> Json.Encode.Value
encodeUniswapV3PositionSnapshotDTO =
    encodeObject << encodeUniswapV3PositionSnapshotDTOPairs


encodeUniswapV3PositionSnapshotDTOWithTag : ( String, String ) -> UniswapV3PositionSnapshotDTO -> Json.Encode.Value
encodeUniswapV3PositionSnapshotDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3PositionSnapshotDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3PositionSnapshotDTOPairs : UniswapV3PositionSnapshotDTO -> List EncodedField
encodeUniswapV3PositionSnapshotDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "owner" Json.Encode.string model.owner
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "position" Json.Encode.string model.position
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "liquidity" Json.Encode.string model.liquidity
            , maybeEncodeNullable "deposited_token_0" Json.Encode.string model.depositedToken0
            , maybeEncodeNullable "deposited_token_1" Json.Encode.string model.depositedToken1
            , maybeEncodeNullable "withdrawn_token_0" Json.Encode.string model.withdrawnToken0
            , maybeEncodeNullable "withdrawn_token_1" Json.Encode.string model.withdrawnToken1
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncodeNullable "fee_growth_inside_0_last_x128" Json.Encode.string model.feeGrowthInside0LastX128
            , maybeEncodeNullable "fee_growth_inside_1_last_x128" Json.Encode.string model.feeGrowthInside1LastX128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3SwapDTO : UniswapV3SwapDTO -> Json.Encode.Value
encodeUniswapV3SwapDTO =
    encodeObject << encodeUniswapV3SwapDTOPairs


encodeUniswapV3SwapDTOWithTag : ( String, String ) -> UniswapV3SwapDTO -> Json.Encode.Value
encodeUniswapV3SwapDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3SwapDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3SwapDTOPairs : UniswapV3SwapDTO -> List EncodedField
encodeUniswapV3SwapDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "transaction" Json.Encode.string model.transaction
            , maybeEncode "timestamp" Api.Time.encodeDateTime model.timestamp
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "token_0" Json.Encode.string model.token0
            , maybeEncodeNullable "token_1" Json.Encode.string model.token1
            , maybeEncodeNullable "sender" Json.Encode.string model.sender
            , maybeEncodeNullable "recipient" Json.Encode.string model.recipient
            , maybeEncodeNullable "origin" Json.Encode.string model.origin
            , maybeEncodeNullable "amount_0" Json.Encode.string model.amount0
            , maybeEncodeNullable "amount_1" Json.Encode.string model.amount1
            , maybeEncodeNullable "amount_usd" Json.Encode.string model.amountUsd
            , maybeEncode "sqrt_price_x96" encodeNumericsBigInteger model.sqrtPriceX96
            , maybeEncode "tick" encodeNumericsBigInteger model.tick
            , maybeEncode "log_index" encodeNumericsBigInteger model.logIndex
            , maybeEncode "evaluated_price" Json.Encode.float model.evaluatedPrice
            , maybeEncode "evaluated_amount" Json.Encode.float model.evaluatedAmount
            , maybeEncode "evaluated_aggressor" encodeTransactionsETradeAggressiveSide model.evaluatedAggressor
            , maybeEncodeNullable "pool_id" Json.Encode.string model.poolId
            , maybeEncodeNullable "transaction_id" Json.Encode.string model.transactionId
            ]
    in
    pairs


encodeUniswapV3TickDTO : UniswapV3TickDTO -> Json.Encode.Value
encodeUniswapV3TickDTO =
    encodeObject << encodeUniswapV3TickDTOPairs


encodeUniswapV3TickDTOWithTag : ( String, String ) -> UniswapV3TickDTO -> Json.Encode.Value
encodeUniswapV3TickDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TickDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TickDTOPairs : UniswapV3TickDTO -> List EncodedField
encodeUniswapV3TickDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "pool_address" Json.Encode.string model.poolAddress
            , maybeEncode "tick_idx" encodeNumericsBigInteger model.tickIdx
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncode "liquidity_gross" encodeNumericsBigInteger model.liquidityGross
            , maybeEncode "liquidity_net" encodeNumericsBigInteger model.liquidityNet
            , maybeEncodeNullable "price_0" Json.Encode.string model.price0
            , maybeEncodeNullable "price_1" Json.Encode.string model.price1
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "collected_fees_token_0" Json.Encode.string model.collectedFeesToken0
            , maybeEncodeNullable "collected_fees_token_1" Json.Encode.string model.collectedFeesToken1
            , maybeEncodeNullable "collected_fees_usd" Json.Encode.string model.collectedFeesUsd
            , maybeEncode "created_at_timestamp" Api.Time.encodeDateTime model.createdAtTimestamp
            , maybeEncode "liquidity_provider_count" encodeNumericsBigInteger model.liquidityProviderCount
            , maybeEncode "fee_growth_outside_0x128" encodeNumericsBigInteger model.feeGrowthOutside0x128
            , maybeEncode "fee_growth_outside_1x128" encodeNumericsBigInteger model.feeGrowthOutside1x128
            ]
    in
    pairs


encodeUniswapV3TickDayDataDTO : UniswapV3TickDayDataDTO -> Json.Encode.Value
encodeUniswapV3TickDayDataDTO =
    encodeObject << encodeUniswapV3TickDayDataDTOPairs


encodeUniswapV3TickDayDataDTOWithTag : ( String, String ) -> UniswapV3TickDayDataDTO -> Json.Encode.Value
encodeUniswapV3TickDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TickDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TickDayDataDTOPairs : UniswapV3TickDayDataDTO -> List EncodedField
encodeUniswapV3TickDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "pool" Json.Encode.string model.pool
            , maybeEncodeNullable "tick" Json.Encode.string model.tick
            , maybeEncodeNullable "liquidity_gross" Json.Encode.string model.liquidityGross
            , maybeEncodeNullable "liquidity_net" Json.Encode.string model.liquidityNet
            , maybeEncodeNullable "volume_token_0" Json.Encode.string model.volumeToken0
            , maybeEncodeNullable "volume_token_1" Json.Encode.string model.volumeToken1
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "fee_growth_outside_0x128" Json.Encode.string model.feeGrowthOutside0x128
            , maybeEncodeNullable "fee_growth_outside_1x128" Json.Encode.string model.feeGrowthOutside1x128
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3TokenDTO : UniswapV3TokenDTO -> Json.Encode.Value
encodeUniswapV3TokenDTO =
    encodeObject << encodeUniswapV3TokenDTOPairs


encodeUniswapV3TokenDTOWithTag : ( String, String ) -> UniswapV3TokenDTO -> Json.Encode.Value
encodeUniswapV3TokenDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenDTOPairs : UniswapV3TokenDTO -> List EncodedField
encodeUniswapV3TokenDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "symbol" Json.Encode.string model.symbol
            , maybeEncodeNullable "name" Json.Encode.string model.name
            , maybeEncode "decimals" Json.Encode.int model.decimals
            , maybeEncode "total_supply" encodeNumericsBigInteger model.totalSupply
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncode "pool_count" encodeNumericsBigInteger model.poolCount
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "total_value_locked_usd_untracked" Json.Encode.string model.totalValueLockedUsdUntracked
            , maybeEncodeNullable "derived_eth" Json.Encode.string model.derivedEth
            , maybeEncodeNullable "whitelist_pools" (Json.Encode.list Json.Encode.string) model.whitelistPools
            , maybeEncodeNullable "token_symbol" Json.Encode.string model.tokenSymbol
            ]
    in
    pairs


encodeUniswapV3TokenHourDataDTO : UniswapV3TokenHourDataDTO -> Json.Encode.Value
encodeUniswapV3TokenHourDataDTO =
    encodeObject << encodeUniswapV3TokenHourDataDTOPairs


encodeUniswapV3TokenHourDataDTOWithTag : ( String, String ) -> UniswapV3TokenHourDataDTO -> Json.Encode.Value
encodeUniswapV3TokenHourDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenHourDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenHourDataDTOPairs : UniswapV3TokenHourDataDTO -> List EncodedField
encodeUniswapV3TokenHourDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "period_start_unix" Json.Encode.int model.periodStartUnix
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3TokenV3DayDataDTO : UniswapV3TokenV3DayDataDTO -> Json.Encode.Value
encodeUniswapV3TokenV3DayDataDTO =
    encodeObject << encodeUniswapV3TokenV3DayDataDTOPairs


encodeUniswapV3TokenV3DayDataDTOWithTag : ( String, String ) -> UniswapV3TokenV3DayDataDTO -> Json.Encode.Value
encodeUniswapV3TokenV3DayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TokenV3DayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TokenV3DayDataDTOPairs : UniswapV3TokenV3DayDataDTO -> List EncodedField
encodeUniswapV3TokenV3DayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "token" Json.Encode.string model.token
            , maybeEncodeNullable "volume" Json.Encode.string model.volume
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "untracked_volume_usd" Json.Encode.string model.untrackedVolumeUsd
            , maybeEncodeNullable "total_value_locked" Json.Encode.string model.totalValueLocked
            , maybeEncodeNullable "total_value_locked_usd" Json.Encode.string model.totalValueLockedUsd
            , maybeEncodeNullable "price_usd" Json.Encode.string model.priceUsd
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncodeNullable "open" Json.Encode.string model.open
            , maybeEncodeNullable "high" Json.Encode.string model.high
            , maybeEncodeNullable "low" Json.Encode.string model.low
            , maybeEncodeNullable "close" Json.Encode.string model.close
            ]
    in
    pairs


encodeUniswapV3TransactionDTO : UniswapV3TransactionDTO -> Json.Encode.Value
encodeUniswapV3TransactionDTO =
    encodeObject << encodeUniswapV3TransactionDTOPairs


encodeUniswapV3TransactionDTOWithTag : ( String, String ) -> UniswapV3TransactionDTO -> Json.Encode.Value
encodeUniswapV3TransactionDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3TransactionDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3TransactionDTOPairs : UniswapV3TransactionDTO -> List EncodedField
encodeUniswapV3TransactionDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncodeNullable "timestamp" Json.Encode.string model.timestamp
            , maybeEncodeNullable "gas_used" Json.Encode.string model.gasUsed
            , maybeEncodeNullable "gas_price" Json.Encode.string model.gasPrice
            , maybeEncode "vid" Json.Encode.int model.vid
            ]
    in
    pairs


encodeUniswapV3UniswapDayDataDTO : UniswapV3UniswapDayDataDTO -> Json.Encode.Value
encodeUniswapV3UniswapDayDataDTO =
    encodeObject << encodeUniswapV3UniswapDayDataDTOPairs


encodeUniswapV3UniswapDayDataDTOWithTag : ( String, String ) -> UniswapV3UniswapDayDataDTO -> Json.Encode.Value
encodeUniswapV3UniswapDayDataDTOWithTag (tagField, tag) model =
    encodeObject (encodeUniswapV3UniswapDayDataDTOPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeUniswapV3UniswapDayDataDTOPairs : UniswapV3UniswapDayDataDTO -> List EncodedField
encodeUniswapV3UniswapDayDataDTOPairs model =
    let
        pairs =
            [ maybeEncode "entry_time" Api.Time.encodeDateTime model.entryTime
            , maybeEncode "recv_time" Api.Time.encodeDateTime model.recvTime
            , maybeEncode "block_number" Json.Encode.int model.blockNumber
            , maybeEncode "vid" Json.Encode.int model.vid
            , maybeEncodeNullable "id" Json.Encode.string model.id
            , maybeEncode "date" Json.Encode.int model.date
            , maybeEncodeNullable "volume_eth" Json.Encode.string model.volumeEth
            , maybeEncodeNullable "volume_usd" Json.Encode.string model.volumeUsd
            , maybeEncodeNullable "volume_usd_untracked" Json.Encode.string model.volumeUsdUntracked
            , maybeEncodeNullable "fees_usd" Json.Encode.string model.feesUsd
            , maybeEncode "tx_count" encodeNumericsBigInteger model.txCount
            , maybeEncodeNullable "tvl_usd" Json.Encode.string model.tvlUsd
            ]
    in
    pairs


-- DECODER


cRYPTOPUNKSBidDTODecoder : Json.Decode.Decoder CRYPTOPUNKSBidDTO
cRYPTOPUNKSBidDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSBidDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "block_number" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "tokens_bid" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "bidder" Json.Decode.string Nothing


cRYPTOPUNKSCollectionDTODecoder : Json.Decode.Decoder CRYPTOPUNKSCollectionDTO
cRYPTOPUNKSCollectionDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSCollectionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "royalty_fee" Json.Decode.string Nothing
        |> maybeDecodeNullable "cumulative_trade_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "marketplace_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "creator_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_revenue_eth" Json.Decode.string Nothing
        |> maybeDecode "trade_count" Json.Decode.int Nothing
        |> maybeDecode "buyer_count" Json.Decode.int Nothing
        |> maybeDecode "seller_count" Json.Decode.int Nothing


cRYPTOPUNKSCollectionDailySnapshotDTODecoder : Json.Decode.Decoder CRYPTOPUNKSCollectionDailySnapshotDTO
cRYPTOPUNKSCollectionDailySnapshotDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSCollectionDailySnapshotDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "block_number" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "collection" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "royalty_fee" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_min_sale_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_max_sale_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "cumulative_trade_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_trade_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "marketplace_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "creator_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_revenue_eth" Json.Decode.string Nothing
        |> maybeDecode "trade_count" Json.Decode.int Nothing
        |> maybeDecode "daily_traded_item_count" Json.Decode.int Nothing


cRYPTOPUNKSDataSourcesDTODecoder : Json.Decode.Decoder CRYPTOPUNKSDataSourcesDTO
cRYPTOPUNKSDataSourcesDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSDataSourcesDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecode "causality_region" Json.Decode.int Nothing
        |> maybeDecode "manifest_idx" Json.Decode.int Nothing
        |> maybeDecodeNullable "parent" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "param" Json.Decode.string Nothing
        |> maybeDecodeNullable "context" Json.Decode.string Nothing
        |> maybeDecodeNullable "done_at" Json.Decode.int Nothing


cRYPTOPUNKSItemDTODecoder : Json.Decode.Decoder CRYPTOPUNKSItemDTO
cRYPTOPUNKSItemDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSItemDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing


cRYPTOPUNKSMarketPlaceDTODecoder : Json.Decode.Decoder CRYPTOPUNKSMarketPlaceDTO
cRYPTOPUNKSMarketPlaceDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSMarketPlaceDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "slug" Json.Decode.string Nothing
        |> maybeDecodeNullable "schema_version" Json.Decode.string Nothing
        |> maybeDecodeNullable "subgraph_version" Json.Decode.string Nothing
        |> maybeDecodeNullable "methodology_version" Json.Decode.string Nothing
        |> maybeDecode "collection_count" Json.Decode.int Nothing
        |> maybeDecode "trade_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "cumulative_trade_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "marketplace_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "creator_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_revenue_eth" Json.Decode.string Nothing
        |> maybeDecode "cumulative_unique_traders" Json.Decode.int Nothing


cRYPTOPUNKSMarketplaceDailySnapshotDTODecoder : Json.Decode.Decoder CRYPTOPUNKSMarketplaceDailySnapshotDTO
cRYPTOPUNKSMarketplaceDailySnapshotDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSMarketplaceDailySnapshotDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "block_number" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "marketplace" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecode "collection_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "cumulative_trade_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "marketplace_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "creator_revenue_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_revenue_eth" Json.Decode.string Nothing
        |> maybeDecode "trade_count" Json.Decode.int Nothing
        |> maybeDecode "cumulative_unique_traders" Json.Decode.int Nothing
        |> maybeDecode "daily_active_traders" Json.Decode.int Nothing
        |> maybeDecode "daily_traded_collection_count" Json.Decode.int Nothing
        |> maybeDecode "daily_traded_item_count" Json.Decode.int Nothing


cRYPTOPUNKSTradeDTODecoder : Json.Decode.Decoder CRYPTOPUNKSTradeDTO
cRYPTOPUNKSTradeDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSTradeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "block_number" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_hash" Json.Decode.string Nothing
        |> maybeDecode "log_index" Json.Decode.int Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecode "is_bundle" Json.Decode.bool Nothing
        |> maybeDecodeNullable "collection" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "buyer" Json.Decode.string Nothing
        |> maybeDecodeNullable "seller" Json.Decode.string Nothing


cRYPTOPUNKSUserDTODecoder : Json.Decode.Decoder CRYPTOPUNKSUserDTO
cRYPTOPUNKSUserDTODecoder =
    Json.Decode.succeed CRYPTOPUNKSUserDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing


cowOrderDTODecoder : Json.Decode.Decoder CowOrderDTO
cowOrderDTODecoder =
    Json.Decode.succeed CowOrderDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "trades_timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "invalidate_timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "presign_timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "is_signed" Json.Decode.bool Nothing
        |> maybeDecode "is_valid" Json.Decode.bool Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


cowSettlementDTODecoder : Json.Decode.Decoder CowSettlementDTO
cowSettlementDTODecoder =
    Json.Decode.succeed CowSettlementDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "solver" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "first_trade_timestamp" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


cowTokenDTODecoder : Json.Decode.Decoder CowTokenDTO
cowTokenDTODecoder =
    Json.Decode.succeed CowTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "first_trade_timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecodeNullable "total_volume" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


cowTradeDTODecoder : Json.Decode.Decoder CowTradeDTO
cowTradeDTODecoder =
    Json.Decode.succeed CowTradeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "gas_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "gas_limit" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "settlement" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "order" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing


cowUserDTODecoder : Json.Decode.Decoder CowUserDTO
cowUserDTODecoder =
    Json.Decode.succeed CowUserDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "first_trade_timestamp" Json.Decode.string Nothing
        |> maybeDecode "is_solver" Json.Decode.bool Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveAccountDTODecoder : Json.Decode.Decoder CurveAccountDTO
curveAccountDTODecoder =
    Json.Decode.succeed CurveAccountDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveAddLiquidityEventDTODecoder : Json.Decode.Decoder CurveAddLiquidityEventDTO
curveAddLiquidityEventDTODecoder =
    Json.Decode.succeed CurveAddLiquidityEventDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "provider" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_amounts" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "fees" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "invariant" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveAdminFeeChangeLogDTODecoder : Json.Decode.Decoder CurveAdminFeeChangeLogDTO
curveAdminFeeChangeLogDTODecoder =
    Json.Decode.succeed CurveAdminFeeChangeLogDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveAmplificationCoeffChangeLogDTODecoder : Json.Decode.Decoder CurveAmplificationCoeffChangeLogDTO
curveAmplificationCoeffChangeLogDTODecoder =
    Json.Decode.succeed CurveAmplificationCoeffChangeLogDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveCoinDTODecoder : Json.Decode.Decoder CurveCoinDTO
curveCoinDTODecoder =
    Json.Decode.succeed CurveCoinDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "index" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "underlying" Json.Decode.string Nothing
        |> maybeDecodeNullable "balance" Json.Decode.string Nothing
        |> maybeDecodeNullable "rate" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


curveContractDTODecoder : Json.Decode.Decoder CurveContractDTO
curveContractDTODecoder =
    Json.Decode.succeed CurveContractDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "description" Json.Decode.string Nothing
        |> maybeDecodeNullable "added" Json.Decode.string Nothing
        |> maybeDecodeNullable "added_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "added_at_transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "modified" Json.Decode.string Nothing
        |> maybeDecodeNullable "modified_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "modified_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveContractVersionDTODecoder : Json.Decode.Decoder CurveContractVersionDTO
curveContractVersionDTODecoder =
    Json.Decode.succeed CurveContractVersionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "contract" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "version" Json.Decode.string Nothing
        |> maybeDecodeNullable "added" Json.Decode.string Nothing
        |> maybeDecodeNullable "added_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "added_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveDailyVolumeDTODecoder : Json.Decode.Decoder CurveDailyVolumeDTO
curveDailyVolumeDTODecoder =
    Json.Decode.succeed CurveDailyVolumeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


curveExchangeDTODecoder : Json.Decode.Decoder CurveExchangeDTO
curveExchangeDTODecoder =
    Json.Decode.succeed CurveExchangeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "buyer" Json.Decode.string Nothing
        |> maybeDecodeNullable "receiver" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_sold" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_bought" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_sold" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_bought" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


curveFeeChangeLogDTODecoder : Json.Decode.Decoder CurveFeeChangeLogDTO
curveFeeChangeLogDTODecoder =
    Json.Decode.succeed CurveFeeChangeLogDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeDTODecoder : Json.Decode.Decoder CurveGaugeDTO
curveGaugeDTODecoder =
    Json.Decode.succeed CurveGaugeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "created" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeDepositDTODecoder : Json.Decode.Decoder CurveGaugeDepositDTO
curveGaugeDepositDTODecoder =
    Json.Decode.succeed CurveGaugeDepositDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "provider" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


curveGaugeLiquidityDTODecoder : Json.Decode.Decoder CurveGaugeLiquidityDTO
curveGaugeLiquidityDTODecoder =
    Json.Decode.succeed CurveGaugeLiquidityDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "original_balance" Json.Decode.string Nothing
        |> maybeDecodeNullable "original_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "working_balance" Json.Decode.string Nothing
        |> maybeDecodeNullable "working_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeTotalWeightDTODecoder : Json.Decode.Decoder CurveGaugeTotalWeightDTO
curveGaugeTotalWeightDTODecoder =
    Json.Decode.succeed CurveGaugeTotalWeightDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "time" Json.Decode.string Nothing
        |> maybeDecodeNullable "weight" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeTypeDTODecoder : Json.Decode.Decoder CurveGaugeTypeDTO
curveGaugeTypeDTODecoder =
    Json.Decode.succeed CurveGaugeTypeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeTypeWeightDTODecoder : Json.Decode.Decoder CurveGaugeTypeWeightDTO
curveGaugeTypeWeightDTODecoder =
    Json.Decode.succeed CurveGaugeTypeWeightDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "type" Json.Decode.string Nothing
        |> maybeDecodeNullable "time" Json.Decode.string Nothing
        |> maybeDecodeNullable "weight" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeWeightDTODecoder : Json.Decode.Decoder CurveGaugeWeightDTO
curveGaugeWeightDTODecoder =
    Json.Decode.succeed CurveGaugeWeightDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "time" Json.Decode.string Nothing
        |> maybeDecodeNullable "weight" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeWeightVoteDTODecoder : Json.Decode.Decoder CurveGaugeWeightVoteDTO
curveGaugeWeightVoteDTODecoder =
    Json.Decode.succeed CurveGaugeWeightVoteDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "time" Json.Decode.string Nothing
        |> maybeDecodeNullable "weight" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveGaugeWithdrawDTODecoder : Json.Decode.Decoder CurveGaugeWithdrawDTO
curveGaugeWithdrawDTODecoder =
    Json.Decode.succeed CurveGaugeWithdrawDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "provider" Json.Decode.string Nothing
        |> maybeDecodeNullable "value" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveHourlyVolumeDTODecoder : Json.Decode.Decoder CurveHourlyVolumeDTO
curveHourlyVolumeDTODecoder =
    Json.Decode.succeed CurveHourlyVolumeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveLpTokenDTODecoder : Json.Decode.Decoder CurveLpTokenDTO
curveLpTokenDTODecoder =
    Json.Decode.succeed CurveLpTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curvePoolDTODecoder : Json.Decode.Decoder CurvePoolDTO
curvePoolDTODecoder =
    Json.Decode.succeed CurvePoolDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "is_meta" Json.Decode.bool Nothing
        |> maybeDecodeNullable "registry_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "swap_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "lp_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "coin_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "underlying_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "a" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee" Json.Decode.string Nothing
        |> maybeDecodeNullable "admin_fee" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "virtual_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "locked" Json.Decode.string Nothing
        |> maybeDecode "added_at" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "added_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "added_at_transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "removed_at" Json.Decode.string Nothing
        |> maybeDecodeNullable "removed_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "removed_at_transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "exchange_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


curveProposalDTODecoder : Json.Decode.Decoder CurveProposalDTO
curveProposalDTODecoder =
    Json.Decode.succeed CurveProposalDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "number" Json.Decode.string Nothing
        |> maybeDecodeNullable "app" Json.Decode.string Nothing
        |> maybeDecodeNullable "creator" Json.Decode.string Nothing
        |> maybeDecodeNullable "execution_script" Json.Decode.string Nothing
        |> maybeDecodeNullable "expire_date" Json.Decode.string Nothing
        |> maybeDecodeNullable "minimum_quorum" Json.Decode.string Nothing
        |> maybeDecodeNullable "required_support" Json.Decode.string Nothing
        |> maybeDecodeNullable "snapshot_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "voting_power" Json.Decode.string Nothing
        |> maybeDecodeNullable "metadata" Json.Decode.string Nothing
        |> maybeDecodeNullable "text" Json.Decode.string Nothing
        |> maybeDecodeNullable "vote_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "positive_vote_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "negative_vote_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "current_quorum" Json.Decode.string Nothing
        |> maybeDecodeNullable "current_support" Json.Decode.string Nothing
        |> maybeDecodeNullable "staked_support" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_staked" Json.Decode.string Nothing
        |> maybeDecodeNullable "created" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "executed" Json.Decode.string Nothing
        |> maybeDecodeNullable "executed_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "executed_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveProposalVoteDTODecoder : Json.Decode.Decoder CurveProposalVoteDTO
curveProposalVoteDTODecoder =
    Json.Decode.succeed CurveProposalVoteDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "proposal" Json.Decode.string Nothing
        |> maybeDecode "supports" Json.Decode.bool Nothing
        |> maybeDecodeNullable "stake" Json.Decode.string Nothing
        |> maybeDecodeNullable "voter" Json.Decode.string Nothing
        |> maybeDecodeNullable "created" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "created_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveRemoveLiquidityEventDTODecoder : Json.Decode.Decoder CurveRemoveLiquidityEventDTO
curveRemoveLiquidityEventDTODecoder =
    Json.Decode.succeed CurveRemoveLiquidityEventDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "provider" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_amounts" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "fees" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "token_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "invariant" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveRemoveLiquidityOneEventDTODecoder : Json.Decode.Decoder CurveRemoveLiquidityOneEventDTO
curveRemoveLiquidityOneEventDTODecoder =
    Json.Decode.succeed CurveRemoveLiquidityOneEventDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "provider" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "coin_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveSystemStateDTODecoder : Json.Decode.Decoder CurveSystemStateDTO
curveSystemStateDTODecoder =
    Json.Decode.succeed CurveSystemStateDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "registry_contract" Json.Decode.string Nothing
        |> maybeDecodeNullable "contract_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "gauge_type_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_pool_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveTokenDTODecoder : Json.Decode.Decoder CurveTokenDTO
curveTokenDTODecoder =
    Json.Decode.succeed CurveTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "pools" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


curveTransferOwnershipEventDTODecoder : Json.Decode.Decoder CurveTransferOwnershipEventDTO
curveTransferOwnershipEventDTODecoder =
    Json.Decode.succeed CurveTransferOwnershipEventDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "new_admin" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveUnderlyingCoinDTODecoder : Json.Decode.Decoder CurveUnderlyingCoinDTO
curveUnderlyingCoinDTODecoder =
    Json.Decode.succeed CurveUnderlyingCoinDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "index" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "coin" Json.Decode.string Nothing
        |> maybeDecodeNullable "balance" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_block" Json.Decode.string Nothing
        |> maybeDecodeNullable "updated_at_transaction" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveVotingAppDTODecoder : Json.Decode.Decoder CurveVotingAppDTO
curveVotingAppDTODecoder =
    Json.Decode.succeed CurveVotingAppDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "codename" Json.Decode.string Nothing
        |> maybeDecodeNullable "minimum_balance" Json.Decode.string Nothing
        |> maybeDecodeNullable "minimum_quorum" Json.Decode.string Nothing
        |> maybeDecodeNullable "minimum_time" Json.Decode.string Nothing
        |> maybeDecodeNullable "required_support" Json.Decode.string Nothing
        |> maybeDecodeNullable "vote_time" Json.Decode.string Nothing
        |> maybeDecodeNullable "proposal_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "vote_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


curveWeeklyVolumeDTODecoder : Json.Decode.Decoder CurveWeeklyVolumeDTO
curveWeeklyVolumeDTODecoder =
    Json.Decode.succeed CurveWeeklyVolumeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexBatchDTODecoder : Json.Decode.Decoder DexBatchDTO
dexBatchDTODecoder =
    Json.Decode.succeed DexBatchDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "start_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "end_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "solution" Json.Decode.string Nothing
        |> maybeDecodeNullable "first_solution_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "last_revert_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexDepositDTODecoder : Json.Decode.Decoder DexDepositDTO
dexDepositDTODecoder =
    Json.Decode.succeed DexDepositDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexOrderDTODecoder : Json.Decode.Decoder DexOrderDTO
dexOrderDTODecoder =
    Json.Decode.succeed DexOrderDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecode "order_id" Json.Decode.int Nothing
        |> maybeDecodeNullable "from_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "from_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "until_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "until_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_numerator" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_denominator" Json.Decode.string Nothing
        |> maybeDecodeNullable "max_sell_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "min_receive_amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "sold_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "bought_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "cancel_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "delete_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexPriceDTODecoder : Json.Decode.Decoder DexPriceDTO
dexPriceDTODecoder =
    Json.Decode.succeed DexPriceDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_in_owl_numerator" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_in_owl_denominator" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexSolutionDTODecoder : Json.Decode.Decoder DexSolutionDTO
dexSolutionDTODecoder =
    Json.Decode.succeed DexSolutionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "batch" Json.Decode.string Nothing
        |> maybeDecodeNullable "solver" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_reward" Json.Decode.string Nothing
        |> maybeDecodeNullable "objective_value" Json.Decode.string Nothing
        |> maybeDecodeNullable "utility" Json.Decode.string Nothing
        |> maybeDecodeNullable "trades" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "revert_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexStatsDTODecoder : Json.Decode.Decoder DexStatsDTO
dexStatsDTODecoder =
    Json.Decode.succeed DexStatsDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_in_owl" Json.Decode.string Nothing
        |> maybeDecodeNullable "utility_in_owl" Json.Decode.string Nothing
        |> maybeDecodeNullable "owl_burnt" Json.Decode.string Nothing
        |> maybeDecode "settled_batch_count" Json.Decode.int Nothing
        |> maybeDecode "settled_trade_count" Json.Decode.int Nothing
        |> maybeDecode "listed_tokens" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexTokenDTODecoder : Json.Decode.Decoder DexTokenDTO
dexTokenDTODecoder =
    Json.Decode.succeed DexTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "address" Json.Decode.string Nothing
        |> maybeDecodeNullable "from_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


dexTradeDTODecoder : Json.Decode.Decoder DexTradeDTO
dexTradeDTODecoder =
    Json.Decode.succeed DexTradeDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "order" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "buy_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "sell_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "revert_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing


dexUserDTODecoder : Json.Decode.Decoder DexUserDTO
dexUserDTODecoder =
    Json.Decode.succeed DexUserDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "from_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexWithdrawDTODecoder : Json.Decode.Decoder DexWithdrawDTO
dexWithdrawDTODecoder =
    Json.Decode.succeed DexWithdrawDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


dexWithdrawRequestDTODecoder : Json.Decode.Decoder DexWithdrawRequestDTO
dexWithdrawRequestDTODecoder =
    Json.Decode.succeed DexWithdrawRequestDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawable_from_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_epoch" Json.Decode.string Nothing
        |> maybeDecodeNullable "create_batch_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_hash" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


numericsBigIntegerDecoder : Json.Decode.Decoder NumericsBigInteger
numericsBigIntegerDecoder =
    Json.Decode.succeed NumericsBigInteger
        |> maybeDecode "is_power_of_two" Json.Decode.bool Nothing
        |> maybeDecode "is_zero" Json.Decode.bool Nothing
        |> maybeDecode "is_one" Json.Decode.bool Nothing
        |> maybeDecode "is_even" Json.Decode.bool Nothing
        |> maybeDecode "sign" Json.Decode.int Nothing


sushiswapBundleDTODecoder : Json.Decode.Decoder SushiswapBundleDTO
sushiswapBundleDTODecoder =
    Json.Decode.succeed SushiswapBundleDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "eth_price" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapBurnDTODecoder : Json.Decode.Decoder SushiswapBurnDTO
sushiswapBurnDTODecoder =
    Json.Decode.succeed SushiswapBurnDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "complete" Json.Decode.bool Nothing
        |> maybeDecodeNullable "fee_to" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_liquidity" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapDayDataDTODecoder : Json.Decode.Decoder SushiswapDayDataDTO
sushiswapDayDataDTODecoder =
    Json.Decode.succeed SushiswapDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapFactoryDTODecoder : Json.Decode.Decoder SushiswapFactoryDTO
sushiswapFactoryDTODecoder =
    Json.Decode.succeed SushiswapFactoryDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "user_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapHourDataDTODecoder : Json.Decode.Decoder SushiswapHourDataDTO
sushiswapHourDataDTODecoder =
    Json.Decode.succeed SushiswapHourDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapLiquidityPositionDTODecoder : Json.Decode.Decoder SushiswapLiquidityPositionDTO
sushiswapLiquidityPositionDTODecoder =
    Json.Decode.succeed SushiswapLiquidityPositionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_balance" Json.Decode.string Nothing
        |> maybeDecode "block" Json.Decode.int Nothing
        |> maybeDecode "timestamp" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapLiquidityPositionSnapshotDTODecoder : Json.Decode.Decoder SushiswapLiquidityPositionSnapshotDTO
sushiswapLiquidityPositionSnapshotDTODecoder =
    Json.Decode.succeed SushiswapLiquidityPositionSnapshotDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_position" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Json.Decode.int Nothing
        |> maybeDecode "block" Json.Decode.int Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_balance" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapMintDTODecoder : Json.Decode.Decoder SushiswapMintDTO
sushiswapMintDTODecoder =
    Json.Decode.succeed SushiswapMintDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_to" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_liquidity" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapPairDTODecoder : Json.Decode.Decoder SushiswapPairDTO
sushiswapPairDTODecoder =
    Json.Decode.succeed SushiswapPairDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "block" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


sushiswapPairDayDataDTODecoder : Json.Decode.Decoder SushiswapPairDayDataDTO
sushiswapPairDayDataDTODecoder =
    Json.Decode.succeed SushiswapPairDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapPairHourDataDTODecoder : Json.Decode.Decoder SushiswapPairHourDataDTO
sushiswapPairHourDataDTODecoder =
    Json.Decode.succeed SushiswapPairHourDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapSwapDTODecoder : Json.Decode.Decoder SushiswapSwapDTO
sushiswapSwapDTODecoder =
    Json.Decode.succeed SushiswapSwapDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing


sushiswapTokenDTODecoder : Json.Decode.Decoder SushiswapTokenDTO
sushiswapTokenDTODecoder =
    Json.Decode.succeed SushiswapTokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "factory" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecodeNullable "decimals" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pairs" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


sushiswapTokenDayDataDTODecoder : Json.Decode.Decoder SushiswapTokenDayDataDTO
sushiswapTokenDayDataDTODecoder =
    Json.Decode.succeed SushiswapTokenDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapTransactionDTODecoder : Json.Decode.Decoder SushiswapTransactionDTO
sushiswapTransactionDTODecoder =
    Json.Decode.succeed SushiswapTransactionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "mints" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "burns" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "swaps" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


sushiswapUserDTODecoder : Json.Decode.Decoder SushiswapUserDTO
sushiswapUserDTODecoder =
    Json.Decode.succeed SushiswapUserDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


transactionsETradeAggressiveSideDecoder : Json.Decode.Decoder TransactionsETradeAggressiveSide
transactionsETradeAggressiveSideDecoder =
    Json.Decode.string
        |> Json.Decode.andThen
            (\value ->
                case value of
                    "Buy" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideBuy

                    "Sell" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideSell

                    "EstimatedBuy" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideEstimatedBuy

                    "EstimatedSell" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideEstimatedSell

                    "Unknown" ->
                        Json.Decode.succeed TransactionsETradeAggressiveSideUnknown

                    other ->
                        Json.Decode.fail <| "Unknown type: " ++ other
            )


uniswapV2BundleDTODecoder : Json.Decode.Decoder UniswapV2BundleDTO
uniswapV2BundleDTODecoder =
    Json.Decode.succeed UniswapV2BundleDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "eth_price" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


uniswapV2BurnDTODecoder : Json.Decode.Decoder UniswapV2BurnDTO
uniswapV2BurnDTODecoder =
    Json.Decode.succeed UniswapV2BurnDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "needs_complete" Json.Decode.bool Nothing
        |> maybeDecodeNullable "fee_to" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_liquidity" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2LiquidityPositionDTODecoder : Json.Decode.Decoder UniswapV2LiquidityPositionDTO
uniswapV2LiquidityPositionDTODecoder =
    Json.Decode.succeed UniswapV2LiquidityPositionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_balance" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2LiquidityPositionSnapshotDTODecoder : Json.Decode.Decoder UniswapV2LiquidityPositionSnapshotDTO
uniswapV2LiquidityPositionSnapshotDTODecoder =
    Json.Decode.succeed UniswapV2LiquidityPositionSnapshotDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_position" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Json.Decode.int Nothing
        |> maybeDecode "block" Json.Decode.int Nothing
        |> maybeDecodeNullable "user" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_token_balance" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


uniswapV2MintDTODecoder : Json.Decode.Decoder UniswapV2MintDTO
uniswapV2MintDTODecoder =
    Json.Decode.succeed UniswapV2MintDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_to" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_liquidity" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "block_range" Json.Decode.string Nothing


uniswapV2PairDTODecoder : Json.Decode.Decoder UniswapV2PairDTO
uniswapV2PairDTODecoder =
    Json.Decode.succeed UniswapV2PairDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tracked_reserve_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


uniswapV2PairDayDataDTODecoder : Json.Decode.Decoder UniswapV2PairDayDataDTO
uniswapV2PairDayDataDTODecoder =
    Json.Decode.succeed UniswapV2PairDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pair_address" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_txns" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2PairHourDataDTODecoder : Json.Decode.Decoder UniswapV2PairHourDataDTO
uniswapV2PairHourDataDTODecoder =
    Json.Decode.succeed UniswapV2PairHourDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "hour_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_supply" Json.Decode.string Nothing
        |> maybeDecodeNullable "reserve_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "hourly_volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "hourly_volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "hourly_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "hourly_txns" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2SwapDTODecoder : Json.Decode.Decoder UniswapV2SwapDTO
uniswapV2SwapDTODecoder =
    Json.Decode.succeed UniswapV2SwapDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pair" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "from" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_in" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1_out" Json.Decode.string Nothing
        |> maybeDecodeNullable "to" Json.Decode.string Nothing
        |> maybeDecode "log_index" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


uniswapV2TokenDTODecoder : Json.Decode.Decoder UniswapV2TokenDTO
uniswapV2TokenDTODecoder =
    Json.Decode.succeed UniswapV2TokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "trade_volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "trade_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


uniswapV2TokenDayDataDTODecoder : Json.Decode.Decoder UniswapV2TokenDayDataDTO
uniswapV2TokenDayDataDTODecoder =
    Json.Decode.succeed UniswapV2TokenDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_txns" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_token" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2TransactionDTODecoder : Json.Decode.Decoder UniswapV2TransactionDTO
uniswapV2TransactionDTODecoder =
    Json.Decode.succeed UniswapV2TransactionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "mints" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "burns" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "swaps" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2UniswapDayDataDTODecoder : Json.Decode.Decoder UniswapV2UniswapDayDataDTO
uniswapV2UniswapDayDataDTODecoder =
    Json.Decode.succeed UniswapV2UniswapDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "daily_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "daily_volume_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2UniswapFactoryDTODecoder : Json.Decode.Decoder UniswapV2UniswapFactoryDTO
uniswapV2UniswapFactoryDTODecoder =
    Json.Decode.succeed UniswapV2UniswapFactoryDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "pair_count" Json.Decode.int Nothing
        |> maybeDecodeNullable "total_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_liquidity_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV2UserDTODecoder : Json.Decode.Decoder UniswapV2UserDTO
uniswapV2UserDTODecoder =
    Json.Decode.succeed UniswapV2UserDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "usd_swapped" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3BundleDTODecoder : Json.Decode.Decoder UniswapV3BundleDTO
uniswapV3BundleDTODecoder =
    Json.Decode.succeed UniswapV3BundleDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "eth_price_usd" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3BurnDTODecoder : Json.Decode.Decoder UniswapV3BurnDTO
uniswapV3BurnDTODecoder =
    Json.Decode.succeed UniswapV3BurnDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3FactoryDTODecoder : Json.Decode.Decoder UniswapV3FactoryDTO
uniswapV3FactoryDTODecoder =
    Json.Decode.succeed UniswapV3FactoryDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_fees_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3MintDTODecoder : Json.Decode.Decoder UniswapV3MintDTO
uniswapV3MintDTODecoder =
    Json.Decode.succeed UniswapV3MintDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "log_index" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PoolDTODecoder : Json.Decode.Decoder UniswapV3PoolDTO
uniswapV3PoolDTODecoder =
    Json.Decode.succeed UniswapV3PoolDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecode "fee_tier" numericsBigIntegerDecoder Nothing
        |> maybeDecode "liquidity" numericsBigIntegerDecoder Nothing
        |> maybeDecode "sqrt_price" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_0x128" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_global_1x128" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecode "tick" numericsBigIntegerDecoder Nothing
        |> maybeDecode "observation_index" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_provider_count" Json.Decode.string Nothing
        |> maybeDecode "evaluated_ask" Json.Decode.float Nothing


uniswapV3PoolDayDataDTODecoder : Json.Decode.Decoder UniswapV3PoolDayDataDTO
uniswapV3PoolDayDataDTODecoder =
    Json.Decode.succeed UniswapV3PoolDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PoolHourDataDTODecoder : Json.Decode.Decoder UniswapV3PoolHourDataDTO
uniswapV3PoolHourDataDTODecoder =
    Json.Decode.succeed UniswapV3PoolHourDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "sqrt_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1_price" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_global_1x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "tx_count" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PositionDTODecoder : Json.Decode.Decoder UniswapV3PositionDTO
uniswapV3PositionDTODecoder =
    Json.Decode.succeed UniswapV3PositionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_lower" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick_upper" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3PositionSnapshotDTODecoder : Json.Decode.Decoder UniswapV3PositionSnapshotDTO
uniswapV3PositionSnapshotDTODecoder =
    Json.Decode.succeed UniswapV3PositionSnapshotDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "owner" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "position" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "deposited_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "withdrawn_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_0_last_x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_inside_1_last_x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3SwapDTODecoder : Json.Decode.Decoder UniswapV3SwapDTO
uniswapV3SwapDTODecoder =
    Json.Decode.succeed UniswapV3SwapDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction" Json.Decode.string Nothing
        |> maybeDecode "timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "sender" Json.Decode.string Nothing
        |> maybeDecodeNullable "recipient" Json.Decode.string Nothing
        |> maybeDecodeNullable "origin" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "amount_usd" Json.Decode.string Nothing
        |> maybeDecode "sqrt_price_x96" numericsBigIntegerDecoder Nothing
        |> maybeDecode "tick" numericsBigIntegerDecoder Nothing
        |> maybeDecode "log_index" numericsBigIntegerDecoder Nothing
        |> maybeDecode "evaluated_price" Json.Decode.float Nothing
        |> maybeDecode "evaluated_amount" Json.Decode.float Nothing
        |> maybeDecode "evaluated_aggressor" transactionsETradeAggressiveSideDecoder Nothing
        |> maybeDecodeNullable "pool_id" Json.Decode.string Nothing
        |> maybeDecodeNullable "transaction_id" Json.Decode.string Nothing


uniswapV3TickDTODecoder : Json.Decode.Decoder UniswapV3TickDTO
uniswapV3TickDTODecoder =
    Json.Decode.succeed UniswapV3TickDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "pool_address" Json.Decode.string Nothing
        |> maybeDecode "tick_idx" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecode "liquidity_gross" numericsBigIntegerDecoder Nothing
        |> maybeDecode "liquidity_net" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "price_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "collected_fees_usd" Json.Decode.string Nothing
        |> maybeDecode "created_at_timestamp" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "liquidity_provider_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_0x128" numericsBigIntegerDecoder Nothing
        |> maybeDecode "fee_growth_outside_1x128" numericsBigIntegerDecoder Nothing


uniswapV3TickDayDataDTODecoder : Json.Decode.Decoder UniswapV3TickDayDataDTO
uniswapV3TickDayDataDTODecoder =
    Json.Decode.succeed UniswapV3TickDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "pool" Json.Decode.string Nothing
        |> maybeDecodeNullable "tick" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_gross" Json.Decode.string Nothing
        |> maybeDecodeNullable "liquidity_net" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_0" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_token_1" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_0x128" Json.Decode.string Nothing
        |> maybeDecodeNullable "fee_growth_outside_1x128" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3TokenDTODecoder : Json.Decode.Decoder UniswapV3TokenDTO
uniswapV3TokenDTODecoder =
    Json.Decode.succeed UniswapV3TokenDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "symbol" Json.Decode.string Nothing
        |> maybeDecodeNullable "name" Json.Decode.string Nothing
        |> maybeDecode "decimals" Json.Decode.int Nothing
        |> maybeDecode "total_supply" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecode "pool_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "derived_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "whitelist_pools" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecodeNullable "token_symbol" Json.Decode.string Nothing


uniswapV3TokenHourDataDTODecoder : Json.Decode.Decoder UniswapV3TokenHourDataDTO
uniswapV3TokenHourDataDTODecoder =
    Json.Decode.succeed UniswapV3TokenHourDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "period_start_unix" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3TokenV3DayDataDTODecoder : Json.Decode.Decoder UniswapV3TokenV3DayDataDTO
uniswapV3TokenV3DayDataDTODecoder =
    Json.Decode.succeed UniswapV3TokenV3DayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "token" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "untracked_volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked" Json.Decode.string Nothing
        |> maybeDecodeNullable "total_value_locked_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "price_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "open" Json.Decode.string Nothing
        |> maybeDecodeNullable "high" Json.Decode.string Nothing
        |> maybeDecodeNullable "low" Json.Decode.string Nothing
        |> maybeDecodeNullable "close" Json.Decode.string Nothing


uniswapV3TransactionDTODecoder : Json.Decode.Decoder UniswapV3TransactionDTO
uniswapV3TransactionDTODecoder =
    Json.Decode.succeed UniswapV3TransactionDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecodeNullable "timestamp" Json.Decode.string Nothing
        |> maybeDecodeNullable "gas_used" Json.Decode.string Nothing
        |> maybeDecodeNullable "gas_price" Json.Decode.string Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing


uniswapV3UniswapDayDataDTODecoder : Json.Decode.Decoder UniswapV3UniswapDayDataDTO
uniswapV3UniswapDayDataDTODecoder =
    Json.Decode.succeed UniswapV3UniswapDayDataDTO
        |> maybeDecode "entry_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "recv_time" Api.Time.dateTimeDecoder Nothing
        |> maybeDecode "block_number" Json.Decode.int Nothing
        |> maybeDecode "vid" Json.Decode.int Nothing
        |> maybeDecodeNullable "id" Json.Decode.string Nothing
        |> maybeDecode "date" Json.Decode.int Nothing
        |> maybeDecodeNullable "volume_eth" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd" Json.Decode.string Nothing
        |> maybeDecodeNullable "volume_usd_untracked" Json.Decode.string Nothing
        |> maybeDecodeNullable "fees_usd" Json.Decode.string Nothing
        |> maybeDecode "tx_count" numericsBigIntegerDecoder Nothing
        |> maybeDecodeNullable "tvl_usd" Json.Decode.string Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f