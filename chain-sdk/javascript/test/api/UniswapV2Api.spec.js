/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainApi);
  }
}(this, function(expect, OnChainApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainApi.UniswapV2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UniswapV2Api', function() {
    describe('uniswapV2GetBundlesHistorical', function() {
      it('should call uniswapV2GetBundlesHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetBundlesHistorical
        //instance.uniswapV2GetBundlesHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetBurnsHistorical', function() {
      it('should call uniswapV2GetBurnsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetBurnsHistorical
        //instance.uniswapV2GetBurnsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetDayDataHistorical', function() {
      it('should call uniswapV2GetDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetDayDataHistorical
        //instance.uniswapV2GetDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetFactoryHistorical', function() {
      it('should call uniswapV2GetFactoryHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetFactoryHistorical
        //instance.uniswapV2GetFactoryHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetLiquidityPositionsHistorical', function() {
      it('should call uniswapV2GetLiquidityPositionsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetLiquidityPositionsHistorical
        //instance.uniswapV2GetLiquidityPositionsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetLiquidityPositionsSnapshotsHistorical', function() {
      it('should call uniswapV2GetLiquidityPositionsSnapshotsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetLiquidityPositionsSnapshotsHistorical
        //instance.uniswapV2GetLiquidityPositionsSnapshotsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetMintsHistorical', function() {
      it('should call uniswapV2GetMintsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetMintsHistorical
        //instance.uniswapV2GetMintsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetPoolsCurrent', function() {
      it('should call uniswapV2GetPoolsCurrent successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetPoolsCurrent
        //instance.uniswapV2GetPoolsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetPoolsDayDataHistorical', function() {
      it('should call uniswapV2GetPoolsDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetPoolsDayDataHistorical
        //instance.uniswapV2GetPoolsDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetPoolsHistorical', function() {
      it('should call uniswapV2GetPoolsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetPoolsHistorical
        //instance.uniswapV2GetPoolsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetPoolsHourDataHistorical', function() {
      it('should call uniswapV2GetPoolsHourDataHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetPoolsHourDataHistorical
        //instance.uniswapV2GetPoolsHourDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetSwapsCurrent', function() {
      it('should call uniswapV2GetSwapsCurrent successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetSwapsCurrent
        //instance.uniswapV2GetSwapsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetSwapsHistorical', function() {
      it('should call uniswapV2GetSwapsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetSwapsHistorical
        //instance.uniswapV2GetSwapsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetTokensCurrent', function() {
      it('should call uniswapV2GetTokensCurrent successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetTokensCurrent
        //instance.uniswapV2GetTokensCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetTokensDayDataHistorical', function() {
      it('should call uniswapV2GetTokensDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetTokensDayDataHistorical
        //instance.uniswapV2GetTokensDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetTokensHistorical', function() {
      it('should call uniswapV2GetTokensHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetTokensHistorical
        //instance.uniswapV2GetTokensHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetTransactionsHistorical', function() {
      it('should call uniswapV2GetTransactionsHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetTransactionsHistorical
        //instance.uniswapV2GetTransactionsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uniswapV2GetUsersHistorical', function() {
      it('should call uniswapV2GetUsersHistorical successfully', function(done) {
        //uncomment below and update the code to test uniswapV2GetUsersHistorical
        //instance.uniswapV2GetUsersHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
