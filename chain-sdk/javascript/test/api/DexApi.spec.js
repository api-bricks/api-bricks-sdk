/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainApi);
  }
}(this, function(expect, OnChainApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainApi.DexApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DexApi', function() {
    describe('dexGetBatchsHistorical', function() {
      it('should call dexGetBatchsHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetBatchsHistorical
        //instance.dexGetBatchsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetDepositsHistorical', function() {
      it('should call dexGetDepositsHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetDepositsHistorical
        //instance.dexGetDepositsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetOrdersHistorical', function() {
      it('should call dexGetOrdersHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetOrdersHistorical
        //instance.dexGetOrdersHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetPricesHistorical', function() {
      it('should call dexGetPricesHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetPricesHistorical
        //instance.dexGetPricesHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetSolutionsHistorical', function() {
      it('should call dexGetSolutionsHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetSolutionsHistorical
        //instance.dexGetSolutionsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetStatssHistorical', function() {
      it('should call dexGetStatssHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetStatssHistorical
        //instance.dexGetStatssHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetTokensHistorical', function() {
      it('should call dexGetTokensHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetTokensHistorical
        //instance.dexGetTokensHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetTradesHistorical', function() {
      it('should call dexGetTradesHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetTradesHistorical
        //instance.dexGetTradesHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetUsersHistorical', function() {
      it('should call dexGetUsersHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetUsersHistorical
        //instance.dexGetUsersHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetWithdrawRequestsHistorical', function() {
      it('should call dexGetWithdrawRequestsHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetWithdrawRequestsHistorical
        //instance.dexGetWithdrawRequestsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dexGetWithdrawsHistorical', function() {
      it('should call dexGetWithdrawsHistorical successfully', function(done) {
        //uncomment below and update the code to test dexGetWithdrawsHistorical
        //instance.dexGetWithdrawsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
