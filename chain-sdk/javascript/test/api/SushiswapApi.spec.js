/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainApi);
  }
}(this, function(expect, OnChainApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainApi.SushiswapApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SushiswapApi', function() {
    describe('sushiswapGetBundlesHistorical', function() {
      it('should call sushiswapGetBundlesHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetBundlesHistorical
        //instance.sushiswapGetBundlesHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetBurnsHistorical', function() {
      it('should call sushiswapGetBurnsHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetBurnsHistorical
        //instance.sushiswapGetBurnsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetDayDataHistorical', function() {
      it('should call sushiswapGetDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetDayDataHistorical
        //instance.sushiswapGetDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetFactoryHistorical', function() {
      it('should call sushiswapGetFactoryHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetFactoryHistorical
        //instance.sushiswapGetFactoryHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetHourDataHistorical', function() {
      it('should call sushiswapGetHourDataHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetHourDataHistorical
        //instance.sushiswapGetHourDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetLiquidityPositionHistorical', function() {
      it('should call sushiswapGetLiquidityPositionHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetLiquidityPositionHistorical
        //instance.sushiswapGetLiquidityPositionHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetLiquidityPositionSnapshotHistorical', function() {
      it('should call sushiswapGetLiquidityPositionSnapshotHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetLiquidityPositionSnapshotHistorical
        //instance.sushiswapGetLiquidityPositionSnapshotHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetMintsHistorical', function() {
      it('should call sushiswapGetMintsHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetMintsHistorical
        //instance.sushiswapGetMintsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetPoolsCurrent', function() {
      it('should call sushiswapGetPoolsCurrent successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetPoolsCurrent
        //instance.sushiswapGetPoolsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetPoolsDayDataHistorical', function() {
      it('should call sushiswapGetPoolsDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetPoolsDayDataHistorical
        //instance.sushiswapGetPoolsDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetPoolsHistorical', function() {
      it('should call sushiswapGetPoolsHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetPoolsHistorical
        //instance.sushiswapGetPoolsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetPoolsHourDataHistorical', function() {
      it('should call sushiswapGetPoolsHourDataHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetPoolsHourDataHistorical
        //instance.sushiswapGetPoolsHourDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetSwapsCurrent', function() {
      it('should call sushiswapGetSwapsCurrent successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetSwapsCurrent
        //instance.sushiswapGetSwapsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetSwapsHistorical', function() {
      it('should call sushiswapGetSwapsHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetSwapsHistorical
        //instance.sushiswapGetSwapsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetTokensCurrent', function() {
      it('should call sushiswapGetTokensCurrent successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetTokensCurrent
        //instance.sushiswapGetTokensCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetTokensDayDataHistorical', function() {
      it('should call sushiswapGetTokensDayDataHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetTokensDayDataHistorical
        //instance.sushiswapGetTokensDayDataHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetTokensHistorical', function() {
      it('should call sushiswapGetTokensHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetTokensHistorical
        //instance.sushiswapGetTokensHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetTransactionsHistorical', function() {
      it('should call sushiswapGetTransactionsHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetTransactionsHistorical
        //instance.sushiswapGetTransactionsHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sushiswapGetUsersHistorical', function() {
      it('should call sushiswapGetUsersHistorical successfully', function(done) {
        //uncomment below and update the code to test sushiswapGetUsersHistorical
        //instance.sushiswapGetUsersHistorical(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
