/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainDappsRestApi);
  }
}(this, function(expect, OnChainDappsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainDappsRestApi.CurvePoolDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CurvePoolDTO', function() {
    it('should create an instance of CurvePoolDTO', function() {
      // uncomment below and update the code to test CurvePoolDTO
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be.a(OnChainDappsRestApi.CurvePoolDTO);
    });

    it('should have the property entryTime (base name: "entry_time")', function() {
      // uncomment below and update the code to test the property entryTime
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property recvTime (base name: "recv_time")', function() {
      // uncomment below and update the code to test the property recvTime
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property blockNumber (base name: "block_number")', function() {
      // uncomment below and update the code to test the property blockNumber
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property isMeta (base name: "is_meta")', function() {
      // uncomment below and update the code to test the property isMeta
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property registryAddress (base name: "registry_address")', function() {
      // uncomment below and update the code to test the property registryAddress
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property swapAddress (base name: "swap_address")', function() {
      // uncomment below and update the code to test the property swapAddress
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property lpToken (base name: "lp_token")', function() {
      // uncomment below and update the code to test the property lpToken
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property coinCount (base name: "coin_count")', function() {
      // uncomment below and update the code to test the property coinCount
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property underlyingCount (base name: "underlying_count")', function() {
      // uncomment below and update the code to test the property underlyingCount
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property a (base name: "a")', function() {
      // uncomment below and update the code to test the property a
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property fee (base name: "fee")', function() {
      // uncomment below and update the code to test the property fee
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property adminFee (base name: "admin_fee")', function() {
      // uncomment below and update the code to test the property adminFee
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property virtualPrice (base name: "virtual_price")', function() {
      // uncomment below and update the code to test the property virtualPrice
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property addedAt (base name: "added_at")', function() {
      // uncomment below and update the code to test the property addedAt
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property addedAtBlock (base name: "added_at_block")', function() {
      // uncomment below and update the code to test the property addedAtBlock
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property addedAtTransaction (base name: "added_at_transaction")', function() {
      // uncomment below and update the code to test the property addedAtTransaction
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property removedAt (base name: "removed_at")', function() {
      // uncomment below and update the code to test the property removedAt
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property removedAtBlock (base name: "removed_at_block")', function() {
      // uncomment below and update the code to test the property removedAtBlock
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property removedAtTransaction (base name: "removed_at_transaction")', function() {
      // uncomment below and update the code to test the property removedAtTransaction
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property exchangeCount (base name: "exchange_count")', function() {
      // uncomment below and update the code to test the property exchangeCount
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property gaugeCount (base name: "gauge_count")', function() {
      // uncomment below and update the code to test the property gaugeCount
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property vid (base name: "vid")', function() {
      // uncomment below and update the code to test the property vid
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

    it('should have the property evaluatedAsk (base name: "evaluated_ask")', function() {
      // uncomment below and update the code to test the property evaluatedAsk
      //var instance = new OnChainDappsRestApi.CurvePoolDTO();
      //expect(instance).to.be();
    });

  });

}));
