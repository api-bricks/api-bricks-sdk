/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CurveVotingAppDTO model module.
 * @module model/CurveVotingAppDTO
 * @version v1
 */
class CurveVotingAppDTO {
    /**
     * Constructs a new <code>CurveVotingAppDTO</code>.
     * @alias module:model/CurveVotingAppDTO
     */
    constructor() { 
        
        CurveVotingAppDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CurveVotingAppDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CurveVotingAppDTO} obj Optional instance to populate.
     * @return {module:model/CurveVotingAppDTO} The populated <code>CurveVotingAppDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CurveVotingAppDTO();

            if (data.hasOwnProperty('entry_time')) {
                obj['entry_time'] = ApiClient.convertToType(data['entry_time'], 'Date');
            }
            if (data.hasOwnProperty('recv_time')) {
                obj['recv_time'] = ApiClient.convertToType(data['recv_time'], 'Date');
            }
            if (data.hasOwnProperty('block_number')) {
                obj['block_number'] = ApiClient.convertToType(data['block_number'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('codename')) {
                obj['codename'] = ApiClient.convertToType(data['codename'], 'String');
            }
            if (data.hasOwnProperty('minimum_balance')) {
                obj['minimum_balance'] = ApiClient.convertToType(data['minimum_balance'], 'String');
            }
            if (data.hasOwnProperty('minimum_quorum')) {
                obj['minimum_quorum'] = ApiClient.convertToType(data['minimum_quorum'], 'String');
            }
            if (data.hasOwnProperty('minimum_time')) {
                obj['minimum_time'] = ApiClient.convertToType(data['minimum_time'], 'String');
            }
            if (data.hasOwnProperty('required_support')) {
                obj['required_support'] = ApiClient.convertToType(data['required_support'], 'String');
            }
            if (data.hasOwnProperty('vote_time')) {
                obj['vote_time'] = ApiClient.convertToType(data['vote_time'], 'String');
            }
            if (data.hasOwnProperty('proposal_count')) {
                obj['proposal_count'] = ApiClient.convertToType(data['proposal_count'], 'String');
            }
            if (data.hasOwnProperty('vote_count')) {
                obj['vote_count'] = ApiClient.convertToType(data['vote_count'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('vid')) {
                obj['vid'] = ApiClient.convertToType(data['vid'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CurveVotingAppDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CurveVotingAppDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['codename'] && !(typeof data['codename'] === 'string' || data['codename'] instanceof String)) {
            throw new Error("Expected the field `codename` to be a primitive type in the JSON string but got " + data['codename']);
        }
        // ensure the json data is a string
        if (data['minimum_balance'] && !(typeof data['minimum_balance'] === 'string' || data['minimum_balance'] instanceof String)) {
            throw new Error("Expected the field `minimum_balance` to be a primitive type in the JSON string but got " + data['minimum_balance']);
        }
        // ensure the json data is a string
        if (data['minimum_quorum'] && !(typeof data['minimum_quorum'] === 'string' || data['minimum_quorum'] instanceof String)) {
            throw new Error("Expected the field `minimum_quorum` to be a primitive type in the JSON string but got " + data['minimum_quorum']);
        }
        // ensure the json data is a string
        if (data['minimum_time'] && !(typeof data['minimum_time'] === 'string' || data['minimum_time'] instanceof String)) {
            throw new Error("Expected the field `minimum_time` to be a primitive type in the JSON string but got " + data['minimum_time']);
        }
        // ensure the json data is a string
        if (data['required_support'] && !(typeof data['required_support'] === 'string' || data['required_support'] instanceof String)) {
            throw new Error("Expected the field `required_support` to be a primitive type in the JSON string but got " + data['required_support']);
        }
        // ensure the json data is a string
        if (data['vote_time'] && !(typeof data['vote_time'] === 'string' || data['vote_time'] instanceof String)) {
            throw new Error("Expected the field `vote_time` to be a primitive type in the JSON string but got " + data['vote_time']);
        }
        // ensure the json data is a string
        if (data['proposal_count'] && !(typeof data['proposal_count'] === 'string' || data['proposal_count'] instanceof String)) {
            throw new Error("Expected the field `proposal_count` to be a primitive type in the JSON string but got " + data['proposal_count']);
        }
        // ensure the json data is a string
        if (data['vote_count'] && !(typeof data['vote_count'] === 'string' || data['vote_count'] instanceof String)) {
            throw new Error("Expected the field `vote_count` to be a primitive type in the JSON string but got " + data['vote_count']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}



/**
 * @member {Date} entry_time
 */
CurveVotingAppDTO.prototype['entry_time'] = undefined;

/**
 * @member {Date} recv_time
 */
CurveVotingAppDTO.prototype['recv_time'] = undefined;

/**
 * Number of block in which entity was recorded.
 * @member {Number} block_number
 */
CurveVotingAppDTO.prototype['block_number'] = undefined;

/**
 * App address.
 * @member {String} id
 */
CurveVotingAppDTO.prototype['id'] = undefined;

/**
 * 
 * @member {String} address
 */
CurveVotingAppDTO.prototype['address'] = undefined;

/**
 * 
 * @member {String} codename
 */
CurveVotingAppDTO.prototype['codename'] = undefined;

/**
 * Minimum balance needed to create a proposal.
 * @member {String} minimum_balance
 */
CurveVotingAppDTO.prototype['minimum_balance'] = undefined;

/**
 * Percentage of positive votes in total possible votes for a proposal to be accepted.
 * @member {String} minimum_quorum
 */
CurveVotingAppDTO.prototype['minimum_quorum'] = undefined;

/**
 * Minimum time needed to pass between user's previous proposal and a user creating a new proposal.
 * @member {String} minimum_time
 */
CurveVotingAppDTO.prototype['minimum_time'] = undefined;

/**
 * Percentage of positive votes needed for a proposal to be accepted.
 * @member {String} required_support
 */
CurveVotingAppDTO.prototype['required_support'] = undefined;

/**
 * Seconds that a proposal will be open for vote (unless enough votes have been cast to make an early decision).
 * @member {String} vote_time
 */
CurveVotingAppDTO.prototype['vote_time'] = undefined;

/**
 * Number of proposals created with this app.
 * @member {String} proposal_count
 */
CurveVotingAppDTO.prototype['proposal_count'] = undefined;

/**
 * Number of votes received by all the proposals created with this app.
 * @member {String} vote_count
 */
CurveVotingAppDTO.prototype['vote_count'] = undefined;

/**
 * Address of the token used for voting.
 * @member {String} token
 */
CurveVotingAppDTO.prototype['token'] = undefined;

/**
 * 
 * @member {Number} vid
 */
CurveVotingAppDTO.prototype['vid'] = undefined;






export default CurveVotingAppDTO;

