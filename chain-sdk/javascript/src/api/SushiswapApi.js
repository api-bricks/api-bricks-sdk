/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PairDTO from '../model/PairDTO';
import SwapDTO from '../model/SwapDTO';
import TokenDTO from '../model/TokenDTO';

/**
* Sushiswap service.
* @module api/SushiswapApi
* @version v1
*/
export default class SushiswapApi {

    /**
    * Constructs a new SushiswapApi. 
    * @alias module:api/SushiswapApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the chainsChainIdDappsSushiswapPoolsCurrentGet operation.
     * @callback module:api/SushiswapApi~chainsChainIdDappsSushiswapPoolsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PairDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPools
     * Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.
     * @param {String} chainId Chain id
     * @param {module:api/SushiswapApi~chainsChainIdDappsSushiswapPoolsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PairDTO>}
     */
    chainsChainIdDappsSushiswapPoolsCurrentGet(chainId, callback) {
      let postBody = null;
      // verify the required parameter 'chainId' is set
      if (chainId === undefined || chainId === null) {
        throw new Error("Missing the required parameter 'chainId' when calling chainsChainIdDappsSushiswapPoolsCurrentGet");
      }

      let pathParams = {
        'chain_id': chainId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PairDTO];
      return this.apiClient.callApi(
        '/chains/{chain_id}/dapps/sushiswap/pools/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chainsChainIdDappsSushiswapSwapsCurrentGet operation.
     * @callback module:api/SushiswapApi~chainsChainIdDappsSushiswapSwapsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwapDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetSwaps
     * @param {String} chainId Chain id
     * @param {module:api/SushiswapApi~chainsChainIdDappsSushiswapSwapsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwapDTO>}
     */
    chainsChainIdDappsSushiswapSwapsCurrentGet(chainId, callback) {
      let postBody = null;
      // verify the required parameter 'chainId' is set
      if (chainId === undefined || chainId === null) {
        throw new Error("Missing the required parameter 'chainId' when calling chainsChainIdDappsSushiswapSwapsCurrentGet");
      }

      let pathParams = {
        'chain_id': chainId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [SwapDTO];
      return this.apiClient.callApi(
        '/chains/{chain_id}/dapps/sushiswap/swaps/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the chainsChainIdDappsSushiswapTokensCurrentGet operation.
     * @callback module:api/SushiswapApi~chainsChainIdDappsSushiswapTokensCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TokenDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTokens
     * @param {String} chainId Chain id
     * @param {module:api/SushiswapApi~chainsChainIdDappsSushiswapTokensCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TokenDTO>}
     */
    chainsChainIdDappsSushiswapTokensCurrentGet(chainId, callback) {
      let postBody = null;
      // verify the required parameter 'chainId' is set
      if (chainId === undefined || chainId === null) {
        throw new Error("Missing the required parameter 'chainId' when calling chainsChainIdDappsSushiswapTokensCurrentGet");
      }

      let pathParams = {
        'chain_id': chainId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TokenDTO];
      return this.apiClient.callApi(
        '/chains/{chain_id}/dapps/sushiswap/tokens/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
