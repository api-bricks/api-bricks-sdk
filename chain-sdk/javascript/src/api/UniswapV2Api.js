/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UniswapV2PairV2DTO from '../model/UniswapV2PairV2DTO';
import UniswapV2SwapV2DTO from '../model/UniswapV2SwapV2DTO';
import UniswapV2TokenV2DTO from '../model/UniswapV2TokenV2DTO';

/**
* UniswapV2 service.
* @module api/UniswapV2Api
* @version v1
*/
export default class UniswapV2Api {

    /**
    * Constructs a new UniswapV2Api. 
    * @alias module:api/UniswapV2Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the uniswapV2GetPoolsCurrent operation.
     * @callback module:api/UniswapV2Api~uniswapV2GetPoolsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV2PairV2DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pools (current) ðŸ”¥
     * Gets pools.
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId 
     * @param {module:api/UniswapV2Api~uniswapV2GetPoolsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV2PairV2DTO>}
     */
    uniswapV2GetPoolsCurrent(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV2PairV2DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv2/pools/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV2GetSwapsCurrent operation.
     * @callback module:api/UniswapV2Api~uniswapV2GetSwapsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV2SwapV2DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Swaps (current) ðŸ”¥
     * Gets swaps.
     * @param {module:api/UniswapV2Api~uniswapV2GetSwapsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV2SwapV2DTO>}
     */
    uniswapV2GetSwapsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV2SwapV2DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv2/swaps/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV2GetTokensCurrent operation.
     * @callback module:api/UniswapV2Api~uniswapV2GetTokensCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV2TokenV2DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tokens (current) ðŸ”¥
     * Gets tokens.
     * @param {module:api/UniswapV2Api~uniswapV2GetTokensCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV2TokenV2DTO>}
     */
    uniswapV2GetTokensCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV2TokenV2DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv2/tokens/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
