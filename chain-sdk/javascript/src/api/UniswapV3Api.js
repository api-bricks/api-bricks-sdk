/**
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BundleV3DTO from '../model/BundleV3DTO';
import BurnV3DTO from '../model/BurnV3DTO';
import FactoryV3DTO from '../model/FactoryV3DTO';
import MintV3DTO from '../model/MintV3DTO';
import PoolDayDataV3DTO from '../model/PoolDayDataV3DTO';
import PoolHourDataV3DTO from '../model/PoolHourDataV3DTO';
import PoolV3DTO from '../model/PoolV3DTO';
import PositionSnapshotV3DTO from '../model/PositionSnapshotV3DTO';
import PositionV3DTO from '../model/PositionV3DTO';
import SwapV3DTO from '../model/SwapV3DTO';
import TickDayDataV3DTO from '../model/TickDayDataV3DTO';
import TickV3DTO from '../model/TickV3DTO';
import TokenHourDataV3DTO from '../model/TokenHourDataV3DTO';
import TokenV3DTO from '../model/TokenV3DTO';
import TokenV3DayDataDTO from '../model/TokenV3DayDataDTO';
import UniswapDayDataV3DTO from '../model/UniswapDayDataV3DTO';

/**
* UniswapV3 service.
* @module api/UniswapV3Api
* @version v1
*/
export default class UniswapV3Api {

    /**
    * Constructs a new UniswapV3Api. 
    * @alias module:api/UniswapV3Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dappsUniswapv3BundleCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3BundleCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BundleV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBundles
     * @param {module:api/UniswapV3Api~dappsUniswapv3BundleCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BundleV3DTO>}
     */
    dappsUniswapv3BundleCurrentGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [BundleV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/bundle/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3BundlesHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3BundlesHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/UniswapV3Api~dappsUniswapv3BundlesHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3BundlesHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/bundles/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3BurnsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3BurnsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/BurnV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBurns
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3BurnsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/BurnV3DTO>}
     */
    dappsUniswapv3BurnsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [BurnV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/burns/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3BurnsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3BurnsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3BurnsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3BurnsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/burns/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3DayDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3DayDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/UniswapV3Api~dappsUniswapv3DayDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3DayDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/dayData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3FactoryCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3FactoryCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/FactoryV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetFactory
     * @param {String} chainId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3FactoryCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/FactoryV3DTO>}
     */
    dappsUniswapv3FactoryCurrentGet(chainId, callback) {
      let postBody = null;
      // verify the required parameter 'chainId' is set
      if (chainId === undefined || chainId === null) {
        throw new Error("Missing the required parameter 'chainId' when calling dappsUniswapv3FactoryCurrentGet");
      }

      let pathParams = {
        'chain_id': chainId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [FactoryV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/factory/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3FactoryHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3FactoryHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/UniswapV3Api~dappsUniswapv3FactoryHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3FactoryHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/factory/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3MintsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3MintsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MintV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetMints
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3MintsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MintV3DTO>}
     */
    dappsUniswapv3MintsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [MintV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/mints/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3MintsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3MintsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3MintsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3MintsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/mints/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolDayDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolDayDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolDayDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3PoolDayDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolDayData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolHourDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolHourDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolHourDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3PoolHourDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolHourData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PoolV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPools
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PoolV3DTO>}
     */
    dappsUniswapv3PoolsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PoolV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/pools/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolsDayDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolsDayDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PoolDayDataV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPoolsDayData
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolsDayDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PoolDayDataV3DTO>}
     */
    dappsUniswapv3PoolsDayDataCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PoolDayDataV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolsDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3PoolsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/pools/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PoolsHourDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PoolsHourDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PoolHourDataV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPoolsHourData
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3PoolsHourDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PoolHourDataV3DTO>}
     */
    dappsUniswapv3PoolsHourDataCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PoolHourDataV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolsHourData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PositionSnapshotHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PositionSnapshotHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3PositionSnapshotHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3PositionSnapshotHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positionSnapshot/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PositionSnapshotsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PositionSnapshotsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PositionSnapshotV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPositionSnapshot
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3PositionSnapshotsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PositionSnapshotV3DTO>}
     */
    dappsUniswapv3PositionSnapshotsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PositionSnapshotV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positionSnapshots/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PositionsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PositionsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PositionV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetPositions
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3PositionsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PositionV3DTO>}
     */
    dappsUniswapv3PositionsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [PositionV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positions/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3PositionsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3PositionsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3PositionsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3PositionsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positions/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3SwapsCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3SwapsCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwapV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetSwaps
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3SwapsCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwapV3DTO>}
     */
    dappsUniswapv3SwapsCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [SwapV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/swaps/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3SwapsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3SwapsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3SwapsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3SwapsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/swaps/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TickDayDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TickDayDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TickDayDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TickDayDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tickDayData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TicksCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TicksCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TickV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTicks
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3TicksCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TickV3DTO>}
     */
    dappsUniswapv3TicksCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TickV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/ticks/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TicksDayDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TicksDayDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TickDayDataV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTicksDayData
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterPoolId Filter pool id
     * @param {module:api/UniswapV3Api~dappsUniswapv3TicksDayDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TickDayDataV3DTO>}
     */
    dappsUniswapv3TicksDayDataCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_pool_id': opts['filterPoolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TickDayDataV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/ticksDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TicksHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TicksHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.poolId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TicksHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TicksHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'poolId': opts['poolId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/ticks/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokenDayDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokenDayDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.tokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokenDayDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TokenDayDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'tokenId': opts['tokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokenDayData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokenHourDataHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokenHourDataHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.tokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokenHourDataHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TokenHourDataHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'tokenId': opts['tokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokenHourData/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokensCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokensCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TokenV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTokens
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterTokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokensCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TokenV3DTO>}
     */
    dappsUniswapv3TokensCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_token_id': opts['filterTokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TokenV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokens/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokensDayDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokensDayDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TokenV3DayDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTokensDayData
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterTokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokensDayDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TokenV3DayDataDTO>}
     */
    dappsUniswapv3TokensDayDataCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_token_id': opts['filterTokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TokenV3DayDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokensDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokensHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokensHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {String} opts.tokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokensHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TokensHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'tokenId': opts['tokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokens/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TokensHourDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TokensHourDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TokenHourDataV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetTokensHourData
     * @param {Object} opts Optional parameters
     * @param {String} opts.filterTokenId 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TokensHourDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TokenHourDataV3DTO>}
     */
    dappsUniswapv3TokensHourDataCurrentGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter_token_id': opts['filterTokenId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [TokenHourDataV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokensHourData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3TransactionsHistoricalGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3TransactionsHistoricalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startBlock 
     * @param {Number} opts.endBlock 
     * @param {Date} opts.startDate 
     * @param {Date} opts.endDate 
     * @param {module:api/UniswapV3Api~dappsUniswapv3TransactionsHistoricalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dappsUniswapv3TransactionsHistoricalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startBlock': opts['startBlock'],
        'endBlock': opts['endBlock'],
        'startDate': opts['startDate'],
        'endDate': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/dapps/uniswapv3/transactions/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dappsUniswapv3UniswapDayDataCurrentGet operation.
     * @callback module:api/UniswapV3Api~dappsUniswapv3UniswapDayDataCurrentGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapDayDataV3DTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetUniswapDayData
     * @param {module:api/UniswapV3Api~dappsUniswapv3UniswapDayDataCurrentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapDayDataV3DTO>}
     */
    dappsUniswapv3UniswapDayDataCurrentGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapDayDataV3DTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/uniswapDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
