<?php
/**
 * CurveApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OnChain API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CurveApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CurveApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for curveGetAccountsHistorical
     *
     * Accounts (historical).
     *
     */
    public function testCurveGetAccountsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetAddLiquidityEventsHistorical
     *
     * AddLiquidityEvents (historical).
     *
     */
    public function testCurveGetAddLiquidityEventsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetAdminFeeChangeLogsHistorical
     *
     * AdminFeeChangeLogs (historical).
     *
     */
    public function testCurveGetAdminFeeChangeLogsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetAmplificationCoeffChangeLogsHistorical
     *
     * AmplificationCoeffChangeLogs (historical).
     *
     */
    public function testCurveGetAmplificationCoeffChangeLogsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetCoinsHistorical
     *
     * Coins (historical).
     *
     */
    public function testCurveGetCoinsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetContractsHistorical
     *
     * Contracts (historical).
     *
     */
    public function testCurveGetContractsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetContractsVersionsHistorical
     *
     * ContractsVersions (historical).
     *
     */
    public function testCurveGetContractsVersionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetDailyVolumesHistorical
     *
     * DailyVolumes (historical).
     *
     */
    public function testCurveGetDailyVolumesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetExchangesHistorical
     *
     * Exchanges (historical) ðŸ”¥.
     *
     */
    public function testCurveGetExchangesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetFeeChangeLogsHistorical
     *
     * FeeChangeLogs (historical).
     *
     */
    public function testCurveGetFeeChangeLogsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesDepositsHistorical
     *
     * GaugesDeposits (historical).
     *
     */
    public function testCurveGetGaugesDepositsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesHistorical
     *
     * Gauges (historical).
     *
     */
    public function testCurveGetGaugesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesLiquidityHistorical
     *
     * GaugesLiquidity (historical).
     *
     */
    public function testCurveGetGaugesLiquidityHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesTotalWeightsHistorical
     *
     * GaugesTotalWeights (historical).
     *
     */
    public function testCurveGetGaugesTotalWeightsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesTypesHistorical
     *
     * GaugesTypes (historical).
     *
     */
    public function testCurveGetGaugesTypesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesTypesWeightsHistorical
     *
     * GaugesTypesWeights (historical).
     *
     */
    public function testCurveGetGaugesTypesWeightsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesWeightsHistorical
     *
     * GaugesWeights (historical).
     *
     */
    public function testCurveGetGaugesWeightsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesWeightsVotesHistorical
     *
     * GaugesWeightsVotes (historical).
     *
     */
    public function testCurveGetGaugesWeightsVotesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetGaugesWithdrawHistorical
     *
     * GaugesWithdraw (historical).
     *
     */
    public function testCurveGetGaugesWithdrawHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetHourlyVolumesHistorical
     *
     * HourlyVolumes (historical).
     *
     */
    public function testCurveGetHourlyVolumesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetLpTokensHistorical
     *
     * LpTokens (historical).
     *
     */
    public function testCurveGetLpTokensHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetPoolsHistorical
     *
     * Pools (historical) ðŸ”¥.
     *
     */
    public function testCurveGetPoolsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetProposalsHistorical
     *
     * Proposals (historical).
     *
     */
    public function testCurveGetProposalsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetProposalsVotesHistorical
     *
     * ProposalsVotes (historical).
     *
     */
    public function testCurveGetProposalsVotesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetRemoveLiquidityEventsHistorical
     *
     * RemoveLiquidityEvents (historical).
     *
     */
    public function testCurveGetRemoveLiquidityEventsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetRemoveLiquidityOneEventsHistorical
     *
     * RemoveLiquidityOneEvents (historical).
     *
     */
    public function testCurveGetRemoveLiquidityOneEventsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetSystemStatesHistorical
     *
     * SystemStates (historical).
     *
     */
    public function testCurveGetSystemStatesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetTokensHistorical
     *
     * Tokens (historical) ðŸ”¥.
     *
     */
    public function testCurveGetTokensHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetTransferOwnershipEventsHistorical
     *
     * TransferOwnershipEvents (historical).
     *
     */
    public function testCurveGetTransferOwnershipEventsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetUnderlyingCoinsHistorical
     *
     * UnderlyingCoins (historical).
     *
     */
    public function testCurveGetUnderlyingCoinsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetVotingAppsHistorical
     *
     * VotingApps (historical).
     *
     */
    public function testCurveGetVotingAppsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for curveGetWeeklyVolumesHistorical
     *
     * WeeklyVolumes (historical).
     *
     */
    public function testCurveGetWeeklyVolumesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
