<?php
/**
 * SushiswapApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OnChain API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SushiswapApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SushiswapApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for sushiswapBundlesCurrent
     *
     * Bundles (current).
     *
     */
    public function testSushiswapBundlesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapBurnsCurrent
     *
     * Burns (current).
     *
     */
    public function testSushiswapBurnsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapDayDatasCurrent
     *
     * DayDatas (current).
     *
     */
    public function testSushiswapDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapFactorysCurrent
     *
     * Factorys (current).
     *
     */
    public function testSushiswapFactorysCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetBundlesHistorical
     *
     * Bundles (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetBundlesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetBurnsHistorical
     *
     * Burns (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetBurnsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetDayDatasHistorical
     *
     * DayDatas (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetFactorysHistorical
     *
     * Factorys (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetFactorysHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetHourDatasHistorical
     *
     * HourDatas (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetHourDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetLiquidityPositionSnapshotsHistorical
     *
     * LiquidityPositionSnapshots (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetLiquidityPositionSnapshotsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetLiquidityPositionsHistorical
     *
     * LiquidityPositions (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetLiquidityPositionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetMintsHistorical
     *
     * Mints (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetMintsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPairDayDatasHistorical
     *
     * PairDayDatas (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetPairDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPairHourDatasHistorical
     *
     * PairHourDatas (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetPairHourDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPairsHistorical
     *
     * Pairs (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetPairsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetSwapsHistorical
     *
     * Swaps (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetSwapsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTokenDayDatasHistorical
     *
     * TokenDayDatas (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetTokenDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTokensHistorical
     *
     * Tokens (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetTokensHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTransactionsHistorical
     *
     * Transactions (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetTransactionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetUsersHistorical
     *
     * Users (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetUsersHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapHourDatasCurrent
     *
     * HourDatas (current).
     *
     */
    public function testSushiswapHourDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapLiquidityPositionSnapshotsCurrent
     *
     * LiquidityPositionSnapshots (current).
     *
     */
    public function testSushiswapLiquidityPositionSnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapLiquidityPositionsCurrent
     *
     * LiquidityPositions (current).
     *
     */
    public function testSushiswapLiquidityPositionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapMintsCurrent
     *
     * Mints (current).
     *
     */
    public function testSushiswapMintsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapPairDayDatasCurrent
     *
     * PairDayDatas (current).
     *
     */
    public function testSushiswapPairDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapPairHourDatasCurrent
     *
     * PairHourDatas (current).
     *
     */
    public function testSushiswapPairHourDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapPairsCurrent
     *
     * Pairs (current).
     *
     */
    public function testSushiswapPairsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapSwapsCurrent
     *
     * Swaps (current).
     *
     */
    public function testSushiswapSwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapTokenDayDatasCurrent
     *
     * TokenDayDatas (current).
     *
     */
    public function testSushiswapTokenDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapTokensCurrent
     *
     * Tokens (current).
     *
     */
    public function testSushiswapTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapTransactionsCurrent
     *
     * Transactions (current).
     *
     */
    public function testSushiswapTransactionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapUsersCurrent
     *
     * Users (current).
     *
     */
    public function testSushiswapUsersCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
