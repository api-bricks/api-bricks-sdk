<?php
/**
 * SushiswapApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OnChain API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SushiswapApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SushiswapApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for curveGetExchangesCurrent
     *
     * Exchanges (current) ðŸ”¥.
     *
     */
    public function testCurveGetExchangesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dexGetTradesCurrent
     *
     * Trades (current) ðŸ”¥.
     *
     */
    public function testDexGetTradesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetBundlesHistorical
     *
     * Bundles (historical).
     *
     */
    public function testSushiswapGetBundlesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetBurnsHistorical
     *
     * Burns (historical).
     *
     */
    public function testSushiswapGetBurnsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetDayDataHistorical
     *
     * DayData (historical).
     *
     */
    public function testSushiswapGetDayDataHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetFactoryHistorical
     *
     * Factory (historical).
     *
     */
    public function testSushiswapGetFactoryHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetHourDataHistorical
     *
     * HourData (historical).
     *
     */
    public function testSushiswapGetHourDataHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetLiquidityPositionHistorical
     *
     * LiquidityPosition (historical).
     *
     */
    public function testSushiswapGetLiquidityPositionHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetLiquidityPositionSnapshotHistorical
     *
     * LiquidityPositionSnapshot (historical).
     *
     */
    public function testSushiswapGetLiquidityPositionSnapshotHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetMintsHistorical
     *
     * Mints (historical).
     *
     */
    public function testSushiswapGetMintsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPoolsCurrent
     *
     * Pools (current) ðŸ”¥.
     *
     */
    public function testSushiswapGetPoolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPoolsDayDataHistorical
     *
     * PoolsDayData (historical).
     *
     */
    public function testSushiswapGetPoolsDayDataHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPoolsHistorical
     *
     * Pools (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetPoolsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetPoolsHourDataHistorical
     *
     * PoolsHourData (historical).
     *
     */
    public function testSushiswapGetPoolsHourDataHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetSwapsCurrent
     *
     * Swaps (current) ðŸ”¥.
     *
     */
    public function testSushiswapGetSwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetSwapsHistorical
     *
     * Swaps (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetSwapsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTokensCurrent
     *
     * Tokens (current) ðŸ”¥.
     *
     */
    public function testSushiswapGetTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTokensDayDataHistorical
     *
     * TokensDayData (historical).
     *
     */
    public function testSushiswapGetTokensDayDataHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTokensHistorical
     *
     * Tokens (historical) ðŸ”¥.
     *
     */
    public function testSushiswapGetTokensHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetTransactionsHistorical
     *
     * Transactions (historical).
     *
     */
    public function testSushiswapGetTransactionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sushiswapGetUsersHistorical
     *
     * Users (historical).
     *
     */
    public function testSushiswapGetUsersHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
