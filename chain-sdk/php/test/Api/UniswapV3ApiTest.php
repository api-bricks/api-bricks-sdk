<?php
/**
 * UniswapV3ApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OnChain API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UniswapV3ApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UniswapV3ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for uniswapV3BundlesCurrent
     *
     * Bundles (current).
     *
     */
    public function testUniswapV3BundlesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3BurnsCurrent
     *
     * Burns (current).
     *
     */
    public function testUniswapV3BurnsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3FactorysCurrent
     *
     * Factorys (current).
     *
     */
    public function testUniswapV3FactorysCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetBundlesHistorical
     *
     * Bundles (historical).
     *
     */
    public function testUniswapV3GetBundlesHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetBurnsHistorical
     *
     * Burns (historical).
     *
     */
    public function testUniswapV3GetBurnsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetFactorysHistorical
     *
     * Factorys (historical).
     *
     */
    public function testUniswapV3GetFactorysHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetMintsHistorical
     *
     * Mints (historical).
     *
     */
    public function testUniswapV3GetMintsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetPoolDayDatasHistorical
     *
     * PoolDayDatas (historical).
     *
     */
    public function testUniswapV3GetPoolDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetPoolHourDatasHistorical
     *
     * PoolHourDatas (historical).
     *
     */
    public function testUniswapV3GetPoolHourDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetPoolsHistorical
     *
     * Pools (historical).
     *
     */
    public function testUniswapV3GetPoolsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetPositionSnapshotsHistorical
     *
     * PositionSnapshots (historical).
     *
     */
    public function testUniswapV3GetPositionSnapshotsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetPositionsHistorical
     *
     * Positions (historical).
     *
     */
    public function testUniswapV3GetPositionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetSwapsHistorical
     *
     * Swaps (historical).
     *
     */
    public function testUniswapV3GetSwapsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTickDayDatasHistorical
     *
     * TickDayDatas (historical).
     *
     */
    public function testUniswapV3GetTickDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTicksHistorical
     *
     * Ticks (historical).
     *
     */
    public function testUniswapV3GetTicksHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTokenHourDatasHistorical
     *
     * TokenHourDatas (historical).
     *
     */
    public function testUniswapV3GetTokenHourDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTokenV3DayDatasHistorical
     *
     * TokenV3DayDatas (historical).
     *
     */
    public function testUniswapV3GetTokenV3DayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTokensHistorical
     *
     * Tokens (historical).
     *
     */
    public function testUniswapV3GetTokensHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetTransactionsHistorical
     *
     * Transactions (historical).
     *
     */
    public function testUniswapV3GetTransactionsHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3GetUniswapDayDatasHistorical
     *
     * UniswapDayDatas (historical).
     *
     */
    public function testUniswapV3GetUniswapDayDatasHistorical()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3MintsCurrent
     *
     * Mints (current).
     *
     */
    public function testUniswapV3MintsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolDayDatasCurrent
     *
     * PoolDayDatas (current).
     *
     */
    public function testUniswapV3PoolDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolHourDatasCurrent
     *
     * PoolHourDatas (current).
     *
     */
    public function testUniswapV3PoolHourDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolsCurrent
     *
     * Pools (current).
     *
     */
    public function testUniswapV3PoolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PositionSnapshotsCurrent
     *
     * PositionSnapshots (current).
     *
     */
    public function testUniswapV3PositionSnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PositionsCurrent
     *
     * Positions (current).
     *
     */
    public function testUniswapV3PositionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3SwapsCurrent
     *
     * Swaps (current).
     *
     */
    public function testUniswapV3SwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TickDayDatasCurrent
     *
     * TickDayDatas (current).
     *
     */
    public function testUniswapV3TickDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TicksCurrent
     *
     * Ticks (current).
     *
     */
    public function testUniswapV3TicksCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokenHourDatasCurrent
     *
     * TokenHourDatas (current).
     *
     */
    public function testUniswapV3TokenHourDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokenV3DayDatasCurrent
     *
     * TokenV3DayDatas (current).
     *
     */
    public function testUniswapV3TokenV3DayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokensCurrent
     *
     * Tokens (current).
     *
     */
    public function testUniswapV3TokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TransactionsCurrent
     *
     * Transactions (current).
     *
     */
    public function testUniswapV3TransactionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3UniswapDayDatasCurrent
     *
     * UniswapDayDatas (current).
     *
     */
    public function testUniswapV3UniswapDayDatasCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
