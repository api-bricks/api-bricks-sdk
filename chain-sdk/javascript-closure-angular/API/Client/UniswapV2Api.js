/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.UniswapV2Api.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 *  This section will provide necessary information about the &#x60;OnChain API&#x60; protocol.  &lt;br/&gt;&lt;br/&gt; Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 * Version: v1
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license MIT License
 * https://github.com/coinapi/coinapi-sdk/blob/master/LICENSE
 */

goog.provide('API.Client.UniswapV2Api');

goog.require('API.Client.UniswapV2.BundleV2DTO');
goog.require('API.Client.UniswapV2.BurnV2DTO');
goog.require('API.Client.UniswapV2.LiquidityPositionSnapshotV2DTO');
goog.require('API.Client.UniswapV2.LiquidityPositionV2DTO');
goog.require('API.Client.UniswapV2.MintV2DTO');
goog.require('API.Client.UniswapV2.PairDayDataV2DTO');
goog.require('API.Client.UniswapV2.PairHourDataV2DTO');
goog.require('API.Client.UniswapV2.PairV2DTO');
goog.require('API.Client.UniswapV2.SwapV2DTO');
goog.require('API.Client.UniswapV2.TokenDayDataV2DTO');
goog.require('API.Client.UniswapV2.TokenV2DTO');
goog.require('API.Client.UniswapV2.TransactionV2DTO');
goog.require('API.Client.UniswapV2.UniswapDayDataV2DTO');
goog.require('API.Client.UniswapV2.UniswapFactoryV2DTO');
goog.require('API.Client.UniswapV2.UserV2DTO');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.UniswapV2Api = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('UniswapV2ApiBasePath') ?
                   /** @type {!string} */ ($injector.get('UniswapV2ApiBasePath')) :
                   'https://onchain.coinapi.io';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('UniswapV2ApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('UniswapV2ApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.UniswapV2Api.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * BundleV2DTOs (historical) ðŸ”¥
 * Gets BundleV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.BundleV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetBundleV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/BundleV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Bundles (historical)
 * Gets bundles.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.BundleV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetBundlesHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/bundles/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * BurnV2DTOs (historical) ðŸ”¥
 * Gets BurnV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.BurnV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetBurnV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/BurnV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Burns (historical)
 * Gets burns.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.BurnV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetBurnsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/burns/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * DayData (historical)
 * Gets uniswapv2 day data.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UniswapDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetDayDataHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/dayData/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Factory (historical)
 * Gets factory.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UniswapFactoryV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetFactoryHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/factory/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * LiquidityPositionSnapshotV2DTOs (historical) ðŸ”¥
 * Gets LiquidityPositionSnapshotV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.LiquidityPositionSnapshotV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/LiquidityPositionSnapshotV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * LiquidityPositionV2DTOs (historical) ðŸ”¥
 * Gets LiquidityPositionV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.LiquidityPositionV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetLiquidityPositionV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/LiquidityPositionV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * LiquidityPositions (historical)
 * Gets liquidity positions.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.LiquidityPositionV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetLiquidityPositionsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/liquidityPositions/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * LiquidityPositionsSnapshots (historical)
 * Gets liquidity positions snapshots.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.LiquidityPositionSnapshotV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetLiquidityPositionsSnapshotsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/liquidityPositionsSnapshots/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * MintV2DTOs (historical) ðŸ”¥
 * Gets MintV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.MintV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetMintV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/MintV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Mints (historical)
 * Gets mints.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.MintV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetMintsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/mints/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * PairDayDataV2DTOs (historical) ðŸ”¥
 * Gets PairDayDataV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPairDayDataV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/PairDayDataV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * PairHourDataV2DTOs (historical) ðŸ”¥
 * Gets PairHourDataV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairHourDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPairHourDataV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/PairHourDataV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * PairV2DTOs (historical) ðŸ”¥
 * Gets PairV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPairV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/PairV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Pools (current) ðŸ”¥
 * Gets pools.
 * @param {!string=} opt_filterPoolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPoolsCurrent = function(opt_filterPoolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/pools/current';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_filterPoolId !== undefined) {
    queryParameters['filter_pool_id'] = opt_filterPoolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * PoolsDayData (historical)
 * Gets pools day data.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPoolsDayDataHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/poolsDayData/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Pools (historical) ðŸ”¥
 * Gets pools.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPoolsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/pools/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * PoolsHourData (historical)
 * Gets pools tracked each our.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.PairHourDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetPoolsHourDataHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/poolsHourData/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * SwapV2DTOs (historical) ðŸ”¥
 * Gets SwapV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.SwapV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetSwapV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/SwapV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Swaps (current) ðŸ”¥
 * Gets swaps.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.SwapV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetSwapsCurrent = function(opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/swaps/current';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Swaps (historical) ðŸ”¥
 * Gets swaps.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.SwapV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetSwapsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/swaps/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * TokenDayDataV2DTOs (historical) ðŸ”¥
 * Gets TokenDayDataV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TokenDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTokenDayDataV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/TokenDayDataV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * TokenV2DTOs (historical) ðŸ”¥
 * Gets TokenV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TokenV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTokenV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/TokenV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Tokens (current) ðŸ”¥
 * Gets tokens.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TokenV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTokensCurrent = function(opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/tokens/current';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * TokensDayData (historical)
 * Gets tokens day data.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_tokenId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TokenDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTokensDayDataHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_tokenId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/tokensDayData/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_tokenId !== undefined) {
    queryParameters['tokenId'] = opt_tokenId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Tokens (historical) ðŸ”¥
 * Gets tokens.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_tokenId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TokenV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTokensHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_tokenId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/tokens/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_tokenId !== undefined) {
    queryParameters['tokenId'] = opt_tokenId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * TransactionV2DTOs (historical) ðŸ”¥
 * Gets TransactionV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TransactionV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTransactionV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/TransactionV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Transactions (historical)
 * Gets transactions.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.TransactionV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetTransactionsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/transactions/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * UniswapDayDataV2DTOs (historical) ðŸ”¥
 * Gets UniswapDayDataV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UniswapDayDataV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetUniswapDayDataV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/UniswapDayDataV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * UniswapFactoryV2DTOs (historical) ðŸ”¥
 * Gets UniswapFactoryV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UniswapFactoryV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetUniswapFactoryV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/UniswapFactoryV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * UserV2DTOs (historical) ðŸ”¥
 * Gets UserV2DTOs.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!string=} opt_poolId 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UserV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetUserV2DTOsHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_poolId, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/UserV2DTOs/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  if (opt_poolId !== undefined) {
    queryParameters['poolId'] = opt_poolId;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Users (historical)
 * Gets users.
 * @param {!number=} opt_startBlock 
 * @param {!number=} opt_endBlock 
 * @param {!Date=} opt_startDate 
 * @param {!Date=} opt_endDate 
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!Array<!API.Client.UniswapV2.UserV2DTO>>}
 */
API.Client.UniswapV2Api.prototype.uniswapV2GetUsersHistorical = function(opt_startBlock, opt_endBlock, opt_startDate, opt_endDate, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/dapps/uniswapv2/users/historical';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  if (opt_startBlock !== undefined) {
    queryParameters['startBlock'] = opt_startBlock;
  }

  if (opt_endBlock !== undefined) {
    queryParameters['endBlock'] = opt_endBlock;
  }

  if (opt_startDate !== undefined) {
    queryParameters['startDate'] = opt_startDate;
  }

  if (opt_endDate !== undefined) {
    queryParameters['endDate'] = opt_endDate;
  }

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
