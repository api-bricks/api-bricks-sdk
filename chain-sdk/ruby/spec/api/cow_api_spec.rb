=begin
#On Chain Dapps - REST API

# This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

The version of the OpenAPI document: v1
Contact: support@coinapi.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CowApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CowApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CowApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CowApi' do
    it 'should create an instance of CowApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CowApi)
    end
  end

  # unit tests for cow_get_orders__historical
  # Orders (historical)
  # Gets orders.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
  # @option opts [Integer] :end_block The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
  # @option opts [Time] :start_date The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
  # @option opts [Time] :end_date The end date of timeframe.
  # @option opts [String] :id User&#39;s address.
  # @return [Array<CowOrderDTO>]
  describe 'cow_get_orders__historical test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_get_settlements__historical
  # Settlements (historical)
  # Gets settlements.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
  # @option opts [Integer] :end_block The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
  # @option opts [Time] :start_date The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
  # @option opts [Time] :end_date The end date of timeframe.
  # @option opts [String] :id Transaction hash.
  # @return [Array<CowSettlementDTO>]
  describe 'cow_get_settlements__historical test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_get_tokens__historical
  # Tokens (historical)
  # Gets tokens.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
  # @option opts [Integer] :end_block The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
  # @option opts [Time] :start_date The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
  # @option opts [Time] :end_date The end date of timeframe.
  # @option opts [String] :id Token&#39;s address.
  # @option opts [String] :address Token&#39;s address.
  # @option opts [String] :name Token name fetched by ERC20 contract call.
  # @option opts [String] :symbol Token symbol fetched by contract call.
  # @return [Array<CowTokenDTO>]
  describe 'cow_get_tokens__historical test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_get_trades__historical
  # Trades (historical)
  # Gets trades.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
  # @option opts [Integer] :end_block The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
  # @option opts [Time] :start_date The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
  # @option opts [Time] :end_date The end date of timeframe.
  # @option opts [String] :id Identifier, format: (order id)|(transaction hash)|(event index).
  # @option opts [String] :sell_token Address of token that is sold.
  # @option opts [String] :buy_token Address of token that is bought.
  # @return [Array<CowTradeDTO>]
  describe 'cow_get_trades__historical test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_get_users__historical
  # Users (historical)
  # Gets users.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block The start block. If endblock is not given, only those entities will be included that were exactly created in startBlock.
  # @option opts [Integer] :end_block The end block. Useful to filter data in range of blocks (FROM startBlock TO endBlock).
  # @option opts [Time] :start_date The start date of timeframe. If endDate is not given, entities created FROM startDate TO startDate plus 24 hours will be included.
  # @option opts [Time] :end_date The end date of timeframe.
  # @option opts [String] :id User&#39;s address.
  # @option opts [String] :address User&#39;s address.
  # @return [Array<CowUserDTO>]
  describe 'cow_get_users__historical test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_orders__current
  # Orders (current)
  # Gets orders.
  # @param [Hash] opts the optional parameters
  # @return [Array<CowOrderDTO>]
  describe 'cow_orders__current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_settlements__current
  # Settlements (current)
  # Gets settlements.
  # @param [Hash] opts the optional parameters
  # @return [Array<CowSettlementDTO>]
  describe 'cow_settlements__current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_tokens__current
  # Tokens (current)
  # Gets tokens.
  # @param [Hash] opts the optional parameters
  # @return [Array<CowTokenDTO>]
  describe 'cow_tokens__current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_trades__current
  # Trades (current)
  # Gets trades.
  # @param [Hash] opts the optional parameters
  # @return [Array<CowTradeDTO>]
  describe 'cow_trades__current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cow_users__current
  # Users (current)
  # Gets users.
  # @param [Hash] opts the optional parameters
  # @return [Array<CowUserDTO>]
  describe 'cow_users__current test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
