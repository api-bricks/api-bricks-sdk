=begin
#OnChain API

# This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

The version of the OpenAPI document: v1
Contact: support@coinapi.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CurveApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CurveApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CurveApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CurveApi' do
    it 'should create an instance of CurveApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CurveApi)
    end
  end

  # unit tests for curve_get_accounts__historical
  # Accounts (historical)
  # Gets accounts.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveAccountDTO>]
  describe 'curve_get_accounts__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_add_liquidity_events__historical
  # AddLiquidityEvents (historical)
  # Gets add liquidity events.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveAddLiquidityEventDTO>]
  describe 'curve_get_add_liquidity_events__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_admin_fee_change_logs__historical
  # AdminFeeChangeLogs (historical)
  # Gets admin fee change logs.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveAdminFeeChangeLogDTO>]
  describe 'curve_get_admin_fee_change_logs__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_amplification_coeff_change_logs__historical
  # AmplificationCoeffChangeLogs (historical)
  # Gets amplification coeff change logs.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveAmplificationCoeffChangeLogDTO>]
  describe 'curve_get_amplification_coeff_change_logs__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_coins__historical
  # Coins (historical)
  # Gets coins.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveCoinDTO>]
  describe 'curve_get_coins__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_contracts__historical
  # Contracts (historical)
  # Gets contracts.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveContractDTO>]
  describe 'curve_get_contracts__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_contracts_versions__historical
  # ContractsVersions (historical)
  # Gets contracts versions.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveContractVersionDTO>]
  describe 'curve_get_contracts_versions__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_daily_volumes__historical
  # DailyVolumes (historical)
  # Gets daily volumes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveDailyVolumeDTO>]
  describe 'curve_get_daily_volumes__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_exchanges__historical
  # Exchanges (historical) ðŸ”¥
  # Gets exchanges.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveExchangeDTO>]
  describe 'curve_get_exchanges__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_fee_change_logs__historical
  # FeeChangeLogs (historical)
  # Gets fee change logs.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveFeeChangeLogDTO>]
  describe 'curve_get_fee_change_logs__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges__historical
  # Gauges (historical)
  # Gets gauges.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveGaugeDTO>]
  describe 'curve_get_gauges__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_deposits__historical
  # GaugesDeposits (historical)
  # Gets gauges deposits.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeDepositDTO>]
  describe 'curve_get_gauges_deposits__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_liquidity__historical
  # GaugesLiquidity (historical)
  # Gets gauges liquidity.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeLiquidityDTO>]
  describe 'curve_get_gauges_liquidity__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_total_weights__historical
  # GaugesTotalWeights (historical)
  # Gets gauges total weights.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeTotalWeightDTO>]
  describe 'curve_get_gauges_total_weights__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_types__historical
  # GaugesTypes (historical)
  # Gets gauges types.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeTypeDTO>]
  describe 'curve_get_gauges_types__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_types_weights__historical
  # GaugesTypesWeights (historical)
  # Gets gauges types weights.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeTypeWeightDTO>]
  describe 'curve_get_gauges_types_weights__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_weights__historical
  # GaugesWeights (historical)
  # Gets gauges weights.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeWeightDTO>]
  describe 'curve_get_gauges_weights__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_weights_votes__historical
  # GaugesWeightsVotes (historical)
  # Gets gauges weights votes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeWeightVoteDTO>]
  describe 'curve_get_gauges_weights_votes__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_gauges_withdraw__historical
  # GaugesWithdraw (historical)
  # Gets gauges withdraws.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveGaugeWithdrawDTO>]
  describe 'curve_get_gauges_withdraw__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_hourly_volumes__historical
  # HourlyVolumes (historical)
  # Gets hourly volumes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveHourlyVolumeDTO>]
  describe 'curve_get_hourly_volumes__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_lp_tokens__historical
  # LpTokens (historical)
  # Gets lp tokens.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveLpTokenDTO>]
  describe 'curve_get_lp_tokens__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_pools__historical
  # Pools (historical) ðŸ”¥
  # Gets pools.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurvePoolDTO>]
  describe 'curve_get_pools__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_proposals__historical
  # Proposals (historical)
  # Gets proposals.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveProposalDTO>]
  describe 'curve_get_proposals__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_proposals_votes__historical
  # ProposalsVotes (historical)
  # Gets proposals votes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveProposalVoteDTO>]
  describe 'curve_get_proposals_votes__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_remove_liquidity_events__historical
  # RemoveLiquidityEvents (historical)
  # Gets remove liquidity events.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveRemoveLiquidityEventDTO>]
  describe 'curve_get_remove_liquidity_events__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_remove_liquidity_one_events__historical
  # RemoveLiquidityOneEvents (historical)
  # Gets remove liquidity one events.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveRemoveLiquidityOneEventDTO>]
  describe 'curve_get_remove_liquidity_one_events__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_system_states__historical
  # SystemStates (historical)
  # Gets system states.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveSystemStateDTO>]
  describe 'curve_get_system_states__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_tokens__historical
  # Tokens (historical) ðŸ”¥
  # Gets tokens.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :token_id 
  # @return [Array<CurveTokenDTO>]
  describe 'curve_get_tokens__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_transfer_ownership_events__historical
  # TransferOwnershipEvents (historical)
  # Gets transfer ownership events.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveTransferOwnershipEventDTO>]
  describe 'curve_get_transfer_ownership_events__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_underlying_coins__historical
  # UnderlyingCoins (historical)
  # Gets underlying coins.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveUnderlyingCoinDTO>]
  describe 'curve_get_underlying_coins__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_voting_apps__historical
  # VotingApps (historical)
  # Gets voting apps.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @return [Array<CurveVotingAppDTO>]
  describe 'curve_get_voting_apps__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for curve_get_weekly_volumes__historical
  # WeeklyVolumes (historical)
  # Gets weekly volumes.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start_block 
  # @option opts [Integer] :end_block 
  # @option opts [Time] :start_date 
  # @option opts [Time] :end_date 
  # @option opts [String] :pool_id 
  # @return [Array<CurveWeeklyVolumeDTO>]
  describe 'curve_get_weekly_volumes__historical test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
