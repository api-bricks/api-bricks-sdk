/*
 * OnChain API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing DexApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DexApiTests : IDisposable
    {
        private DexApi instance;

        public DexApiTests()
        {
            instance = new DexApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DexApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DexApi
            //Assert.IsType<DexApi>(instance);
        }

        /// <summary>
        /// Test DappsDexBatchHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexBatchHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsDexBatchHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsDexOrdersHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexOrdersHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexOrdersHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsDexPoiHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexPoiHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsDexPoiHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsDexPricesHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexPricesHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexPricesHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsDexSolutionHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexSolutionHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexSolutionHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsDexStatsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexStatsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsDexStatsHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsDexTokensHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexTokensHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexTokensHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsDexTradesHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexTradesHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsDexTradesHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsDexUsersHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexUsersHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsDexUsersHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsDexWithdrawHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexWithdrawHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexWithdrawHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsDexWithdrawRequestHistoricalGet
        /// </summary>
        [Fact]
        public void DappsDexWithdrawRequestHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsDexWithdrawRequestHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }
    }
}
