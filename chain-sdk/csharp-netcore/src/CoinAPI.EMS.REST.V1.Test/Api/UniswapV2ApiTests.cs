/*
 * OnChain API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
// uncomment below to import models
//using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing UniswapV2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UniswapV2ApiTests : IDisposable
    {
        private UniswapV2Api instance;

        public UniswapV2ApiTests()
        {
            instance = new UniswapV2Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UniswapV2Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UniswapV2Api
            //Assert.IsType<UniswapV2Api>(instance);
        }

        /// <summary>
        /// Test UniswapV2GetBundleV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetBundleV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetBundleV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2BundleV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetBundlesHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetBundlesHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.UniswapV2GetBundlesHistorical(startBlock, endBlock, startDate, endDate);
            //Assert.IsType<List<UniswapV2BundleV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetBurnV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetBurnV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetBurnV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2BurnV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetBurnsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetBurnsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetBurnsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2BurnV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetDayDataHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetDayDataHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.UniswapV2GetDayDataHistorical(startBlock, endBlock, startDate, endDate);
            //Assert.IsType<List<UniswapV2UniswapDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetFactoryHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetFactoryHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.UniswapV2GetFactoryHistorical(startBlock, endBlock, startDate, endDate);
            //Assert.IsType<List<UniswapV2UniswapFactoryV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetLiquidityPositionSnapshotV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetLiquidityPositionSnapshotV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2LiquidityPositionSnapshotV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetLiquidityPositionV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetLiquidityPositionV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetLiquidityPositionV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2LiquidityPositionV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetLiquidityPositionsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetLiquidityPositionsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetLiquidityPositionsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2LiquidityPositionV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetLiquidityPositionsSnapshotsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetLiquidityPositionsSnapshotsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetLiquidityPositionsSnapshotsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2LiquidityPositionSnapshotV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetMintV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetMintV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetMintV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2MintV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetMintsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetMintsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetMintsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2MintV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPairDayDataV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPairDayDataV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPairDayDataV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPairHourDataV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPairHourDataV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPairHourDataV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairHourDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPairV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPairV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPairV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPoolsCurrent
        /// </summary>
        [Fact]
        public void UniswapV2GetPoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.UniswapV2GetPoolsCurrent(filterPoolId);
            //Assert.IsType<List<UniswapV2PairV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPoolsDayDataHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPoolsDayDataHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPoolsDayDataHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPoolsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPoolsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPoolsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetPoolsHourDataHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetPoolsHourDataHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetPoolsHourDataHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2PairHourDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetSwapV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetSwapV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetSwapV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2SwapV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetSwapsCurrent
        /// </summary>
        [Fact]
        public void UniswapV2GetSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV2GetSwapsCurrent();
            //Assert.IsType<List<UniswapV2SwapV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetSwapsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetSwapsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetSwapsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2SwapV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTokenDayDataV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTokenDayDataV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetTokenDayDataV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2TokenDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTokenV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTokenV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetTokenV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2TokenV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTokensCurrent
        /// </summary>
        [Fact]
        public void UniswapV2GetTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV2GetTokensCurrent();
            //Assert.IsType<List<UniswapV2TokenV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTokensDayDataHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTokensDayDataHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //var response = instance.UniswapV2GetTokensDayDataHistorical(startBlock, endBlock, startDate, endDate, tokenId);
            //Assert.IsType<List<UniswapV2TokenDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTokensHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTokensHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //var response = instance.UniswapV2GetTokensHistorical(startBlock, endBlock, startDate, endDate, tokenId);
            //Assert.IsType<List<UniswapV2TokenV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTransactionV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTransactionV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetTransactionV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2TransactionV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetTransactionsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetTransactionsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.UniswapV2GetTransactionsHistorical(startBlock, endBlock, startDate, endDate);
            //Assert.IsType<List<UniswapV2TransactionV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetUniswapDayDataV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetUniswapDayDataV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetUniswapDayDataV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2UniswapDayDataV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetUniswapFactoryV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetUniswapFactoryV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetUniswapFactoryV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2UniswapFactoryV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetUserV2DTOsHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetUserV2DTOsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //var response = instance.UniswapV2GetUserV2DTOsHistorical(startBlock, endBlock, startDate, endDate, poolId);
            //Assert.IsType<List<UniswapV2UserV2DTO>>(response);
        }

        /// <summary>
        /// Test UniswapV2GetUsersHistorical
        /// </summary>
        [Fact]
        public void UniswapV2GetUsersHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //var response = instance.UniswapV2GetUsersHistorical(startBlock, endBlock, startDate, endDate);
            //Assert.IsType<List<UniswapV2UserV2DTO>>(response);
        }
    }
}
