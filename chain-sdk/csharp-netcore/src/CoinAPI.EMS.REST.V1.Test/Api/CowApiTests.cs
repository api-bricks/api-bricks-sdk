/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
// uncomment below to import models
//using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing CowApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CowApiTests : IDisposable
    {
        private CowApi instance;

        public CowApiTests()
        {
            instance = new CowApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CowApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CowApi
            //Assert.IsType<CowApi>(instance);
        }

        /// <summary>
        /// Test CowGetOrdersHistorical
        /// </summary>
        [Fact]
        public void CowGetOrdersHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.CowGetOrdersHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsType<List<CowOrderDTO>>(response);
        }

        /// <summary>
        /// Test CowGetSettlementsHistorical
        /// </summary>
        [Fact]
        public void CowGetSettlementsHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //var response = instance.CowGetSettlementsHistorical(startBlock, endBlock, startDate, endDate, id);
            //Assert.IsType<List<CowSettlementDTO>>(response);
        }

        /// <summary>
        /// Test CowGetTokensHistorical
        /// </summary>
        [Fact]
        public void CowGetTokensHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string address = null;
            //string name = null;
            //string symbol = null;
            //var response = instance.CowGetTokensHistorical(startBlock, endBlock, startDate, endDate, id, address, name, symbol);
            //Assert.IsType<List<CowTokenDTO>>(response);
        }

        /// <summary>
        /// Test CowGetTradesHistorical
        /// </summary>
        [Fact]
        public void CowGetTradesHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string sellToken = null;
            //string buyToken = null;
            //var response = instance.CowGetTradesHistorical(startBlock, endBlock, startDate, endDate, id, sellToken, buyToken);
            //Assert.IsType<List<CowTradeDTO>>(response);
        }

        /// <summary>
        /// Test CowGetUsersHistorical
        /// </summary>
        [Fact]
        public void CowGetUsersHistoricalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string id = null;
            //string address = null;
            //var response = instance.CowGetUsersHistorical(startBlock, endBlock, startDate, endDate, id, address);
            //Assert.IsType<List<CowUserDTO>>(response);
        }

        /// <summary>
        /// Test CowOrdersCurrent
        /// </summary>
        [Fact]
        public void CowOrdersCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CowOrdersCurrent();
            //Assert.IsType<List<CowOrderDTO>>(response);
        }

        /// <summary>
        /// Test CowSettlementsCurrent
        /// </summary>
        [Fact]
        public void CowSettlementsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CowSettlementsCurrent();
            //Assert.IsType<List<CowSettlementDTO>>(response);
        }

        /// <summary>
        /// Test CowTokensCurrent
        /// </summary>
        [Fact]
        public void CowTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CowTokensCurrent();
            //Assert.IsType<List<CowTokenDTO>>(response);
        }

        /// <summary>
        /// Test CowTradesCurrent
        /// </summary>
        [Fact]
        public void CowTradesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CowTradesCurrent();
            //Assert.IsType<List<CowTradeDTO>>(response);
        }

        /// <summary>
        /// Test CowUsersCurrent
        /// </summary>
        [Fact]
        public void CowUsersCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CowUsersCurrent();
            //Assert.IsType<List<CowUserDTO>>(response);
        }
    }
}
