/*
 * OnChain API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
// uncomment below to import models
//using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing UniswapV3Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UniswapV3ApiTests : IDisposable
    {
        private UniswapV3Api instance;

        public UniswapV3ApiTests()
        {
            instance = new UniswapV3Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UniswapV3Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UniswapV3Api
            //Assert.IsType<UniswapV3Api>(instance);
        }

        /// <summary>
        /// Test DappsUniswapv3BundleCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3BundleCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DappsUniswapv3BundleCurrentGet();
            //Assert.IsType<List<UniswapV3BundleV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3BundlesHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3BundlesHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv3BundlesHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsUniswapv3BurnsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3BurnsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3BurnsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3BurnV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3BurnsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3BurnsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3BurnsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3DayDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3DayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv3DayDataHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsUniswapv3FactoryCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3FactoryCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string chainId = null;
            //var response = instance.DappsUniswapv3FactoryCurrentGet(chainId);
            //Assert.IsType<List<UniswapV3FactoryV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3FactoryHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3FactoryHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv3FactoryHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsUniswapv3MintsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3MintsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3MintsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3MintV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3MintsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3MintsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3MintsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolDayDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolDayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3PoolDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolHourDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolHourDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3PoolHourDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3PoolsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3PoolV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolsDayDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolsDayDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3PoolsDayDataCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3PoolDayDataV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3PoolsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3PoolsHourDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PoolsHourDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3PoolsHourDataCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3PoolHourDataV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3PositionSnapshotHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PositionSnapshotHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3PositionSnapshotHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3PositionSnapshotsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PositionSnapshotsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3PositionSnapshotsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3PositionSnapshotV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3PositionsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PositionsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3PositionsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3PositionV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3PositionsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3PositionsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3PositionsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3SwapsCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3SwapsCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3SwapsCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3SwapV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3SwapsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3SwapsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3SwapsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3TickDayDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TickDayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3TickDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3TicksCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TicksCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3TicksCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3TickV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3TicksDayDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TicksDayDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterPoolId = null;
            //var response = instance.DappsUniswapv3TicksDayDataCurrentGet(filterPoolId);
            //Assert.IsType<List<UniswapV3TickDayDataV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3TicksHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TicksHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string poolId = null;
            //instance.DappsUniswapv3TicksHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        }

        /// <summary>
        /// Test DappsUniswapv3TokenDayDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokenDayDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsUniswapv3TokenDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsUniswapv3TokenHourDataHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokenHourDataHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsUniswapv3TokenHourDataHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsUniswapv3TokensCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokensCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterTokenId = null;
            //var response = instance.DappsUniswapv3TokensCurrentGet(filterTokenId);
            //Assert.IsType<List<UniswapV3TokenV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3TokensDayDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokensDayDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterTokenId = null;
            //var response = instance.DappsUniswapv3TokensDayDataCurrentGet(filterTokenId);
            //Assert.IsType<List<UniswapV3TokenV3DayDataDTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3TokensHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokensHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //string tokenId = null;
            //instance.DappsUniswapv3TokensHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        }

        /// <summary>
        /// Test DappsUniswapv3TokensHourDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TokensHourDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterTokenId = null;
            //var response = instance.DappsUniswapv3TokensHourDataCurrentGet(filterTokenId);
            //Assert.IsType<List<UniswapV3TokenHourDataV3DTO>>(response);
        }

        /// <summary>
        /// Test DappsUniswapv3TransactionsHistoricalGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3TransactionsHistoricalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? startBlock = null;
            //long? endBlock = null;
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //instance.DappsUniswapv3TransactionsHistoricalGet(startBlock, endBlock, startDate, endDate);
        }

        /// <summary>
        /// Test DappsUniswapv3UniswapDayDataCurrentGet
        /// </summary>
        [Fact]
        public void DappsUniswapv3UniswapDayDataCurrentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DappsUniswapv3UniswapDayDataCurrentGet();
            //Assert.IsType<List<UniswapV3UniswapDayDataV3DTO>>(response);
        }
    }
}
