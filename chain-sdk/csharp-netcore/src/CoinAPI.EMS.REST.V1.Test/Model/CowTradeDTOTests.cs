/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test.Model
{
    /// <summary>
    ///  Class for testing CowTradeDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CowTradeDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CowTradeDTO
        //private CowTradeDTO instance;

        public CowTradeDTOTests()
        {
            // TODO uncomment below to create an instance of CowTradeDTO
            //instance = new CowTradeDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CowTradeDTO
        /// </summary>
        [Fact]
        public void CowTradeDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" CowTradeDTO
            //Assert.IsType<CowTradeDTO>(instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Fact]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Fact]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Fact]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'GasPrice'
        /// </summary>
        [Fact]
        public void GasPriceTest()
        {
            // TODO unit test for the property 'GasPrice'
        }
        /// <summary>
        /// Test the property 'GasLimit'
        /// </summary>
        [Fact]
        public void GasLimitTest()
        {
            // TODO unit test for the property 'GasLimit'
        }
        /// <summary>
        /// Test the property 'FeeAmount'
        /// </summary>
        [Fact]
        public void FeeAmountTest()
        {
            // TODO unit test for the property 'FeeAmount'
        }
        /// <summary>
        /// Test the property 'TxHash'
        /// </summary>
        [Fact]
        public void TxHashTest()
        {
            // TODO unit test for the property 'TxHash'
        }
        /// <summary>
        /// Test the property 'Settlement'
        /// </summary>
        [Fact]
        public void SettlementTest()
        {
            // TODO unit test for the property 'Settlement'
        }
        /// <summary>
        /// Test the property 'BuyAmount'
        /// </summary>
        [Fact]
        public void BuyAmountTest()
        {
            // TODO unit test for the property 'BuyAmount'
        }
        /// <summary>
        /// Test the property 'SellAmount'
        /// </summary>
        [Fact]
        public void SellAmountTest()
        {
            // TODO unit test for the property 'SellAmount'
        }
        /// <summary>
        /// Test the property 'SellToken'
        /// </summary>
        [Fact]
        public void SellTokenTest()
        {
            // TODO unit test for the property 'SellToken'
        }
        /// <summary>
        /// Test the property 'BuyToken'
        /// </summary>
        [Fact]
        public void BuyTokenTest()
        {
            // TODO unit test for the property 'BuyToken'
        }
        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }
        /// <summary>
        /// Test the property 'Vid'
        /// </summary>
        [Fact]
        public void VidTest()
        {
            // TODO unit test for the property 'Vid'
        }
        /// <summary>
        /// Test the property 'PoolId'
        /// </summary>
        [Fact]
        public void PoolIdTest()
        {
            // TODO unit test for the property 'PoolId'
        }
        /// <summary>
        /// Test the property 'TransactionId'
        /// </summary>
        [Fact]
        public void TransactionIdTest()
        {
            // TODO unit test for the property 'TransactionId'
        }
        /// <summary>
        /// Test the property 'EvaluatedPrice'
        /// </summary>
        [Fact]
        public void EvaluatedPriceTest()
        {
            // TODO unit test for the property 'EvaluatedPrice'
        }
        /// <summary>
        /// Test the property 'EvaluatedAmount'
        /// </summary>
        [Fact]
        public void EvaluatedAmountTest()
        {
            // TODO unit test for the property 'EvaluatedAmount'
        }
        /// <summary>
        /// Test the property 'EvaluatedAggressor'
        /// </summary>
        [Fact]
        public void EvaluatedAggressorTest()
        {
            // TODO unit test for the property 'EvaluatedAggressor'
        }

    }

}
