/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test.Model
{
    /// <summary>
    ///  Class for testing CurvePoolDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CurvePoolDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CurvePoolDTO
        //private CurvePoolDTO instance;

        public CurvePoolDTOTests()
        {
            // TODO uncomment below to create an instance of CurvePoolDTO
            //instance = new CurvePoolDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CurvePoolDTO
        /// </summary>
        [Fact]
        public void CurvePoolDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" CurvePoolDTO
            //Assert.IsType<CurvePoolDTO>(instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Fact]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Fact]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Fact]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'IsMeta'
        /// </summary>
        [Fact]
        public void IsMetaTest()
        {
            // TODO unit test for the property 'IsMeta'
        }
        /// <summary>
        /// Test the property 'RegistryAddress'
        /// </summary>
        [Fact]
        public void RegistryAddressTest()
        {
            // TODO unit test for the property 'RegistryAddress'
        }
        /// <summary>
        /// Test the property 'SwapAddress'
        /// </summary>
        [Fact]
        public void SwapAddressTest()
        {
            // TODO unit test for the property 'SwapAddress'
        }
        /// <summary>
        /// Test the property 'LpToken'
        /// </summary>
        [Fact]
        public void LpTokenTest()
        {
            // TODO unit test for the property 'LpToken'
        }
        /// <summary>
        /// Test the property 'CoinCount'
        /// </summary>
        [Fact]
        public void CoinCountTest()
        {
            // TODO unit test for the property 'CoinCount'
        }
        /// <summary>
        /// Test the property 'UnderlyingCount'
        /// </summary>
        [Fact]
        public void UnderlyingCountTest()
        {
            // TODO unit test for the property 'UnderlyingCount'
        }
        /// <summary>
        /// Test the property 'A'
        /// </summary>
        [Fact]
        public void ATest()
        {
            // TODO unit test for the property 'A'
        }
        /// <summary>
        /// Test the property 'Fee'
        /// </summary>
        [Fact]
        public void FeeTest()
        {
            // TODO unit test for the property 'Fee'
        }
        /// <summary>
        /// Test the property 'AdminFee'
        /// </summary>
        [Fact]
        public void AdminFeeTest()
        {
            // TODO unit test for the property 'AdminFee'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Fact]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'VirtualPrice'
        /// </summary>
        [Fact]
        public void VirtualPriceTest()
        {
            // TODO unit test for the property 'VirtualPrice'
        }
        /// <summary>
        /// Test the property 'Locked'
        /// </summary>
        [Fact]
        public void LockedTest()
        {
            // TODO unit test for the property 'Locked'
        }
        /// <summary>
        /// Test the property 'AddedAt'
        /// </summary>
        [Fact]
        public void AddedAtTest()
        {
            // TODO unit test for the property 'AddedAt'
        }
        /// <summary>
        /// Test the property 'AddedAtBlock'
        /// </summary>
        [Fact]
        public void AddedAtBlockTest()
        {
            // TODO unit test for the property 'AddedAtBlock'
        }
        /// <summary>
        /// Test the property 'AddedAtTransaction'
        /// </summary>
        [Fact]
        public void AddedAtTransactionTest()
        {
            // TODO unit test for the property 'AddedAtTransaction'
        }
        /// <summary>
        /// Test the property 'RemovedAt'
        /// </summary>
        [Fact]
        public void RemovedAtTest()
        {
            // TODO unit test for the property 'RemovedAt'
        }
        /// <summary>
        /// Test the property 'RemovedAtBlock'
        /// </summary>
        [Fact]
        public void RemovedAtBlockTest()
        {
            // TODO unit test for the property 'RemovedAtBlock'
        }
        /// <summary>
        /// Test the property 'RemovedAtTransaction'
        /// </summary>
        [Fact]
        public void RemovedAtTransactionTest()
        {
            // TODO unit test for the property 'RemovedAtTransaction'
        }
        /// <summary>
        /// Test the property 'ExchangeCount'
        /// </summary>
        [Fact]
        public void ExchangeCountTest()
        {
            // TODO unit test for the property 'ExchangeCount'
        }
        /// <summary>
        /// Test the property 'GaugeCount'
        /// </summary>
        [Fact]
        public void GaugeCountTest()
        {
            // TODO unit test for the property 'GaugeCount'
        }
        /// <summary>
        /// Test the property 'Vid'
        /// </summary>
        [Fact]
        public void VidTest()
        {
            // TODO unit test for the property 'Vid'
        }
        /// <summary>
        /// Test the property 'EvaluatedAsk'
        /// </summary>
        [Fact]
        public void EvaluatedAskTest()
        {
            // TODO unit test for the property 'EvaluatedAsk'
        }

    }

}
