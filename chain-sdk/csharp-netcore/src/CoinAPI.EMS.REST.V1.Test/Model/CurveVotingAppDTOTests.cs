/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test.Model
{
    /// <summary>
    ///  Class for testing CurveVotingAppDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CurveVotingAppDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CurveVotingAppDTO
        //private CurveVotingAppDTO instance;

        public CurveVotingAppDTOTests()
        {
            // TODO uncomment below to create an instance of CurveVotingAppDTO
            //instance = new CurveVotingAppDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CurveVotingAppDTO
        /// </summary>
        [Fact]
        public void CurveVotingAppDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" CurveVotingAppDTO
            //Assert.IsType<CurveVotingAppDTO>(instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Fact]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Fact]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Fact]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'Codename'
        /// </summary>
        [Fact]
        public void CodenameTest()
        {
            // TODO unit test for the property 'Codename'
        }
        /// <summary>
        /// Test the property 'MinimumBalance'
        /// </summary>
        [Fact]
        public void MinimumBalanceTest()
        {
            // TODO unit test for the property 'MinimumBalance'
        }
        /// <summary>
        /// Test the property 'MinimumQuorum'
        /// </summary>
        [Fact]
        public void MinimumQuorumTest()
        {
            // TODO unit test for the property 'MinimumQuorum'
        }
        /// <summary>
        /// Test the property 'MinimumTime'
        /// </summary>
        [Fact]
        public void MinimumTimeTest()
        {
            // TODO unit test for the property 'MinimumTime'
        }
        /// <summary>
        /// Test the property 'RequiredSupport'
        /// </summary>
        [Fact]
        public void RequiredSupportTest()
        {
            // TODO unit test for the property 'RequiredSupport'
        }
        /// <summary>
        /// Test the property 'VoteTime'
        /// </summary>
        [Fact]
        public void VoteTimeTest()
        {
            // TODO unit test for the property 'VoteTime'
        }
        /// <summary>
        /// Test the property 'ProposalCount'
        /// </summary>
        [Fact]
        public void ProposalCountTest()
        {
            // TODO unit test for the property 'ProposalCount'
        }
        /// <summary>
        /// Test the property 'VoteCount'
        /// </summary>
        [Fact]
        public void VoteCountTest()
        {
            // TODO unit test for the property 'VoteCount'
        }
        /// <summary>
        /// Test the property 'Token'
        /// </summary>
        [Fact]
        public void TokenTest()
        {
            // TODO unit test for the property 'Token'
        }
        /// <summary>
        /// Test the property 'Vid'
        /// </summary>
        [Fact]
        public void VidTest()
        {
            // TODO unit test for the property 'Vid'
        }

    }

}
