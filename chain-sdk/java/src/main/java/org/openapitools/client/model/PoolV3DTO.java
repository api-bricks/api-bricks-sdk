/*
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.BigInteger;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.
 */
@ApiModel(description = "Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-04T09:24:18.629114Z[Etc/UTC]")
public class PoolV3DTO {
  public static final String SERIALIZED_NAME_ENTRY_TIME = "entry_time";
  @SerializedName(SERIALIZED_NAME_ENTRY_TIME)
  private OffsetDateTime entryTime;

  public static final String SERIALIZED_NAME_RECV_TIME = "recv_time";
  @SerializedName(SERIALIZED_NAME_RECV_TIME)
  private OffsetDateTime recvTime;

  public static final String SERIALIZED_NAME_BLOCK_NUMBER = "block_number";
  @SerializedName(SERIALIZED_NAME_BLOCK_NUMBER)
  private Long blockNumber;

  public static final String SERIALIZED_NAME_VID = "vid";
  @SerializedName(SERIALIZED_NAME_VID)
  private Long vid;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT_TIMESTAMP = "created_at_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_TIMESTAMP)
  private OffsetDateTime createdAtTimestamp;

  public static final String SERIALIZED_NAME_TOKEN0 = "token_0";
  @SerializedName(SERIALIZED_NAME_TOKEN0)
  private String token0;

  public static final String SERIALIZED_NAME_TOKEN1 = "token_1";
  @SerializedName(SERIALIZED_NAME_TOKEN1)
  private String token1;

  public static final String SERIALIZED_NAME_FEE_TIER = "fee_tier";
  @SerializedName(SERIALIZED_NAME_FEE_TIER)
  private BigInteger feeTier;

  public static final String SERIALIZED_NAME_LIQUIDITY = "liquidity";
  @SerializedName(SERIALIZED_NAME_LIQUIDITY)
  private BigInteger liquidity;

  public static final String SERIALIZED_NAME_SQRT_PRICE = "sqrt_price";
  @SerializedName(SERIALIZED_NAME_SQRT_PRICE)
  private BigInteger sqrtPrice;

  public static final String SERIALIZED_NAME_FEE_GROWTH_GLOBAL0X128 = "fee_growth_global_0x128";
  @SerializedName(SERIALIZED_NAME_FEE_GROWTH_GLOBAL0X128)
  private BigInteger feeGrowthGlobal0x128;

  public static final String SERIALIZED_NAME_FEE_GROWTH_GLOBAL1X128 = "fee_growth_global_1x128";
  @SerializedName(SERIALIZED_NAME_FEE_GROWTH_GLOBAL1X128)
  private BigInteger feeGrowthGlobal1x128;

  public static final String SERIALIZED_NAME_TOKEN0_PRICE = "token_0_price";
  @SerializedName(SERIALIZED_NAME_TOKEN0_PRICE)
  private String token0Price;

  public static final String SERIALIZED_NAME_TOKEN1_PRICE = "token_1_price";
  @SerializedName(SERIALIZED_NAME_TOKEN1_PRICE)
  private String token1Price;

  public static final String SERIALIZED_NAME_TICK = "tick";
  @SerializedName(SERIALIZED_NAME_TICK)
  private BigInteger tick;

  public static final String SERIALIZED_NAME_OBSERVATION_INDEX = "observation_index";
  @SerializedName(SERIALIZED_NAME_OBSERVATION_INDEX)
  private BigInteger observationIndex;

  public static final String SERIALIZED_NAME_VOLUME_TOKEN0 = "volume_token_0";
  @SerializedName(SERIALIZED_NAME_VOLUME_TOKEN0)
  private String volumeToken0;

  public static final String SERIALIZED_NAME_VOLUME_TOKEN1 = "volume_token_1";
  @SerializedName(SERIALIZED_NAME_VOLUME_TOKEN1)
  private String volumeToken1;

  public static final String SERIALIZED_NAME_VOLUME_USD = "volume_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME_USD)
  private String volumeUsd;

  public static final String SERIALIZED_NAME_UNTRACKED_VOLUME_USD = "untracked_volume_usd";
  @SerializedName(SERIALIZED_NAME_UNTRACKED_VOLUME_USD)
  private String untrackedVolumeUsd;

  public static final String SERIALIZED_NAME_FEES_USD = "fees_usd";
  @SerializedName(SERIALIZED_NAME_FEES_USD)
  private String feesUsd;

  public static final String SERIALIZED_NAME_TX_COUNT = "tx_count";
  @SerializedName(SERIALIZED_NAME_TX_COUNT)
  private BigInteger txCount;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_TOKEN0 = "collected_fees_token_0";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_TOKEN0)
  private String collectedFeesToken0;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_TOKEN1 = "collected_fees_token_1";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_TOKEN1)
  private String collectedFeesToken1;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_USD = "collected_fees_usd";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_USD)
  private String collectedFeesUsd;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN0 = "total_value_locked_token_0";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN0)
  private String totalValueLockedToken0;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN1 = "total_value_locked_token_1";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN1)
  private String totalValueLockedToken1;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_ETH = "total_value_locked_eth";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_ETH)
  private String totalValueLockedEth;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD = "total_value_locked_usd";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD)
  private String totalValueLockedUsd;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD_UNTRACKED = "total_value_locked_usd_untracked";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD_UNTRACKED)
  private String totalValueLockedUsdUntracked;

  public static final String SERIALIZED_NAME_LIQUIDITY_PROVIDER_COUNT = "liquidity_provider_count";
  @SerializedName(SERIALIZED_NAME_LIQUIDITY_PROVIDER_COUNT)
  private String liquidityProviderCount;

  public static final String SERIALIZED_NAME_EVALUATED_ASK = "evaluated_ask";
  @SerializedName(SERIALIZED_NAME_EVALUATED_ASK)
  private Double evaluatedAsk;

  public PoolV3DTO() {
  }

  
  public PoolV3DTO(
     Double evaluatedAsk
  ) {
    this();
    this.evaluatedAsk = evaluatedAsk;
  }

  public PoolV3DTO entryTime(OffsetDateTime entryTime) {
    
    this.entryTime = entryTime;
    return this;
  }

   /**
   * Get entryTime
   * @return entryTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEntryTime() {
    return entryTime;
  }


  public void setEntryTime(OffsetDateTime entryTime) {
    this.entryTime = entryTime;
  }


  public PoolV3DTO recvTime(OffsetDateTime recvTime) {
    
    this.recvTime = recvTime;
    return this;
  }

   /**
   * Get recvTime
   * @return recvTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRecvTime() {
    return recvTime;
  }


  public void setRecvTime(OffsetDateTime recvTime) {
    this.recvTime = recvTime;
  }


  public PoolV3DTO blockNumber(Long blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Number of block in which entity was recorded.
   * @return blockNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of block in which entity was recorded.")

  public Long getBlockNumber() {
    return blockNumber;
  }


  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }


  public PoolV3DTO vid(Long vid) {
    
    this.vid = vid;
    return this;
  }

   /**
   * 
   * @return vid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getVid() {
    return vid;
  }


  public void setVid(Long vid) {
    this.vid = vid;
  }


  public PoolV3DTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Pool address.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pool address.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PoolV3DTO createdAtTimestamp(OffsetDateTime createdAtTimestamp) {
    
    this.createdAtTimestamp = createdAtTimestamp;
    return this;
  }

   /**
   * Creation time.
   * @return createdAtTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Creation time.")

  public OffsetDateTime getCreatedAtTimestamp() {
    return createdAtTimestamp;
  }


  public void setCreatedAtTimestamp(OffsetDateTime createdAtTimestamp) {
    this.createdAtTimestamp = createdAtTimestamp;
  }


  public PoolV3DTO token0(String token0) {
    
    this.token0 = token0;
    return this;
  }

   /**
   * Reference to token0 as stored in pool contract.
   * @return token0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference to token0 as stored in pool contract.")

  public String getToken0() {
    return token0;
  }


  public void setToken0(String token0) {
    this.token0 = token0;
  }


  public PoolV3DTO token1(String token1) {
    
    this.token1 = token1;
    return this;
  }

   /**
   * Reference to token1 as stored in pool contract.
   * @return token1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference to token1 as stored in pool contract.")

  public String getToken1() {
    return token1;
  }


  public void setToken1(String token1) {
    this.token1 = token1;
  }


  public PoolV3DTO feeTier(BigInteger feeTier) {
    
    this.feeTier = feeTier;
    return this;
  }

   /**
   * Get feeTier
   * @return feeTier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getFeeTier() {
    return feeTier;
  }


  public void setFeeTier(BigInteger feeTier) {
    this.feeTier = feeTier;
  }


  public PoolV3DTO liquidity(BigInteger liquidity) {
    
    this.liquidity = liquidity;
    return this;
  }

   /**
   * Get liquidity
   * @return liquidity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getLiquidity() {
    return liquidity;
  }


  public void setLiquidity(BigInteger liquidity) {
    this.liquidity = liquidity;
  }


  public PoolV3DTO sqrtPrice(BigInteger sqrtPrice) {
    
    this.sqrtPrice = sqrtPrice;
    return this;
  }

   /**
   * Get sqrtPrice
   * @return sqrtPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getSqrtPrice() {
    return sqrtPrice;
  }


  public void setSqrtPrice(BigInteger sqrtPrice) {
    this.sqrtPrice = sqrtPrice;
  }


  public PoolV3DTO feeGrowthGlobal0x128(BigInteger feeGrowthGlobal0x128) {
    
    this.feeGrowthGlobal0x128 = feeGrowthGlobal0x128;
    return this;
  }

   /**
   * Get feeGrowthGlobal0x128
   * @return feeGrowthGlobal0x128
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getFeeGrowthGlobal0x128() {
    return feeGrowthGlobal0x128;
  }


  public void setFeeGrowthGlobal0x128(BigInteger feeGrowthGlobal0x128) {
    this.feeGrowthGlobal0x128 = feeGrowthGlobal0x128;
  }


  public PoolV3DTO feeGrowthGlobal1x128(BigInteger feeGrowthGlobal1x128) {
    
    this.feeGrowthGlobal1x128 = feeGrowthGlobal1x128;
    return this;
  }

   /**
   * Get feeGrowthGlobal1x128
   * @return feeGrowthGlobal1x128
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getFeeGrowthGlobal1x128() {
    return feeGrowthGlobal1x128;
  }


  public void setFeeGrowthGlobal1x128(BigInteger feeGrowthGlobal1x128) {
    this.feeGrowthGlobal1x128 = feeGrowthGlobal1x128;
  }


  public PoolV3DTO token0Price(String token0Price) {
    
    this.token0Price = token0Price;
    return this;
  }

   /**
   * Token0 per token1.
   * @return token0Price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token0 per token1.")

  public String getToken0Price() {
    return token0Price;
  }


  public void setToken0Price(String token0Price) {
    this.token0Price = token0Price;
  }


  public PoolV3DTO token1Price(String token1Price) {
    
    this.token1Price = token1Price;
    return this;
  }

   /**
   * Token1 per token0.
   * @return token1Price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token1 per token0.")

  public String getToken1Price() {
    return token1Price;
  }


  public void setToken1Price(String token1Price) {
    this.token1Price = token1Price;
  }


  public PoolV3DTO tick(BigInteger tick) {
    
    this.tick = tick;
    return this;
  }

   /**
   * Get tick
   * @return tick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getTick() {
    return tick;
  }


  public void setTick(BigInteger tick) {
    this.tick = tick;
  }


  public PoolV3DTO observationIndex(BigInteger observationIndex) {
    
    this.observationIndex = observationIndex;
    return this;
  }

   /**
   * Get observationIndex
   * @return observationIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getObservationIndex() {
    return observationIndex;
  }


  public void setObservationIndex(BigInteger observationIndex) {
    this.observationIndex = observationIndex;
  }


  public PoolV3DTO volumeToken0(String volumeToken0) {
    
    this.volumeToken0 = volumeToken0;
    return this;
  }

   /**
   * All time token0 swapped.
   * @return volumeToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time token0 swapped.")

  public String getVolumeToken0() {
    return volumeToken0;
  }


  public void setVolumeToken0(String volumeToken0) {
    this.volumeToken0 = volumeToken0;
  }


  public PoolV3DTO volumeToken1(String volumeToken1) {
    
    this.volumeToken1 = volumeToken1;
    return this;
  }

   /**
   * All time token1 swapped.
   * @return volumeToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time token1 swapped.")

  public String getVolumeToken1() {
    return volumeToken1;
  }


  public void setVolumeToken1(String volumeToken1) {
    this.volumeToken1 = volumeToken1;
  }


  public PoolV3DTO volumeUsd(String volumeUsd) {
    
    this.volumeUsd = volumeUsd;
    return this;
  }

   /**
   * All time USD swapped.
   * @return volumeUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time USD swapped.")

  public String getVolumeUsd() {
    return volumeUsd;
  }


  public void setVolumeUsd(String volumeUsd) {
    this.volumeUsd = volumeUsd;
  }


  public PoolV3DTO untrackedVolumeUsd(String untrackedVolumeUsd) {
    
    this.untrackedVolumeUsd = untrackedVolumeUsd;
    return this;
  }

   /**
   * All time USD swapped, unfiltered for unreliable USD pools.
   * @return untrackedVolumeUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time USD swapped, unfiltered for unreliable USD pools.")

  public String getUntrackedVolumeUsd() {
    return untrackedVolumeUsd;
  }


  public void setUntrackedVolumeUsd(String untrackedVolumeUsd) {
    this.untrackedVolumeUsd = untrackedVolumeUsd;
  }


  public PoolV3DTO feesUsd(String feesUsd) {
    
    this.feesUsd = feesUsd;
    return this;
  }

   /**
   * Fees in USD.
   * @return feesUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fees in USD.")

  public String getFeesUsd() {
    return feesUsd;
  }


  public void setFeesUsd(String feesUsd) {
    this.feesUsd = feesUsd;
  }


  public PoolV3DTO txCount(BigInteger txCount) {
    
    this.txCount = txCount;
    return this;
  }

   /**
   * Get txCount
   * @return txCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigInteger getTxCount() {
    return txCount;
  }


  public void setTxCount(BigInteger txCount) {
    this.txCount = txCount;
  }


  public PoolV3DTO collectedFeesToken0(String collectedFeesToken0) {
    
    this.collectedFeesToken0 = collectedFeesToken0;
    return this;
  }

   /**
   * All time fees collected token0.
   * @return collectedFeesToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected token0.")

  public String getCollectedFeesToken0() {
    return collectedFeesToken0;
  }


  public void setCollectedFeesToken0(String collectedFeesToken0) {
    this.collectedFeesToken0 = collectedFeesToken0;
  }


  public PoolV3DTO collectedFeesToken1(String collectedFeesToken1) {
    
    this.collectedFeesToken1 = collectedFeesToken1;
    return this;
  }

   /**
   * All time fees collected token1.
   * @return collectedFeesToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected token1.")

  public String getCollectedFeesToken1() {
    return collectedFeesToken1;
  }


  public void setCollectedFeesToken1(String collectedFeesToken1) {
    this.collectedFeesToken1 = collectedFeesToken1;
  }


  public PoolV3DTO collectedFeesUsd(String collectedFeesUsd) {
    
    this.collectedFeesUsd = collectedFeesUsd;
    return this;
  }

   /**
   * All time fees collected derived USD.
   * @return collectedFeesUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected derived USD.")

  public String getCollectedFeesUsd() {
    return collectedFeesUsd;
  }


  public void setCollectedFeesUsd(String collectedFeesUsd) {
    this.collectedFeesUsd = collectedFeesUsd;
  }


  public PoolV3DTO totalValueLockedToken0(String totalValueLockedToken0) {
    
    this.totalValueLockedToken0 = totalValueLockedToken0;
    return this;
  }

   /**
   * Total token 0 across all ticks.
   * @return totalValueLockedToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total token 0 across all ticks.")

  public String getTotalValueLockedToken0() {
    return totalValueLockedToken0;
  }


  public void setTotalValueLockedToken0(String totalValueLockedToken0) {
    this.totalValueLockedToken0 = totalValueLockedToken0;
  }


  public PoolV3DTO totalValueLockedToken1(String totalValueLockedToken1) {
    
    this.totalValueLockedToken1 = totalValueLockedToken1;
    return this;
  }

   /**
   * 
   * @return totalValueLockedToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTotalValueLockedToken1() {
    return totalValueLockedToken1;
  }


  public void setTotalValueLockedToken1(String totalValueLockedToken1) {
    this.totalValueLockedToken1 = totalValueLockedToken1;
  }


  public PoolV3DTO totalValueLockedEth(String totalValueLockedEth) {
    
    this.totalValueLockedEth = totalValueLockedEth;
    return this;
  }

   /**
   * Total token 1 across all ticks.
   * @return totalValueLockedEth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total token 1 across all ticks.")

  public String getTotalValueLockedEth() {
    return totalValueLockedEth;
  }


  public void setTotalValueLockedEth(String totalValueLockedEth) {
    this.totalValueLockedEth = totalValueLockedEth;
  }


  public PoolV3DTO totalValueLockedUsd(String totalValueLockedUsd) {
    
    this.totalValueLockedUsd = totalValueLockedUsd;
    return this;
  }

   /**
   * Total value locked USD.
   * @return totalValueLockedUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total value locked USD.")

  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }


  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }


  public PoolV3DTO totalValueLockedUsdUntracked(String totalValueLockedUsdUntracked) {
    
    this.totalValueLockedUsdUntracked = totalValueLockedUsdUntracked;
    return this;
  }

   /**
   * Total value locked derived ETH.
   * @return totalValueLockedUsdUntracked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total value locked derived ETH.")

  public String getTotalValueLockedUsdUntracked() {
    return totalValueLockedUsdUntracked;
  }


  public void setTotalValueLockedUsdUntracked(String totalValueLockedUsdUntracked) {
    this.totalValueLockedUsdUntracked = totalValueLockedUsdUntracked;
  }


  public PoolV3DTO liquidityProviderCount(String liquidityProviderCount) {
    
    this.liquidityProviderCount = liquidityProviderCount;
    return this;
  }

   /**
   * Liquidity providers count, used to detect new exchanges.
   * @return liquidityProviderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Liquidity providers count, used to detect new exchanges.")

  public String getLiquidityProviderCount() {
    return liquidityProviderCount;
  }


  public void setLiquidityProviderCount(String liquidityProviderCount) {
    this.liquidityProviderCount = liquidityProviderCount;
  }


   /**
   * Get evaluatedAsk
   * @return evaluatedAsk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEvaluatedAsk() {
    return evaluatedAsk;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoolV3DTO poolV3DTO = (PoolV3DTO) o;
    return Objects.equals(this.entryTime, poolV3DTO.entryTime) &&
        Objects.equals(this.recvTime, poolV3DTO.recvTime) &&
        Objects.equals(this.blockNumber, poolV3DTO.blockNumber) &&
        Objects.equals(this.vid, poolV3DTO.vid) &&
        Objects.equals(this.id, poolV3DTO.id) &&
        Objects.equals(this.createdAtTimestamp, poolV3DTO.createdAtTimestamp) &&
        Objects.equals(this.token0, poolV3DTO.token0) &&
        Objects.equals(this.token1, poolV3DTO.token1) &&
        Objects.equals(this.feeTier, poolV3DTO.feeTier) &&
        Objects.equals(this.liquidity, poolV3DTO.liquidity) &&
        Objects.equals(this.sqrtPrice, poolV3DTO.sqrtPrice) &&
        Objects.equals(this.feeGrowthGlobal0x128, poolV3DTO.feeGrowthGlobal0x128) &&
        Objects.equals(this.feeGrowthGlobal1x128, poolV3DTO.feeGrowthGlobal1x128) &&
        Objects.equals(this.token0Price, poolV3DTO.token0Price) &&
        Objects.equals(this.token1Price, poolV3DTO.token1Price) &&
        Objects.equals(this.tick, poolV3DTO.tick) &&
        Objects.equals(this.observationIndex, poolV3DTO.observationIndex) &&
        Objects.equals(this.volumeToken0, poolV3DTO.volumeToken0) &&
        Objects.equals(this.volumeToken1, poolV3DTO.volumeToken1) &&
        Objects.equals(this.volumeUsd, poolV3DTO.volumeUsd) &&
        Objects.equals(this.untrackedVolumeUsd, poolV3DTO.untrackedVolumeUsd) &&
        Objects.equals(this.feesUsd, poolV3DTO.feesUsd) &&
        Objects.equals(this.txCount, poolV3DTO.txCount) &&
        Objects.equals(this.collectedFeesToken0, poolV3DTO.collectedFeesToken0) &&
        Objects.equals(this.collectedFeesToken1, poolV3DTO.collectedFeesToken1) &&
        Objects.equals(this.collectedFeesUsd, poolV3DTO.collectedFeesUsd) &&
        Objects.equals(this.totalValueLockedToken0, poolV3DTO.totalValueLockedToken0) &&
        Objects.equals(this.totalValueLockedToken1, poolV3DTO.totalValueLockedToken1) &&
        Objects.equals(this.totalValueLockedEth, poolV3DTO.totalValueLockedEth) &&
        Objects.equals(this.totalValueLockedUsd, poolV3DTO.totalValueLockedUsd) &&
        Objects.equals(this.totalValueLockedUsdUntracked, poolV3DTO.totalValueLockedUsdUntracked) &&
        Objects.equals(this.liquidityProviderCount, poolV3DTO.liquidityProviderCount) &&
        Objects.equals(this.evaluatedAsk, poolV3DTO.evaluatedAsk);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryTime, recvTime, blockNumber, vid, id, createdAtTimestamp, token0, token1, feeTier, liquidity, sqrtPrice, feeGrowthGlobal0x128, feeGrowthGlobal1x128, token0Price, token1Price, tick, observationIndex, volumeToken0, volumeToken1, volumeUsd, untrackedVolumeUsd, feesUsd, txCount, collectedFeesToken0, collectedFeesToken1, collectedFeesUsd, totalValueLockedToken0, totalValueLockedToken1, totalValueLockedEth, totalValueLockedUsd, totalValueLockedUsdUntracked, liquidityProviderCount, evaluatedAsk);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoolV3DTO {\n");
    sb.append("    entryTime: ").append(toIndentedString(entryTime)).append("\n");
    sb.append("    recvTime: ").append(toIndentedString(recvTime)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAtTimestamp: ").append(toIndentedString(createdAtTimestamp)).append("\n");
    sb.append("    token0: ").append(toIndentedString(token0)).append("\n");
    sb.append("    token1: ").append(toIndentedString(token1)).append("\n");
    sb.append("    feeTier: ").append(toIndentedString(feeTier)).append("\n");
    sb.append("    liquidity: ").append(toIndentedString(liquidity)).append("\n");
    sb.append("    sqrtPrice: ").append(toIndentedString(sqrtPrice)).append("\n");
    sb.append("    feeGrowthGlobal0x128: ").append(toIndentedString(feeGrowthGlobal0x128)).append("\n");
    sb.append("    feeGrowthGlobal1x128: ").append(toIndentedString(feeGrowthGlobal1x128)).append("\n");
    sb.append("    token0Price: ").append(toIndentedString(token0Price)).append("\n");
    sb.append("    token1Price: ").append(toIndentedString(token1Price)).append("\n");
    sb.append("    tick: ").append(toIndentedString(tick)).append("\n");
    sb.append("    observationIndex: ").append(toIndentedString(observationIndex)).append("\n");
    sb.append("    volumeToken0: ").append(toIndentedString(volumeToken0)).append("\n");
    sb.append("    volumeToken1: ").append(toIndentedString(volumeToken1)).append("\n");
    sb.append("    volumeUsd: ").append(toIndentedString(volumeUsd)).append("\n");
    sb.append("    untrackedVolumeUsd: ").append(toIndentedString(untrackedVolumeUsd)).append("\n");
    sb.append("    feesUsd: ").append(toIndentedString(feesUsd)).append("\n");
    sb.append("    txCount: ").append(toIndentedString(txCount)).append("\n");
    sb.append("    collectedFeesToken0: ").append(toIndentedString(collectedFeesToken0)).append("\n");
    sb.append("    collectedFeesToken1: ").append(toIndentedString(collectedFeesToken1)).append("\n");
    sb.append("    collectedFeesUsd: ").append(toIndentedString(collectedFeesUsd)).append("\n");
    sb.append("    totalValueLockedToken0: ").append(toIndentedString(totalValueLockedToken0)).append("\n");
    sb.append("    totalValueLockedToken1: ").append(toIndentedString(totalValueLockedToken1)).append("\n");
    sb.append("    totalValueLockedEth: ").append(toIndentedString(totalValueLockedEth)).append("\n");
    sb.append("    totalValueLockedUsd: ").append(toIndentedString(totalValueLockedUsd)).append("\n");
    sb.append("    totalValueLockedUsdUntracked: ").append(toIndentedString(totalValueLockedUsdUntracked)).append("\n");
    sb.append("    liquidityProviderCount: ").append(toIndentedString(liquidityProviderCount)).append("\n");
    sb.append("    evaluatedAsk: ").append(toIndentedString(evaluatedAsk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entry_time");
    openapiFields.add("recv_time");
    openapiFields.add("block_number");
    openapiFields.add("vid");
    openapiFields.add("id");
    openapiFields.add("created_at_timestamp");
    openapiFields.add("token_0");
    openapiFields.add("token_1");
    openapiFields.add("fee_tier");
    openapiFields.add("liquidity");
    openapiFields.add("sqrt_price");
    openapiFields.add("fee_growth_global_0x128");
    openapiFields.add("fee_growth_global_1x128");
    openapiFields.add("token_0_price");
    openapiFields.add("token_1_price");
    openapiFields.add("tick");
    openapiFields.add("observation_index");
    openapiFields.add("volume_token_0");
    openapiFields.add("volume_token_1");
    openapiFields.add("volume_usd");
    openapiFields.add("untracked_volume_usd");
    openapiFields.add("fees_usd");
    openapiFields.add("tx_count");
    openapiFields.add("collected_fees_token_0");
    openapiFields.add("collected_fees_token_1");
    openapiFields.add("collected_fees_usd");
    openapiFields.add("total_value_locked_token_0");
    openapiFields.add("total_value_locked_token_1");
    openapiFields.add("total_value_locked_eth");
    openapiFields.add("total_value_locked_usd");
    openapiFields.add("total_value_locked_usd_untracked");
    openapiFields.add("liquidity_provider_count");
    openapiFields.add("evaluated_ask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PoolV3DTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PoolV3DTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PoolV3DTO is not found in the empty JSON string", PoolV3DTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PoolV3DTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PoolV3DTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("token_0") != null && !jsonObj.get("token_0").isJsonNull()) && !jsonObj.get("token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_0").toString()));
      }
      if ((jsonObj.get("token_1") != null && !jsonObj.get("token_1").isJsonNull()) && !jsonObj.get("token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_1").toString()));
      }
      // validate the optional field `fee_tier`
      if (jsonObj.get("fee_tier") != null && !jsonObj.get("fee_tier").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_tier"));
      }
      // validate the optional field `liquidity`
      if (jsonObj.get("liquidity") != null && !jsonObj.get("liquidity").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("liquidity"));
      }
      // validate the optional field `sqrt_price`
      if (jsonObj.get("sqrt_price") != null && !jsonObj.get("sqrt_price").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("sqrt_price"));
      }
      // validate the optional field `fee_growth_global_0x128`
      if (jsonObj.get("fee_growth_global_0x128") != null && !jsonObj.get("fee_growth_global_0x128").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_growth_global_0x128"));
      }
      // validate the optional field `fee_growth_global_1x128`
      if (jsonObj.get("fee_growth_global_1x128") != null && !jsonObj.get("fee_growth_global_1x128").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_growth_global_1x128"));
      }
      if ((jsonObj.get("token_0_price") != null && !jsonObj.get("token_0_price").isJsonNull()) && !jsonObj.get("token_0_price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_0_price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_0_price").toString()));
      }
      if ((jsonObj.get("token_1_price") != null && !jsonObj.get("token_1_price").isJsonNull()) && !jsonObj.get("token_1_price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_1_price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_1_price").toString()));
      }
      // validate the optional field `tick`
      if (jsonObj.get("tick") != null && !jsonObj.get("tick").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("tick"));
      }
      // validate the optional field `observation_index`
      if (jsonObj.get("observation_index") != null && !jsonObj.get("observation_index").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("observation_index"));
      }
      if ((jsonObj.get("volume_token_0") != null && !jsonObj.get("volume_token_0").isJsonNull()) && !jsonObj.get("volume_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_token_0").toString()));
      }
      if ((jsonObj.get("volume_token_1") != null && !jsonObj.get("volume_token_1").isJsonNull()) && !jsonObj.get("volume_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_token_1").toString()));
      }
      if ((jsonObj.get("volume_usd") != null && !jsonObj.get("volume_usd").isJsonNull()) && !jsonObj.get("volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_usd").toString()));
      }
      if ((jsonObj.get("untracked_volume_usd") != null && !jsonObj.get("untracked_volume_usd").isJsonNull()) && !jsonObj.get("untracked_volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `untracked_volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("untracked_volume_usd").toString()));
      }
      if ((jsonObj.get("fees_usd") != null && !jsonObj.get("fees_usd").isJsonNull()) && !jsonObj.get("fees_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fees_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fees_usd").toString()));
      }
      // validate the optional field `tx_count`
      if (jsonObj.get("tx_count") != null && !jsonObj.get("tx_count").isJsonNull()) {
        BigInteger.validateJsonObject(jsonObj.getAsJsonObject("tx_count"));
      }
      if ((jsonObj.get("collected_fees_token_0") != null && !jsonObj.get("collected_fees_token_0").isJsonNull()) && !jsonObj.get("collected_fees_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_token_0").toString()));
      }
      if ((jsonObj.get("collected_fees_token_1") != null && !jsonObj.get("collected_fees_token_1").isJsonNull()) && !jsonObj.get("collected_fees_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_token_1").toString()));
      }
      if ((jsonObj.get("collected_fees_usd") != null && !jsonObj.get("collected_fees_usd").isJsonNull()) && !jsonObj.get("collected_fees_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_usd").toString()));
      }
      if ((jsonObj.get("total_value_locked_token_0") != null && !jsonObj.get("total_value_locked_token_0").isJsonNull()) && !jsonObj.get("total_value_locked_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_token_0").toString()));
      }
      if ((jsonObj.get("total_value_locked_token_1") != null && !jsonObj.get("total_value_locked_token_1").isJsonNull()) && !jsonObj.get("total_value_locked_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_token_1").toString()));
      }
      if ((jsonObj.get("total_value_locked_eth") != null && !jsonObj.get("total_value_locked_eth").isJsonNull()) && !jsonObj.get("total_value_locked_eth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_eth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_eth").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd") != null && !jsonObj.get("total_value_locked_usd").isJsonNull()) && !jsonObj.get("total_value_locked_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd_untracked") != null && !jsonObj.get("total_value_locked_usd_untracked").isJsonNull()) && !jsonObj.get("total_value_locked_usd_untracked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd_untracked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd_untracked").toString()));
      }
      if ((jsonObj.get("liquidity_provider_count") != null && !jsonObj.get("liquidity_provider_count").isJsonNull()) && !jsonObj.get("liquidity_provider_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `liquidity_provider_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("liquidity_provider_count").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PoolV3DTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PoolV3DTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PoolV3DTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PoolV3DTO.class));

       return (TypeAdapter<T>) new TypeAdapter<PoolV3DTO>() {
           @Override
           public void write(JsonWriter out, PoolV3DTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PoolV3DTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PoolV3DTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PoolV3DTO
  * @throws IOException if the JSON string is invalid with respect to PoolV3DTO
  */
  public static PoolV3DTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PoolV3DTO.class);
  }

 /**
  * Convert an instance of PoolV3DTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

