/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Transactions.ETradeAggressiveSide
 */
@JsonAdapter(TransactionsETradeAggressiveSide.Adapter.class)
public enum TransactionsETradeAggressiveSide {
  
  BUY("Buy"),
  
  SELL("Sell"),
  
  ESTIMATEDBUY("EstimatedBuy"),
  
  ESTIMATEDSELL("EstimatedSell"),
  
  UNKNOWN("Unknown");

  private String value;

  TransactionsETradeAggressiveSide(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TransactionsETradeAggressiveSide fromValue(String value) {
    for (TransactionsETradeAggressiveSide b : TransactionsETradeAggressiveSide.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TransactionsETradeAggressiveSide> {
    @Override
    public void write(final JsonWriter jsonWriter, final TransactionsETradeAggressiveSide enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TransactionsETradeAggressiveSide read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TransactionsETradeAggressiveSide.fromValue(value);
    }
  }
}

