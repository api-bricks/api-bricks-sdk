/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CurveProposalDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-25T15:55:48.653368Z[Etc/UTC]")
public class CurveProposalDTO {
  public static final String SERIALIZED_NAME_ENTRY_TIME = "entry_time";
  @SerializedName(SERIALIZED_NAME_ENTRY_TIME)
  private OffsetDateTime entryTime;

  public static final String SERIALIZED_NAME_RECV_TIME = "recv_time";
  @SerializedName(SERIALIZED_NAME_RECV_TIME)
  private OffsetDateTime recvTime;

  public static final String SERIALIZED_NAME_BLOCK_NUMBER = "block_number";
  @SerializedName(SERIALIZED_NAME_BLOCK_NUMBER)
  private Long blockNumber;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private String number;

  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private String app;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_EXECUTION_SCRIPT = "execution_script";
  @SerializedName(SERIALIZED_NAME_EXECUTION_SCRIPT)
  private String executionScript;

  public static final String SERIALIZED_NAME_EXPIRE_DATE = "expire_date";
  @SerializedName(SERIALIZED_NAME_EXPIRE_DATE)
  private String expireDate;

  public static final String SERIALIZED_NAME_MINIMUM_QUORUM = "minimum_quorum";
  @SerializedName(SERIALIZED_NAME_MINIMUM_QUORUM)
  private String minimumQuorum;

  public static final String SERIALIZED_NAME_REQUIRED_SUPPORT = "required_support";
  @SerializedName(SERIALIZED_NAME_REQUIRED_SUPPORT)
  private String requiredSupport;

  public static final String SERIALIZED_NAME_SNAPSHOT_BLOCK = "snapshot_block";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_BLOCK)
  private String snapshotBlock;

  public static final String SERIALIZED_NAME_VOTING_POWER = "voting_power";
  @SerializedName(SERIALIZED_NAME_VOTING_POWER)
  private String votingPower;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_VOTE_COUNT = "vote_count";
  @SerializedName(SERIALIZED_NAME_VOTE_COUNT)
  private String voteCount;

  public static final String SERIALIZED_NAME_POSITIVE_VOTE_COUNT = "positive_vote_count";
  @SerializedName(SERIALIZED_NAME_POSITIVE_VOTE_COUNT)
  private String positiveVoteCount;

  public static final String SERIALIZED_NAME_NEGATIVE_VOTE_COUNT = "negative_vote_count";
  @SerializedName(SERIALIZED_NAME_NEGATIVE_VOTE_COUNT)
  private String negativeVoteCount;

  public static final String SERIALIZED_NAME_CURRENT_QUORUM = "current_quorum";
  @SerializedName(SERIALIZED_NAME_CURRENT_QUORUM)
  private String currentQuorum;

  public static final String SERIALIZED_NAME_CURRENT_SUPPORT = "current_support";
  @SerializedName(SERIALIZED_NAME_CURRENT_SUPPORT)
  private String currentSupport;

  public static final String SERIALIZED_NAME_STAKED_SUPPORT = "staked_support";
  @SerializedName(SERIALIZED_NAME_STAKED_SUPPORT)
  private String stakedSupport;

  public static final String SERIALIZED_NAME_TOTAL_STAKED = "total_staked";
  @SerializedName(SERIALIZED_NAME_TOTAL_STAKED)
  private String totalStaked;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_CREATED_AT_BLOCK = "created_at_block";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_BLOCK)
  private String createdAtBlock;

  public static final String SERIALIZED_NAME_CREATED_AT_TRANSACTION = "created_at_transaction";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_TRANSACTION)
  private String createdAtTransaction;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_UPDATED_AT_BLOCK = "updated_at_block";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT_BLOCK)
  private String updatedAtBlock;

  public static final String SERIALIZED_NAME_UPDATED_AT_TRANSACTION = "updated_at_transaction";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT_TRANSACTION)
  private String updatedAtTransaction;

  public static final String SERIALIZED_NAME_EXECUTED = "executed";
  @SerializedName(SERIALIZED_NAME_EXECUTED)
  private String executed;

  public static final String SERIALIZED_NAME_EXECUTED_AT_BLOCK = "executed_at_block";
  @SerializedName(SERIALIZED_NAME_EXECUTED_AT_BLOCK)
  private String executedAtBlock;

  public static final String SERIALIZED_NAME_EXECUTED_AT_TRANSACTION = "executed_at_transaction";
  @SerializedName(SERIALIZED_NAME_EXECUTED_AT_TRANSACTION)
  private String executedAtTransaction;

  public static final String SERIALIZED_NAME_VID = "vid";
  @SerializedName(SERIALIZED_NAME_VID)
  private Long vid;

  public CurveProposalDTO() {
  }

  public CurveProposalDTO entryTime(OffsetDateTime entryTime) {
    
    this.entryTime = entryTime;
    return this;
  }

   /**
   * Get entryTime
   * @return entryTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEntryTime() {
    return entryTime;
  }


  public void setEntryTime(OffsetDateTime entryTime) {
    this.entryTime = entryTime;
  }


  public CurveProposalDTO recvTime(OffsetDateTime recvTime) {
    
    this.recvTime = recvTime;
    return this;
  }

   /**
   * Get recvTime
   * @return recvTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRecvTime() {
    return recvTime;
  }


  public void setRecvTime(OffsetDateTime recvTime) {
    this.recvTime = recvTime;
  }


  public CurveProposalDTO blockNumber(Long blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Number of block in which entity was recorded.
   * @return blockNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of block in which entity was recorded.")

  public Long getBlockNumber() {
    return blockNumber;
  }


  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }


  public CurveProposalDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CurveProposalDTO number(String number) {
    
    this.number = number;
    return this;
  }

   /**
   * Sequential number in related to the realted voting app.
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sequential number in related to the realted voting app.")

  public String getNumber() {
    return number;
  }


  public void setNumber(String number) {
    this.number = number;
  }


  public CurveProposalDTO app(String app) {
    
    this.app = app;
    return this;
  }

   /**
   * Voting app instance.
   * @return app
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Voting app instance.")

  public String getApp() {
    return app;
  }


  public void setApp(String app) {
    this.app = app;
  }


  public CurveProposalDTO creator(String creator) {
    
    this.creator = creator;
    return this;
  }

   /**
   * Proposal creator&#39;s account.
   * @return creator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proposal creator's account.")

  public String getCreator() {
    return creator;
  }


  public void setCreator(String creator) {
    this.creator = creator;
  }


  public CurveProposalDTO executionScript(String executionScript) {
    
    this.executionScript = executionScript;
    return this;
  }

   /**
   * 
   * @return executionScript
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExecutionScript() {
    return executionScript;
  }


  public void setExecutionScript(String executionScript) {
    this.executionScript = executionScript;
  }


  public CurveProposalDTO expireDate(String expireDate) {
    
    this.expireDate = expireDate;
    return this;
  }

   /**
   * 
   * @return expireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpireDate() {
    return expireDate;
  }


  public void setExpireDate(String expireDate) {
    this.expireDate = expireDate;
  }


  public CurveProposalDTO minimumQuorum(String minimumQuorum) {
    
    this.minimumQuorum = minimumQuorum;
    return this;
  }

   /**
   * Percentage of positive votes in total possible votes for this proposal to be accepted.
   * @return minimumQuorum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage of positive votes in total possible votes for this proposal to be accepted.")

  public String getMinimumQuorum() {
    return minimumQuorum;
  }


  public void setMinimumQuorum(String minimumQuorum) {
    this.minimumQuorum = minimumQuorum;
  }


  public CurveProposalDTO requiredSupport(String requiredSupport) {
    
    this.requiredSupport = requiredSupport;
    return this;
  }

   /**
   * Percentage of positive votes needed for this proposal to be accepted.
   * @return requiredSupport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage of positive votes needed for this proposal to be accepted.")

  public String getRequiredSupport() {
    return requiredSupport;
  }


  public void setRequiredSupport(String requiredSupport) {
    this.requiredSupport = requiredSupport;
  }


  public CurveProposalDTO snapshotBlock(String snapshotBlock) {
    
    this.snapshotBlock = snapshotBlock;
    return this;
  }

   /**
   * 
   * @return snapshotBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSnapshotBlock() {
    return snapshotBlock;
  }


  public void setSnapshotBlock(String snapshotBlock) {
    this.snapshotBlock = snapshotBlock;
  }


  public CurveProposalDTO votingPower(String votingPower) {
    
    this.votingPower = votingPower;
    return this;
  }

   /**
   * 
   * @return votingPower
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVotingPower() {
    return votingPower;
  }


  public void setVotingPower(String votingPower) {
    this.votingPower = votingPower;
  }


  public CurveProposalDTO metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Link to metadata file.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to metadata file.")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public CurveProposalDTO text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Proposal description text.
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proposal description text.")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  public CurveProposalDTO voteCount(String voteCount) {
    
    this.voteCount = voteCount;
    return this;
  }

   /**
   * Number of votes received by the proposal.
   * @return voteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of votes received by the proposal.")

  public String getVoteCount() {
    return voteCount;
  }


  public void setVoteCount(String voteCount) {
    this.voteCount = voteCount;
  }


  public CurveProposalDTO positiveVoteCount(String positiveVoteCount) {
    
    this.positiveVoteCount = positiveVoteCount;
    return this;
  }

   /**
   * Number of positive votes (yes) received by the proposal.
   * @return positiveVoteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of positive votes (yes) received by the proposal.")

  public String getPositiveVoteCount() {
    return positiveVoteCount;
  }


  public void setPositiveVoteCount(String positiveVoteCount) {
    this.positiveVoteCount = positiveVoteCount;
  }


  public CurveProposalDTO negativeVoteCount(String negativeVoteCount) {
    
    this.negativeVoteCount = negativeVoteCount;
    return this;
  }

   /**
   * Number of negative votes (no) received by the proposal.
   * @return negativeVoteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of negative votes (no) received by the proposal.")

  public String getNegativeVoteCount() {
    return negativeVoteCount;
  }


  public void setNegativeVoteCount(String negativeVoteCount) {
    this.negativeVoteCount = negativeVoteCount;
  }


  public CurveProposalDTO currentQuorum(String currentQuorum) {
    
    this.currentQuorum = currentQuorum;
    return this;
  }

   /**
   * 
   * @return currentQuorum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentQuorum() {
    return currentQuorum;
  }


  public void setCurrentQuorum(String currentQuorum) {
    this.currentQuorum = currentQuorum;
  }


  public CurveProposalDTO currentSupport(String currentSupport) {
    
    this.currentSupport = currentSupport;
    return this;
  }

   /**
   * 
   * @return currentSupport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentSupport() {
    return currentSupport;
  }


  public void setCurrentSupport(String currentSupport) {
    this.currentSupport = currentSupport;
  }


  public CurveProposalDTO stakedSupport(String stakedSupport) {
    
    this.stakedSupport = stakedSupport;
    return this;
  }

   /**
   * 
   * @return stakedSupport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStakedSupport() {
    return stakedSupport;
  }


  public void setStakedSupport(String stakedSupport) {
    this.stakedSupport = stakedSupport;
  }


  public CurveProposalDTO totalStaked(String totalStaked) {
    
    this.totalStaked = totalStaked;
    return this;
  }

   /**
   * 
   * @return totalStaked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTotalStaked() {
    return totalStaked;
  }


  public void setTotalStaked(String totalStaked) {
    this.totalStaked = totalStaked;
  }


  public CurveProposalDTO created(String created) {
    
    this.created = created;
    return this;
  }

   /**
   * 
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {
    this.created = created;
  }


  public CurveProposalDTO createdAtBlock(String createdAtBlock) {
    
    this.createdAtBlock = createdAtBlock;
    return this;
  }

   /**
   * 
   * @return createdAtBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtBlock() {
    return createdAtBlock;
  }


  public void setCreatedAtBlock(String createdAtBlock) {
    this.createdAtBlock = createdAtBlock;
  }


  public CurveProposalDTO createdAtTransaction(String createdAtTransaction) {
    
    this.createdAtTransaction = createdAtTransaction;
    return this;
  }

   /**
   * 
   * @return createdAtTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAtTransaction() {
    return createdAtTransaction;
  }


  public void setCreatedAtTransaction(String createdAtTransaction) {
    this.createdAtTransaction = createdAtTransaction;
  }


  public CurveProposalDTO updated(String updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * 
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdated() {
    return updated;
  }


  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public CurveProposalDTO updatedAtBlock(String updatedAtBlock) {
    
    this.updatedAtBlock = updatedAtBlock;
    return this;
  }

   /**
   * 
   * @return updatedAtBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedAtBlock() {
    return updatedAtBlock;
  }


  public void setUpdatedAtBlock(String updatedAtBlock) {
    this.updatedAtBlock = updatedAtBlock;
  }


  public CurveProposalDTO updatedAtTransaction(String updatedAtTransaction) {
    
    this.updatedAtTransaction = updatedAtTransaction;
    return this;
  }

   /**
   * 
   * @return updatedAtTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedAtTransaction() {
    return updatedAtTransaction;
  }


  public void setUpdatedAtTransaction(String updatedAtTransaction) {
    this.updatedAtTransaction = updatedAtTransaction;
  }


  public CurveProposalDTO executed(String executed) {
    
    this.executed = executed;
    return this;
  }

   /**
   * 
   * @return executed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExecuted() {
    return executed;
  }


  public void setExecuted(String executed) {
    this.executed = executed;
  }


  public CurveProposalDTO executedAtBlock(String executedAtBlock) {
    
    this.executedAtBlock = executedAtBlock;
    return this;
  }

   /**
   * 
   * @return executedAtBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExecutedAtBlock() {
    return executedAtBlock;
  }


  public void setExecutedAtBlock(String executedAtBlock) {
    this.executedAtBlock = executedAtBlock;
  }


  public CurveProposalDTO executedAtTransaction(String executedAtTransaction) {
    
    this.executedAtTransaction = executedAtTransaction;
    return this;
  }

   /**
   * 
   * @return executedAtTransaction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExecutedAtTransaction() {
    return executedAtTransaction;
  }


  public void setExecutedAtTransaction(String executedAtTransaction) {
    this.executedAtTransaction = executedAtTransaction;
  }


  public CurveProposalDTO vid(Long vid) {
    
    this.vid = vid;
    return this;
  }

   /**
   * 
   * @return vid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getVid() {
    return vid;
  }


  public void setVid(Long vid) {
    this.vid = vid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurveProposalDTO curveProposalDTO = (CurveProposalDTO) o;
    return Objects.equals(this.entryTime, curveProposalDTO.entryTime) &&
        Objects.equals(this.recvTime, curveProposalDTO.recvTime) &&
        Objects.equals(this.blockNumber, curveProposalDTO.blockNumber) &&
        Objects.equals(this.id, curveProposalDTO.id) &&
        Objects.equals(this.number, curveProposalDTO.number) &&
        Objects.equals(this.app, curveProposalDTO.app) &&
        Objects.equals(this.creator, curveProposalDTO.creator) &&
        Objects.equals(this.executionScript, curveProposalDTO.executionScript) &&
        Objects.equals(this.expireDate, curveProposalDTO.expireDate) &&
        Objects.equals(this.minimumQuorum, curveProposalDTO.minimumQuorum) &&
        Objects.equals(this.requiredSupport, curveProposalDTO.requiredSupport) &&
        Objects.equals(this.snapshotBlock, curveProposalDTO.snapshotBlock) &&
        Objects.equals(this.votingPower, curveProposalDTO.votingPower) &&
        Objects.equals(this.metadata, curveProposalDTO.metadata) &&
        Objects.equals(this.text, curveProposalDTO.text) &&
        Objects.equals(this.voteCount, curveProposalDTO.voteCount) &&
        Objects.equals(this.positiveVoteCount, curveProposalDTO.positiveVoteCount) &&
        Objects.equals(this.negativeVoteCount, curveProposalDTO.negativeVoteCount) &&
        Objects.equals(this.currentQuorum, curveProposalDTO.currentQuorum) &&
        Objects.equals(this.currentSupport, curveProposalDTO.currentSupport) &&
        Objects.equals(this.stakedSupport, curveProposalDTO.stakedSupport) &&
        Objects.equals(this.totalStaked, curveProposalDTO.totalStaked) &&
        Objects.equals(this.created, curveProposalDTO.created) &&
        Objects.equals(this.createdAtBlock, curveProposalDTO.createdAtBlock) &&
        Objects.equals(this.createdAtTransaction, curveProposalDTO.createdAtTransaction) &&
        Objects.equals(this.updated, curveProposalDTO.updated) &&
        Objects.equals(this.updatedAtBlock, curveProposalDTO.updatedAtBlock) &&
        Objects.equals(this.updatedAtTransaction, curveProposalDTO.updatedAtTransaction) &&
        Objects.equals(this.executed, curveProposalDTO.executed) &&
        Objects.equals(this.executedAtBlock, curveProposalDTO.executedAtBlock) &&
        Objects.equals(this.executedAtTransaction, curveProposalDTO.executedAtTransaction) &&
        Objects.equals(this.vid, curveProposalDTO.vid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryTime, recvTime, blockNumber, id, number, app, creator, executionScript, expireDate, minimumQuorum, requiredSupport, snapshotBlock, votingPower, metadata, text, voteCount, positiveVoteCount, negativeVoteCount, currentQuorum, currentSupport, stakedSupport, totalStaked, created, createdAtBlock, createdAtTransaction, updated, updatedAtBlock, updatedAtTransaction, executed, executedAtBlock, executedAtTransaction, vid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurveProposalDTO {\n");
    sb.append("    entryTime: ").append(toIndentedString(entryTime)).append("\n");
    sb.append("    recvTime: ").append(toIndentedString(recvTime)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    executionScript: ").append(toIndentedString(executionScript)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    minimumQuorum: ").append(toIndentedString(minimumQuorum)).append("\n");
    sb.append("    requiredSupport: ").append(toIndentedString(requiredSupport)).append("\n");
    sb.append("    snapshotBlock: ").append(toIndentedString(snapshotBlock)).append("\n");
    sb.append("    votingPower: ").append(toIndentedString(votingPower)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    voteCount: ").append(toIndentedString(voteCount)).append("\n");
    sb.append("    positiveVoteCount: ").append(toIndentedString(positiveVoteCount)).append("\n");
    sb.append("    negativeVoteCount: ").append(toIndentedString(negativeVoteCount)).append("\n");
    sb.append("    currentQuorum: ").append(toIndentedString(currentQuorum)).append("\n");
    sb.append("    currentSupport: ").append(toIndentedString(currentSupport)).append("\n");
    sb.append("    stakedSupport: ").append(toIndentedString(stakedSupport)).append("\n");
    sb.append("    totalStaked: ").append(toIndentedString(totalStaked)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdAtBlock: ").append(toIndentedString(createdAtBlock)).append("\n");
    sb.append("    createdAtTransaction: ").append(toIndentedString(createdAtTransaction)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    updatedAtBlock: ").append(toIndentedString(updatedAtBlock)).append("\n");
    sb.append("    updatedAtTransaction: ").append(toIndentedString(updatedAtTransaction)).append("\n");
    sb.append("    executed: ").append(toIndentedString(executed)).append("\n");
    sb.append("    executedAtBlock: ").append(toIndentedString(executedAtBlock)).append("\n");
    sb.append("    executedAtTransaction: ").append(toIndentedString(executedAtTransaction)).append("\n");
    sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entry_time");
    openapiFields.add("recv_time");
    openapiFields.add("block_number");
    openapiFields.add("id");
    openapiFields.add("number");
    openapiFields.add("app");
    openapiFields.add("creator");
    openapiFields.add("execution_script");
    openapiFields.add("expire_date");
    openapiFields.add("minimum_quorum");
    openapiFields.add("required_support");
    openapiFields.add("snapshot_block");
    openapiFields.add("voting_power");
    openapiFields.add("metadata");
    openapiFields.add("text");
    openapiFields.add("vote_count");
    openapiFields.add("positive_vote_count");
    openapiFields.add("negative_vote_count");
    openapiFields.add("current_quorum");
    openapiFields.add("current_support");
    openapiFields.add("staked_support");
    openapiFields.add("total_staked");
    openapiFields.add("created");
    openapiFields.add("created_at_block");
    openapiFields.add("created_at_transaction");
    openapiFields.add("updated");
    openapiFields.add("updated_at_block");
    openapiFields.add("updated_at_transaction");
    openapiFields.add("executed");
    openapiFields.add("executed_at_block");
    openapiFields.add("executed_at_transaction");
    openapiFields.add("vid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CurveProposalDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CurveProposalDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CurveProposalDTO is not found in the empty JSON string", CurveProposalDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CurveProposalDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CurveProposalDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("number") != null && !jsonObj.get("number").isJsonNull()) && !jsonObj.get("number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("number").toString()));
      }
      if ((jsonObj.get("app") != null && !jsonObj.get("app").isJsonNull()) && !jsonObj.get("app").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app").toString()));
      }
      if ((jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) && !jsonObj.get("creator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator").toString()));
      }
      if ((jsonObj.get("execution_script") != null && !jsonObj.get("execution_script").isJsonNull()) && !jsonObj.get("execution_script").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `execution_script` to be a primitive type in the JSON string but got `%s`", jsonObj.get("execution_script").toString()));
      }
      if ((jsonObj.get("expire_date") != null && !jsonObj.get("expire_date").isJsonNull()) && !jsonObj.get("expire_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expire_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expire_date").toString()));
      }
      if ((jsonObj.get("minimum_quorum") != null && !jsonObj.get("minimum_quorum").isJsonNull()) && !jsonObj.get("minimum_quorum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minimum_quorum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minimum_quorum").toString()));
      }
      if ((jsonObj.get("required_support") != null && !jsonObj.get("required_support").isJsonNull()) && !jsonObj.get("required_support").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `required_support` to be a primitive type in the JSON string but got `%s`", jsonObj.get("required_support").toString()));
      }
      if ((jsonObj.get("snapshot_block") != null && !jsonObj.get("snapshot_block").isJsonNull()) && !jsonObj.get("snapshot_block").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `snapshot_block` to be a primitive type in the JSON string but got `%s`", jsonObj.get("snapshot_block").toString()));
      }
      if ((jsonObj.get("voting_power") != null && !jsonObj.get("voting_power").isJsonNull()) && !jsonObj.get("voting_power").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voting_power` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voting_power").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("vote_count") != null && !jsonObj.get("vote_count").isJsonNull()) && !jsonObj.get("vote_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vote_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vote_count").toString()));
      }
      if ((jsonObj.get("positive_vote_count") != null && !jsonObj.get("positive_vote_count").isJsonNull()) && !jsonObj.get("positive_vote_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positive_vote_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positive_vote_count").toString()));
      }
      if ((jsonObj.get("negative_vote_count") != null && !jsonObj.get("negative_vote_count").isJsonNull()) && !jsonObj.get("negative_vote_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `negative_vote_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("negative_vote_count").toString()));
      }
      if ((jsonObj.get("current_quorum") != null && !jsonObj.get("current_quorum").isJsonNull()) && !jsonObj.get("current_quorum").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_quorum` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_quorum").toString()));
      }
      if ((jsonObj.get("current_support") != null && !jsonObj.get("current_support").isJsonNull()) && !jsonObj.get("current_support").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_support` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_support").toString()));
      }
      if ((jsonObj.get("staked_support") != null && !jsonObj.get("staked_support").isJsonNull()) && !jsonObj.get("staked_support").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `staked_support` to be a primitive type in the JSON string but got `%s`", jsonObj.get("staked_support").toString()));
      }
      if ((jsonObj.get("total_staked") != null && !jsonObj.get("total_staked").isJsonNull()) && !jsonObj.get("total_staked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_staked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_staked").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("created_at_block") != null && !jsonObj.get("created_at_block").isJsonNull()) && !jsonObj.get("created_at_block").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at_block` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at_block").toString()));
      }
      if ((jsonObj.get("created_at_transaction") != null && !jsonObj.get("created_at_transaction").isJsonNull()) && !jsonObj.get("created_at_transaction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at_transaction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at_transaction").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
      if ((jsonObj.get("updated_at_block") != null && !jsonObj.get("updated_at_block").isJsonNull()) && !jsonObj.get("updated_at_block").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at_block` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at_block").toString()));
      }
      if ((jsonObj.get("updated_at_transaction") != null && !jsonObj.get("updated_at_transaction").isJsonNull()) && !jsonObj.get("updated_at_transaction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at_transaction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at_transaction").toString()));
      }
      if ((jsonObj.get("executed") != null && !jsonObj.get("executed").isJsonNull()) && !jsonObj.get("executed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executed").toString()));
      }
      if ((jsonObj.get("executed_at_block") != null && !jsonObj.get("executed_at_block").isJsonNull()) && !jsonObj.get("executed_at_block").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executed_at_block` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executed_at_block").toString()));
      }
      if ((jsonObj.get("executed_at_transaction") != null && !jsonObj.get("executed_at_transaction").isJsonNull()) && !jsonObj.get("executed_at_transaction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executed_at_transaction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executed_at_transaction").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CurveProposalDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CurveProposalDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CurveProposalDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CurveProposalDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<CurveProposalDTO>() {
           @Override
           public void write(JsonWriter out, CurveProposalDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CurveProposalDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CurveProposalDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CurveProposalDTO
  * @throws IOException if the JSON string is invalid with respect to CurveProposalDTO
  */
  public static CurveProposalDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CurveProposalDTO.class);
  }

 /**
  * Convert an instance of CurveProposalDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

