/*
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.NumericsBigInteger;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.
 */
@ApiModel(description = "Information about a pool. Includes references to each token within the pool, volume information, liquidity information, and more. The pool entity mirrors the pool smart contract, and also contains aggregated information about use.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-21T09:43:31.883750Z[Etc/UTC]")
public class UniswapV3PoolDTO {
  public static final String SERIALIZED_NAME_ENTRY_TIME = "entry_time";
  @SerializedName(SERIALIZED_NAME_ENTRY_TIME)
  private OffsetDateTime entryTime;

  public static final String SERIALIZED_NAME_RECV_TIME = "recv_time";
  @SerializedName(SERIALIZED_NAME_RECV_TIME)
  private OffsetDateTime recvTime;

  public static final String SERIALIZED_NAME_BLOCK_NUMBER = "block_number";
  @SerializedName(SERIALIZED_NAME_BLOCK_NUMBER)
  private Long blockNumber;

  public static final String SERIALIZED_NAME_VID = "vid";
  @SerializedName(SERIALIZED_NAME_VID)
  private Long vid;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT_TIMESTAMP = "created_at_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_TIMESTAMP)
  private OffsetDateTime createdAtTimestamp;

  public static final String SERIALIZED_NAME_TOKEN0 = "token_0";
  @SerializedName(SERIALIZED_NAME_TOKEN0)
  private String token0;

  public static final String SERIALIZED_NAME_TOKEN1 = "token_1";
  @SerializedName(SERIALIZED_NAME_TOKEN1)
  private String token1;

  public static final String SERIALIZED_NAME_FEE_TIER = "fee_tier";
  @SerializedName(SERIALIZED_NAME_FEE_TIER)
  private NumericsBigInteger feeTier;

  public static final String SERIALIZED_NAME_LIQUIDITY = "liquidity";
  @SerializedName(SERIALIZED_NAME_LIQUIDITY)
  private NumericsBigInteger liquidity;

  public static final String SERIALIZED_NAME_SQRT_PRICE = "sqrt_price";
  @SerializedName(SERIALIZED_NAME_SQRT_PRICE)
  private NumericsBigInteger sqrtPrice;

  public static final String SERIALIZED_NAME_FEE_GROWTH_GLOBAL0X128 = "fee_growth_global_0x128";
  @SerializedName(SERIALIZED_NAME_FEE_GROWTH_GLOBAL0X128)
  private NumericsBigInteger feeGrowthGlobal0x128;

  public static final String SERIALIZED_NAME_FEE_GROWTH_GLOBAL1X128 = "fee_growth_global_1x128";
  @SerializedName(SERIALIZED_NAME_FEE_GROWTH_GLOBAL1X128)
  private NumericsBigInteger feeGrowthGlobal1x128;

  public static final String SERIALIZED_NAME_TOKEN0_PRICE = "token_0_price";
  @SerializedName(SERIALIZED_NAME_TOKEN0_PRICE)
  private String token0Price;

  public static final String SERIALIZED_NAME_TOKEN1_PRICE = "token_1_price";
  @SerializedName(SERIALIZED_NAME_TOKEN1_PRICE)
  private String token1Price;

  public static final String SERIALIZED_NAME_TICK = "tick";
  @SerializedName(SERIALIZED_NAME_TICK)
  private NumericsBigInteger tick;

  public static final String SERIALIZED_NAME_OBSERVATION_INDEX = "observation_index";
  @SerializedName(SERIALIZED_NAME_OBSERVATION_INDEX)
  private NumericsBigInteger observationIndex;

  public static final String SERIALIZED_NAME_VOLUME_TOKEN0 = "volume_token_0";
  @SerializedName(SERIALIZED_NAME_VOLUME_TOKEN0)
  private String volumeToken0;

  public static final String SERIALIZED_NAME_VOLUME_TOKEN1 = "volume_token_1";
  @SerializedName(SERIALIZED_NAME_VOLUME_TOKEN1)
  private String volumeToken1;

  public static final String SERIALIZED_NAME_VOLUME_USD = "volume_usd";
  @SerializedName(SERIALIZED_NAME_VOLUME_USD)
  private String volumeUsd;

  public static final String SERIALIZED_NAME_UNTRACKED_VOLUME_USD = "untracked_volume_usd";
  @SerializedName(SERIALIZED_NAME_UNTRACKED_VOLUME_USD)
  private String untrackedVolumeUsd;

  public static final String SERIALIZED_NAME_FEES_USD = "fees_usd";
  @SerializedName(SERIALIZED_NAME_FEES_USD)
  private String feesUsd;

  public static final String SERIALIZED_NAME_TX_COUNT = "tx_count";
  @SerializedName(SERIALIZED_NAME_TX_COUNT)
  private NumericsBigInteger txCount;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_TOKEN0 = "collected_fees_token_0";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_TOKEN0)
  private String collectedFeesToken0;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_TOKEN1 = "collected_fees_token_1";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_TOKEN1)
  private String collectedFeesToken1;

  public static final String SERIALIZED_NAME_COLLECTED_FEES_USD = "collected_fees_usd";
  @SerializedName(SERIALIZED_NAME_COLLECTED_FEES_USD)
  private String collectedFeesUsd;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN0 = "total_value_locked_token_0";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN0)
  private String totalValueLockedToken0;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN1 = "total_value_locked_token_1";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_TOKEN1)
  private String totalValueLockedToken1;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_ETH = "total_value_locked_eth";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_ETH)
  private String totalValueLockedEth;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD = "total_value_locked_usd";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD)
  private String totalValueLockedUsd;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD_UNTRACKED = "total_value_locked_usd_untracked";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD_UNTRACKED)
  private String totalValueLockedUsdUntracked;

  public static final String SERIALIZED_NAME_LIQUIDITY_PROVIDER_COUNT = "liquidity_provider_count";
  @SerializedName(SERIALIZED_NAME_LIQUIDITY_PROVIDER_COUNT)
  private String liquidityProviderCount;

  public static final String SERIALIZED_NAME_EVALUATED_ASK = "evaluated_ask";
  @SerializedName(SERIALIZED_NAME_EVALUATED_ASK)
  private Double evaluatedAsk;

  public UniswapV3PoolDTO() {
  }

  
  public UniswapV3PoolDTO(
     Double evaluatedAsk
  ) {
    this();
    this.evaluatedAsk = evaluatedAsk;
  }

  public UniswapV3PoolDTO entryTime(OffsetDateTime entryTime) {
    
    this.entryTime = entryTime;
    return this;
  }

   /**
   * Get entryTime
   * @return entryTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEntryTime() {
    return entryTime;
  }


  public void setEntryTime(OffsetDateTime entryTime) {
    this.entryTime = entryTime;
  }


  public UniswapV3PoolDTO recvTime(OffsetDateTime recvTime) {
    
    this.recvTime = recvTime;
    return this;
  }

   /**
   * Get recvTime
   * @return recvTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRecvTime() {
    return recvTime;
  }


  public void setRecvTime(OffsetDateTime recvTime) {
    this.recvTime = recvTime;
  }


  public UniswapV3PoolDTO blockNumber(Long blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Number of block in which entity was recorded.
   * @return blockNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of block in which entity was recorded.")

  public Long getBlockNumber() {
    return blockNumber;
  }


  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }


  public UniswapV3PoolDTO vid(Long vid) {
    
    this.vid = vid;
    return this;
  }

   /**
   * 
   * @return vid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getVid() {
    return vid;
  }


  public void setVid(Long vid) {
    this.vid = vid;
  }


  public UniswapV3PoolDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Pool address.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pool address.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UniswapV3PoolDTO createdAtTimestamp(OffsetDateTime createdAtTimestamp) {
    
    this.createdAtTimestamp = createdAtTimestamp;
    return this;
  }

   /**
   * Creation time.
   * @return createdAtTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Creation time.")

  public OffsetDateTime getCreatedAtTimestamp() {
    return createdAtTimestamp;
  }


  public void setCreatedAtTimestamp(OffsetDateTime createdAtTimestamp) {
    this.createdAtTimestamp = createdAtTimestamp;
  }


  public UniswapV3PoolDTO token0(String token0) {
    
    this.token0 = token0;
    return this;
  }

   /**
   * Reference to token0 as stored in pool contract.
   * @return token0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference to token0 as stored in pool contract.")

  public String getToken0() {
    return token0;
  }


  public void setToken0(String token0) {
    this.token0 = token0;
  }


  public UniswapV3PoolDTO token1(String token1) {
    
    this.token1 = token1;
    return this;
  }

   /**
   * Reference to token1 as stored in pool contract.
   * @return token1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reference to token1 as stored in pool contract.")

  public String getToken1() {
    return token1;
  }


  public void setToken1(String token1) {
    this.token1 = token1;
  }


  public UniswapV3PoolDTO feeTier(NumericsBigInteger feeTier) {
    
    this.feeTier = feeTier;
    return this;
  }

   /**
   * Get feeTier
   * @return feeTier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getFeeTier() {
    return feeTier;
  }


  public void setFeeTier(NumericsBigInteger feeTier) {
    this.feeTier = feeTier;
  }


  public UniswapV3PoolDTO liquidity(NumericsBigInteger liquidity) {
    
    this.liquidity = liquidity;
    return this;
  }

   /**
   * Get liquidity
   * @return liquidity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getLiquidity() {
    return liquidity;
  }


  public void setLiquidity(NumericsBigInteger liquidity) {
    this.liquidity = liquidity;
  }


  public UniswapV3PoolDTO sqrtPrice(NumericsBigInteger sqrtPrice) {
    
    this.sqrtPrice = sqrtPrice;
    return this;
  }

   /**
   * Get sqrtPrice
   * @return sqrtPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getSqrtPrice() {
    return sqrtPrice;
  }


  public void setSqrtPrice(NumericsBigInteger sqrtPrice) {
    this.sqrtPrice = sqrtPrice;
  }


  public UniswapV3PoolDTO feeGrowthGlobal0x128(NumericsBigInteger feeGrowthGlobal0x128) {
    
    this.feeGrowthGlobal0x128 = feeGrowthGlobal0x128;
    return this;
  }

   /**
   * Get feeGrowthGlobal0x128
   * @return feeGrowthGlobal0x128
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getFeeGrowthGlobal0x128() {
    return feeGrowthGlobal0x128;
  }


  public void setFeeGrowthGlobal0x128(NumericsBigInteger feeGrowthGlobal0x128) {
    this.feeGrowthGlobal0x128 = feeGrowthGlobal0x128;
  }


  public UniswapV3PoolDTO feeGrowthGlobal1x128(NumericsBigInteger feeGrowthGlobal1x128) {
    
    this.feeGrowthGlobal1x128 = feeGrowthGlobal1x128;
    return this;
  }

   /**
   * Get feeGrowthGlobal1x128
   * @return feeGrowthGlobal1x128
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getFeeGrowthGlobal1x128() {
    return feeGrowthGlobal1x128;
  }


  public void setFeeGrowthGlobal1x128(NumericsBigInteger feeGrowthGlobal1x128) {
    this.feeGrowthGlobal1x128 = feeGrowthGlobal1x128;
  }


  public UniswapV3PoolDTO token0Price(String token0Price) {
    
    this.token0Price = token0Price;
    return this;
  }

   /**
   * Token0 per token1.
   * @return token0Price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token0 per token1.")

  public String getToken0Price() {
    return token0Price;
  }


  public void setToken0Price(String token0Price) {
    this.token0Price = token0Price;
  }


  public UniswapV3PoolDTO token1Price(String token1Price) {
    
    this.token1Price = token1Price;
    return this;
  }

   /**
   * Token1 per token0.
   * @return token1Price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token1 per token0.")

  public String getToken1Price() {
    return token1Price;
  }


  public void setToken1Price(String token1Price) {
    this.token1Price = token1Price;
  }


  public UniswapV3PoolDTO tick(NumericsBigInteger tick) {
    
    this.tick = tick;
    return this;
  }

   /**
   * Get tick
   * @return tick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getTick() {
    return tick;
  }


  public void setTick(NumericsBigInteger tick) {
    this.tick = tick;
  }


  public UniswapV3PoolDTO observationIndex(NumericsBigInteger observationIndex) {
    
    this.observationIndex = observationIndex;
    return this;
  }

   /**
   * Get observationIndex
   * @return observationIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getObservationIndex() {
    return observationIndex;
  }


  public void setObservationIndex(NumericsBigInteger observationIndex) {
    this.observationIndex = observationIndex;
  }


  public UniswapV3PoolDTO volumeToken0(String volumeToken0) {
    
    this.volumeToken0 = volumeToken0;
    return this;
  }

   /**
   * All time token0 swapped.
   * @return volumeToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time token0 swapped.")

  public String getVolumeToken0() {
    return volumeToken0;
  }


  public void setVolumeToken0(String volumeToken0) {
    this.volumeToken0 = volumeToken0;
  }


  public UniswapV3PoolDTO volumeToken1(String volumeToken1) {
    
    this.volumeToken1 = volumeToken1;
    return this;
  }

   /**
   * All time token1 swapped.
   * @return volumeToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time token1 swapped.")

  public String getVolumeToken1() {
    return volumeToken1;
  }


  public void setVolumeToken1(String volumeToken1) {
    this.volumeToken1 = volumeToken1;
  }


  public UniswapV3PoolDTO volumeUsd(String volumeUsd) {
    
    this.volumeUsd = volumeUsd;
    return this;
  }

   /**
   * All time USD swapped.
   * @return volumeUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time USD swapped.")

  public String getVolumeUsd() {
    return volumeUsd;
  }


  public void setVolumeUsd(String volumeUsd) {
    this.volumeUsd = volumeUsd;
  }


  public UniswapV3PoolDTO untrackedVolumeUsd(String untrackedVolumeUsd) {
    
    this.untrackedVolumeUsd = untrackedVolumeUsd;
    return this;
  }

   /**
   * All time USD swapped, unfiltered for unreliable USD pools.
   * @return untrackedVolumeUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time USD swapped, unfiltered for unreliable USD pools.")

  public String getUntrackedVolumeUsd() {
    return untrackedVolumeUsd;
  }


  public void setUntrackedVolumeUsd(String untrackedVolumeUsd) {
    this.untrackedVolumeUsd = untrackedVolumeUsd;
  }


  public UniswapV3PoolDTO feesUsd(String feesUsd) {
    
    this.feesUsd = feesUsd;
    return this;
  }

   /**
   * Fees in USD.
   * @return feesUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fees in USD.")

  public String getFeesUsd() {
    return feesUsd;
  }


  public void setFeesUsd(String feesUsd) {
    this.feesUsd = feesUsd;
  }


  public UniswapV3PoolDTO txCount(NumericsBigInteger txCount) {
    
    this.txCount = txCount;
    return this;
  }

   /**
   * Get txCount
   * @return txCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NumericsBigInteger getTxCount() {
    return txCount;
  }


  public void setTxCount(NumericsBigInteger txCount) {
    this.txCount = txCount;
  }


  public UniswapV3PoolDTO collectedFeesToken0(String collectedFeesToken0) {
    
    this.collectedFeesToken0 = collectedFeesToken0;
    return this;
  }

   /**
   * All time fees collected token0.
   * @return collectedFeesToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected token0.")

  public String getCollectedFeesToken0() {
    return collectedFeesToken0;
  }


  public void setCollectedFeesToken0(String collectedFeesToken0) {
    this.collectedFeesToken0 = collectedFeesToken0;
  }


  public UniswapV3PoolDTO collectedFeesToken1(String collectedFeesToken1) {
    
    this.collectedFeesToken1 = collectedFeesToken1;
    return this;
  }

   /**
   * All time fees collected token1.
   * @return collectedFeesToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected token1.")

  public String getCollectedFeesToken1() {
    return collectedFeesToken1;
  }


  public void setCollectedFeesToken1(String collectedFeesToken1) {
    this.collectedFeesToken1 = collectedFeesToken1;
  }


  public UniswapV3PoolDTO collectedFeesUsd(String collectedFeesUsd) {
    
    this.collectedFeesUsd = collectedFeesUsd;
    return this;
  }

   /**
   * All time fees collected derived USD.
   * @return collectedFeesUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All time fees collected derived USD.")

  public String getCollectedFeesUsd() {
    return collectedFeesUsd;
  }


  public void setCollectedFeesUsd(String collectedFeesUsd) {
    this.collectedFeesUsd = collectedFeesUsd;
  }


  public UniswapV3PoolDTO totalValueLockedToken0(String totalValueLockedToken0) {
    
    this.totalValueLockedToken0 = totalValueLockedToken0;
    return this;
  }

   /**
   * Total token 0 across all ticks.
   * @return totalValueLockedToken0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total token 0 across all ticks.")

  public String getTotalValueLockedToken0() {
    return totalValueLockedToken0;
  }


  public void setTotalValueLockedToken0(String totalValueLockedToken0) {
    this.totalValueLockedToken0 = totalValueLockedToken0;
  }


  public UniswapV3PoolDTO totalValueLockedToken1(String totalValueLockedToken1) {
    
    this.totalValueLockedToken1 = totalValueLockedToken1;
    return this;
  }

   /**
   * 
   * @return totalValueLockedToken1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTotalValueLockedToken1() {
    return totalValueLockedToken1;
  }


  public void setTotalValueLockedToken1(String totalValueLockedToken1) {
    this.totalValueLockedToken1 = totalValueLockedToken1;
  }


  public UniswapV3PoolDTO totalValueLockedEth(String totalValueLockedEth) {
    
    this.totalValueLockedEth = totalValueLockedEth;
    return this;
  }

   /**
   * Total token 1 across all ticks.
   * @return totalValueLockedEth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total token 1 across all ticks.")

  public String getTotalValueLockedEth() {
    return totalValueLockedEth;
  }


  public void setTotalValueLockedEth(String totalValueLockedEth) {
    this.totalValueLockedEth = totalValueLockedEth;
  }


  public UniswapV3PoolDTO totalValueLockedUsd(String totalValueLockedUsd) {
    
    this.totalValueLockedUsd = totalValueLockedUsd;
    return this;
  }

   /**
   * Total value locked USD.
   * @return totalValueLockedUsd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total value locked USD.")

  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }


  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }


  public UniswapV3PoolDTO totalValueLockedUsdUntracked(String totalValueLockedUsdUntracked) {
    
    this.totalValueLockedUsdUntracked = totalValueLockedUsdUntracked;
    return this;
  }

   /**
   * Total value locked derived ETH.
   * @return totalValueLockedUsdUntracked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total value locked derived ETH.")

  public String getTotalValueLockedUsdUntracked() {
    return totalValueLockedUsdUntracked;
  }


  public void setTotalValueLockedUsdUntracked(String totalValueLockedUsdUntracked) {
    this.totalValueLockedUsdUntracked = totalValueLockedUsdUntracked;
  }


  public UniswapV3PoolDTO liquidityProviderCount(String liquidityProviderCount) {
    
    this.liquidityProviderCount = liquidityProviderCount;
    return this;
  }

   /**
   * Liquidity providers count, used to detect new exchanges.
   * @return liquidityProviderCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Liquidity providers count, used to detect new exchanges.")

  public String getLiquidityProviderCount() {
    return liquidityProviderCount;
  }


  public void setLiquidityProviderCount(String liquidityProviderCount) {
    this.liquidityProviderCount = liquidityProviderCount;
  }


   /**
   * Get evaluatedAsk
   * @return evaluatedAsk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEvaluatedAsk() {
    return evaluatedAsk;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UniswapV3PoolDTO uniswapV3PoolDTO = (UniswapV3PoolDTO) o;
    return Objects.equals(this.entryTime, uniswapV3PoolDTO.entryTime) &&
        Objects.equals(this.recvTime, uniswapV3PoolDTO.recvTime) &&
        Objects.equals(this.blockNumber, uniswapV3PoolDTO.blockNumber) &&
        Objects.equals(this.vid, uniswapV3PoolDTO.vid) &&
        Objects.equals(this.id, uniswapV3PoolDTO.id) &&
        Objects.equals(this.createdAtTimestamp, uniswapV3PoolDTO.createdAtTimestamp) &&
        Objects.equals(this.token0, uniswapV3PoolDTO.token0) &&
        Objects.equals(this.token1, uniswapV3PoolDTO.token1) &&
        Objects.equals(this.feeTier, uniswapV3PoolDTO.feeTier) &&
        Objects.equals(this.liquidity, uniswapV3PoolDTO.liquidity) &&
        Objects.equals(this.sqrtPrice, uniswapV3PoolDTO.sqrtPrice) &&
        Objects.equals(this.feeGrowthGlobal0x128, uniswapV3PoolDTO.feeGrowthGlobal0x128) &&
        Objects.equals(this.feeGrowthGlobal1x128, uniswapV3PoolDTO.feeGrowthGlobal1x128) &&
        Objects.equals(this.token0Price, uniswapV3PoolDTO.token0Price) &&
        Objects.equals(this.token1Price, uniswapV3PoolDTO.token1Price) &&
        Objects.equals(this.tick, uniswapV3PoolDTO.tick) &&
        Objects.equals(this.observationIndex, uniswapV3PoolDTO.observationIndex) &&
        Objects.equals(this.volumeToken0, uniswapV3PoolDTO.volumeToken0) &&
        Objects.equals(this.volumeToken1, uniswapV3PoolDTO.volumeToken1) &&
        Objects.equals(this.volumeUsd, uniswapV3PoolDTO.volumeUsd) &&
        Objects.equals(this.untrackedVolumeUsd, uniswapV3PoolDTO.untrackedVolumeUsd) &&
        Objects.equals(this.feesUsd, uniswapV3PoolDTO.feesUsd) &&
        Objects.equals(this.txCount, uniswapV3PoolDTO.txCount) &&
        Objects.equals(this.collectedFeesToken0, uniswapV3PoolDTO.collectedFeesToken0) &&
        Objects.equals(this.collectedFeesToken1, uniswapV3PoolDTO.collectedFeesToken1) &&
        Objects.equals(this.collectedFeesUsd, uniswapV3PoolDTO.collectedFeesUsd) &&
        Objects.equals(this.totalValueLockedToken0, uniswapV3PoolDTO.totalValueLockedToken0) &&
        Objects.equals(this.totalValueLockedToken1, uniswapV3PoolDTO.totalValueLockedToken1) &&
        Objects.equals(this.totalValueLockedEth, uniswapV3PoolDTO.totalValueLockedEth) &&
        Objects.equals(this.totalValueLockedUsd, uniswapV3PoolDTO.totalValueLockedUsd) &&
        Objects.equals(this.totalValueLockedUsdUntracked, uniswapV3PoolDTO.totalValueLockedUsdUntracked) &&
        Objects.equals(this.liquidityProviderCount, uniswapV3PoolDTO.liquidityProviderCount) &&
        Objects.equals(this.evaluatedAsk, uniswapV3PoolDTO.evaluatedAsk);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryTime, recvTime, blockNumber, vid, id, createdAtTimestamp, token0, token1, feeTier, liquidity, sqrtPrice, feeGrowthGlobal0x128, feeGrowthGlobal1x128, token0Price, token1Price, tick, observationIndex, volumeToken0, volumeToken1, volumeUsd, untrackedVolumeUsd, feesUsd, txCount, collectedFeesToken0, collectedFeesToken1, collectedFeesUsd, totalValueLockedToken0, totalValueLockedToken1, totalValueLockedEth, totalValueLockedUsd, totalValueLockedUsdUntracked, liquidityProviderCount, evaluatedAsk);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UniswapV3PoolDTO {\n");
    sb.append("    entryTime: ").append(toIndentedString(entryTime)).append("\n");
    sb.append("    recvTime: ").append(toIndentedString(recvTime)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    vid: ").append(toIndentedString(vid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAtTimestamp: ").append(toIndentedString(createdAtTimestamp)).append("\n");
    sb.append("    token0: ").append(toIndentedString(token0)).append("\n");
    sb.append("    token1: ").append(toIndentedString(token1)).append("\n");
    sb.append("    feeTier: ").append(toIndentedString(feeTier)).append("\n");
    sb.append("    liquidity: ").append(toIndentedString(liquidity)).append("\n");
    sb.append("    sqrtPrice: ").append(toIndentedString(sqrtPrice)).append("\n");
    sb.append("    feeGrowthGlobal0x128: ").append(toIndentedString(feeGrowthGlobal0x128)).append("\n");
    sb.append("    feeGrowthGlobal1x128: ").append(toIndentedString(feeGrowthGlobal1x128)).append("\n");
    sb.append("    token0Price: ").append(toIndentedString(token0Price)).append("\n");
    sb.append("    token1Price: ").append(toIndentedString(token1Price)).append("\n");
    sb.append("    tick: ").append(toIndentedString(tick)).append("\n");
    sb.append("    observationIndex: ").append(toIndentedString(observationIndex)).append("\n");
    sb.append("    volumeToken0: ").append(toIndentedString(volumeToken0)).append("\n");
    sb.append("    volumeToken1: ").append(toIndentedString(volumeToken1)).append("\n");
    sb.append("    volumeUsd: ").append(toIndentedString(volumeUsd)).append("\n");
    sb.append("    untrackedVolumeUsd: ").append(toIndentedString(untrackedVolumeUsd)).append("\n");
    sb.append("    feesUsd: ").append(toIndentedString(feesUsd)).append("\n");
    sb.append("    txCount: ").append(toIndentedString(txCount)).append("\n");
    sb.append("    collectedFeesToken0: ").append(toIndentedString(collectedFeesToken0)).append("\n");
    sb.append("    collectedFeesToken1: ").append(toIndentedString(collectedFeesToken1)).append("\n");
    sb.append("    collectedFeesUsd: ").append(toIndentedString(collectedFeesUsd)).append("\n");
    sb.append("    totalValueLockedToken0: ").append(toIndentedString(totalValueLockedToken0)).append("\n");
    sb.append("    totalValueLockedToken1: ").append(toIndentedString(totalValueLockedToken1)).append("\n");
    sb.append("    totalValueLockedEth: ").append(toIndentedString(totalValueLockedEth)).append("\n");
    sb.append("    totalValueLockedUsd: ").append(toIndentedString(totalValueLockedUsd)).append("\n");
    sb.append("    totalValueLockedUsdUntracked: ").append(toIndentedString(totalValueLockedUsdUntracked)).append("\n");
    sb.append("    liquidityProviderCount: ").append(toIndentedString(liquidityProviderCount)).append("\n");
    sb.append("    evaluatedAsk: ").append(toIndentedString(evaluatedAsk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entry_time");
    openapiFields.add("recv_time");
    openapiFields.add("block_number");
    openapiFields.add("vid");
    openapiFields.add("id");
    openapiFields.add("created_at_timestamp");
    openapiFields.add("token_0");
    openapiFields.add("token_1");
    openapiFields.add("fee_tier");
    openapiFields.add("liquidity");
    openapiFields.add("sqrt_price");
    openapiFields.add("fee_growth_global_0x128");
    openapiFields.add("fee_growth_global_1x128");
    openapiFields.add("token_0_price");
    openapiFields.add("token_1_price");
    openapiFields.add("tick");
    openapiFields.add("observation_index");
    openapiFields.add("volume_token_0");
    openapiFields.add("volume_token_1");
    openapiFields.add("volume_usd");
    openapiFields.add("untracked_volume_usd");
    openapiFields.add("fees_usd");
    openapiFields.add("tx_count");
    openapiFields.add("collected_fees_token_0");
    openapiFields.add("collected_fees_token_1");
    openapiFields.add("collected_fees_usd");
    openapiFields.add("total_value_locked_token_0");
    openapiFields.add("total_value_locked_token_1");
    openapiFields.add("total_value_locked_eth");
    openapiFields.add("total_value_locked_usd");
    openapiFields.add("total_value_locked_usd_untracked");
    openapiFields.add("liquidity_provider_count");
    openapiFields.add("evaluated_ask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UniswapV3PoolDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UniswapV3PoolDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UniswapV3PoolDTO is not found in the empty JSON string", UniswapV3PoolDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UniswapV3PoolDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UniswapV3PoolDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("token_0") != null && !jsonObj.get("token_0").isJsonNull()) && !jsonObj.get("token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_0").toString()));
      }
      if ((jsonObj.get("token_1") != null && !jsonObj.get("token_1").isJsonNull()) && !jsonObj.get("token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_1").toString()));
      }
      // validate the optional field `fee_tier`
      if (jsonObj.get("fee_tier") != null && !jsonObj.get("fee_tier").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_tier"));
      }
      // validate the optional field `liquidity`
      if (jsonObj.get("liquidity") != null && !jsonObj.get("liquidity").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("liquidity"));
      }
      // validate the optional field `sqrt_price`
      if (jsonObj.get("sqrt_price") != null && !jsonObj.get("sqrt_price").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("sqrt_price"));
      }
      // validate the optional field `fee_growth_global_0x128`
      if (jsonObj.get("fee_growth_global_0x128") != null && !jsonObj.get("fee_growth_global_0x128").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_growth_global_0x128"));
      }
      // validate the optional field `fee_growth_global_1x128`
      if (jsonObj.get("fee_growth_global_1x128") != null && !jsonObj.get("fee_growth_global_1x128").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("fee_growth_global_1x128"));
      }
      if ((jsonObj.get("token_0_price") != null && !jsonObj.get("token_0_price").isJsonNull()) && !jsonObj.get("token_0_price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_0_price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_0_price").toString()));
      }
      if ((jsonObj.get("token_1_price") != null && !jsonObj.get("token_1_price").isJsonNull()) && !jsonObj.get("token_1_price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_1_price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_1_price").toString()));
      }
      // validate the optional field `tick`
      if (jsonObj.get("tick") != null && !jsonObj.get("tick").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("tick"));
      }
      // validate the optional field `observation_index`
      if (jsonObj.get("observation_index") != null && !jsonObj.get("observation_index").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("observation_index"));
      }
      if ((jsonObj.get("volume_token_0") != null && !jsonObj.get("volume_token_0").isJsonNull()) && !jsonObj.get("volume_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_token_0").toString()));
      }
      if ((jsonObj.get("volume_token_1") != null && !jsonObj.get("volume_token_1").isJsonNull()) && !jsonObj.get("volume_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_token_1").toString()));
      }
      if ((jsonObj.get("volume_usd") != null && !jsonObj.get("volume_usd").isJsonNull()) && !jsonObj.get("volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("volume_usd").toString()));
      }
      if ((jsonObj.get("untracked_volume_usd") != null && !jsonObj.get("untracked_volume_usd").isJsonNull()) && !jsonObj.get("untracked_volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `untracked_volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("untracked_volume_usd").toString()));
      }
      if ((jsonObj.get("fees_usd") != null && !jsonObj.get("fees_usd").isJsonNull()) && !jsonObj.get("fees_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fees_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fees_usd").toString()));
      }
      // validate the optional field `tx_count`
      if (jsonObj.get("tx_count") != null && !jsonObj.get("tx_count").isJsonNull()) {
        NumericsBigInteger.validateJsonObject(jsonObj.getAsJsonObject("tx_count"));
      }
      if ((jsonObj.get("collected_fees_token_0") != null && !jsonObj.get("collected_fees_token_0").isJsonNull()) && !jsonObj.get("collected_fees_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_token_0").toString()));
      }
      if ((jsonObj.get("collected_fees_token_1") != null && !jsonObj.get("collected_fees_token_1").isJsonNull()) && !jsonObj.get("collected_fees_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_token_1").toString()));
      }
      if ((jsonObj.get("collected_fees_usd") != null && !jsonObj.get("collected_fees_usd").isJsonNull()) && !jsonObj.get("collected_fees_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `collected_fees_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("collected_fees_usd").toString()));
      }
      if ((jsonObj.get("total_value_locked_token_0") != null && !jsonObj.get("total_value_locked_token_0").isJsonNull()) && !jsonObj.get("total_value_locked_token_0").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_token_0` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_token_0").toString()));
      }
      if ((jsonObj.get("total_value_locked_token_1") != null && !jsonObj.get("total_value_locked_token_1").isJsonNull()) && !jsonObj.get("total_value_locked_token_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_token_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_token_1").toString()));
      }
      if ((jsonObj.get("total_value_locked_eth") != null && !jsonObj.get("total_value_locked_eth").isJsonNull()) && !jsonObj.get("total_value_locked_eth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_eth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_eth").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd") != null && !jsonObj.get("total_value_locked_usd").isJsonNull()) && !jsonObj.get("total_value_locked_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd_untracked") != null && !jsonObj.get("total_value_locked_usd_untracked").isJsonNull()) && !jsonObj.get("total_value_locked_usd_untracked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd_untracked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd_untracked").toString()));
      }
      if ((jsonObj.get("liquidity_provider_count") != null && !jsonObj.get("liquidity_provider_count").isJsonNull()) && !jsonObj.get("liquidity_provider_count").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `liquidity_provider_count` to be a primitive type in the JSON string but got `%s`", jsonObj.get("liquidity_provider_count").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UniswapV3PoolDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UniswapV3PoolDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UniswapV3PoolDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UniswapV3PoolDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<UniswapV3PoolDTO>() {
           @Override
           public void write(JsonWriter out, UniswapV3PoolDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UniswapV3PoolDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UniswapV3PoolDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UniswapV3PoolDTO
  * @throws IOException if the JSON string is invalid with respect to UniswapV3PoolDTO
  */
  public static UniswapV3PoolDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UniswapV3PoolDTO.class);
  }

 /**
  * Convert an instance of UniswapV3PoolDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

