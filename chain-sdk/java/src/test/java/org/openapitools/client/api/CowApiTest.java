/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CowOrderDTO;
import org.openapitools.client.model.CowSettlementDTO;
import org.openapitools.client.model.CowTokenDTO;
import org.openapitools.client.model.CowTradeDTO;
import org.openapitools.client.model.CowUserDTO;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CowApi
 */
@Disabled
public class CowApiTest {

    private final CowApi api = new CowApi();

    /**
     * Orders (historical)
     *
     * Gets orders.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowGetOrdersHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String id = null;
        List<CowOrderDTO> response = api.cowGetOrdersHistorical(startBlock, endBlock, startDate, endDate, id);
        // TODO: test validations
    }

    /**
     * Settlements (historical)
     *
     * Gets settlements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowGetSettlementsHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String id = null;
        List<CowSettlementDTO> response = api.cowGetSettlementsHistorical(startBlock, endBlock, startDate, endDate, id);
        // TODO: test validations
    }

    /**
     * Tokens (historical)
     *
     * Gets tokens.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowGetTokensHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String id = null;
        String address = null;
        String name = null;
        String symbol = null;
        List<CowTokenDTO> response = api.cowGetTokensHistorical(startBlock, endBlock, startDate, endDate, id, address, name, symbol);
        // TODO: test validations
    }

    /**
     * Trades (historical)
     *
     * Gets trades.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowGetTradesHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String id = null;
        String sellToken = null;
        String buyToken = null;
        List<CowTradeDTO> response = api.cowGetTradesHistorical(startBlock, endBlock, startDate, endDate, id, sellToken, buyToken);
        // TODO: test validations
    }

    /**
     * Users (historical)
     *
     * Gets users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowGetUsersHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String id = null;
        String address = null;
        List<CowUserDTO> response = api.cowGetUsersHistorical(startBlock, endBlock, startDate, endDate, id, address);
        // TODO: test validations
    }

    /**
     * Orders (current)
     *
     * Gets orders.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowOrdersCurrentTest() throws ApiException {
        List<CowOrderDTO> response = api.cowOrdersCurrent();
        // TODO: test validations
    }

    /**
     * Settlements (current)
     *
     * Gets settlements.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowSettlementsCurrentTest() throws ApiException {
        List<CowSettlementDTO> response = api.cowSettlementsCurrent();
        // TODO: test validations
    }

    /**
     * Tokens (current)
     *
     * Gets tokens.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowTokensCurrentTest() throws ApiException {
        List<CowTokenDTO> response = api.cowTokensCurrent();
        // TODO: test validations
    }

    /**
     * Trades (current)
     *
     * Gets trades.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowTradesCurrentTest() throws ApiException {
        List<CowTradeDTO> response = api.cowTradesCurrent();
        // TODO: test validations
    }

    /**
     * Users (current)
     *
     * Gets users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cowUsersCurrentTest() throws ApiException {
        List<CowUserDTO> response = api.cowUsersCurrent();
        // TODO: test validations
    }

}
