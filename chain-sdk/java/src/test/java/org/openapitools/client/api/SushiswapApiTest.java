/*
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.SushiswapPairDTO;
import org.openapitools.client.model.SushiswapSwapDTO;
import org.openapitools.client.model.SushiswapTokenDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SushiswapApi
 */
@Disabled
public class SushiswapApiTest {

    private final SushiswapApi api = new SushiswapApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapBundlesHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapBundlesHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapBurnsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapBurnsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapDayDataHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapDayDataHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapFactoryHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapFactoryHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapHourDataHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapHourDataHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapLiquidityPositionHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapLiquidityPositionHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapLiquidityPositionSnapshotsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapLiquidityPositionSnapshotsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapMintsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapMintsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapPoolDayDataHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapPoolDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapPoolHourDataHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsSushiswapPoolHourDataHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapTokenDayDataHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String tokenId = null;
        api.dappsSushiswapTokenDayDataHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapTransactionsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapTransactionsHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsSushiswapUsersHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsSushiswapUsersHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * Gets latest ETH.DeFi.DTO.Sushiswap.PairDTO.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetPoolsCurrentTest() throws ApiException {
        List<SushiswapPairDTO> response = api.sushiswapGetPoolsCurrent();
        // TODO: test validations
    }

    /**
     * Gets list of ETH.DeFi.DTO.Sushiswap.PairDTO data for the given filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetPoolsHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        List<SushiswapPairDTO> response = api.sushiswapGetPoolsHistorical(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * Gets latest ETH.DeFi.DTO.Sushiswap.SwapDTO.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetSwapsCurrentTest() throws ApiException {
        SushiswapSwapDTO response = api.sushiswapGetSwapsCurrent();
        // TODO: test validations
    }

    /**
     * Gets list of ETH.DeFi.DTO.Sushiswap.SwapDTO data for the given filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetSwapsHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        List<SushiswapSwapDTO> response = api.sushiswapGetSwapsHistorical(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * Gets latest ETH.DeFi.DTO.Sushiswap.TokenDTO.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetTokensCurrentTest() throws ApiException {
        SushiswapTokenDTO response = api.sushiswapGetTokensCurrent();
        // TODO: test validations
    }

    /**
     * Gets list of ETH.DeFi.DTO.Sushiswap.TokenDTO for the given filters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sushiswapGetTokensHistoricalTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String tokenId = null;
        List<SushiswapTokenDTO> response = api.sushiswapGetTokensHistorical(startBlock, endBlock, startDate, endDate, tokenId);
        // TODO: test validations
    }

}
