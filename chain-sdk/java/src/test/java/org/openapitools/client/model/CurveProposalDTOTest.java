/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CurveProposalDTO
 */
public class CurveProposalDTOTest {
    private final CurveProposalDTO model = new CurveProposalDTO();

    /**
     * Model tests for CurveProposalDTO
     */
    @Test
    public void testCurveProposalDTO() {
        // TODO: test CurveProposalDTO
    }

    /**
     * Test the property 'entryTime'
     */
    @Test
    public void entryTimeTest() {
        // TODO: test entryTime
    }

    /**
     * Test the property 'recvTime'
     */
    @Test
    public void recvTimeTest() {
        // TODO: test recvTime
    }

    /**
     * Test the property 'blockNumber'
     */
    @Test
    public void blockNumberTest() {
        // TODO: test blockNumber
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'app'
     */
    @Test
    public void appTest() {
        // TODO: test app
    }

    /**
     * Test the property 'creator'
     */
    @Test
    public void creatorTest() {
        // TODO: test creator
    }

    /**
     * Test the property 'executionScript'
     */
    @Test
    public void executionScriptTest() {
        // TODO: test executionScript
    }

    /**
     * Test the property 'expireDate'
     */
    @Test
    public void expireDateTest() {
        // TODO: test expireDate
    }

    /**
     * Test the property 'minimumQuorum'
     */
    @Test
    public void minimumQuorumTest() {
        // TODO: test minimumQuorum
    }

    /**
     * Test the property 'requiredSupport'
     */
    @Test
    public void requiredSupportTest() {
        // TODO: test requiredSupport
    }

    /**
     * Test the property 'snapshotBlock'
     */
    @Test
    public void snapshotBlockTest() {
        // TODO: test snapshotBlock
    }

    /**
     * Test the property 'votingPower'
     */
    @Test
    public void votingPowerTest() {
        // TODO: test votingPower
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'voteCount'
     */
    @Test
    public void voteCountTest() {
        // TODO: test voteCount
    }

    /**
     * Test the property 'positiveVoteCount'
     */
    @Test
    public void positiveVoteCountTest() {
        // TODO: test positiveVoteCount
    }

    /**
     * Test the property 'negativeVoteCount'
     */
    @Test
    public void negativeVoteCountTest() {
        // TODO: test negativeVoteCount
    }

    /**
     * Test the property 'currentQuorum'
     */
    @Test
    public void currentQuorumTest() {
        // TODO: test currentQuorum
    }

    /**
     * Test the property 'currentSupport'
     */
    @Test
    public void currentSupportTest() {
        // TODO: test currentSupport
    }

    /**
     * Test the property 'stakedSupport'
     */
    @Test
    public void stakedSupportTest() {
        // TODO: test stakedSupport
    }

    /**
     * Test the property 'totalStaked'
     */
    @Test
    public void totalStakedTest() {
        // TODO: test totalStaked
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'createdAtBlock'
     */
    @Test
    public void createdAtBlockTest() {
        // TODO: test createdAtBlock
    }

    /**
     * Test the property 'createdAtTransaction'
     */
    @Test
    public void createdAtTransactionTest() {
        // TODO: test createdAtTransaction
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'updatedAtBlock'
     */
    @Test
    public void updatedAtBlockTest() {
        // TODO: test updatedAtBlock
    }

    /**
     * Test the property 'updatedAtTransaction'
     */
    @Test
    public void updatedAtTransactionTest() {
        // TODO: test updatedAtTransaction
    }

    /**
     * Test the property 'executed'
     */
    @Test
    public void executedTest() {
        // TODO: test executed
    }

    /**
     * Test the property 'executedAtBlock'
     */
    @Test
    public void executedAtBlockTest() {
        // TODO: test executedAtBlock
    }

    /**
     * Test the property 'executedAtTransaction'
     */
    @Test
    public void executedAtTransactionTest() {
        // TODO: test executedAtTransaction
    }

    /**
     * Test the property 'vid'
     */
    @Test
    public void vidTest() {
        // TODO: test vid
    }

}
