/*
 * OnChain API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CurveApi
 */
@Disabled
public class CurveApiTest {

    private final CurveApi api = new CurveApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveAccountsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveAccountsHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveAddLiquidityEventHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveAddLiquidityEventHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveAdminFeeChangeLogHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveAdminFeeChangeLogHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveAmplificationCoeffChangeLogHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveAmplificationCoeffChangeLogHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveCoinsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveCoinsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveContractsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveContractsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveContractsVersionHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveContractsVersionHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveDailyVolumeHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveDailyVolumeHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveFeeChangeLogHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveFeeChangeLogHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeDepositHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeDepositHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveGaugeHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeLiquidityHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeLiquidityHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeTotalWeightHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeTotalWeightHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeTypeHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeTypeHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeTypeWeightHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeTypeWeightHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeWeightHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeWeightHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeWeightVoteHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeWeightVoteHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveGaugeWithdrawHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveGaugeWithdrawHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveHourlyVolumeHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveHourlyVolumeHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveLpTokenHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveLpTokenHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurvePoolsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurvePoolsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveProposalsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveProposalsHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveProposalsVoteHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveProposalsVoteHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveRemoveLiquidityEventHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveRemoveLiquidityEventHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveRemoveLiquidityOneEventHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveRemoveLiquidityOneEventHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveSwapsHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveSwapsHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveSystemStateHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveSystemStateHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveTokensHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String tokenId = null;
        api.dappsCurveTokensHistoricalGet(startBlock, endBlock, startDate, endDate, tokenId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveTransferOwnershipEventHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveTransferOwnershipEventHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveUnderlyingCoinHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveUnderlyingCoinHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveVotingAppHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        api.dappsCurveVotingAppHistoricalGet(startBlock, endBlock, startDate, endDate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dappsCurveWeeklyVolumeHistoricalGetTest() throws ApiException {
        Long startBlock = null;
        Long endBlock = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String poolId = null;
        api.dappsCurveWeeklyVolumeHistoricalGet(startBlock, endBlock, startDate, endDate, poolId);
        // TODO: test validations
    }

}
