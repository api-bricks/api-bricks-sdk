# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OnChainAPI.Api.UniswapV2 do
  @moduledoc """
  API calls for all endpoints tagged `UniswapV2`.
  """

  alias OnChainAPI.Connection
  import OnChainAPI.RequestBuilder

  @doc """
  GetPools

  ### Parameters

  - `connection` (OnChainAPI.Connection): Connection to server
  - `chain_id` (String.t): Chain id
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%PairV2Dto{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec chains_chain_id_dapps_uniswapv2_pools_current_get(Tesla.Env.client, String.t, keyword()) :: {:ok, list(OnChainAPI.Model.PairV2Dto.t)} | {:error, Tesla.Env.t}
  def chains_chain_id_dapps_uniswapv2_pools_current_get(connection, chain_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/chains/#{chain_id}/dapps/uniswapv2/pools/current")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%OnChainAPI.Model.PairV2Dto{}]}
    ])
  end

  @doc """
  GetSwaps

  ### Parameters

  - `connection` (OnChainAPI.Connection): Connection to server
  - `chain_id` (String.t): Chain id
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%SwapV2Dto{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec chains_chain_id_dapps_uniswapv2_swaps_current_get(Tesla.Env.client, String.t, keyword()) :: {:ok, list(OnChainAPI.Model.SwapV2Dto.t)} | {:error, Tesla.Env.t}
  def chains_chain_id_dapps_uniswapv2_swaps_current_get(connection, chain_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/chains/#{chain_id}/dapps/uniswapv2/swaps/current")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%OnChainAPI.Model.SwapV2Dto{}]}
    ])
  end

  @doc """
  GetTokens

  ### Parameters

  - `connection` (OnChainAPI.Connection): Connection to server
  - `chain_id` (String.t): Chain id
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%TokenV2Dto{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec chains_chain_id_dapps_uniswapv2_tokens_current_get(Tesla.Env.client, String.t, keyword()) :: {:ok, list(OnChainAPI.Model.TokenV2Dto.t)} | {:error, Tesla.Env.t}
  def chains_chain_id_dapps_uniswapv2_tokens_current_get(connection, chain_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/chains/#{chain_id}/dapps/uniswapv2/tokens/current")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%OnChainAPI.Model.TokenV2Dto{}]}
    ])
  end
end
