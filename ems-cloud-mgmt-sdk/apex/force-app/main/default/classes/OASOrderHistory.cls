/*
 * EMS - REST API
 * This section will provide necessary information about the `CoinAPI EMS REST API` protocol.\nThis API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>      \n\nImplemented Standards:\n\n  * [HTTP1.0](https://datatracker.ietf.org/doc/html/rfc1945)\n  * [HTTP1.1](https://datatracker.ietf.org/doc/html/rfc2616)\n  * [HTTP2.0](https://datatracker.ietf.org/doc/html/rfc7540)\n   \n### Endpoints\n\n<table>\n  <thead>\n    <tr>\n      <th>Deployment method</th>\n      <th>Environment</th>\n      <th>Url</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Managed Cloud</td>\n      <td>Production</td>\n      <td>Use <a href="#ems-docs-sh">Managed Cloud REST API /v1/locations</a> to get specific endpoints to each server site where your deployments span</td>\n    </tr>\n    <tr>\n      <td>Managed Cloud</td>\n      <td>Sandbox</td>\n      <td><code>https://ems-gateway-aws-eu-central-1-dev.coinapi.io/</code></td>\n    </tr>\n    <tr>\n      <td>Self Hosted</td>\n      <td>Production</td>\n      <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>\n    </tr>\n    <tr>\n      <td>Self Hosted</td>\n      <td>Sandbox</td>\n      <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>\n    </tr>\n  </tbody>\n</table>\n\n### Authentication\nIf the software is deployed as `Self-Hosted` then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls. \nIf the software is deployed in our `Managed Cloud`, there are 2 methods for authenticating with us, you only need to use one:\n\n 1. Custom authorization header named `X-CoinAPI-Key` with the API Key\n 2. Query string parameter named `apikey` with the API Key\n 3. <a href="#certificate">TLS Client Certificate</a> from the `Managed Cloud REST API` (/v1/certificate/pem endpoint) while establishing a TLS session with us.\n\n#### Custom authorization header\nYou can authorize by providing additional custom header named `X-CoinAPI-Key` and API key as its value.\nAssuming that your API key is `73034021-THIS-IS-SAMPLE-KEY`, then the authorization header you should send to us will look like: `X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY`\n<aside class="success">This method is recommended by us and you should use it in production environments.</aside>\n#### Query string authorization parameter\nYou can authorize by providing an additional parameter named `apikey` with a value equal to your API key in the query string of your HTTP request.\nAssuming that your API key is `73034021-THIS-IS-SAMPLE-KEY` and that you want to request all balances, then your query string should look like this: `GET /v1/balances?apikey=73034021-THIS-IS-SAMPLE-KEY`\n<aside class="notice">Query string method may be more practical for development activities.</aside>\n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASOrderHistory
 */
public class OASOrderHistory {
    /**
     * Apikey
     * @return apikey
     */
    public String apikey { get; set; }

    /**
     * Exchange id
     * @return exchangeId
     */
    public String exchangeId { get; set; }

    /**
     * Client order id
     * @return clientOrderId
     */
    public String clientOrderId { get; set; }

    /**
     * Symbol id exchange
     * @return symbolIdExchange
     */
    public String symbolIdExchange { get; set; }

    /**
     * Symbol id in coinapi
     * @return symbolIdCoinapi
     */
    public String symbolIdCoinapi { get; set; }

    /**
     * Amount
     * @return amountOrder
     */
    public Double amountOrder { get; set; }

    /**
     * Price
     * @return price
     */
    public Double price { get; set; }

    /**
     * 1-buy, 2-sell
     * @return side
     */
    public Double side { get; set; }

    /**
     * Order type
     * @return orderType
     */
    public String orderType { get; set; }

    /**
     * Time in force
     * @return timeInForce
     */
    public String timeInForce { get; set; }

    /**
     * Expire time
     * @return expireTime
     */
    public Date expireTime { get; set; }

    /**
     * Exec inst
     * @return execInst
     */
    public List<String> execInst { get; set; }

    /**
     * Client order id format
     * @return clientOrderIdFormatExchange
     */
    public String clientOrderIdFormatExchange { get; set; }

    /**
     * Exchange order id
     * @return exchangeOrderId
     */
    public String exchangeOrderId { get; set; }

    /**
     * Amount open
     * @return amountOpen
     */
    public Double amountOpen { get; set; }

    /**
     * Amount filled
     * @return amountFilled
     */
    public Double amountFilled { get; set; }

    /**
     * Average price
     * @return avgPx
     */
    public Double avgPx { get; set; }

    /**
     * Status
     * @return status
     */
    public String status { get; set; }

    /**
     * History status
     * @return statusHistoryStatus
     */
    public List<String> statusHistoryStatus { get; set; }

    /**
     * History status time
     * @return statusHistoryTime
     */
    public List<Date> statusHistoryTime { get; set; }

    /**
     * Error message
     * @return errorMessageResult
     */
    public String errorMessageResult { get; set; }

    /**
     * Error message reason
     * @return errorMessageReason
     */
    public String errorMessageReason { get; set; }

    /**
     * Error message
     * @return errorMessageMessage
     */
    public String errorMessageMessage { get; set; }

    /**
     * Fills time
     * @return fillsTime
     */
    public List<Date> fillsTime { get; set; }

    /**
     * Fills price
     * @return fillsPrice
     */
    public List<Double> fillsPrice { get; set; }

    /**
     * Fills amount
     * @return fillsAmount
     */
    public List<Double> fillsAmount { get; set; }

    /**
     * Created time
     * @return createdTime
     */
    public Date createdTime { get; set; }

    public OASOrderHistory() {
        execInst = new List<String>();
        statusHistoryStatus = new List<String>();
        statusHistoryTime = new List<Date>();
        fillsTime = new List<Date>();
        fillsPrice = new List<Double>();
        fillsAmount = new List<Double>();
    }

    public static OASOrderHistory getExample() {
        OASOrderHistory orderHistory = new OASOrderHistory();
          orderHistory.apikey = '9a55567a-b5ff-4b78-b6aa-xxxx';
          orderHistory.exchangeId = 'BINANCE';
          orderHistory.clientOrderId = '6ab36bc1-344d-432e-ac6d-0bf44ee64c2b';
          orderHistory.symbolIdExchange = 'BTCUSDT';
          orderHistory.symbolIdCoinapi = 'BINANCE_SPOT_BTC_USDT';
          orderHistory.amountOrder = 0.00034;
          orderHistory.price = 31939.47;
          orderHistory.side = 2;
          orderHistory.orderType = 'LIMIT';
          orderHistory.timeInForce = 'GOOD_TILL_CANCEL';
          orderHistory.expireTime = Date.getExample();
          orderHistory.execInst = new List<String>{'["MAKER_OR_CANCEL"]'};
          orderHistory.clientOrderIdFormatExchange = '6ab36bc1-344d-432e-ac6d-0bf44ee64c2b';
          orderHistory.exchangeOrderId = '6ab36bc1-344d-432e-ac6d-0bf44ee64c2b';
          orderHistory.amountOpen = 0.00034;
          orderHistory.amountFilled = 0;
          orderHistory.avgPx = 0;
          orderHistory.status = 'REJECTED';
          orderHistory.statusHistoryStatus = new List<String>{'["RECEIVED","ROUTING","REJECTED"]'};
          orderHistory.statusHistoryTime = new List<Date>{Date.getExample()};
          orderHistory.errorMessageResult = '';
          orderHistory.errorMessageReason = '';
          orderHistory.errorMessageMessage = '-2015 Invalid API-key, IP, or permissions for action. https://api.binance.com/api/v3/order?newOrderRespType';
          orderHistory.fillsTime = new List<Date>{Date.getExample()};
          orderHistory.fillsPrice = new List<Double>{1.3579};
          orderHistory.fillsAmount = new List<Double>{1.3579};
          orderHistory.createdTime = Date.getExample();
        return orderHistory;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrderHistory) {           
            OASOrderHistory orderHistory = (OASOrderHistory) obj;
            return this.apikey == orderHistory.apikey
                && this.exchangeId == orderHistory.exchangeId
                && this.clientOrderId == orderHistory.clientOrderId
                && this.symbolIdExchange == orderHistory.symbolIdExchange
                && this.symbolIdCoinapi == orderHistory.symbolIdCoinapi
                && this.amountOrder == orderHistory.amountOrder
                && this.price == orderHistory.price
                && this.side == orderHistory.side
                && this.orderType == orderHistory.orderType
                && this.timeInForce == orderHistory.timeInForce
                && this.expireTime == orderHistory.expireTime
                && this.execInst == orderHistory.execInst
                && this.clientOrderIdFormatExchange == orderHistory.clientOrderIdFormatExchange
                && this.exchangeOrderId == orderHistory.exchangeOrderId
                && this.amountOpen == orderHistory.amountOpen
                && this.amountFilled == orderHistory.amountFilled
                && this.avgPx == orderHistory.avgPx
                && this.status == orderHistory.status
                && this.statusHistoryStatus == orderHistory.statusHistoryStatus
                && this.statusHistoryTime == orderHistory.statusHistoryTime
                && this.errorMessageResult == orderHistory.errorMessageResult
                && this.errorMessageReason == orderHistory.errorMessageReason
                && this.errorMessageMessage == orderHistory.errorMessageMessage
                && this.fillsTime == orderHistory.fillsTime
                && this.fillsPrice == orderHistory.fillsPrice
                && this.fillsAmount == orderHistory.fillsAmount
                && this.createdTime == orderHistory.createdTime;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (apikey == null ? 0 : System.hashCode(apikey));
        hashCode = (17 * hashCode) + (exchangeId == null ? 0 : System.hashCode(exchangeId));
        hashCode = (17 * hashCode) + (clientOrderId == null ? 0 : System.hashCode(clientOrderId));
        hashCode = (17 * hashCode) + (symbolIdExchange == null ? 0 : System.hashCode(symbolIdExchange));
        hashCode = (17 * hashCode) + (symbolIdCoinapi == null ? 0 : System.hashCode(symbolIdCoinapi));
        hashCode = (17 * hashCode) + (amountOrder == null ? 0 : System.hashCode(amountOrder));
        hashCode = (17 * hashCode) + (price == null ? 0 : System.hashCode(price));
        hashCode = (17 * hashCode) + (side == null ? 0 : System.hashCode(side));
        hashCode = (17 * hashCode) + (orderType == null ? 0 : System.hashCode(orderType));
        hashCode = (17 * hashCode) + (timeInForce == null ? 0 : System.hashCode(timeInForce));
        hashCode = (17 * hashCode) + (expireTime == null ? 0 : System.hashCode(expireTime));
        hashCode = (17 * hashCode) + (execInst == null ? 0 : System.hashCode(execInst));
        hashCode = (17 * hashCode) + (clientOrderIdFormatExchange == null ? 0 : System.hashCode(clientOrderIdFormatExchange));
        hashCode = (17 * hashCode) + (exchangeOrderId == null ? 0 : System.hashCode(exchangeOrderId));
        hashCode = (17 * hashCode) + (amountOpen == null ? 0 : System.hashCode(amountOpen));
        hashCode = (17 * hashCode) + (amountFilled == null ? 0 : System.hashCode(amountFilled));
        hashCode = (17 * hashCode) + (avgPx == null ? 0 : System.hashCode(avgPx));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (statusHistoryStatus == null ? 0 : System.hashCode(statusHistoryStatus));
        hashCode = (17 * hashCode) + (statusHistoryTime == null ? 0 : System.hashCode(statusHistoryTime));
        hashCode = (17 * hashCode) + (errorMessageResult == null ? 0 : System.hashCode(errorMessageResult));
        hashCode = (17 * hashCode) + (errorMessageReason == null ? 0 : System.hashCode(errorMessageReason));
        hashCode = (17 * hashCode) + (errorMessageMessage == null ? 0 : System.hashCode(errorMessageMessage));
        hashCode = (17 * hashCode) + (fillsTime == null ? 0 : System.hashCode(fillsTime));
        hashCode = (17 * hashCode) + (fillsPrice == null ? 0 : System.hashCode(fillsPrice));
        hashCode = (17 * hashCode) + (fillsAmount == null ? 0 : System.hashCode(fillsAmount));
        hashCode = (17 * hashCode) + (createdTime == null ? 0 : System.hashCode(createdTime));
        return hashCode;
    }
}

