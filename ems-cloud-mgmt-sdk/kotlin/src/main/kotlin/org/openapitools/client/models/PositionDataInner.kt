/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.OrdSide

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The Position object.
 *
 * @param symbolIdExchange Exchange symbol.
 * @param symbolIdCoinapi CoinAPI symbol.
 * @param avgEntryPrice Calculated average price of all fills on this position.
 * @param quantity The current position quantity.
 * @param side 
 * @param unrealizedPnl Unrealised profit or loss (PNL) of this position.
 * @param leverage Leverage for this position reported by the exchange.
 * @param crossMargin Is cross margin mode enable for this position?
 * @param liquidationPrice Liquidation price. If mark price will reach this value, the position will be liquidated.
 * @param rawData 
 */


data class PositionDataInner (

    /* Exchange symbol. */
    @Json(name = "symbol_id_exchange")
    val symbolIdExchange: kotlin.String? = null,

    /* CoinAPI symbol. */
    @Json(name = "symbol_id_coinapi")
    val symbolIdCoinapi: kotlin.String? = null,

    /* Calculated average price of all fills on this position. */
    @Json(name = "avg_entry_price")
    val avgEntryPrice: java.math.BigDecimal? = null,

    /* The current position quantity. */
    @Json(name = "quantity")
    val quantity: java.math.BigDecimal? = null,

    @Json(name = "side")
    val side: OrdSide? = null,

    /* Unrealised profit or loss (PNL) of this position. */
    @Json(name = "unrealized_pnl")
    val unrealizedPnl: java.math.BigDecimal? = null,

    /* Leverage for this position reported by the exchange. */
    @Json(name = "leverage")
    val leverage: java.math.BigDecimal? = null,

    /* Is cross margin mode enable for this position? */
    @Json(name = "cross_margin")
    val crossMargin: kotlin.Boolean? = null,

    /* Liquidation price. If mark price will reach this value, the position will be liquidated. */
    @Json(name = "liquidation_price")
    val liquidationPrice: java.math.BigDecimal? = null,

    @Json(name = "raw_data")
    val rawData: kotlin.Any? = null

)

