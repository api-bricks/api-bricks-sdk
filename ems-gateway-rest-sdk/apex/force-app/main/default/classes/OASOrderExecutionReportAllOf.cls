/*
 * EMS - REST API
 * This section will provide necessary information about the `CoinAPI EMS REST API` protocol.\nThis API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>      \n\nImplemented Standards:\n\n  * [HTTP1.0](https://datatracker.ietf.org/doc/html/rfc1945)\n  * [HTTP1.1](https://datatracker.ietf.org/doc/html/rfc2616)\n  * [HTTP2.0](https://datatracker.ietf.org/doc/html/rfc7540)\n   \n### Endpoints\n\n<table>\n  <thead>\n    <tr>\n      <th>Deployment method</th>\n      <th>Environment</th>\n      <th>Url</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Managed Cloud</td>\n      <td>Production</td>\n      <td>Use <a href="#ems-docs-sh">Managed Cloud REST API /v1/locations</a> to get specific endpoints to each server site where your deployments span</td>\n    </tr>\n    <tr>\n      <td>Managed Cloud</td>\n      <td>Sandbox</td>\n      <td><code>https://ems-gateway-aws-eu-central-1-dev.coinapi.io/</code></td>\n    </tr>\n    <tr>\n      <td>Self Hosted</td>\n      <td>Production</td>\n      <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>\n    </tr>\n    <tr>\n      <td>Self Hosted</td>\n      <td>Sandbox</td>\n      <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>\n    </tr>\n  </tbody>\n</table>\n\n### Authentication\nIf the software is deployed as `Self-Hosted` then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls. \nIf the software is deployed in our `Managed Cloud`, there are 2 methods for authenticating with us, you only need to use one:\n\n 1. Custom authorization header named `X-CoinAPI-Key` with the API Key\n 2. Query string parameter named `apikey` with the API Key\n 3. <a href="#certificate">TLS Client Certificate</a> from the `Managed Cloud REST API` (/v1/certificate/pem endpoint) while establishing a TLS session with us.\n\n#### Custom authorization header\nYou can authorize by providing additional custom header named `X-CoinAPI-Key` and API key as its value.\nAssuming that your API key is `73034021-THIS-IS-SAMPLE-KEY`, then the authorization header you should send to us will look like: `X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY`\n<aside class="success">This method is recommended by us and you should use it in production environments.</aside>\n#### Query string authorization parameter\nYou can authorize by providing an additional parameter named `apikey` with a value equal to your API key in the query string of your HTTP request.\nAssuming that your API key is `73034021-THIS-IS-SAMPLE-KEY` and that you want to request all balances, then your query string should look like this: `GET /v1/balances?apikey=73034021-THIS-IS-SAMPLE-KEY`\n<aside class="notice">Query string method may be more practical for development activities.</aside>\n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * The order execution report message.
 */
public class OASOrderExecutionReportAllOf implements OAS.MappedProperties {
    /**
     * The unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.
     * @return clientOrderIdFormatExchange
     */
    public String clientOrderIdFormatExchange { get; set; }

    /**
     * Unique identifier of the order assigned by the exchange or executing system.
     * @return exchangeOrderId
     */
    public String exchangeOrderId { get; set; }

    /**
     * Quantity open for further execution. `amount_open` = `amount_order` - `amount_filled`
     * @return amountOpen
     */
    public Double amountOpen { get; set; }

    /**
     * Total quantity filled.
     * @return amountFilled
     */
    public Double amountFilled { get; set; }

    /**
     * Calculated average price of all fills on this order.
     * @return avgPx
     */
    public Double avgPx { get; set; }

    /**
     * Get status
     * @return status
     */
    public OASOrdStatus status { get; set; }

    /**
     * Timestamped history of order status changes.
     * @return statusHistory
     */
    public List<List<String>> statusHistory { get; set; }

    /**
     * Error message.
     * @return errorMessage
     */
    public String errorMessage { get; set; }

    /**
     * Relay fill information on working orders.
     * @return fills
     */
    public List<OASFills> fills { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'client_order_id_format_exchange' => 'clientOrderIdFormatExchange',
        'exchange_order_id' => 'exchangeOrderId',
        'amount_open' => 'amountOpen',
        'amount_filled' => 'amountFilled',
        'avg_px' => 'avgPx',
        'status_history' => 'statusHistory',
        'error_message' => 'errorMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASOrderExecutionReportAllOf() {
        statusHistory = new List<List<String>>();
        fills = new List<OASFills>();
    }

    public static OASOrderExecutionReportAllOf getExample() {
        OASOrderExecutionReportAllOf orderExecutionReportAllOf = new OASOrderExecutionReportAllOf();
          orderExecutionReportAllOf.clientOrderIdFormatExchange = 'f81211e2-27c4-b86a-8143-01088ba9222c';
          orderExecutionReportAllOf.exchangeOrderId = '3456456754';
          orderExecutionReportAllOf.amountOpen = 0.22;
          orderExecutionReportAllOf.amountFilled = 0.0;
          orderExecutionReportAllOf.avgPx = 0.0783;
          orderExecutionReportAllOf.status = OASOrdStatus.getExample();
          orderExecutionReportAllOf.statusHistory = new List<List<String>>{new List<String>{'[["RECEIVED","2020-05-27T11:16:20.1677709Z"],["REJECTED","2020-05-27T11:16:20.1677710Z"]]'}};
          orderExecutionReportAllOf.errorMessage = '{"result":"error","reason":"InsufficientFunds","message":"Failed to place buy order on symbol \'BTCUSD\' for price $7,000.00 and quantity 0.22 BTC due to insufficient funds"}';
          orderExecutionReportAllOf.fills = new List<OASFills>{OASFills.getExample()};
        return orderExecutionReportAllOf;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrderExecutionReportAllOf) {           
            OASOrderExecutionReportAllOf orderExecutionReportAllOf = (OASOrderExecutionReportAllOf) obj;
            return this.clientOrderIdFormatExchange == orderExecutionReportAllOf.clientOrderIdFormatExchange
                && this.exchangeOrderId == orderExecutionReportAllOf.exchangeOrderId
                && this.amountOpen == orderExecutionReportAllOf.amountOpen
                && this.amountFilled == orderExecutionReportAllOf.amountFilled
                && this.avgPx == orderExecutionReportAllOf.avgPx
                && this.status == orderExecutionReportAllOf.status
                && this.statusHistory == orderExecutionReportAllOf.statusHistory
                && this.errorMessage == orderExecutionReportAllOf.errorMessage
                && this.fills == orderExecutionReportAllOf.fills;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (clientOrderIdFormatExchange == null ? 0 : System.hashCode(clientOrderIdFormatExchange));
        hashCode = (17 * hashCode) + (exchangeOrderId == null ? 0 : System.hashCode(exchangeOrderId));
        hashCode = (17 * hashCode) + (amountOpen == null ? 0 : System.hashCode(amountOpen));
        hashCode = (17 * hashCode) + (amountFilled == null ? 0 : System.hashCode(amountFilled));
        hashCode = (17 * hashCode) + (avgPx == null ? 0 : System.hashCode(avgPx));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (statusHistory == null ? 0 : System.hashCode(statusHistory));
        hashCode = (17 * hashCode) + (errorMessage == null ? 0 : System.hashCode(errorMessage));
        hashCode = (17 * hashCode) + (fills == null ? 0 : System.hashCode(fills));
        return hashCode;
    }
}

