/**
 * EMS - REST API
 * This section will provide necessary information about the `CoinAPI EMS REST API` protocol. <br/> This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       <br/><br/> Implemented Standards:    * [HTTP1.0](https://datatracker.ietf.org/doc/html/rfc1945)   * [HTTP1.1](https://datatracker.ietf.org/doc/html/rfc2616)   * [HTTP2.0](https://datatracker.ietf.org/doc/html/rfc7540)     ### Endpoints <table>   <thead>     <tr>       <th>Deployment method</th>       <th>Environment</th>       <th>Url</th>     </tr>   </thead>   <tbody>     <tr>       <td>Managed Cloud</td>       <td>Production</td>       <td>Use <a href=\"#ems-docs-sh\">Managed Cloud REST API /v1/locations</a> to get specific endpoints to each server site where your deployments span</td>     </tr>     <tr>       <td>Managed Cloud</td>       <td>Sandbox</td>       <td><code>https://ems-gateway-aws-eu-central-1-dev.coinapi.io/</code></td>     </tr>     <tr>       <td>Self Hosted</td>       <td>Production</td>       <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>     </tr>     <tr>       <td>Self Hosted</td>       <td>Sandbox</td>       <td>IP Address of the <code>ems-gateway</code> container/excecutable in the closest server site to the caller location</td>     </tr>   </tbody> </table>  ### Authentication If the software is deployed as `Self-Hosted` then API do not require authentication as inside your infrastructure, your company is responsible for the security and access controls.  <br/><br/> If the software is deployed in our `Managed Cloud`, there are 2 methods for authenticating with us, you only need to use one:   1. Custom authorization header named `X-CoinAPI-Key` with the API Key  2. Query string parameter named `apikey` with the API Key  3. <a href=\"#certificate\">TLS Client Certificate</a> from the `Managed Cloud REST API` (/v1/certificate/pem endpoint) while establishing a TLS session with us.  #### Custom authorization header You can authorize by providing additional custom header named `X-CoinAPI-Key` and API key as its value. Assuming that your API key is `73034021-THIS-IS-SAMPLE-KEY`, then the authorization header you should send to us will look like: <br/><br/> `X-CoinAPI-Key: 73034021-THIS-IS-SAMPLE-KEY` <aside class=\"success\">This method is recommended by us and you should use it in production environments.</aside> #### Query string authorization parameter You can authorize by providing an additional parameter named `apikey` with a value equal to your API key in the query string of your HTTP request. Assuming that your API key is `73034021-THIS-IS-SAMPLE-KEY` and that you want to request all balances, then your query string should look like this:  <br/><br/> `GET /v1/balances?apikey=73034021-THIS-IS-SAMPLE-KEY` <aside class=\"notice\">Query string method may be more practical for development activities.</aside> 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class BalanceDataInner {
    /**
    * Exchange currency code.
    */
    'assetIdExchange'?: string;
    /**
    * CoinAPI currency code.
    */
    'assetIdCoinapi'?: string;
    /**
    * Value of the current total currency balance on the exchange.
    */
    'balance'?: number;
    /**
    * Value of the current available currency balance on the exchange that can be used as collateral.
    */
    'available'?: number;
    /**
    * Value of the current locked currency balance by the exchange.
    */
    'locked'?: number;
    /**
    * Source of the last modification. 
    */
    'lastUpdatedBy'?: BalanceDataInner.LastUpdatedByEnum;
    /**
    * Current exchange rate to the USD for the single unit of the currency. 
    */
    'rateUsd'?: number;
    /**
    * Value of the current total traded.
    */
    'traded'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "assetIdExchange",
            "baseName": "asset_id_exchange",
            "type": "string"
        },
        {
            "name": "assetIdCoinapi",
            "baseName": "asset_id_coinapi",
            "type": "string"
        },
        {
            "name": "balance",
            "baseName": "balance",
            "type": "number"
        },
        {
            "name": "available",
            "baseName": "available",
            "type": "number"
        },
        {
            "name": "locked",
            "baseName": "locked",
            "type": "number"
        },
        {
            "name": "lastUpdatedBy",
            "baseName": "last_updated_by",
            "type": "BalanceDataInner.LastUpdatedByEnum"
        },
        {
            "name": "rateUsd",
            "baseName": "rate_usd",
            "type": "number"
        },
        {
            "name": "traded",
            "baseName": "traded",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return BalanceDataInner.attributeTypeMap;
    }
}

export namespace BalanceDataInner {
    export enum LastUpdatedByEnum {
        Initialization = <any> 'INITIALIZATION',
        BalanceManager = <any> 'BALANCE_MANAGER',
        Exchange = <any> 'EXCHANGE'
    }
}
