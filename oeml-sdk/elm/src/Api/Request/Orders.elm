{-
   OEML - REST API
   This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Orders exposing
    ( v1OrdersCancelAllPost
    , v1OrdersCancelPost
    , v1OrdersGet
    , v1OrdersPost
    , v1OrdersStatusClientOrderIdGet
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode



{-| This request cancels all open orders on single specified exchange.
-}
v1OrdersCancelAllPost : Api.Data.OrderCancelAllRequest -> Api.Request Api.Data.MessageReject
v1OrdersCancelAllPost orderCancelAllRequest_body =
    Api.request
        "POST"
        "/v1/orders/cancel/all"
        []
        []
        []
        (Just (Api.Data.encodeOrderCancelAllRequest orderCancelAllRequest_body))
        Api.Data.messageRejectDecoder



{-| Request cancel for an existing order. The order can be canceled using the `client_order_id` or `exchange_order_id`.
-}
v1OrdersCancelPost : Api.Data.OrderCancelSingleRequest -> Api.Request Api.Data.OrderExecutionReport
v1OrdersCancelPost orderCancelSingleRequest_body =
    Api.request
        "POST"
        "/v1/orders/cancel"
        []
        []
        []
        (Just (Api.Data.encodeOrderCancelSingleRequest orderCancelSingleRequest_body))
        Api.Data.orderExecutionReportDecoder



{-| Get last execution reports for open orders across all or single exchange.
-}
v1OrdersGet : Maybe String -> Api.Request (List Api.Data.OrderExecutionReport)
v1OrdersGet exchangeId_query =
    Api.request
        "GET"
        "/v1/orders"
        []
        [ ( "exchange_id", Maybe.map identity exchangeId_query ) ]
        []
        Nothing
        (Json.Decode.list Api.Data.orderExecutionReportDecoder)



{-| This request creating new order for the specific exchange.
-}
v1OrdersPost : Api.Data.OrderNewSingleRequest -> Api.Request Api.Data.OrderExecutionReport
v1OrdersPost orderNewSingleRequest_body =
    Api.request
        "POST"
        "/v1/orders"
        []
        []
        []
        (Just (Api.Data.encodeOrderNewSingleRequest orderNewSingleRequest_body))
        Api.Data.orderExecutionReportDecoder



{-| Get the last order execution report for the specified order. The requested order does not need to be active or opened.
-}
v1OrdersStatusClientOrderIdGet : String -> Api.Request Api.Data.OrderExecutionReport
v1OrdersStatusClientOrderIdGet clientOrderId_path =
    Api.request
        "GET"
        "/v1/orders/status/{client_order_id}"
        [ ( "clientOrderId", identity clientOrderId_path ) ]
        []
        []
        Nothing
        Api.Data.orderExecutionReportDecoder
