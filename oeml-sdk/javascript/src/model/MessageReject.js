/**
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RejectReason from './RejectReason';

/**
 * The MessageReject model module.
 * @module model/MessageReject
 * @version v1
 */
class MessageReject {
    /**
     * Constructs a new <code>MessageReject</code>.
     * @alias module:model/MessageReject
     */
    constructor() { 
        
        MessageReject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageReject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageReject} obj Optional instance to populate.
     * @return {module:model/MessageReject} The populated <code>MessageReject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageReject();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('reject_reason')) {
                obj['reject_reason'] = RejectReason.constructFromObject(data['reject_reason']);
            }
            if (data.hasOwnProperty('exchange_id')) {
                obj['exchange_id'] = ApiClient.convertToType(data['exchange_id'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('rejected_message')) {
                obj['rejected_message'] = ApiClient.convertToType(data['rejected_message'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Message type, constant.
 * @member {String} type
 */
MessageReject.prototype['type'] = undefined;

/**
 * @member {module:model/RejectReason} reject_reason
 */
MessageReject.prototype['reject_reason'] = undefined;

/**
 * If the message related to exchange, then the identifier of the exchange will be provided.
 * @member {String} exchange_id
 */
MessageReject.prototype['exchange_id'] = undefined;

/**
 * Message text.
 * @member {String} message
 */
MessageReject.prototype['message'] = undefined;

/**
 * Value of rejected request, if available.
 * @member {String} rejected_message
 */
MessageReject.prototype['rejected_message'] = undefined;






export default MessageReject;

