/**
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OemlRestApi);
  }
}(this, function(expect, OemlRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OemlRestApi.PositionData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PositionData', function() {
    it('should create an instance of PositionData', function() {
      // uncomment below and update the code to test PositionData
      //var instane = new OemlRestApi.PositionData();
      //expect(instance).to.be.a(OemlRestApi.PositionData);
    });

    it('should have the property symbolIdExchange (base name: "symbol_id_exchange")', function() {
      // uncomment below and update the code to test the property symbolIdExchange
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property symbolIdCoinapi (base name: "symbol_id_coinapi")', function() {
      // uncomment below and update the code to test the property symbolIdCoinapi
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property avgEntryPrice (base name: "avg_entry_price")', function() {
      // uncomment below and update the code to test the property avgEntryPrice
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property side (base name: "side")', function() {
      // uncomment below and update the code to test the property side
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property unrealizedPnl (base name: "unrealized_pnl")', function() {
      // uncomment below and update the code to test the property unrealizedPnl
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property leverage (base name: "leverage")', function() {
      // uncomment below and update the code to test the property leverage
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property crossMargin (base name: "cross_margin")', function() {
      // uncomment below and update the code to test the property crossMargin
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property liquidationPrice (base name: "liquidation_price")', function() {
      // uncomment below and update the code to test the property liquidationPrice
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

    it('should have the property rawData (base name: "raw_data")', function() {
      // uncomment below and update the code to test the property rawData
      //var instance = new OemlRestApi.PositionData();
      //expect(instance).to.be();
    });

  });

}));
