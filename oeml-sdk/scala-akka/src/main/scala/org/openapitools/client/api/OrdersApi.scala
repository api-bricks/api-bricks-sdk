/**
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.MessageReject
import org.openapitools.client.model.OrderCancelAllRequest
import org.openapitools.client.model.OrderCancelSingleRequest
import org.openapitools.client.model.OrderExecutionReport
import org.openapitools.client.model.OrderNewSingleRequest
import org.openapitools.client.model.ValidationError
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object OrdersApi {

  def apply(baseUrl: String = "https://13d16e9d-d8b1-4ef4-bc4a-ed8156b2b159.mock.pstmn.io") = new OrdersApi(baseUrl)
}

class OrdersApi(baseUrl: String) {
  
  /**
   * This request cancels all open orders on single specified exchange.
   * 
   * Expected answers:
   *   code 200 : MessageReject (Result)
   *   code 400 : ValidationError (Input model validation errors.)
   *   code 490 : MessageReject (Exchange is unreachable.)
   * 
   * @param orderCancelAllRequest OrderCancelAllRequest object.
   */
  def v1OrdersCancelAllPost(orderCancelAllRequest: OrderCancelAllRequest): ApiRequest[MessageReject] =
    ApiRequest[MessageReject](ApiMethods.POST, baseUrl, "/v1/orders/cancel/all", "application/json")
      .withBody(orderCancelAllRequest)
      .withSuccessResponse[MessageReject](200)
      .withErrorResponse[ValidationError](400)
      .withErrorResponse[MessageReject](490)
      

  /**
   * Request cancel for an existing order. The order can be canceled using the `client_order_id` or `exchange_order_id`.
   * 
   * Expected answers:
   *   code 200 : OrderExecutionReport (The last execution report for the order for which cancelation was requested.)
   *   code 400 : ValidationError (Input model validation errors.)
   *   code 490 : MessageReject (Exchange is unreachable.)
   * 
   * @param orderCancelSingleRequest OrderCancelSingleRequest object.
   */
  def v1OrdersCancelPost(orderCancelSingleRequest: OrderCancelSingleRequest): ApiRequest[OrderExecutionReport] =
    ApiRequest[OrderExecutionReport](ApiMethods.POST, baseUrl, "/v1/orders/cancel", "application/json")
      .withBody(orderCancelSingleRequest)
      .withSuccessResponse[OrderExecutionReport](200)
      .withErrorResponse[ValidationError](400)
      .withErrorResponse[MessageReject](490)
      

  /**
   * Get last execution reports for open orders across all or single exchange.
   * 
   * Expected answers:
   *   code 200 : Seq[OrderExecutionReport] (Collection of order execution reports.)
   *   code 490 : MessageReject (Filtered exchange is unreachable.)
   * 
   * @param exchangeId Filter the open orders to the specific exchange.
   */
  def v1OrdersGet(exchangeId: Option[String] = None): ApiRequest[Seq[OrderExecutionReport]] =
    ApiRequest[Seq[OrderExecutionReport]](ApiMethods.GET, baseUrl, "/v1/orders", "application/json")
      .withQueryParam("exchange_id", exchangeId)
      .withSuccessResponse[Seq[OrderExecutionReport]](200)
      .withErrorResponse[MessageReject](490)
      

  /**
   * This request creating new order for the specific exchange.
   * 
   * Expected answers:
   *   code 200 : OrderExecutionReport (Created)
   *   code 400 : ValidationError (Input model validation errors.)
   *   code 490 : MessageReject (Exchange is unreachable.)
   *   code 504 : MessageReject (Exchange didn't responded in the defined timeout.)
   * 
   * @param orderNewSingleRequest OrderNewSingleRequest object.
   */
  def v1OrdersPost(orderNewSingleRequest: OrderNewSingleRequest): ApiRequest[OrderExecutionReport] =
    ApiRequest[OrderExecutionReport](ApiMethods.POST, baseUrl, "/v1/orders", "application/json")
      .withBody(orderNewSingleRequest)
      .withSuccessResponse[OrderExecutionReport](200)
      .withErrorResponse[ValidationError](400)
      .withErrorResponse[MessageReject](490)
      .withErrorResponse[MessageReject](504)
      

  /**
   * Get the last order execution report for the specified order. The requested order does not need to be active or opened.
   * 
   * Expected answers:
   *   code 200 : OrderExecutionReport (The last execution report of the requested order.)
   *   code 404 : MessageReject (The requested order was not found.)
   * 
   * @param clientOrderId The unique identifier of the order assigned by the client.
   */
  def v1OrdersStatusClientOrderIdGet(clientOrderId: String): ApiRequest[OrderExecutionReport] =
    ApiRequest[OrderExecutionReport](ApiMethods.GET, baseUrl, "/v1/orders/status/{client_order_id}", "application/json")
      .withPathParam("client_order_id", clientOrderId)
      .withSuccessResponse[OrderExecutionReport](200)
      .withErrorResponse[MessageReject](404)
      



}

