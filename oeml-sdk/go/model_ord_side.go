/*
 * OEML - REST API
 *
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * API version: v1
 * Contact: support@coinapi.io
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrdSide Side of order. 
type OrdSide string

// List of OrdSide
const (
	BUY OrdSide = "BUY"
	SELL OrdSide = "SELL"
)

func (v *OrdSide) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrdSide(value)
	for _, existing := range []OrdSide{ "BUY", "SELL",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrdSide", value)
}

// Ptr returns reference to OrdSide value
func (v OrdSide) Ptr() *OrdSide {
	return &v
}

type NullableOrdSide struct {
	value *OrdSide
	isSet bool
}

func (v NullableOrdSide) Get() *OrdSide {
	return v.value
}

func (v *NullableOrdSide) Set(val *OrdSide) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdSide) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdSide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdSide(val *OrdSide) *NullableOrdSide {
	return &NullableOrdSide{value: val, isSet: true}
}

func (v NullableOrdSide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdSide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

