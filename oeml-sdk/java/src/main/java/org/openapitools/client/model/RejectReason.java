/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Cause of rejection.
 */
@JsonAdapter(RejectReason.Adapter.class)
public enum RejectReason {
  
  OTHER("OTHER"),
  
  EXCHANGE_UNREACHABLE("EXCHANGE_UNREACHABLE"),
  
  EXCHANGE_RESPONSE_TIMEOUT("EXCHANGE_RESPONSE_TIMEOUT"),
  
  ORDER_ID_NOT_FOUND("ORDER_ID_NOT_FOUND"),
  
  INVALID_TYPE("INVALID_TYPE"),
  
  METHOD_NOT_SUPPORTED("METHOD_NOT_SUPPORTED"),
  
  JSON_ERROR("JSON_ERROR");

  private String value;

  RejectReason(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RejectReason fromValue(String value) {
    for (RejectReason b : RejectReason.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<RejectReason> {
    @Override
    public void write(final JsonWriter jsonWriter, final RejectReason enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public RejectReason read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return RejectReason.fromValue(value);
    }
  }
}

