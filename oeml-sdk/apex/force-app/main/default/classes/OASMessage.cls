/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol.\nThis API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>      \n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASMessage
 */
public class OASMessage implements OAS.MappedProperties {
    /**
     * Type of message.
     * @return type
     */
    public String type { get; set; }

    /**
     * Get severity
     * @return severity
     */
    public OASSeverity severity { get; set; }

    /**
     * If the message related to exchange, then the identifier of the exchange will be provided.
     * @return exchangeId
     */
    public String exchangeId { get; set; }

    /**
     * Message text.
     * @return message
     */
    public String message { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'exchange_id' => 'exchangeId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMessage getExample() {
        OASMessage message = new OASMessage();
          message.type = 'message';
          message.severity = OASSeverity.getExample();
          message.exchangeId = 'KRAKEN';
          message.message = 'Ok';
        return message;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMessage) {           
            OASMessage message = (OASMessage) obj;
            return this.type == message.type
                && this.severity == message.severity
                && this.exchangeId == message.exchangeId
                && this.message == message.message;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (severity == null ? 0 : System.hashCode(severity));
        hashCode = (17 * hashCode) + (exchangeId == null ? 0 : System.hashCode(exchangeId));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        return hashCode;
    }
}

