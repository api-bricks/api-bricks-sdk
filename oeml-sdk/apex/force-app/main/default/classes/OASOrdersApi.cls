/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol.\nThis API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>      \n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASOrdersApi {
    OASClient client;

    public OASOrdersApi(OASClient client) {
        this.client = client;
    }

    public OASOrdersApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Cancel all orders request
     * This request cancels all open orders on single specified exchange.
     * @param oaSOrderCancelAllRequest OrderCancelAllRequest object. (required)
     * @return OASMessageReject
     * @throws OAS.ApiException if fails to make API call
     */
    public OASMessageReject v1OrdersCancelAllPost(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSOrderCancelAllRequest'), 'oaSOrderCancelAllRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASMessageReject) client.invoke(
            'POST', '/v1/orders/cancel/all',
            (OASOrderCancelAllRequest) params.get('oaSOrderCancelAllRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'appliction/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASMessageReject.class
        );
    }
    /**
     * Cancel order request
     * Request cancel for an existing order. The order can be canceled using the &#x60;client_order_id&#x60; or &#x60;exchange_order_id&#x60;.
     * @param oaSOrderCancelSingleRequest OrderCancelSingleRequest object. (required)
     * @return OASOrderExecutionReport
     * @throws OAS.ApiException if fails to make API call
     */
    public OASOrderExecutionReport v1OrdersCancelPost(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSOrderCancelSingleRequest'), 'oaSOrderCancelSingleRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASOrderExecutionReport) client.invoke(
            'POST', '/v1/orders/cancel',
            (OASOrderCancelSingleRequest) params.get('oaSOrderCancelSingleRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'appliction/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASOrderExecutionReport.class
        );
    }
    /**
     * Get open orders
     * Get last execution reports for open orders across all or single exchange.
     * @param exchangeId Filter the open orders to the specific exchange. (optional)
     * @return List<OASOrderExecutionReport>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASOrderExecutionReport> v1OrdersGet(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('exchange_id', (String) params.get('exchangeId')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASOrderExecutionReport>) client.invoke(
            'GET', '/v1/orders', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'appliction/json' },
            new List<String>(),
            new List<String>(),
            List<OASOrderExecutionReport>.class
        );
    }
    /**
     * Send new order
     * This request creating new order for the specific exchange.
     * @param oaSOrderNewSingleRequest OrderNewSingleRequest object. (required)
     * @return OASOrderExecutionReport
     * @throws OAS.ApiException if fails to make API call
     */
    public OASOrderExecutionReport v1OrdersPost(Map<String, Object> params) {
        client.assertNotNull(params.get('oaSOrderNewSingleRequest'), 'oaSOrderNewSingleRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASOrderExecutionReport) client.invoke(
            'POST', '/v1/orders',
            (OASOrderNewSingleRequest) params.get('oaSOrderNewSingleRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json', 'appliction/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASOrderExecutionReport.class
        );
    }
    /**
     * Get order execution report
     * Get the last order execution report for the specified order. The requested order does not need to be active or opened.
     * @param clientOrderId The unique identifier of the order assigned by the client. (required)
     * @return OASOrderExecutionReport
     * @throws OAS.ApiException if fails to make API call
     */
    public OASOrderExecutionReport v1OrdersStatusClientOrderIdGet(Map<String, Object> params) {
        client.assertNotNull(params.get('clientOrderId'), 'clientOrderId');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASOrderExecutionReport) client.invoke(
            'GET', '/v1/orders/status/{client_order_id}', '',
            query, form,
            new Map<String, Object>{
                'client_order_id' => (String) params.get('clientOrderId')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String>(),
            OASOrderExecutionReport.class
        );
    }
}
