/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol.\nThis API is also available in the Postman application: <a href="https://postman.coinapi.io/" target="_blank">https://postman.coinapi.io/</a>      \n
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASMessageReject
 */
public class OASMessageReject implements OAS.MappedProperties {
    /**
     * Message type, constant.
     * @return type
     */
    public String type { get; set; }

    /**
     * Get rejectReason
     * @return rejectReason
     */
    public OASRejectReason rejectReason { get; set; }

    /**
     * If the message related to exchange, then the identifier of the exchange will be provided.
     * @return exchangeId
     */
    public String exchangeId { get; set; }

    /**
     * Message text.
     * @return message
     */
    public String message { get; set; }

    /**
     * Value of rejected request, if available.
     * @return rejectedMessage
     */
    public String rejectedMessage { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'reject_reason' => 'rejectReason',
        'exchange_id' => 'exchangeId',
        'rejected_message' => 'rejectedMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'reject_reason' => 'rejectReason',
        'exchange_id' => 'exchangeId',
        'rejected_message' => 'rejectedMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'reject_reason' => 'rejectReason',
        'exchange_id' => 'exchangeId',
        'rejected_message' => 'rejectedMessage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASMessageReject getExample() {
        OASMessageReject messageReject = new OASMessageReject();
          messageReject.type = 'MESSAGE_REJECT';
          messageReject.rejectReason = OASRejectReason.getExample();
          messageReject.exchangeId = 'BINANCE';
          messageReject.message = 'Order with ID: BINANCE-7d8a-4888 not found';
          messageReject.rejectedMessage = '{"client_order_id":"BINANCE-7d8a-4888","exchange_id":"BINANCE","type":"ORDER_CANCEL_SINGLE_REQUEST"}';
        return messageReject;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASMessageReject) {           
            OASMessageReject messageReject = (OASMessageReject) obj;
            return this.type == messageReject.type
                && this.rejectReason == messageReject.rejectReason
                && this.exchangeId == messageReject.exchangeId
                && this.message == messageReject.message
                && this.rejectedMessage == messageReject.rejectedMessage;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (rejectReason == null ? 0 : System.hashCode(rejectReason));
        hashCode = (17 * hashCode) + (exchangeId == null ? 0 : System.hashCode(exchangeId));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        hashCode = (17 * hashCode) + (rejectedMessage == null ? 0 : System.hashCode(rejectedMessage));
        return hashCode;
    }
}

