/**
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFills.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFills::OAIFills(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFills::OAIFills() {
    this->initializeModel();
}

OAIFills::~OAIFills() {}

void OAIFills::initializeModel() {

    m_time_isSet = false;
    m_time_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;
}

void OAIFills::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFills::fromJsonObject(QJsonObject json) {

    m_time_isValid = ::OpenAPI::fromJsonValue(time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;
}

QString OAIFills::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFills::asJsonObject() const {
    QJsonObject obj;
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(time));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(price));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(amount));
    }
    return obj;
}

QDate OAIFills::getTime() const {
    return time;
}
void OAIFills::setTime(const QDate &time) {
    this->time = time;
    this->m_time_isSet = true;
}

bool OAIFills::is_time_Set() const{
    return m_time_isSet;
}

bool OAIFills::is_time_Valid() const{
    return m_time_isValid;
}

double OAIFills::getPrice() const {
    return price;
}
void OAIFills::setPrice(const double &price) {
    this->price = price;
    this->m_price_isSet = true;
}

bool OAIFills::is_price_Set() const{
    return m_price_isSet;
}

bool OAIFills::is_price_Valid() const{
    return m_price_isValid;
}

double OAIFills::getAmount() const {
    return amount;
}
void OAIFills::setAmount(const double &amount) {
    this->amount = amount;
    this->m_amount_isSet = true;
}

bool OAIFills::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIFills::is_amount_Valid() const{
    return m_amount_isValid;
}

bool OAIFills::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFills::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
